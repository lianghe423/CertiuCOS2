DIGEST 7438f91cbfc5ea077ea4e6de3acfc1cb
FCertiOS.framework.proof.invariant_prop
R15:25 CertiOS.framework.include_frm <> <> lib
R43:55 CertiOS.framework.proof.oscorrectness <> <> lib
R73:82 CertiOS.framework.proof.simulation <> <> lib
R100:105 CertiOS.framework.proof.auxdef <> <> lib
R123:131 Coq.Logic.Classical <> <> lib
R149:156 CertiOS.tactics.sep_auto <> <> lib
R174:181 CertiOS.tactics.base_tac <> <> lib
R199:207 CertiOS.framework.proof.soundness <> <> lib
R225:238 CertiOS.framework.proof.absinfer_sound <> <> lib
R256:266 CertiOS.framework.proof.memory_prop <> <> lib
R284:293 CertiOS.framework.proof.joinmemLib <> <> lib
R311:318 CertiOS.framework.proof.lmachLib <> <> lib
R336:347 CertiOS.framework.proof.rulesoundlib <> <> lib
R391:405 CertiOS.framework.proof.mem_join_lemmas <> <> lib
R423:443 CertiOS.framework.proof.invariant_prop_lemmas <> <> lib
R492:498 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R500:501 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R492:498 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R500:501 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R544:547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R544:547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R591:599 CertiOS.framework.logic.assertion <> emposabst def
R591:599 CertiOS.framework.logic.assertion <> emposabst def
R662:665 CertiOS.framework.auxlibs.Maps <> join meth
R667:672 CertiOS.framework.logic.assertion <> empenv syndef
R662:665 CertiOS.framework.auxlibs.Maps <> join meth
R667:672 CertiOS.framework.logic.assertion <> empenv syndef
R764:767 CertiOS.framework.auxlibs.Maps <> join meth
R771:776 CertiOS.framework.logic.assertion <> empenv syndef
R764:767 CertiOS.framework.auxlibs.Maps <> join meth
R771:776 CertiOS.framework.logic.assertion <> empenv syndef
R853:856 CertiOS.framework.auxlibs.Maps <> join meth
R858:863 CertiOS.framework.logic.assertion <> empenv syndef
R853:856 CertiOS.framework.auxlibs.Maps <> join meth
R858:863 CertiOS.framework.logic.assertion <> empenv syndef
R933:936 CertiOS.framework.auxlibs.Maps <> join meth
R940:945 CertiOS.framework.logic.assertion <> empenv syndef
R933:936 CertiOS.framework.auxlibs.Maps <> join meth
R940:945 CertiOS.framework.logic.assertion <> empenv syndef
R991:994 CertiOS.framework.auxlibs.Maps <> join meth
R991:994 CertiOS.framework.auxlibs.Maps <> join meth
R1009:1012 CertiOS.framework.auxlibs.Maps <> join meth
R1009:1012 CertiOS.framework.auxlibs.Maps <> join meth
R1067:1069 Coq.Init.Logic <> :type_scope:x_'='_x not
R1061:1061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1063:1064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1066:1066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1070:1070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1072:1073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1075:1075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1067:1069 Coq.Init.Logic <> :type_scope:x_'='_x not
R1061:1061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1063:1064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1066:1066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1070:1070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1072:1073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1075:1075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1128:1131 Coq.Init.Logic <> :type_scope:x_'='_x not
R1128:1131 Coq.Init.Logic <> :type_scope:x_'='_x not
R1173:1176 Coq.Init.Logic <> :type_scope:x_'='_x not
R1173:1176 Coq.Init.Logic <> :type_scope:x_'='_x not
R1203:1206 CertiOS.framework.auxlibs.Maps <> join meth
R1203:1206 CertiOS.framework.auxlibs.Maps <> join meth
R1260:1263 CertiOS.framework.auxlibs.Maps <> join meth
R1260:1263 CertiOS.framework.auxlibs.Maps <> join meth
R1322:1324 Coq.Init.Logic <> :type_scope:x_'='_x not
R1316:1321 CertiOS.framework.logic.assertion <> empenv syndef
R1322:1324 Coq.Init.Logic <> :type_scope:x_'='_x not
R1316:1321 CertiOS.framework.logic.assertion <> empenv syndef
R1364:1366 Coq.Init.Logic <> :type_scope:x_'='_x not
R1367:1372 CertiOS.framework.logic.assertion <> empenv syndef
R1364:1366 Coq.Init.Logic <> :type_scope:x_'='_x not
R1367:1372 CertiOS.framework.logic.assertion <> empenv syndef
R1409:1412 Coq.Init.Logic <> True ind
R1409:1412 Coq.Init.Logic <> True ind
R1451:1454 Coq.Init.Logic <> True ind
R1451:1454 Coq.Init.Logic <> True ind
R1282:1293 CertiOS.framework.auxlibs.Maps <> map_join_emp meth
R1225:1237 CertiOS.framework.auxlibs.Maps <> map_join_comm meth
R1033:1045 CertiOS.framework.auxlibs.Maps <> map_join_comm meth
R958:969 CertiOS.framework.auxlibs.Maps <> map_join_emp meth
R878:890 CertiOS.framework.auxlibs.Maps <> map_join_comm meth
R899:910 CertiOS.framework.auxlibs.Maps <> map_join_emp meth
R806:818 CertiOS.tactics.basetac.join_general <> map_join_emp' thm
R692:704 CertiOS.framework.auxlibs.Maps <> map_join_comm meth
R718:730 CertiOS.tactics.basetac.join_general <> map_join_emp' thm
R618:626 CertiOS.framework.logic.assertion <> emposabst def
prf 1570:1579 <> sat_split'
R1624:1624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1777:1785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1816:1818 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R1786:1786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1788:1789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1791:1792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1794:1795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1799:1800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1805:1806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1808:1809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1815:1815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1787:1787 CertiOS.framework.proof.invariant_prop <> G var
R1790:1790 CertiOS.framework.proof.invariant_prop <> E var
R1793:1793 CertiOS.framework.proof.invariant_prop <> M var
R1796:1798 CertiOS.framework.proof.invariant_prop <> isr var
R1801:1804 CertiOS.framework.proof.invariant_prop <> auxs var
R1807:1807 CertiOS.framework.proof.invariant_prop <> O var
R1810:1814 CertiOS.framework.proof.invariant_prop <> absop var
R1820:1823 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R1819:1819 CertiOS.framework.proof.invariant_prop <> P var
R1824:1824 CertiOS.framework.proof.invariant_prop <> Q var
R1625:1631 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1634:1634 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1637:1637 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1640:1640 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1643:1652 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1665:1668 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1653:1656 CertiOS.framework.auxlibs.Maps <> join meth
R1664:1664 CertiOS.framework.proof.invariant_prop <> M var
R1681:1692 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1669:1672 CertiOS.framework.auxlibs.Maps <> join meth
R1680:1680 CertiOS.framework.proof.invariant_prop <> O var
R1729:1740 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1725:1727 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R1693:1693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1695:1696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1698:1699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1702:1703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1707:1708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1713:1714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1717:1718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1724:1724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1694:1694 CertiOS.framework.proof.invariant_prop <> G var
R1697:1697 CertiOS.framework.proof.invariant_prop <> E var
R1704:1706 CertiOS.framework.proof.invariant_prop <> isr var
R1709:1712 CertiOS.framework.proof.invariant_prop <> auxs var
R1719:1723 CertiOS.framework.proof.invariant_prop <> absop var
R1728:1728 CertiOS.framework.proof.invariant_prop <> P var
R1773:1775 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R1741:1741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1743:1744 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1746:1747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1750:1751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1755:1756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1761:1762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1765:1766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1772:1772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1742:1742 CertiOS.framework.proof.invariant_prop <> G var
R1745:1745 CertiOS.framework.proof.invariant_prop <> E var
R1752:1754 CertiOS.framework.proof.invariant_prop <> isr var
R1757:1760 CertiOS.framework.proof.invariant_prop <> auxs var
R1767:1771 CertiOS.framework.proof.invariant_prop <> absop var
R1776:1776 CertiOS.framework.proof.invariant_prop <> Q var
prf 1906:1916 <> swpre_store
R1936:1938 CertiOS.framework.model.memory <> env def
R1947:1949 CertiOS.framework.model.memory <> mem def
R1958:1960 CertiOS.framework.model.language <> isr def
R1979:1985 CertiOS.framework.model.language <> localst def
R1993:1998 CertiOS.framework.model.language <> osabst def
R2007:2011 CertiOS.framework.logic.assertion <> absop def
R2029:2031 CertiOS.framework.model.memory <> var def
R2040:2043 CertiOS.framework.model.memory <> type ind
R2051:2055 CertiOS.framework.auxlibs.Modules <> block def
R2066:2072 CertiOS.framework.auxlibs.Modules <> addrval def
R2091:2097 CertiOS.framework.model.language <> ossched def
R2123:2129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2172:2179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2224:2231 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2269:2276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2277:2283 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2287:2288 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2318:2320 Coq.Init.Logic <> :type_scope:x_'='_x not
R2289:2293 CertiOS.framework.model.memory <> store def
R2311:2314 CertiOS.framework.model.memory <> Vptr constr
R2316:2316 CertiOS.framework.proof.invariant_prop <> t var
R2301:2301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2303:2304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2308:2308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2302:2302 CertiOS.framework.proof.invariant_prop <> b var
R2298:2299 CertiOS.framework.proof.invariant_prop <> Mc var
R2295:2296 CertiOS.framework.proof.invariant_prop <> tp var
R2321:2324 Coq.Init.Datatypes <> Some constr
R2254:2256 Coq.Init.Logic <> :type_scope:x_'='_x not
R2232:2241 CertiOS.framework.model.memory EnvMod get def
R2246:2253 CertiOS.framework.model.opsem <> OSTCBCur def
R2243:2244 CertiOS.framework.proof.invariant_prop <> ge var
R2257:2260 Coq.Init.Datatypes <> Some constr
R2262:2262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2264:2265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2268:2268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2263:2263 CertiOS.framework.proof.invariant_prop <> b var
R2266:2267 CertiOS.framework.proof.invariant_prop <> tp var
R2207:2210 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R2180:2180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2183:2184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2187:2188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2191:2192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2195:2196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2199:2200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2202:2203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2206:2206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2181:2182 CertiOS.framework.proof.invariant_prop <> ge var
R2185:2186 CertiOS.framework.proof.invariant_prop <> le var
R2189:2190 CertiOS.framework.proof.invariant_prop <> Mc var
R2193:2194 CertiOS.framework.proof.invariant_prop <> ir var
R2197:2198 CertiOS.framework.proof.invariant_prop <> au var
R2201:2201 CertiOS.framework.proof.invariant_prop <> O var
R2204:2205 CertiOS.framework.proof.invariant_prop <> ab var
R2211:2215 CertiOS.framework.logic.assertion <> SWPRE def
R2222:2223 CertiOS.framework.proof.invariant_prop <> t' var
R2220:2220 CertiOS.framework.proof.invariant_prop <> x var
R2217:2218 CertiOS.framework.proof.invariant_prop <> sc var
R2157:2160 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R2130:2130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2133:2134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2137:2138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2141:2142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2145:2146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2149:2150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2152:2153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2156:2156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2131:2132 CertiOS.framework.proof.invariant_prop <> ge var
R2135:2136 CertiOS.framework.proof.invariant_prop <> le var
R2139:2140 CertiOS.framework.proof.invariant_prop <> Mc var
R2143:2144 CertiOS.framework.proof.invariant_prop <> ir var
R2147:2148 CertiOS.framework.proof.invariant_prop <> au var
R2151:2151 CertiOS.framework.proof.invariant_prop <> O var
R2154:2155 CertiOS.framework.proof.invariant_prop <> ab var
R2161:2166 CertiOS.framework.logic.assertion <> SWINVt def
R2170:2171 CertiOS.framework.proof.invariant_prop <> t' var
R2168:2168 CertiOS.framework.proof.invariant_prop <> I var
R2110:2114 CertiOS.framework.logic.inferules <> GoodI def
R2121:2122 CertiOS.framework.proof.invariant_prop <> li var
R2118:2119 CertiOS.framework.proof.invariant_prop <> sc var
R2116:2116 CertiOS.framework.proof.invariant_prop <> I var
R2357:2361 CertiOS.framework.logic.assertion <> SWPRE def
R2427:2428 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2429:2431 Coq.Init.Datatypes <> nil constr
R2427:2428 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2429:2431 Coq.Init.Datatypes <> nil constr
R2476:2478 CertiOS.framework.auxlibs.Maps <> get meth
R2544:2560 CertiOS.framework.proof.rulesoundlib <> store_exist_join' thm
R2544:2560 CertiOS.framework.proof.rulesoundlib <> store_exist_join' thm
prf 2583:2604 <> GoodI_SWINV_indom_curt
R2650:2656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2657:2657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2698:2706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2707:2711 CertiOS.framework.auxlibs.Maps <> indom def
R2715:2720 CertiOS.framework.model.language <> curtid constr
R2713:2713 CertiOS.framework.proof.invariant_prop <> O var
R2679:2682 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R2669:2669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2671:2672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2674:2675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2678:2678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2670:2670 CertiOS.framework.proof.invariant_prop <> o var
R2673:2673 CertiOS.framework.proof.invariant_prop <> O var
R2676:2677 CertiOS.framework.proof.invariant_prop <> ab var
R2693:2696 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R2683:2688 CertiOS.framework.logic.assertion <> SWINVt def
R2692:2692 CertiOS.framework.proof.invariant_prop <> t var
R2690:2690 CertiOS.framework.proof.invariant_prop <> I var
R2697:2697 CertiOS.framework.proof.invariant_prop <> P var
R2637:2641 CertiOS.framework.logic.inferules <> GoodI def
R2648:2649 CertiOS.framework.proof.invariant_prop <> li var
R2645:2646 CertiOS.framework.proof.invariant_prop <> sc var
R2643:2643 CertiOS.framework.proof.invariant_prop <> I var
R2749:2753 CertiOS.framework.logic.inferules <> GoodI def
R2792:2800 CertiOS.framework.model.language <> spec_done constr
R2802:2805 Coq.Init.Datatypes <> None constr
R2792:2800 CertiOS.framework.model.language <> spec_done constr
R2802:2805 Coq.Init.Datatypes <> None constr
R2821:2826 CertiOS.framework.logic.assertion <> SWINVt def
R2821:2826 CertiOS.framework.logic.assertion <> SWINVt def
R2898:2906 CertiOS.tactics.basetac.join_lib <> get_indom thm
R2898:2906 CertiOS.tactics.basetac.join_lib <> get_indom thm
R2932:2941 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R2932:2941 CertiOS.tactics.basetac.join_lib <> join_get_l thm
prf 2963:2979 <> goodI_swinv_samet
R3051:3057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3070:3077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3090:3097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3138:3146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3227:3235 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3286:3294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3295:3295 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3441:3451 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3633:3634 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3296:3302 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3304:3304 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3307:3308 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3345:3366 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3324:3326 Coq.Init.Logic <> :type_scope:x_'='_x not
R3309:3311 CertiOS.framework.auxlibs.Maps <> get meth
R3316:3323 CertiOS.framework.model.opsem <> OSTCBCur def
R3313:3314 CertiOS.framework.proof.invariant_prop <> ge var
R3327:3330 Coq.Init.Datatypes <> Some constr
R3332:3332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3334:3335 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3343:3344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3336:3339 CertiOS.framework.model.memory <> Tptr constr
R3407:3410 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3391:3393 Coq.Init.Logic <> :type_scope:x_'='_x not
R3367:3370 CertiOS.framework.model.opsem <> load def
R3384:3384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3386:3386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3390:3390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3382:3382 CertiOS.framework.proof.invariant_prop <> M var
R3373:3376 CertiOS.framework.model.memory <> Tptr constr
R3394:3397 Coq.Init.Datatypes <> Some constr
R3400:3403 CertiOS.framework.model.memory <> Vptr constr
R3405:3405 CertiOS.framework.proof.invariant_prop <> t var
R3423:3425 Coq.Init.Logic <> :type_scope:x_'='_x not
R3411:3413 CertiOS.framework.auxlibs.Maps <> get meth
R3417:3422 CertiOS.framework.model.language <> curtid constr
R3415:3415 CertiOS.framework.proof.invariant_prop <> O var
R3426:3429 Coq.Init.Datatypes <> Some constr
R3432:3437 CertiOS.framework.model.language <> oscurt constr
R3439:3439 CertiOS.framework.proof.invariant_prop <> t var
R3498:3501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3538:3542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3587:3591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3619:3622 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R3592:3592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3595:3596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3599:3600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3603:3604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3607:3608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3611:3612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3614:3615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3618:3618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3593:3594 CertiOS.framework.proof.invariant_prop <> ge var
R3597:3598 CertiOS.framework.proof.invariant_prop <> le var
R3601:3602 CertiOS.framework.proof.invariant_prop <> M' var
R3605:3606 CertiOS.framework.proof.invariant_prop <> ir var
R3609:3610 CertiOS.framework.proof.invariant_prop <> au var
R3613:3613 CertiOS.framework.proof.invariant_prop <> O var
R3616:3617 CertiOS.framework.proof.invariant_prop <> ab var
R3623:3628 CertiOS.framework.logic.assertion <> SWINVt def
R3632:3632 CertiOS.framework.proof.invariant_prop <> t var
R3630:3630 CertiOS.framework.proof.invariant_prop <> I var
R3577:3579 Coq.Init.Logic <> :type_scope:x_'='_x not
R3543:3547 CertiOS.framework.model.memory <> store def
R3570:3573 CertiOS.framework.model.memory <> Vptr constr
R3575:3575 CertiOS.framework.proof.invariant_prop <> t var
R3561:3561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3563:3563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3567:3567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3562:3562 CertiOS.framework.proof.invariant_prop <> b var
R3559:3559 CertiOS.framework.proof.invariant_prop <> M var
R3550:3553 CertiOS.framework.model.memory <> Tptr constr
R3555:3556 CertiOS.framework.proof.invariant_prop <> tp var
R3580:3583 Coq.Init.Datatypes <> Some constr
R3585:3586 CertiOS.framework.proof.invariant_prop <> M' var
R3517:3519 Coq.Init.Logic <> :type_scope:x_'='_x not
R3502:3504 CertiOS.framework.auxlibs.Maps <> get meth
R3509:3516 CertiOS.framework.model.opsem <> OSTCBCur def
R3506:3507 CertiOS.framework.proof.invariant_prop <> ge var
R3520:3523 Coq.Init.Datatypes <> Some constr
R3525:3525 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3527:3528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3536:3537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3526:3526 CertiOS.framework.proof.invariant_prop <> b var
R3529:3532 CertiOS.framework.model.memory <> Tptr constr
R3534:3535 CertiOS.framework.proof.invariant_prop <> tp var
R3480:3482 Coq.Init.Logic <> :type_scope:x_'='_x not
R3468:3470 CertiOS.framework.auxlibs.Maps <> get meth
R3474:3479 CertiOS.framework.model.language <> curtid constr
R3472:3472 CertiOS.framework.proof.invariant_prop <> O var
R3483:3486 Coq.Init.Datatypes <> Some constr
R3489:3494 CertiOS.framework.model.language <> oscurt constr
R3496:3496 CertiOS.framework.proof.invariant_prop <> t var
R3262:3265 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R3236:3236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3239:3240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3243:3244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3246:3247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3250:3251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3254:3255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3257:3258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3261:3261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3237:3238 CertiOS.framework.proof.invariant_prop <> ge var
R3241:3242 CertiOS.framework.proof.invariant_prop <> le var
R3245:3245 CertiOS.framework.proof.invariant_prop <> M var
R3248:3249 CertiOS.framework.proof.invariant_prop <> ir var
R3252:3253 CertiOS.framework.proof.invariant_prop <> au var
R3256:3256 CertiOS.framework.proof.invariant_prop <> O var
R3259:3260 CertiOS.framework.proof.invariant_prop <> ab var
R3277:3280 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R3266:3271 CertiOS.framework.logic.assertion <> AHprio constr
R3276:3276 CertiOS.framework.proof.invariant_prop <> t var
R3273:3274 CertiOS.framework.proof.invariant_prop <> sc var
R3281:3285 CertiOS.framework.logic.assertion <> Atrue constr
R3175:3179 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R3226:3226 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R3147:3147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3150:3151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3154:3155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3158:3159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3162:3163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3166:3167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3170:3171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3174:3174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3148:3149 CertiOS.framework.proof.invariant_prop <> ge var
R3152:3153 CertiOS.framework.proof.invariant_prop <> le var
R3156:3157 CertiOS.framework.proof.invariant_prop <> Mx var
R3160:3161 CertiOS.framework.proof.invariant_prop <> ir var
R3164:3165 CertiOS.framework.proof.invariant_prop <> au var
R3168:3169 CertiOS.framework.proof.invariant_prop <> Ox var
R3172:3173 CertiOS.framework.proof.invariant_prop <> ab var
R3180:3182 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R3202:3203 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R3189:3192 Coq.Init.Datatypes <> list ind
R3194:3201 CertiOS.framework.logic.assertion <> logicvar ind
R3217:3220 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R3204:3207 CertiOS.framework.logic.inferules <> LINV def
R3214:3216 CertiOS.framework.proof.invariant_prop <> lg' var
R3212:3212 CertiOS.framework.proof.invariant_prop <> t var
R3209:3210 CertiOS.framework.proof.invariant_prop <> li var
R3221:3225 CertiOS.framework.logic.assertion <> Atrue constr
R3124:3127 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R3098:3098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3101:3102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3105:3106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3108:3109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3112:3113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3116:3117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3119:3120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3123:3123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3099:3100 CertiOS.framework.proof.invariant_prop <> ge var
R3103:3104 CertiOS.framework.proof.invariant_prop <> le var
R3107:3107 CertiOS.framework.proof.invariant_prop <> M var
R3110:3111 CertiOS.framework.proof.invariant_prop <> ir var
R3114:3115 CertiOS.framework.proof.invariant_prop <> au var
R3118:3118 CertiOS.framework.proof.invariant_prop <> O var
R3121:3122 CertiOS.framework.proof.invariant_prop <> ab var
R3128:3133 CertiOS.framework.logic.assertion <> SWINVt def
R3137:3137 CertiOS.framework.proof.invariant_prop <> t var
R3135:3135 CertiOS.framework.proof.invariant_prop <> I var
R3078:3081 CertiOS.framework.auxlibs.Maps <> join meth
R3088:3089 CertiOS.framework.proof.invariant_prop <> OO var
R3086:3086 CertiOS.framework.proof.invariant_prop <> O var
R3083:3084 CertiOS.framework.proof.invariant_prop <> Ox var
R3058:3061 CertiOS.framework.auxlibs.Maps <> join meth
R3068:3069 CertiOS.framework.proof.invariant_prop <> MM var
R3066:3066 CertiOS.framework.proof.invariant_prop <> M var
R3063:3064 CertiOS.framework.proof.invariant_prop <> Mx var
R3038:3042 CertiOS.framework.logic.inferules <> GoodI def
R3049:3050 CertiOS.framework.proof.invariant_prop <> li var
R3046:3047 CertiOS.framework.proof.invariant_prop <> sc var
R3044:3044 CertiOS.framework.proof.invariant_prop <> I var
R3663:3667 CertiOS.framework.logic.inferules <> GoodI def
R3757:3758 Coq.Init.Logic <> :type_scope:x_'='_x not
R3759:3766 CertiOS.framework.model.opsem <> get_genv def
R3769:3776 CertiOS.framework.model.language <> get_smem def
R3778:3778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3781:3782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3785:3786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3788:3789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3792:3793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3796:3796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3757:3758 Coq.Init.Logic <> :type_scope:x_'='_x not
R3759:3766 CertiOS.framework.model.opsem <> get_genv def
R3769:3776 CertiOS.framework.model.language <> get_smem def
R3778:3778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3781:3782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3785:3786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3788:3789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3792:3793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3796:3796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3826:3827 Coq.Init.Logic <> :type_scope:x_'='_x not
R3828:3834 CertiOS.framework.model.opsem <> get_mem def
R3837:3844 CertiOS.framework.model.language <> get_smem def
R3846:3846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3849:3850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3853:3854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3856:3857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3860:3861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3864:3864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3826:3827 Coq.Init.Logic <> :type_scope:x_'='_x not
R3828:3834 CertiOS.framework.model.opsem <> get_mem def
R3837:3844 CertiOS.framework.model.language <> get_smem def
R3846:3846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3849:3850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3853:3854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3856:3857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3860:3861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3864:3864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3992:3993 Coq.Init.Logic <> :type_scope:x_'='_x not
R3972:3972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3975:3976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3979:3980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3983:3984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3987:3988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3991:3991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3994:4003 CertiOS.framework.logic.assertion <> substaskst def
R4005:4005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4008:4009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4012:4013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4015:4016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4019:4020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4023:4023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3992:3993 Coq.Init.Logic <> :type_scope:x_'='_x not
R3972:3972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3975:3976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3979:3980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3983:3984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3987:3988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3991:3991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3994:4003 CertiOS.framework.logic.assertion <> substaskst def
R4005:4005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4008:4009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4012:4013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4015:4016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4019:4020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4023:4023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4092:4092 Coq.Init.Logic <> :type_scope:x_'='_x not
R4069:4071 CertiOS.framework.auxlibs.Maps <> set meth
R4083:4088 CertiOS.framework.model.language <> oscurt constr
R4075:4080 CertiOS.framework.model.language <> curtid constr
R4092:4092 Coq.Init.Logic <> :type_scope:x_'='_x not
R4069:4071 CertiOS.framework.auxlibs.Maps <> set meth
R4083:4088 CertiOS.framework.model.language <> oscurt constr
R4075:4080 CertiOS.framework.model.language <> curtid constr
R4106:4117 CertiOS.tactics.basetac.join_lib <> get_set_same thm
R4106:4117 CertiOS.tactics.basetac.join_lib <> get_set_same thm
R4167:4167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4170:4171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4174:4175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4177:4178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4181:4182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4185:4185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4167:4167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4170:4171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4174:4175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4177:4178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4181:4182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4185:4185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 4498:4506 <> projs_eqg
R4547:4549 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4541:4543 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4535:4537 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4523:4525 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R4520:4522 CertiOS.framework.model.memory <> env def
R4526:4534 CertiOS.framework.model.language EnvSpec B def
R4538:4540 CertiOS.framework.model.memory <> mem def
R4544:4546 CertiOS.framework.model.language <> isr def
R4550:4562 CertiOS.framework.model.language LocalStSpec B def
R4594:4600 CertiOS.framework.model.language <> osstate def
R4608:4610 CertiOS.framework.auxlibs.Modules <> tid def
R4651:4654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4679:4681 Coq.Init.Logic <> :type_scope:x_'='_x not
R4655:4657 Coq.Init.Datatypes <> fst def
R4660:4662 Coq.Init.Datatypes <> fst def
R4665:4667 Coq.Init.Datatypes <> fst def
R4670:4672 Coq.Init.Datatypes <> fst def
R4674:4675 CertiOS.framework.proof.invariant_prop <> Sl var
R4682:4684 Coq.Init.Datatypes <> fst def
R4687:4689 Coq.Init.Datatypes <> fst def
R4692:4694 Coq.Init.Datatypes <> fst def
R4697:4699 Coq.Init.Datatypes <> fst def
R4701:4701 CertiOS.framework.proof.invariant_prop <> o var
R4642:4644 Coq.Init.Logic <> :type_scope:x_'='_x not
R4632:4636 CertiOS.framework.model.opsem <> projS def
R4641:4641 CertiOS.framework.proof.invariant_prop <> t var
R4638:4639 CertiOS.framework.proof.invariant_prop <> Sl var
R4645:4648 Coq.Init.Datatypes <> Some constr
R4650:4650 CertiOS.framework.proof.invariant_prop <> o var
R4786:4790 CertiOS.framework.model.opsem <> projS def
R4804:4808 CertiOS.framework.model.opsem <> projD def
R4828:4830 CertiOS.framework.auxlibs.Maps <> get meth
R4828:4830 CertiOS.framework.auxlibs.Maps <> get meth
R4860:4862 CertiOS.framework.auxlibs.Maps <> get meth
R4860:4862 CertiOS.framework.auxlibs.Maps <> get meth
prf 4916:4935 <> part_storebytes_part
R4992:4995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5021:5028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5063:5070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5071:5077 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R5081:5082 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R5117:5120 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5106:5108 Coq.Init.Logic <> :type_scope:x_'='_x not
R5083:5092 CertiOS.framework.model.memory <> storebytes def
R5104:5105 CertiOS.framework.proof.invariant_prop <> vl var
R5097:5097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5099:5100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5102:5102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5098:5098 CertiOS.framework.proof.invariant_prop <> b var
R5101:5101 CertiOS.framework.proof.invariant_prop <> o var
R5094:5095 CertiOS.framework.proof.invariant_prop <> Ml var
R5109:5112 Coq.Init.Datatypes <> Some constr
R5121:5125 CertiOS.framework.proof.auxdef <> partM ind
R5135:5147 CertiOS.framework.proof.auxdef TMSpecMod put def
R5154:5156 CertiOS.framework.proof.invariant_prop <> Mc' var
R5152:5152 CertiOS.framework.proof.invariant_prop <> t var
R5149:5150 CertiOS.framework.proof.invariant_prop <> Tm var
R5131:5132 CertiOS.framework.proof.invariant_prop <> Tl var
R5052:5054 Coq.Init.Logic <> :type_scope:x_'='_x not
R5029:5038 CertiOS.framework.model.memory <> storebytes def
R5050:5051 CertiOS.framework.proof.invariant_prop <> vl var
R5043:5043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5045:5046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5048:5048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5044:5044 CertiOS.framework.proof.invariant_prop <> b var
R5047:5047 CertiOS.framework.proof.invariant_prop <> o var
R5040:5041 CertiOS.framework.proof.invariant_prop <> Mc var
R5055:5058 Coq.Init.Datatypes <> Some constr
R5060:5062 CertiOS.framework.proof.invariant_prop <> Mc' var
R4996:5012 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R5019:5020 CertiOS.framework.proof.invariant_prop <> Mc var
R5017:5017 CertiOS.framework.proof.invariant_prop <> t var
R5014:5015 CertiOS.framework.proof.invariant_prop <> Tm var
R4978:4982 CertiOS.framework.proof.auxdef <> partM ind
R4990:4991 CertiOS.framework.proof.invariant_prop <> Tm var
R4987:4988 CertiOS.framework.proof.invariant_prop <> Tl var
R4984:4985 CertiOS.framework.proof.invariant_prop <> Ml var
R5242:5252 CertiOS.framework.auxlibs.Modules tidspec beq def
R5242:5252 CertiOS.framework.auxlibs.Modules tidspec beq def
R5282:5300 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R5282:5300 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R5374:5388 CertiOS.framework.proof.rulesoundlib <> storebytes_mono thm
R5374:5388 CertiOS.framework.proof.rulesoundlib <> storebytes_mono thm
R5420:5434 CertiOS.framework.proof.memory_prop <> join_storebytes thm
R5420:5434 CertiOS.framework.proof.memory_prop <> join_storebytes thm
R5525:5527 Coq.Init.Logic <> :type_scope:x_'='_x not
R5482:5497 CertiOS.framework.proof.auxdef TMSpecMod remove def
R5500:5512 CertiOS.framework.proof.auxdef TMSpecMod put def
R5528:5543 CertiOS.framework.proof.auxdef TMSpecMod remove def
R5525:5527 Coq.Init.Logic <> :type_scope:x_'='_x not
R5482:5497 CertiOS.framework.proof.auxdef TMSpecMod remove def
R5500:5512 CertiOS.framework.proof.auxdef TMSpecMod put def
R5528:5543 CertiOS.framework.proof.auxdef TMSpecMod remove def
R5562:5588 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R5562:5588 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R5562:5588 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R5629:5635 CertiOS.framework.proof.auxdef <> partm_S constr
R5629:5635 CertiOS.framework.proof.auxdef <> partm_S constr
R5655:5674 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R5655:5674 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R5655:5674 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R5692:5712 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R5692:5712 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R5733:5757 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R5733:5757 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R5809:5817 CertiOS.tactics.basetac.join_lib <> join_comm thm
R5809:5817 CertiOS.tactics.basetac.join_lib <> join_comm thm
R5837:5851 CertiOS.framework.proof.rulesoundlib <> storebytes_mono thm
R5837:5851 CertiOS.framework.proof.rulesoundlib <> storebytes_mono thm
R5883:5897 CertiOS.framework.proof.memory_prop <> join_storebytes thm
R5883:5897 CertiOS.framework.proof.memory_prop <> join_storebytes thm
R5950:5980 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R5950:5980 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R5950:5980 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R5950:5980 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R5997:6005 CertiOS.tactics.basetac.join_lib <> join_comm thm
R5997:6005 CertiOS.tactics.basetac.join_lib <> join_comm thm
R6024:6030 CertiOS.framework.proof.auxdef <> partm_S constr
R6024:6030 CertiOS.framework.proof.auxdef <> partm_S constr
R6050:6075 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R6050:6075 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R6050:6075 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R6050:6075 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
prf 6105:6119 <> part_store_part
R6175:6182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6208:6215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6242:6249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6250:6256 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6260:6260 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6287:6290 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6276:6278 Coq.Init.Logic <> :type_scope:x_'='_x not
R6261:6265 CertiOS.framework.model.memory <> store def
R6275:6275 CertiOS.framework.proof.invariant_prop <> v var
R6273:6273 CertiOS.framework.proof.invariant_prop <> l var
R6270:6271 CertiOS.framework.proof.invariant_prop <> Ml var
R6267:6268 CertiOS.framework.proof.invariant_prop <> tp var
R6279:6282 Coq.Init.Datatypes <> Some constr
R6291:6295 CertiOS.framework.proof.auxdef <> partM ind
R6305:6317 CertiOS.framework.proof.auxdef TMSpecMod put def
R6324:6326 CertiOS.framework.proof.invariant_prop <> Mc' var
R6322:6322 CertiOS.framework.proof.invariant_prop <> t var
R6319:6320 CertiOS.framework.proof.invariant_prop <> Tm var
R6301:6302 CertiOS.framework.proof.invariant_prop <> Tl var
R6231:6233 Coq.Init.Logic <> :type_scope:x_'='_x not
R6216:6220 CertiOS.framework.model.memory <> store def
R6230:6230 CertiOS.framework.proof.invariant_prop <> v var
R6228:6228 CertiOS.framework.proof.invariant_prop <> l var
R6225:6226 CertiOS.framework.proof.invariant_prop <> Mc var
R6222:6223 CertiOS.framework.proof.invariant_prop <> tp var
R6234:6237 Coq.Init.Datatypes <> Some constr
R6239:6241 CertiOS.framework.proof.invariant_prop <> Mc' var
R6183:6199 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R6206:6207 CertiOS.framework.proof.invariant_prop <> Mc var
R6204:6204 CertiOS.framework.proof.invariant_prop <> t var
R6201:6202 CertiOS.framework.proof.invariant_prop <> Tm var
R6161:6165 CertiOS.framework.proof.auxdef <> partM ind
R6173:6174 CertiOS.framework.proof.invariant_prop <> Tm var
R6170:6171 CertiOS.framework.proof.invariant_prop <> Tl var
R6167:6168 CertiOS.framework.proof.invariant_prop <> Ml var
R6358:6362 CertiOS.framework.model.memory <> store def
R6394:6398 CertiOS.framework.model.memory <> store def
R6410:6429 CertiOS.framework.proof.invariant_prop <> part_storebytes_part thm
R6410:6429 CertiOS.framework.proof.invariant_prop <> part_storebytes_part thm
prf 6453:6463 <> disj_get_eq
R6504:6507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6534:6537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6586:6589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6591:6593 Coq.Init.Logic <> :type_scope:x_'='_x not
R6590:6590 CertiOS.framework.proof.invariant_prop <> x var
R6594:6595 CertiOS.framework.proof.invariant_prop <> x' var
R6576:6578 Coq.Init.Logic <> :type_scope:x_'='_x not
R6538:6550 CertiOS.framework.model.language OSAbstMod get def
R6575:6575 CertiOS.framework.proof.invariant_prop <> a var
R6553:6567 CertiOS.framework.model.language OSAbstMod merge def
R6571:6572 CertiOS.framework.proof.invariant_prop <> Os var
R6569:6569 CertiOS.framework.proof.invariant_prop <> O var
R6579:6582 Coq.Init.Datatypes <> Some constr
R6584:6585 CertiOS.framework.proof.invariant_prop <> x' var
R6525:6527 Coq.Init.Logic <> :type_scope:x_'='_x not
R6508:6520 CertiOS.framework.model.language OSAbstMod get def
R6524:6524 CertiOS.framework.proof.invariant_prop <> a var
R6522:6522 CertiOS.framework.proof.invariant_prop <> O var
R6528:6531 Coq.Init.Datatypes <> Some constr
R6533:6533 CertiOS.framework.proof.invariant_prop <> x var
R6485:6498 CertiOS.framework.model.language OSAbstMod disj def
R6502:6503 CertiOS.framework.proof.invariant_prop <> Os var
R6500:6500 CertiOS.framework.proof.invariant_prop <> O var
R6625:6643 CertiOS.framework.model.language OSAbstMod merge_sem thm
R6625:6643 CertiOS.framework.model.language OSAbstMod merge_sem thm
R6625:6643 CertiOS.framework.model.language OSAbstMod merge_sem thm
R6681:6694 CertiOS.framework.model.language OSAbstMod disj def
R6759:6771 CertiOS.framework.model.language OSAbstMod get def
R6759:6771 CertiOS.framework.model.language OSAbstMod get def
prf 6828:6836 <> projs_eqm
R6874:6877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6878:6878 Coq.Init.Logic <> :type_scope:x_'='_x not
R6897:6901 Coq.Init.Logic <> :type_scope:x_'='_x not
R6919:6919 Coq.Init.Logic <> :type_scope:x_'='_x not
R6879:6881 Coq.Init.Datatypes <> snd def
R6884:6886 Coq.Init.Datatypes <> fst def
R6889:6891 Coq.Init.Datatypes <> fst def
R6893:6894 CertiOS.framework.proof.invariant_prop <> Sl var
R6902:6904 Coq.Init.Datatypes <> snd def
R6907:6909 Coq.Init.Datatypes <> fst def
R6912:6914 Coq.Init.Datatypes <> fst def
R6916:6916 CertiOS.framework.proof.invariant_prop <> o var
R6865:6867 Coq.Init.Logic <> :type_scope:x_'='_x not
R6855:6859 CertiOS.framework.model.opsem <> projS def
R6864:6864 CertiOS.framework.proof.invariant_prop <> t var
R6861:6862 CertiOS.framework.proof.invariant_prop <> Sl var
R6868:6871 Coq.Init.Datatypes <> Some constr
R6873:6873 CertiOS.framework.proof.invariant_prop <> o var
R7004:7008 CertiOS.framework.model.opsem <> projS def
R7054:7058 CertiOS.framework.model.opsem <> projD def
R7106:7108 CertiOS.framework.auxlibs.Maps <> get meth
R7106:7108 CertiOS.framework.auxlibs.Maps <> get meth
R7128:7130 CertiOS.framework.auxlibs.Maps <> get meth
R7128:7130 CertiOS.framework.auxlibs.Maps <> get meth
prf 7229:7240 <> part_merge_m
R7300:7308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7322:7329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7342:7349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7350:7354 CertiOS.framework.proof.auxdef <> partM ind
R7391:7403 CertiOS.framework.proof.auxdef TMSpecMod put def
R7411:7415 CertiOS.framework.auxlibs.Maps <> merge meth
R7420:7421 CertiOS.framework.proof.invariant_prop <> M' var
R7417:7418 CertiOS.framework.proof.invariant_prop <> Mc var
R7408:7408 CertiOS.framework.proof.invariant_prop <> t var
R7405:7406 CertiOS.framework.proof.invariant_prop <> Tm var
R7370:7381 CertiOS.framework.model.language TasksMod set def
R7387:7387 CertiOS.framework.proof.invariant_prop <> C var
R7385:7385 CertiOS.framework.proof.invariant_prop <> t var
R7383:7383 CertiOS.framework.proof.invariant_prop <> T var
R7357:7361 CertiOS.framework.auxlibs.Maps <> merge meth
R7365:7366 CertiOS.framework.proof.invariant_prop <> M' var
R7363:7363 CertiOS.framework.proof.invariant_prop <> M var
R7330:7334 CertiOS.framework.proof.auxdef <> partM ind
R7340:7341 CertiOS.framework.proof.invariant_prop <> Tm var
R7338:7338 CertiOS.framework.proof.invariant_prop <> T var
R7336:7336 CertiOS.framework.proof.invariant_prop <> M var
R7309:7316 CertiOS.framework.auxlibs.Maps <> disjoint def
R7320:7321 CertiOS.framework.proof.invariant_prop <> M' var
R7318:7318 CertiOS.framework.proof.invariant_prop <> M var
R7275:7291 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R7298:7299 CertiOS.framework.proof.invariant_prop <> Mc var
R7296:7296 CertiOS.framework.proof.invariant_prop <> t var
R7293:7294 CertiOS.framework.proof.invariant_prop <> Tm var
R7528:7538 CertiOS.framework.auxlibs.Modules tidspec beq def
R7528:7538 CertiOS.framework.auxlibs.Modules tidspec beq def
R7565:7583 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R7565:7583 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R7659:7659 Coq.Init.Logic <> :type_scope:x_'='_x not
R7681:7685 Coq.Init.Logic <> :type_scope:x_'='_x not
R7742:7742 Coq.Init.Logic <> :type_scope:x_'='_x not
R7660:7675 CertiOS.framework.proof.auxdef TMSpecMod remove def
R7686:7701 CertiOS.framework.proof.auxdef TMSpecMod remove def
R7705:7717 CertiOS.framework.proof.auxdef TMSpecMod put def
R7725:7729 CertiOS.framework.auxlibs.Maps <> merge meth
R7659:7659 Coq.Init.Logic <> :type_scope:x_'='_x not
R7681:7685 Coq.Init.Logic <> :type_scope:x_'='_x not
R7742:7742 Coq.Init.Logic <> :type_scope:x_'='_x not
R7660:7675 CertiOS.framework.proof.auxdef TMSpecMod remove def
R7686:7701 CertiOS.framework.proof.auxdef TMSpecMod remove def
R7705:7717 CertiOS.framework.proof.auxdef TMSpecMod put def
R7725:7729 CertiOS.framework.auxlibs.Maps <> merge meth
R7756:7782 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R7756:7782 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R7756:7782 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R7820:7823 CertiOS.framework.auxlibs.Maps <> join meth
R7844:7848 CertiOS.framework.auxlibs.Maps <> merge meth
R7826:7830 CertiOS.framework.auxlibs.Maps <> merge meth
R7820:7823 CertiOS.framework.auxlibs.Maps <> join meth
R7844:7848 CertiOS.framework.auxlibs.Maps <> merge meth
R7826:7830 CertiOS.framework.auxlibs.Maps <> merge meth
R7869:7891 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R7869:7891 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R7909:7915 CertiOS.framework.proof.auxdef <> partm_S constr
R7909:7915 CertiOS.framework.proof.auxdef <> partm_S constr
R7935:7954 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R7935:7954 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R7935:7954 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R7974:7981 CertiOS.framework.auxlibs.Maps <> disjoint def
R7974:7981 CertiOS.framework.auxlibs.Maps <> disjoint def
R8000:8008 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8000:8008 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8026:8051 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R8026:8051 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R8071:8087 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R8090:8105 CertiOS.framework.proof.auxdef TMSpecMod remove def
R8071:8087 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R8090:8105 CertiOS.framework.proof.auxdef TMSpecMod remove def
R8130:8154 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R8130:8154 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R8171:8191 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R8171:8191 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R8251:8281 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R8251:8281 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R8251:8281 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R8251:8281 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R8300:8303 CertiOS.framework.auxlibs.Maps <> join meth
R8323:8327 CertiOS.framework.auxlibs.Maps <> merge meth
R8306:8310 CertiOS.framework.auxlibs.Maps <> merge meth
R8300:8303 CertiOS.framework.auxlibs.Maps <> join meth
R8323:8327 CertiOS.framework.auxlibs.Maps <> merge meth
R8306:8310 CertiOS.framework.auxlibs.Maps <> merge meth
R8346:8354 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8346:8354 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8372:8394 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R8372:8394 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R8451:8453 Coq.Init.Logic <> :type_scope:x_'='_x not
R8414:8426 CertiOS.framework.proof.auxdef TMSpecMod put def
R8435:8439 CertiOS.framework.auxlibs.Maps <> merge meth
R8454:8457 Coq.Init.Datatypes <> Some constr
R8451:8453 Coq.Init.Logic <> :type_scope:x_'='_x not
R8414:8426 CertiOS.framework.proof.auxdef TMSpecMod put def
R8435:8439 CertiOS.framework.auxlibs.Maps <> merge meth
R8454:8457 Coq.Init.Datatypes <> Some constr
R8473:8498 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R8473:8498 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R8473:8498 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R8473:8498 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R8515:8535 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R8515:8535 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R8553:8559 CertiOS.framework.proof.auxdef <> partm_S constr
R8553:8559 CertiOS.framework.proof.auxdef <> partm_S constr
R8577:8585 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8577:8585 CertiOS.tactics.basetac.join_lib <> join_comm thm
R8629:8649 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R8629:8649 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 8670:8681 <> part_merge_o
R8741:8749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8763:8770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8783:8790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8791:8795 CertiOS.framework.proof.auxdef <> partO ind
R8832:8844 CertiOS.framework.proof.auxdef TOSpecMod put def
R8852:8856 CertiOS.framework.auxlibs.Maps <> merge meth
R8861:8862 CertiOS.framework.proof.invariant_prop <> M' var
R8858:8859 CertiOS.framework.proof.invariant_prop <> Mc var
R8849:8849 CertiOS.framework.proof.invariant_prop <> t var
R8846:8847 CertiOS.framework.proof.invariant_prop <> Tm var
R8811:8822 CertiOS.framework.model.language TasksMod set def
R8828:8828 CertiOS.framework.proof.invariant_prop <> C var
R8826:8826 CertiOS.framework.proof.invariant_prop <> t var
R8824:8824 CertiOS.framework.proof.invariant_prop <> T var
R8798:8802 CertiOS.framework.auxlibs.Maps <> merge meth
R8806:8807 CertiOS.framework.proof.invariant_prop <> M' var
R8804:8804 CertiOS.framework.proof.invariant_prop <> M var
R8771:8775 CertiOS.framework.proof.auxdef <> partO ind
R8781:8782 CertiOS.framework.proof.invariant_prop <> Tm var
R8779:8779 CertiOS.framework.proof.invariant_prop <> T var
R8777:8777 CertiOS.framework.proof.invariant_prop <> M var
R8750:8757 CertiOS.framework.auxlibs.Maps <> disjoint def
R8761:8762 CertiOS.framework.proof.invariant_prop <> M' var
R8759:8759 CertiOS.framework.proof.invariant_prop <> M var
R8716:8732 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R8739:8740 CertiOS.framework.proof.invariant_prop <> Mc var
R8737:8737 CertiOS.framework.proof.invariant_prop <> t var
R8734:8735 CertiOS.framework.proof.invariant_prop <> Tm var
R8966:8976 CertiOS.framework.auxlibs.Modules tidspec beq def
R8966:8976 CertiOS.framework.auxlibs.Modules tidspec beq def
R9003:9021 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R9003:9021 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R9097:9097 Coq.Init.Logic <> :type_scope:x_'='_x not
R9119:9123 Coq.Init.Logic <> :type_scope:x_'='_x not
R9180:9180 Coq.Init.Logic <> :type_scope:x_'='_x not
R9098:9113 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9124:9139 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9143:9155 CertiOS.framework.proof.auxdef TOSpecMod put def
R9163:9167 CertiOS.framework.auxlibs.Maps <> merge meth
R9097:9097 Coq.Init.Logic <> :type_scope:x_'='_x not
R9119:9123 Coq.Init.Logic <> :type_scope:x_'='_x not
R9180:9180 Coq.Init.Logic <> :type_scope:x_'='_x not
R9098:9113 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9124:9139 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9143:9155 CertiOS.framework.proof.auxdef TOSpecMod put def
R9163:9167 CertiOS.framework.auxlibs.Maps <> merge meth
R9194:9220 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R9194:9220 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R9194:9220 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R9258:9261 CertiOS.framework.auxlibs.Maps <> join meth
R9282:9286 CertiOS.framework.auxlibs.Maps <> merge meth
R9264:9268 CertiOS.framework.auxlibs.Maps <> merge meth
R9258:9261 CertiOS.framework.auxlibs.Maps <> join meth
R9282:9286 CertiOS.framework.auxlibs.Maps <> merge meth
R9264:9268 CertiOS.framework.auxlibs.Maps <> merge meth
R9309:9334 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge thm
R9309:9334 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge thm
R9352:9358 CertiOS.framework.proof.auxdef <> parto_S constr
R9352:9358 CertiOS.framework.proof.auxdef <> parto_S constr
R9378:9397 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R9378:9397 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R9378:9397 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R9417:9424 CertiOS.framework.auxlibs.Maps <> disjoint def
R9417:9424 CertiOS.framework.auxlibs.Maps <> disjoint def
R9443:9451 CertiOS.tactics.basetac.join_lib <> join_comm thm
R9443:9451 CertiOS.tactics.basetac.join_lib <> join_comm thm
R9468:9479 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R9468:9479 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R9496:9507 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R9496:9507 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R9519:9532 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R9519:9532 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R9573:9589 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R9592:9607 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9573:9589 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R9592:9607 CertiOS.framework.proof.auxdef TOSpecMod remove def
R9632:9656 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R9632:9656 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R9673:9693 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R9673:9693 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R9753:9783 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R9753:9783 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R9753:9783 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R9753:9783 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R9802:9805 CertiOS.framework.auxlibs.Maps <> join meth
R9825:9829 CertiOS.framework.auxlibs.Maps <> merge meth
R9808:9812 CertiOS.framework.auxlibs.Maps <> merge meth
R9802:9805 CertiOS.framework.auxlibs.Maps <> join meth
R9825:9829 CertiOS.framework.auxlibs.Maps <> merge meth
R9808:9812 CertiOS.framework.auxlibs.Maps <> merge meth
R9848:9856 CertiOS.tactics.basetac.join_lib <> join_comm thm
R9848:9856 CertiOS.tactics.basetac.join_lib <> join_comm thm
R9874:9899 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge thm
R9874:9899 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge thm
R9956:9958 Coq.Init.Logic <> :type_scope:x_'='_x not
R9919:9931 CertiOS.framework.proof.auxdef TOSpecMod put def
R9940:9944 CertiOS.framework.auxlibs.Maps <> merge meth
R9959:9962 Coq.Init.Datatypes <> Some constr
R9956:9958 Coq.Init.Logic <> :type_scope:x_'='_x not
R9919:9931 CertiOS.framework.proof.auxdef TOSpecMod put def
R9940:9944 CertiOS.framework.auxlibs.Maps <> merge meth
R9959:9962 Coq.Init.Datatypes <> Some constr
R9978:10003 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R9978:10003 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R9978:10003 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R9978:10003 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R10020:10040 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R10020:10040 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R10058:10064 CertiOS.framework.proof.auxdef <> parto_S constr
R10058:10064 CertiOS.framework.proof.auxdef <> parto_S constr
R10082:10090 CertiOS.tactics.basetac.join_lib <> join_comm thm
R10082:10090 CertiOS.tactics.basetac.join_lib <> join_comm thm
R10134:10154 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R10134:10154 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 10176:10185 <> part_disjm
R10243:10251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10264:10267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10281:10284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10285:10292 CertiOS.framework.auxlibs.Maps <> disjoint def
R10297:10298 CertiOS.framework.proof.invariant_prop <> Ms var
R10294:10295 CertiOS.framework.proof.invariant_prop <> Mc var
R10268:10275 CertiOS.framework.auxlibs.Maps <> disjoint def
R10279:10280 CertiOS.framework.proof.invariant_prop <> Ms var
R10277:10277 CertiOS.framework.proof.invariant_prop <> M var
R10252:10256 CertiOS.framework.proof.auxdef <> partM ind
R10262:10263 CertiOS.framework.proof.invariant_prop <> Tm var
R10260:10260 CertiOS.framework.proof.invariant_prop <> T var
R10258:10258 CertiOS.framework.proof.invariant_prop <> M var
R10218:10234 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R10241:10242 CertiOS.framework.proof.invariant_prop <> Mc var
R10239:10239 CertiOS.framework.proof.invariant_prop <> t var
R10236:10237 CertiOS.framework.proof.invariant_prop <> Tm var
R10362:10372 CertiOS.framework.auxlibs.Modules tidspec beq def
R10362:10372 CertiOS.framework.auxlibs.Modules tidspec beq def
R10399:10417 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R10399:10417 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R10491:10516 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R10491:10516 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R10552:10576 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R10552:10576 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R10593:10613 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R10593:10613 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R10637:10645 CertiOS.tactics.basetac.join_lib <> join_comm thm
R10637:10645 CertiOS.tactics.basetac.join_lib <> join_comm thm
R10663:10688 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R10663:10688 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
prf 10710:10719 <> part_disjo
R10777:10785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10798:10801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10815:10818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10819:10826 CertiOS.framework.auxlibs.Maps <> disjoint def
R10831:10832 CertiOS.framework.proof.invariant_prop <> Ms var
R10828:10829 CertiOS.framework.proof.invariant_prop <> Mc var
R10802:10809 CertiOS.framework.auxlibs.Maps <> disjoint def
R10813:10814 CertiOS.framework.proof.invariant_prop <> Ms var
R10811:10811 CertiOS.framework.proof.invariant_prop <> M var
R10786:10790 CertiOS.framework.proof.auxdef <> partO ind
R10796:10797 CertiOS.framework.proof.invariant_prop <> Tm var
R10794:10794 CertiOS.framework.proof.invariant_prop <> T var
R10792:10792 CertiOS.framework.proof.invariant_prop <> M var
R10752:10768 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R10775:10776 CertiOS.framework.proof.invariant_prop <> Mc var
R10773:10773 CertiOS.framework.proof.invariant_prop <> t var
R10770:10771 CertiOS.framework.proof.invariant_prop <> Tm var
R10896:10906 CertiOS.framework.auxlibs.Modules tidspec beq def
R10896:10906 CertiOS.framework.auxlibs.Modules tidspec beq def
R10933:10951 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R10933:10951 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R11026:11054 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R11026:11054 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R11090:11114 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R11090:11114 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R11131:11151 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R11131:11151 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R11175:11183 CertiOS.tactics.basetac.join_lib <> join_comm thm
R11175:11183 CertiOS.tactics.basetac.join_lib <> join_comm thm
R11201:11229 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R11201:11229 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
prf 11253:11270 <> CurLINV_merge_hold
R11332:11339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11353:11360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11403:11410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11411:11414 CertiOS.framework.logic.inferules <> satp def
R11457:11463 CertiOS.framework.logic.inferules <> CurLINV def
R11471:11471 CertiOS.framework.proof.invariant_prop <> t var
R11465:11469 CertiOS.framework.proof.invariant_prop <> lasrt var
R11444:11448 CertiOS.framework.auxlibs.Maps <> merge meth
R11452:11453 CertiOS.framework.proof.invariant_prop <> O' var
R11450:11450 CertiOS.framework.proof.invariant_prop <> O var
R11416:11416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11419:11419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11422:11422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11433:11433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11437:11437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11441:11441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11417:11418 CertiOS.framework.proof.invariant_prop <> ge var
R11420:11421 CertiOS.framework.proof.invariant_prop <> le var
R11423:11427 CertiOS.framework.auxlibs.Maps <> merge meth
R11431:11432 CertiOS.framework.proof.invariant_prop <> m' var
R11429:11429 CertiOS.framework.proof.invariant_prop <> m var
R11434:11436 CertiOS.framework.proof.invariant_prop <> isr var
R11438:11440 CertiOS.framework.proof.invariant_prop <> aux var
R11361:11364 CertiOS.framework.logic.inferules <> satp def
R11387:11393 CertiOS.framework.logic.inferules <> CurLINV def
R11401:11401 CertiOS.framework.proof.invariant_prop <> t var
R11395:11399 CertiOS.framework.proof.invariant_prop <> lasrt var
R11384:11384 CertiOS.framework.proof.invariant_prop <> O var
R11366:11366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11369:11369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11372:11372 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11374:11374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11378:11378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11382:11382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11367:11368 CertiOS.framework.proof.invariant_prop <> ge var
R11370:11371 CertiOS.framework.proof.invariant_prop <> le var
R11373:11373 CertiOS.framework.proof.invariant_prop <> m var
R11375:11377 CertiOS.framework.proof.invariant_prop <> isr var
R11379:11381 CertiOS.framework.proof.invariant_prop <> aux var
R11340:11347 CertiOS.framework.auxlibs.Maps <> disjoint def
R11351:11352 CertiOS.framework.proof.invariant_prop <> O' var
R11349:11349 CertiOS.framework.proof.invariant_prop <> O var
R11319:11326 CertiOS.framework.auxlibs.Maps <> disjoint def
R11330:11331 CertiOS.framework.proof.invariant_prop <> m' var
R11328:11328 CertiOS.framework.proof.invariant_prop <> m var
R11500:11514 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R11500:11514 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R11530:11544 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R11530:11544 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R11562:11580 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R11562:11580 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
prf 11645:11659 <> LINV_ignore_int
R11766:11773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11774:11777 CertiOS.framework.logic.inferules <> satp def
R11803:11805 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R11808:11808 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R11809:11812 CertiOS.framework.logic.inferules <> LINV def
R11822:11823 CertiOS.framework.proof.invariant_prop <> lg var
R11820:11820 CertiOS.framework.proof.invariant_prop <> t var
R11814:11818 CertiOS.framework.proof.invariant_prop <> lasrt var
R11800:11800 CertiOS.framework.proof.invariant_prop <> O var
R11779:11779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11782:11782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11786:11786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11788:11788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11793:11793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11798:11798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11780:11781 CertiOS.framework.proof.invariant_prop <> ge var
R11783:11785 CertiOS.framework.proof.invariant_prop <> le' var
R11787:11787 CertiOS.framework.proof.invariant_prop <> m var
R11789:11792 CertiOS.framework.proof.invariant_prop <> isr' var
R11794:11797 CertiOS.framework.proof.invariant_prop <> aux' var
R11717:11720 CertiOS.framework.logic.inferules <> satp def
R11743:11745 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R11748:11748 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R11749:11752 CertiOS.framework.logic.inferules <> LINV def
R11762:11763 CertiOS.framework.proof.invariant_prop <> lg var
R11760:11760 CertiOS.framework.proof.invariant_prop <> t var
R11754:11758 CertiOS.framework.proof.invariant_prop <> lasrt var
R11740:11740 CertiOS.framework.proof.invariant_prop <> O var
R11722:11722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11725:11725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11728:11728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11730:11730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11734:11734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11738:11738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11723:11724 CertiOS.framework.proof.invariant_prop <> ge var
R11726:11727 CertiOS.framework.proof.invariant_prop <> le var
R11729:11729 CertiOS.framework.proof.invariant_prop <> m var
R11731:11733 CertiOS.framework.proof.invariant_prop <> isr var
R11735:11737 CertiOS.framework.proof.invariant_prop <> aux var
R11854:11857 CertiOS.framework.logic.inferules <> satp def
R11931:11934 CertiOS.framework.logic.inferules <> LINV def
R11990:12001 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R12069:12090 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R12069:12090 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 12133:12147 <> LInv_ignore_int
R12262:12269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12270:12273 CertiOS.framework.logic.inferules <> satp def
R12299:12301 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R12304:12304 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R12320:12323 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R12305:12308 CertiOS.framework.logic.inferules <> LINV def
R12318:12319 CertiOS.framework.proof.invariant_prop <> lg var
R12316:12316 CertiOS.framework.proof.invariant_prop <> t var
R12310:12314 CertiOS.framework.proof.invariant_prop <> lasrt var
R12324:12328 CertiOS.framework.logic.assertion <> Atrue constr
R12296:12296 CertiOS.framework.proof.invariant_prop <> O var
R12275:12275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12278:12278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12282:12282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12284:12284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12289:12289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12294:12294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12276:12277 CertiOS.framework.proof.invariant_prop <> ge var
R12279:12281 CertiOS.framework.proof.invariant_prop <> le' var
R12283:12283 CertiOS.framework.proof.invariant_prop <> m var
R12285:12288 CertiOS.framework.proof.invariant_prop <> isr' var
R12290:12293 CertiOS.framework.proof.invariant_prop <> aux' var
R12205:12208 CertiOS.framework.logic.inferules <> satp def
R12231:12233 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R12236:12236 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R12252:12255 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R12237:12240 CertiOS.framework.logic.inferules <> LINV def
R12250:12251 CertiOS.framework.proof.invariant_prop <> lg var
R12248:12248 CertiOS.framework.proof.invariant_prop <> t var
R12242:12246 CertiOS.framework.proof.invariant_prop <> lasrt var
R12256:12260 CertiOS.framework.logic.assertion <> Atrue constr
R12228:12228 CertiOS.framework.proof.invariant_prop <> O var
R12210:12210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12213:12213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12216:12216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12218:12218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12222:12222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12226:12226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12211:12212 CertiOS.framework.proof.invariant_prop <> ge var
R12214:12215 CertiOS.framework.proof.invariant_prop <> le var
R12217:12217 CertiOS.framework.proof.invariant_prop <> m var
R12219:12221 CertiOS.framework.proof.invariant_prop <> isr var
R12223:12225 CertiOS.framework.proof.invariant_prop <> aux var
R12358:12361 CertiOS.framework.logic.inferules <> satp def
R12435:12438 CertiOS.framework.logic.inferules <> LINV def
R12494:12505 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R12573:12594 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R12573:12594 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 12651:12668 <> CurLINV_ignore_int
R12768:12775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12776:12779 CertiOS.framework.logic.inferules <> satp def
R12805:12811 CertiOS.framework.logic.inferules <> CurLINV def
R12819:12819 CertiOS.framework.proof.invariant_prop <> t var
R12813:12817 CertiOS.framework.proof.invariant_prop <> lasrt var
R12802:12802 CertiOS.framework.proof.invariant_prop <> O var
R12781:12781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12784:12784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12788:12788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12790:12790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12795:12795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12800:12800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12782:12783 CertiOS.framework.proof.invariant_prop <> ge var
R12785:12787 CertiOS.framework.proof.invariant_prop <> le' var
R12789:12789 CertiOS.framework.proof.invariant_prop <> m var
R12791:12794 CertiOS.framework.proof.invariant_prop <> isr' var
R12796:12799 CertiOS.framework.proof.invariant_prop <> aux' var
R12726:12729 CertiOS.framework.logic.inferules <> satp def
R12752:12758 CertiOS.framework.logic.inferules <> CurLINV def
R12766:12766 CertiOS.framework.proof.invariant_prop <> t var
R12760:12764 CertiOS.framework.proof.invariant_prop <> lasrt var
R12749:12749 CertiOS.framework.proof.invariant_prop <> O var
R12731:12731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12734:12734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12737:12737 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12739:12739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12743:12743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12747:12747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12732:12733 CertiOS.framework.proof.invariant_prop <> ge var
R12735:12736 CertiOS.framework.proof.invariant_prop <> le var
R12738:12738 CertiOS.framework.proof.invariant_prop <> m var
R12740:12742 CertiOS.framework.proof.invariant_prop <> isr var
R12744:12746 CertiOS.framework.proof.invariant_prop <> aux var
R12849:12852 CertiOS.framework.logic.inferules <> satp def
R12898:12907 CertiOS.framework.proof.rulesoundlib <> Linv_igore thm
R12898:12907 CertiOS.framework.proof.rulesoundlib <> Linv_igore thm
prf 12930:12943 <> tm_mapsto_put'
R12972:12974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13001:13004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13005:13021 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R13049:13050 CertiOS.framework.proof.invariant_prop <> a' var
R13046:13047 CertiOS.framework.proof.invariant_prop <> t' var
R13024:13036 CertiOS.framework.proof.auxdef TMSpecMod put def
R13043:13043 CertiOS.framework.proof.invariant_prop <> a var
R13041:13041 CertiOS.framework.proof.invariant_prop <> t var
R13038:13039 CertiOS.framework.proof.invariant_prop <> Tm var
R12975:12991 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R12999:13000 CertiOS.framework.proof.invariant_prop <> a' var
R12996:12997 CertiOS.framework.proof.invariant_prop <> t' var
R12993:12994 CertiOS.framework.proof.invariant_prop <> Tm var
R12968:12969 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12967:12967 CertiOS.framework.proof.invariant_prop <> t var
R12970:12971 CertiOS.framework.proof.invariant_prop <> t' var
R13069:13085 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R13097:13109 CertiOS.framework.proof.auxdef TMSpecMod put def
R13134:13148 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R13134:13148 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
prf 13200:13213 <> to_mapsto_put'
R13242:13244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13271:13274 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13275:13291 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R13319:13320 CertiOS.framework.proof.invariant_prop <> a' var
R13316:13317 CertiOS.framework.proof.invariant_prop <> t' var
R13294:13306 CertiOS.framework.proof.auxdef TOSpecMod put def
R13313:13313 CertiOS.framework.proof.invariant_prop <> a var
R13311:13311 CertiOS.framework.proof.invariant_prop <> t var
R13308:13309 CertiOS.framework.proof.invariant_prop <> Tm var
R13245:13261 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R13269:13270 CertiOS.framework.proof.invariant_prop <> a' var
R13266:13267 CertiOS.framework.proof.invariant_prop <> t' var
R13263:13264 CertiOS.framework.proof.invariant_prop <> Tm var
R13238:13239 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R13237:13237 CertiOS.framework.proof.invariant_prop <> t var
R13240:13241 CertiOS.framework.proof.invariant_prop <> t' var
R13339:13355 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R13367:13379 CertiOS.framework.proof.auxdef TOSpecMod put def
R13404:13418 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R13404:13418 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
def 13475:13480 <> absopx
R13485:13489 CertiOS.framework.model.language <> sched constr
prf 13521:13533 <> invlth_divide
R13578:13585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13596:13603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13644:13651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13652:13658 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R13661:13661 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R13664:13664 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R13667:13667 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R13670:13677 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R13690:13693 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13678:13681 CertiOS.framework.auxlibs.Maps <> join meth
R13689:13689 CertiOS.framework.proof.invariant_prop <> M var
R13716:13726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13694:13707 CertiOS.framework.model.language OSAbstMod join def
R13715:13715 CertiOS.framework.proof.invariant_prop <> O var
R13769:13772 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13749:13752 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R13727:13727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13730:13730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13733:13733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13736:13736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13739:13739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13742:13742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13745:13745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13748:13748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13728:13729 CertiOS.framework.proof.invariant_prop <> ge var
R13731:13732 CertiOS.framework.proof.invariant_prop <> le var
R13737:13738 CertiOS.framework.proof.invariant_prop <> ir var
R13740:13741 CertiOS.framework.proof.invariant_prop <> au var
R13746:13747 CertiOS.framework.proof.invariant_prop <> ab var
R13753:13762 CertiOS.framework.logic.assertion <> invlth_isr def
R13768:13768 CertiOS.framework.proof.invariant_prop <> i var
R13764:13764 CertiOS.framework.proof.invariant_prop <> I var
R13795:13798 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R13773:13773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13776:13776 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13779:13779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13782:13782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13785:13785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13788:13788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13791:13791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13794:13794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13774:13775 CertiOS.framework.proof.invariant_prop <> ge var
R13777:13778 CertiOS.framework.proof.invariant_prop <> le var
R13783:13784 CertiOS.framework.proof.invariant_prop <> ir var
R13786:13787 CertiOS.framework.proof.invariant_prop <> au var
R13792:13793 CertiOS.framework.proof.invariant_prop <> ab var
R13799:13808 CertiOS.framework.logic.assertion <> invlth_isr def
R13822:13822 CertiOS.framework.proof.invariant_prop <> j var
R13814:13814 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13813:13813 CertiOS.framework.proof.invariant_prop <> i var
R13810:13810 CertiOS.framework.proof.invariant_prop <> I var
R13624:13627 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R13604:13604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13607:13607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13610:13610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13612:13612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13615:13615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13618:13618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13620:13620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13623:13623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13605:13606 CertiOS.framework.proof.invariant_prop <> ge var
R13608:13609 CertiOS.framework.proof.invariant_prop <> le var
R13611:13611 CertiOS.framework.proof.invariant_prop <> M var
R13613:13614 CertiOS.framework.proof.invariant_prop <> ir var
R13616:13617 CertiOS.framework.proof.invariant_prop <> au var
R13619:13619 CertiOS.framework.proof.invariant_prop <> O var
R13621:13622 CertiOS.framework.proof.invariant_prop <> ab var
R13628:13637 CertiOS.framework.logic.assertion <> invlth_isr def
R13643:13643 CertiOS.framework.proof.invariant_prop <> j var
R13639:13639 CertiOS.framework.proof.invariant_prop <> I var
R13587:13589 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R13586:13586 CertiOS.framework.proof.invariant_prop <> j var
R13590:13590 Coq.Init.Datatypes <> S constr
R13592:13595 CertiOS.framework.model.language <> INUM def
R13576:13576 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R13575:13575 CertiOS.framework.proof.invariant_prop <> i var
R13577:13577 CertiOS.framework.proof.invariant_prop <> j var
R13865:13874 CertiOS.framework.logic.assertion <> invlth_isr def
R13894:13894 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R13894:13894 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R13963:13965 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R13963:13965 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R13994:14005 CertiOS.framework.proof.rulesoundlib <> starinv_prop thm
R13994:14005 CertiOS.framework.proof.rulesoundlib <> starinv_prop thm
R14130:14134 Coq.Init.Logic <> :type_scope:x_'='_x not
R14144:14144 Coq.Init.Logic <> :type_scope:x_'='_x not
R14120:14123 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14129:14129 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14117:14117 Coq.Init.Datatypes <> S constr
R14125:14127 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14138:14140 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14135:14135 Coq.Init.Datatypes <> S constr
R14141:14141 Coq.Init.Datatypes <> S constr
R14130:14134 Coq.Init.Logic <> :type_scope:x_'='_x not
R14144:14144 Coq.Init.Logic <> :type_scope:x_'='_x not
R14120:14123 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14129:14129 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14117:14117 Coq.Init.Datatypes <> S constr
R14125:14127 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14138:14140 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14135:14135 Coq.Init.Datatypes <> S constr
R14141:14141 Coq.Init.Datatypes <> S constr
R14189:14189 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14199:14199 Coq.Init.Datatypes <> S constr
R14199:14199 Coq.Init.Datatypes <> S constr
R14189:14189 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14227:14227 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14227:14227 Coq.Init.Peano <> :nat_scope:x_'-'_x not
prf 14315:14338 <> abst_join_join_merge_eq'
R14392:14399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14423:14430 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14432:14434 Coq.Init.Logic <> :type_scope:x_'='_x not
R14431:14431 CertiOS.framework.proof.invariant_prop <> O var
R14435:14449 CertiOS.framework.model.language OSAbstMod merge def
R14475:14476 CertiOS.framework.proof.invariant_prop <> O3 var
R14452:14466 CertiOS.framework.model.language OSAbstMod merge def
R14471:14472 CertiOS.framework.proof.invariant_prop <> O4 var
R14468:14469 CertiOS.framework.proof.invariant_prop <> O1 var
R14400:14413 CertiOS.framework.model.language OSAbstMod join def
R14421:14422 CertiOS.framework.proof.invariant_prop <> O2 var
R14418:14419 CertiOS.framework.proof.invariant_prop <> O4 var
R14415:14416 CertiOS.framework.proof.invariant_prop <> O3 var
R14370:14383 CertiOS.framework.model.language OSAbstMod join def
R14391:14391 CertiOS.framework.proof.invariant_prop <> O var
R14388:14389 CertiOS.framework.proof.invariant_prop <> O2 var
R14385:14386 CertiOS.framework.proof.invariant_prop <> O1 var
R14504:14527 CertiOS.framework.model.language OSAbstMod extensionality thm
R14504:14527 CertiOS.framework.model.language OSAbstMod extensionality thm
R14634:14652 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14634:14652 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14634:14652 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14665:14683 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14665:14683 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14665:14683 CertiOS.framework.model.language OSAbstMod merge_sem thm
R14698:14710 CertiOS.framework.model.language OSAbstMod get def
R14743:14755 CertiOS.framework.model.language OSAbstMod get def
R14788:14800 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14698:14710 CertiOS.framework.model.language OSAbstMod get def
R14743:14755 CertiOS.framework.model.language OSAbstMod get def
R14743:14755 CertiOS.framework.model.language OSAbstMod get def
R14788:14800 CertiOS.framework.model.language OSAbstMod get def
R14788:14800 CertiOS.framework.model.language OSAbstMod get def
R14788:14800 CertiOS.framework.model.language OSAbstMod get def
R14788:14800 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14833:14845 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
R14878:14890 CertiOS.framework.model.language OSAbstMod get def
prf 14957:14980 <> abst_disj_join_disjmerge
R15028:15035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15059:15066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15067:15080 CertiOS.framework.model.language OSAbstMod disj def
R15105:15106 CertiOS.framework.proof.invariant_prop <> O1 var
R15083:15097 CertiOS.framework.model.language OSAbstMod merge def
R15102:15102 CertiOS.framework.proof.invariant_prop <> O var
R15099:15100 CertiOS.framework.proof.invariant_prop <> O2 var
R15036:15049 CertiOS.framework.model.language OSAbstMod join def
R15057:15058 CertiOS.framework.proof.invariant_prop <> O' var
R15054:15055 CertiOS.framework.proof.invariant_prop <> O2 var
R15051:15052 CertiOS.framework.proof.invariant_prop <> O1 var
R15009:15022 CertiOS.framework.model.language OSAbstMod disj def
R15026:15027 CertiOS.framework.proof.invariant_prop <> O' var
R15024:15024 CertiOS.framework.proof.invariant_prop <> O var
R15204:15222 CertiOS.framework.model.language OSAbstMod merge_sem thm
R15204:15222 CertiOS.framework.model.language OSAbstMod merge_sem thm
R15204:15222 CertiOS.framework.model.language OSAbstMod merge_sem thm
R15237:15249 CertiOS.framework.model.language OSAbstMod get def
R15282:15294 CertiOS.framework.model.language OSAbstMod get def
R15327:15339 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15237:15249 CertiOS.framework.model.language OSAbstMod get def
R15282:15294 CertiOS.framework.model.language OSAbstMod get def
R15282:15294 CertiOS.framework.model.language OSAbstMod get def
R15327:15339 CertiOS.framework.model.language OSAbstMod get def
R15327:15339 CertiOS.framework.model.language OSAbstMod get def
R15327:15339 CertiOS.framework.model.language OSAbstMod get def
R15327:15339 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15371:15383 CertiOS.framework.model.language OSAbstMod get def
R15448:15467 CertiOS.framework.model.language OSAbstMod disj_indom thm
R15448:15467 CertiOS.framework.model.language OSAbstMod disj_indom thm
R15660:15663 Coq.Init.Datatypes <> Some constr
R15674:15677 Coq.Init.Datatypes <> None constr
R15660:15663 Coq.Init.Datatypes <> Some constr
R15674:15677 Coq.Init.Datatypes <> None constr
prf 15769:15788 <> osabst_disj_disjoint
R15805:15810 CertiOS.framework.model.language <> osabst def
R15841:15848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15849:15856 CertiOS.framework.auxlibs.Maps <> disjoint def
R15861:15862 CertiOS.framework.proof.invariant_prop <> o2 var
R15858:15859 CertiOS.framework.proof.invariant_prop <> o1 var
R15821:15834 CertiOS.framework.model.language OSAbstMod disj def
R15839:15840 CertiOS.framework.proof.invariant_prop <> o2 var
R15836:15837 CertiOS.framework.proof.invariant_prop <> o1 var
R15902:15905 CertiOS.framework.auxlibs.Maps <> join meth
R15925:15939 CertiOS.framework.model.language OSAbstMod merge def
R15925:15939 CertiOS.framework.model.language OSAbstMod merge def
R15995:16013 CertiOS.framework.model.language OSAbstMod merge_sem thm
R15995:16013 CertiOS.framework.model.language OSAbstMod merge_sem thm
R15995:16013 CertiOS.framework.model.language OSAbstMod merge_sem thm
prf 16050:16068 <> abst_join_disj_disj
R16118:16125 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16145:16152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16153:16166 CertiOS.framework.model.language OSAbstMod disj def
R16171:16172 CertiOS.framework.proof.invariant_prop <> O' var
R16168:16169 CertiOS.framework.proof.invariant_prop <> O1 var
R16126:16139 CertiOS.framework.model.language OSAbstMod disj def
R16143:16144 CertiOS.framework.proof.invariant_prop <> O' var
R16141:16141 CertiOS.framework.proof.invariant_prop <> O var
R16096:16109 CertiOS.framework.model.language OSAbstMod join def
R16117:16117 CertiOS.framework.proof.invariant_prop <> O var
R16114:16115 CertiOS.framework.proof.invariant_prop <> O2 var
R16111:16112 CertiOS.framework.proof.invariant_prop <> O1 var
R16296:16308 CertiOS.framework.model.language OSAbstMod get def
R16341:16353 CertiOS.framework.model.language OSAbstMod get def
R16386:16398 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16296:16308 CertiOS.framework.model.language OSAbstMod get def
R16341:16353 CertiOS.framework.model.language OSAbstMod get def
R16341:16353 CertiOS.framework.model.language OSAbstMod get def
R16386:16398 CertiOS.framework.model.language OSAbstMod get def
R16386:16398 CertiOS.framework.model.language OSAbstMod get def
R16386:16398 CertiOS.framework.model.language OSAbstMod get def
R16386:16398 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
R16430:16442 CertiOS.framework.model.language OSAbstMod get def
prf 16510:16527 <> starinv_isr_prop4'
R16640:16648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16698:16702 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R16649:16649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16651:16651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16653:16653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16655:16656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16674:16675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16691:16691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16693:16693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16697:16697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16650:16650 CertiOS.framework.proof.invariant_prop <> G var
R16652:16652 CertiOS.framework.proof.invariant_prop <> E var
R16654:16654 CertiOS.framework.proof.invariant_prop <> M var
R16657:16662 CertiOS.framework.model.language <> isrupd def
R16670:16673 Coq.Init.Datatypes <> true constr
R16668:16668 CertiOS.framework.proof.invariant_prop <> i var
R16664:16666 CertiOS.framework.proof.invariant_prop <> isr var
R16676:16676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16680:16680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16686:16686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16690:16690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16677:16679 CertiOS.framework.proof.invariant_prop <> ie' var
R16682:16683 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16681:16681 CertiOS.framework.proof.invariant_prop <> i var
R16684:16685 CertiOS.framework.proof.invariant_prop <> is var
R16687:16689 CertiOS.framework.proof.invariant_prop <> cs' var
R16692:16692 CertiOS.framework.proof.invariant_prop <> O var
R16694:16696 CertiOS.framework.proof.invariant_prop <> aop var
R16703:16713 CertiOS.framework.logic.assertion <> starinv_isr def
R16723:16723 CertiOS.framework.proof.invariant_prop <> j var
R16718:16718 Coq.Init.Datatypes <> S constr
R16720:16720 CertiOS.framework.proof.invariant_prop <> i var
R16715:16715 CertiOS.framework.proof.invariant_prop <> I var
R16614:16618 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R16586:16586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16588:16588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16590:16590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16592:16592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16596:16596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16607:16607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16609:16609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16613:16613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16587:16587 CertiOS.framework.proof.invariant_prop <> G var
R16589:16589 CertiOS.framework.proof.invariant_prop <> E var
R16591:16591 CertiOS.framework.proof.invariant_prop <> M var
R16593:16595 CertiOS.framework.proof.invariant_prop <> isr var
R16597:16597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16600:16600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16603:16603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16606:16606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16598:16599 CertiOS.framework.proof.invariant_prop <> ie var
R16601:16602 CertiOS.framework.proof.invariant_prop <> is var
R16604:16605 CertiOS.framework.proof.invariant_prop <> cs var
R16608:16608 CertiOS.framework.proof.invariant_prop <> O var
R16610:16612 CertiOS.framework.proof.invariant_prop <> aop var
R16619:16629 CertiOS.framework.logic.assertion <> starinv_isr def
R16639:16639 CertiOS.framework.proof.invariant_prop <> j var
R16634:16634 Coq.Init.Datatypes <> S constr
R16636:16636 CertiOS.framework.proof.invariant_prop <> i var
R16631:16631 CertiOS.framework.proof.invariant_prop <> I var
R16900:16905 CertiOS.framework.model.language <> isrupd def
R16911:16914 Coq.Init.Datatypes <> true constr
R16900:16905 CertiOS.framework.model.language <> isrupd def
R16911:16914 Coq.Init.Datatypes <> true constr
R16974:16986 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R16974:16986 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R16974:16986 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R17099:17104 CertiOS.framework.model.language <> isrupd def
R17110:17113 Coq.Init.Datatypes <> true constr
R17099:17104 CertiOS.framework.model.language <> isrupd def
R17110:17113 Coq.Init.Datatypes <> true constr
R17137:17142 CertiOS.framework.logic.assertion <> empmem syndef
R17148:17154 CertiOS.framework.logic.assertion <> empabst syndef
R17137:17142 CertiOS.framework.logic.assertion <> empmem syndef
R17148:17154 CertiOS.framework.logic.assertion <> empabst syndef
R17250:17262 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R17250:17262 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R17250:17262 CertiOS.framework.proof.rulesoundlib <> beq_nat_false thm
R17282:17285 CertiOS.framework.logic.assertion <> prec proj
R17291:17291 Coq.Init.Datatypes <> S constr
R17282:17285 CertiOS.framework.logic.assertion <> prec proj
R17291:17291 Coq.Init.Datatypes <> S constr
R17404:17416 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R17404:17416 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R17427:17430 CertiOS.framework.logic.assertion <> invp proj
R17427:17430 CertiOS.framework.logic.assertion <> invp proj
R17471:17487 CertiOS.framework.proof.rulesoundlib <> starinv_prop1_rev thm
R17471:17487 CertiOS.framework.proof.rulesoundlib <> starinv_prop1_rev thm
R17498:17510 CertiOS.framework.proof.rulesoundlib <> starinv_prop1 thm
R17498:17510 CertiOS.framework.proof.rulesoundlib <> starinv_prop1 thm
R17730:17735 CertiOS.framework.model.language <> isrupd def
R17742:17745 Coq.Init.Datatypes <> true constr
R17730:17735 CertiOS.framework.model.language <> isrupd def
R17742:17745 Coq.Init.Datatypes <> true constr
R17804:17817 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R17804:17817 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R17804:17817 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R18014:18019 CertiOS.framework.model.language <> isrupd def
R18026:18029 Coq.Init.Datatypes <> true constr
R18014:18019 CertiOS.framework.model.language <> isrupd def
R18026:18029 Coq.Init.Datatypes <> true constr
R18053:18058 CertiOS.framework.logic.assertion <> empmem syndef
R18066:18072 CertiOS.framework.logic.assertion <> empabst syndef
R18053:18058 CertiOS.framework.logic.assertion <> empmem syndef
R18066:18072 CertiOS.framework.logic.assertion <> empabst syndef
R18174:18187 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R18174:18187 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R18174:18187 CertiOS.framework.proof.rulesoundlib <> beq_nat_false2 thm
R18211:18214 CertiOS.framework.logic.assertion <> prec proj
R18220:18220 Coq.Init.Datatypes <> S constr
R18223:18223 Coq.Init.Datatypes <> S constr
R18227:18229 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18211:18214 CertiOS.framework.logic.assertion <> prec proj
R18220:18220 Coq.Init.Datatypes <> S constr
R18223:18223 Coq.Init.Datatypes <> S constr
R18227:18229 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18343:18355 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R18343:18355 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R18366:18369 CertiOS.framework.logic.assertion <> invp proj
R18366:18369 CertiOS.framework.logic.assertion <> invp proj
R18420:18422 Coq.Init.Datatypes <> nil constr
R18420:18422 Coq.Init.Datatypes <> nil constr
R18436:18440 Coq.Init.Datatypes <> false constr
R18436:18440 Coq.Init.Datatypes <> false constr
prf 18456:18468 <> good_inv_prop
R18497:18512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18606:18623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18704:18707 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R18664:18664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18667:18667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18671:18672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18674:18675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18678:18679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18692:18693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18698:18699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18703:18703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18665:18666 CertiOS.framework.proof.invariant_prop <> ge var
R18668:18670 CertiOS.framework.proof.invariant_prop <> le' var
R18673:18673 CertiOS.framework.proof.invariant_prop <> M var
R18676:18677 CertiOS.framework.proof.invariant_prop <> ir var
R18680:18680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18684:18684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18687:18687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18691:18691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18681:18683 CertiOS.framework.proof.invariant_prop <> ie' var
R18685:18686 CertiOS.framework.proof.invariant_prop <> is var
R18688:18690 CertiOS.framework.proof.invariant_prop <> cs' var
R18694:18697 CertiOS.framework.proof.invariant_prop <> abst var
R18700:18702 CertiOS.framework.proof.invariant_prop <> op' var
R18708:18708 CertiOS.framework.proof.invariant_prop <> p var
R18601:18604 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R18563:18563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18566:18567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18570:18571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18573:18574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18577:18578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18590:18591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18596:18597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18600:18600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18564:18565 CertiOS.framework.proof.invariant_prop <> ge var
R18568:18569 CertiOS.framework.proof.invariant_prop <> le var
R18572:18572 CertiOS.framework.proof.invariant_prop <> M var
R18575:18576 CertiOS.framework.proof.invariant_prop <> ir var
R18579:18579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18582:18583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18586:18586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18589:18589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18580:18581 CertiOS.framework.proof.invariant_prop <> ie var
R18584:18585 CertiOS.framework.proof.invariant_prop <> is var
R18587:18588 CertiOS.framework.proof.invariant_prop <> cs var
R18592:18595 CertiOS.framework.proof.invariant_prop <> abst var
R18598:18599 CertiOS.framework.proof.invariant_prop <> op var
R18605:18605 CertiOS.framework.proof.invariant_prop <> p var
R18484:18494 CertiOS.framework.logic.assertion <> GoodInvAsrt def
R18496:18496 CertiOS.framework.proof.invariant_prop <> p var
prf 19471:19497 <> inv_isr_irrev_prop_noempisr
R19624:19632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19697:19700 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R19655:19655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19658:19659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19663:19664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19666:19667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19670:19672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19685:19686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19691:19692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19696:19696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19656:19657 CertiOS.framework.proof.invariant_prop <> ge var
R19660:19662 CertiOS.framework.proof.invariant_prop <> le' var
R19665:19665 CertiOS.framework.proof.invariant_prop <> M var
R19668:19669 CertiOS.framework.proof.invariant_prop <> ir var
R19673:19673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19677:19677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19680:19680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19684:19684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19674:19676 CertiOS.framework.proof.invariant_prop <> ie' var
R19678:19679 CertiOS.framework.proof.invariant_prop <> is var
R19681:19683 CertiOS.framework.proof.invariant_prop <> cs' var
R19687:19690 CertiOS.framework.proof.invariant_prop <> abst var
R19693:19695 CertiOS.framework.proof.invariant_prop <> op' var
R19701:19711 CertiOS.framework.logic.assertion <> starinv_isr def
R19719:19719 CertiOS.framework.proof.invariant_prop <> n var
R19715:19717 CertiOS.framework.proof.invariant_prop <> low var
R19713:19713 CertiOS.framework.proof.invariant_prop <> I var
R19601:19604 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R19562:19562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19565:19566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19569:19570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19572:19574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19577:19579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19590:19591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19596:19597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19600:19600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19563:19564 CertiOS.framework.proof.invariant_prop <> ge var
R19567:19568 CertiOS.framework.proof.invariant_prop <> le var
R19571:19571 CertiOS.framework.proof.invariant_prop <> M var
R19575:19576 CertiOS.framework.proof.invariant_prop <> ir var
R19580:19580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19583:19583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19586:19586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19589:19589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19581:19582 CertiOS.framework.proof.invariant_prop <> ie var
R19584:19585 CertiOS.framework.proof.invariant_prop <> is var
R19587:19588 CertiOS.framework.proof.invariant_prop <> cs var
R19592:19595 CertiOS.framework.proof.invariant_prop <> abst var
R19598:19599 CertiOS.framework.proof.invariant_prop <> op var
R19605:19615 CertiOS.framework.logic.assertion <> starinv_isr def
R19623:19623 CertiOS.framework.proof.invariant_prop <> n var
R19619:19621 CertiOS.framework.proof.invariant_prop <> low var
R19617:19617 CertiOS.framework.proof.invariant_prop <> I var
R19992:20004 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R19992:20004 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R20017:20020 CertiOS.framework.logic.assertion <> invp proj
R20017:20020 CertiOS.framework.logic.assertion <> invp proj
R20129:20131 CertiOS.framework.logic.assertion <> sat def
R20149:20151 CertiOS.framework.logic.assertion <> sat def
R20149:20151 CertiOS.framework.logic.assertion <> sat def
R20196:20198 CertiOS.framework.logic.assertion <> sat def
R20208:20210 CertiOS.framework.logic.assertion <> sat def
R20208:20210 CertiOS.framework.logic.assertion <> sat def
R20683:20695 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R20683:20695 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R20708:20711 CertiOS.framework.logic.assertion <> invp proj
R20708:20711 CertiOS.framework.logic.assertion <> invp proj
prf 20805:20820 <> isr_true_S_i_rev
R20883:20890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20947:20954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21003:21006 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R20955:20955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20958:20958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20961:20961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20963:20963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20980:20980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20996:20996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20998:20998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21002:21002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20956:20957 CertiOS.framework.proof.invariant_prop <> ge var
R20959:20960 CertiOS.framework.proof.invariant_prop <> le var
R20962:20962 CertiOS.framework.proof.invariant_prop <> M var
R20964:20969 CertiOS.framework.model.language <> isrupd def
R20976:20979 Coq.Init.Datatypes <> true constr
R20974:20974 CertiOS.framework.proof.invariant_prop <> i var
R20971:20972 CertiOS.framework.proof.invariant_prop <> ir var
R20981:20981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20985:20985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20991:20991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20995:20995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20982:20984 CertiOS.framework.proof.invariant_prop <> ie' var
R20987:20988 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R20986:20986 CertiOS.framework.proof.invariant_prop <> i var
R20989:20990 CertiOS.framework.proof.invariant_prop <> is var
R20992:20994 CertiOS.framework.proof.invariant_prop <> cs' var
R20997:20997 CertiOS.framework.proof.invariant_prop <> O var
R20999:21001 CertiOS.framework.proof.invariant_prop <> ab' var
R21007:21016 CertiOS.framework.logic.assertion <> invlth_isr def
R21030:21030 CertiOS.framework.proof.invariant_prop <> j var
R21022:21022 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21021:21021 CertiOS.framework.proof.invariant_prop <> i var
R21018:21018 CertiOS.framework.proof.invariant_prop <> I var
R20919:20922 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R20891:20891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20894:20894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20897:20897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20899:20899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20902:20902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20913:20913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20915:20915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20918:20918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20892:20893 CertiOS.framework.proof.invariant_prop <> ge var
R20895:20896 CertiOS.framework.proof.invariant_prop <> le var
R20898:20898 CertiOS.framework.proof.invariant_prop <> M var
R20900:20901 CertiOS.framework.proof.invariant_prop <> ir var
R20903:20903 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20906:20906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20909:20909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20912:20912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20904:20905 CertiOS.framework.proof.invariant_prop <> ie var
R20907:20908 CertiOS.framework.proof.invariant_prop <> is var
R20910:20911 CertiOS.framework.proof.invariant_prop <> cs var
R20914:20914 CertiOS.framework.proof.invariant_prop <> O var
R20916:20917 CertiOS.framework.proof.invariant_prop <> ab var
R20923:20932 CertiOS.framework.logic.assertion <> invlth_isr def
R20946:20946 CertiOS.framework.proof.invariant_prop <> j var
R20938:20938 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R20937:20937 CertiOS.framework.proof.invariant_prop <> i var
R20934:20934 CertiOS.framework.proof.invariant_prop <> I var
R20881:20881 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R20880:20880 CertiOS.framework.proof.invariant_prop <> i var
R20882:20882 CertiOS.framework.proof.invariant_prop <> j var
R21069:21078 CertiOS.framework.logic.assertion <> invlth_isr def
R21098:21098 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21108:21108 Coq.Init.Datatypes <> S constr
R21108:21108 Coq.Init.Datatypes <> S constr
R21098:21098 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21139:21156 CertiOS.framework.proof.invariant_prop <> starinv_isr_prop4' thm
R21139:21156 CertiOS.framework.proof.invariant_prop <> starinv_isr_prop4' thm
R21176:21202 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop_noempisr thm
R21176:21202 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop_noempisr thm
R21251:21253 Coq.Init.Datatypes <> nil constr
R21251:21253 Coq.Init.Datatypes <> nil constr
R21267:21271 Coq.Init.Datatypes <> false constr
R21267:21271 Coq.Init.Datatypes <> false constr
prf 21309:21322 <> int_mem_trans1
R21380:21386 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21407:21414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21429:21436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21471:21478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21479:21479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21533:21541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21542:21548 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R21552:21552 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R21556:21556 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R21560:21560 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R21563:21570 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R21589:21598 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21573:21575 Coq.Init.Logic <> :type_scope:x_'='_x not
R21571:21572 CertiOS.framework.proof.invariant_prop <> Ms var
R21576:21580 CertiOS.framework.auxlibs.Maps <> merge meth
R21615:21624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21599:21606 CertiOS.framework.auxlibs.Maps <> disjoint def
R21642:21651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21627:21629 Coq.Init.Logic <> :type_scope:x_'='_x not
R21625:21626 CertiOS.framework.proof.invariant_prop <> Os var
R21630:21634 CertiOS.framework.auxlibs.Maps <> merge meth
R21667:21677 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21734:21734 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21652:21659 CertiOS.framework.auxlibs.Maps <> disjoint def
R21690:21694 CertiOS.framework.logic.assertion <> absop def
R21725:21728 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R21697:21697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21715:21716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21720:21721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21724:21724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21698:21707 CertiOS.framework.logic.assertion <> substaskst def
R21709:21710 CertiOS.framework.proof.invariant_prop <> o' var
R21722:21723 CertiOS.framework.proof.invariant_prop <> ab var
R21729:21731 CertiOS.framework.logic.assertion <> INV def
R21733:21733 CertiOS.framework.proof.invariant_prop <> I var
R21492:21496 CertiOS.framework.logic.assertion <> absop def
R21524:21527 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R21499:21499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21515:21516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21519:21520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21523:21523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21500:21509 CertiOS.framework.logic.assertion <> substaskst def
R21513:21514 CertiOS.framework.proof.invariant_prop <> Ms var
R21511:21511 CertiOS.framework.proof.invariant_prop <> o var
R21517:21518 CertiOS.framework.proof.invariant_prop <> Os var
R21521:21522 CertiOS.framework.proof.invariant_prop <> ab var
R21528:21530 CertiOS.framework.logic.assertion <> INV def
R21532:21532 CertiOS.framework.proof.invariant_prop <> I var
R21448:21450 Coq.Init.Logic <> :type_scope:x_'='_x not
R21437:21441 CertiOS.framework.auxlibs.Maps <> merge meth
R21446:21447 CertiOS.framework.proof.invariant_prop <> Ms var
R21443:21444 CertiOS.framework.proof.invariant_prop <> Ml var
R21451:21457 CertiOS.framework.model.opsem <> get_mem def
R21460:21467 CertiOS.framework.model.language <> get_smem def
R21469:21469 CertiOS.framework.proof.invariant_prop <> o var
R21415:21422 CertiOS.framework.auxlibs.Maps <> disjoint def
R21427:21428 CertiOS.framework.proof.invariant_prop <> Ms var
R21424:21425 CertiOS.framework.proof.invariant_prop <> Ml var
R21387:21394 CertiOS.framework.model.opsem <> lintstep ind
R21405:21406 CertiOS.framework.proof.invariant_prop <> o' var
R21402:21403 CertiOS.framework.proof.invariant_prop <> C' var
R21400:21400 CertiOS.framework.proof.invariant_prop <> o var
R21398:21398 CertiOS.framework.proof.invariant_prop <> C var
R21396:21396 CertiOS.framework.proof.invariant_prop <> p var
R21367:21371 CertiOS.framework.logic.inferules <> GoodI def
R21378:21379 CertiOS.framework.proof.invariant_prop <> li var
R21375:21376 CertiOS.framework.proof.invariant_prop <> sd var
R21373:21373 CertiOS.framework.proof.invariant_prop <> I var
R21891:21896 CertiOS.framework.proof.invariant_prop <> absopx def
R21891:21896 CertiOS.framework.proof.invariant_prop <> absopx def
R21908:21910 CertiOS.framework.logic.assertion <> INV def
R21927:21929 CertiOS.framework.logic.assertion <> sat def
R21944:21946 CertiOS.framework.logic.assertion <> sat def
R21944:21946 CertiOS.framework.logic.assertion <> sat def
R22020:22028 CertiOS.framework.logic.assertion <> inv_ieoff def
R22043:22045 CertiOS.framework.logic.assertion <> sat def
R22058:22060 CertiOS.framework.logic.assertion <> sat def
R22058:22060 CertiOS.framework.logic.assertion <> sat def
R22106:22113 CertiOS.framework.logic.assertion <> inv_ieon def
R22130:22132 CertiOS.framework.logic.assertion <> sat def
R22145:22147 CertiOS.framework.logic.assertion <> sat def
R22145:22147 CertiOS.framework.logic.assertion <> sat def
R22200:22208 CertiOS.framework.logic.assertion <> emposabst def
R22250:22265 CertiOS.framework.logic.assertion <> getmem def
R22282:22289 CertiOS.framework.model.language <> get_smem def
R22304:22310 CertiOS.framework.model.opsem <> get_mem def
R22329:22339 CertiOS.tactics.basetac.join_lib <> join_emp_eq thm
R22329:22339 CertiOS.tactics.basetac.join_lib <> join_emp_eq thm
R22368:22378 CertiOS.tactics.basetac.join_lib <> join_emp_eq thm
R22368:22378 CertiOS.tactics.basetac.join_lib <> join_emp_eq thm
R22410:22422 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R22410:22422 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R22469:22473 CertiOS.framework.auxlibs.Maps <> merge meth
R22485:22489 CertiOS.framework.auxlibs.Maps <> merge meth
R22469:22473 CertiOS.framework.auxlibs.Maps <> merge meth
R22485:22489 CertiOS.framework.auxlibs.Maps <> merge meth
R22521:22542 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_join_merge_eq thm
R22521:22542 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_join_merge_eq thm
R22559:22570 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R22559:22570 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R22581:22606 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_eq_merge thm
R22581:22606 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_eq_merge thm
R22640:22647 CertiOS.framework.auxlibs.Maps <> disjoint def
R22650:22654 CertiOS.framework.auxlibs.Maps <> merge meth
R22640:22647 CertiOS.framework.auxlibs.Maps <> disjoint def
R22650:22654 CertiOS.framework.auxlibs.Maps <> merge meth
prf 22675:22693 <> invariant_prop_map1
R22729:22735 CertiOS.framework.auxlibs.Maps <> PermMap class
R22741:22741 CertiOS.framework.proof.invariant_prop <> T var
R22739:22739 CertiOS.framework.proof.invariant_prop <> B var
R22737:22737 CertiOS.framework.proof.invariant_prop <> A var
R22776:22785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22799:22808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22822:22831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22832:22839 CertiOS.framework.auxlibs.Maps <> disjoint def
R22854:22855 CertiOS.framework.proof.invariant_prop <> x1 var
R22842:22846 CertiOS.framework.auxlibs.Maps <> merge meth
R22851:22851 CertiOS.framework.proof.invariant_prop <> x var
R22848:22849 CertiOS.framework.proof.invariant_prop <> x4 var
R22809:22812 CertiOS.framework.auxlibs.Maps <> join meth
R22820:22821 CertiOS.framework.proof.invariant_prop <> x0 var
R22817:22818 CertiOS.framework.proof.invariant_prop <> x4 var
R22814:22815 CertiOS.framework.proof.invariant_prop <> x1 var
R22786:22793 CertiOS.framework.auxlibs.Maps <> disjoint def
R22797:22798 CertiOS.framework.proof.invariant_prop <> x0 var
R22795:22795 CertiOS.framework.proof.invariant_prop <> x var
R22769:22771 Coq.Init.Logic <> :type_scope:x_'='_x not
R22762:22768 CertiOS.framework.auxlibs.Maps <> usePerm meth
R22772:22775 Coq.Init.Datatypes <> true constr
R22899:22917 CertiOS.framework.proof.invariant_prop <> invariant_prop_map1 thm
R22899:22917 CertiOS.framework.proof.invariant_prop <> invariant_prop_map1 thm
prf 23095:23113 <> invariant_prop_map2
R23149:23155 CertiOS.framework.auxlibs.Maps <> PermMap class
R23161:23161 CertiOS.framework.proof.invariant_prop <> T var
R23159:23159 CertiOS.framework.proof.invariant_prop <> B var
R23157:23157 CertiOS.framework.proof.invariant_prop <> A var
R23196:23205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23219:23228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23242:23251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23252:23259 CertiOS.framework.auxlibs.Maps <> disjoint def
R23274:23275 CertiOS.framework.proof.invariant_prop <> x1 var
R23262:23266 CertiOS.framework.auxlibs.Maps <> merge meth
R23270:23271 CertiOS.framework.proof.invariant_prop <> x4 var
R23268:23268 CertiOS.framework.proof.invariant_prop <> x var
R23229:23232 CertiOS.framework.auxlibs.Maps <> join meth
R23240:23241 CertiOS.framework.proof.invariant_prop <> x0 var
R23237:23238 CertiOS.framework.proof.invariant_prop <> x4 var
R23234:23235 CertiOS.framework.proof.invariant_prop <> x1 var
R23206:23213 CertiOS.framework.auxlibs.Maps <> disjoint def
R23217:23218 CertiOS.framework.proof.invariant_prop <> x0 var
R23215:23215 CertiOS.framework.proof.invariant_prop <> x var
R23189:23191 Coq.Init.Logic <> :type_scope:x_'='_x not
R23182:23188 CertiOS.framework.auxlibs.Maps <> usePerm meth
R23192:23195 Coq.Init.Datatypes <> true constr
R23319:23337 CertiOS.framework.proof.invariant_prop <> invariant_prop_map2 thm
R23319:23337 CertiOS.framework.proof.invariant_prop <> invariant_prop_map2 thm
R23359:23382 CertiOS.framework.proof.invariant_prop <> abst_join_join_merge_eq' thm
R23359:23382 CertiOS.framework.proof.invariant_prop <> abst_join_join_merge_eq' thm
R23399:23410 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R23399:23410 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R23421:23443 CertiOS.framework.model.language OSAbstMod join_disj_meq thm
R23421:23443 CertiOS.framework.model.language OSAbstMod join_disj_meq thm
R23477:23490 CertiOS.framework.model.language OSAbstMod disj def
R23493:23507 CertiOS.framework.model.language OSAbstMod merge def
R23477:23490 CertiOS.framework.model.language OSAbstMod disj def
R23493:23507 CertiOS.framework.model.language OSAbstMod merge def
R23531:23554 CertiOS.framework.proof.invariant_prop <> abst_disj_join_disjmerge thm
R23531:23554 CertiOS.framework.proof.invariant_prop <> abst_disj_join_disjmerge thm
R23571:23588 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_l thm
R23571:23588 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_l thm
R23600:23606 CertiOS.framework.auxlibs.Maps <> usePerm meth
R23630:23656 CertiOS.framework.model.language OSAbstMod disj_merge_elim_l thm
R23630:23656 CertiOS.framework.model.language OSAbstMod disj_merge_elim_l thm
R23690:23709 CertiOS.framework.proof.invariant_prop <> osabst_disj_disjoint thm
R23690:23709 CertiOS.framework.proof.invariant_prop <> osabst_disj_disjoint thm
R23727:23746 CertiOS.framework.proof.invariant_prop <> osabst_disj_disjoint thm
R23727:23746 CertiOS.framework.proof.invariant_prop <> osabst_disj_disjoint thm
R23793:23795 CertiOS.framework.logic.assertion <> sat def
R23802:23804 CertiOS.framework.logic.assertion <> sat def
R23802:23804 CertiOS.framework.logic.assertion <> sat def
R23835:23850 CertiOS.framework.logic.assertion <> getmem def
R23862:23868 CertiOS.framework.model.opsem <> get_mem def
R23878:23885 CertiOS.framework.model.language <> get_smem def
R23903:23907 CertiOS.framework.auxlibs.Maps <> merge meth
R23922:23936 CertiOS.framework.model.language OSAbstMod merge def
R23903:23907 CertiOS.framework.auxlibs.Maps <> merge meth
R23922:23936 CertiOS.framework.model.language OSAbstMod merge def
R23963:23977 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R23963:23977 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R23988:24013 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_eq_merge thm
R23988:24013 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_eq_merge thm
R24045:24053 CertiOS.tactics.basetac.join_lib <> join_comm thm
R24045:24053 CertiOS.tactics.basetac.join_lib <> join_comm thm
R24070:24081 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R24070:24081 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R24098:24109 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R24098:24109 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R24121:24146 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R24121:24146 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R24165:24169 CertiOS.framework.auxlibs.Maps <> merge meth
R24196:24220 CertiOS.framework.model.language OSAbstMod join_merge_disj thm
R24196:24220 CertiOS.framework.model.language OSAbstMod join_merge_disj thm
R24231:24253 CertiOS.framework.model.language OSAbstMod join_disj_meq thm
R24231:24253 CertiOS.framework.model.language OSAbstMod join_disj_meq thm
R24285:24303 CertiOS.framework.model.language OSAbstMod join_comm thm
R24285:24303 CertiOS.framework.model.language OSAbstMod join_comm thm
R24320:24337 CertiOS.framework.model.language OSAbstMod disj_sym thm
R24320:24337 CertiOS.framework.model.language OSAbstMod disj_sym thm
R24354:24371 CertiOS.framework.model.language OSAbstMod disj_sym thm
R24354:24371 CertiOS.framework.model.language OSAbstMod disj_sym thm
R24384:24402 CertiOS.framework.proof.invariant_prop <> abst_join_disj_disj thm
R24384:24402 CertiOS.framework.proof.invariant_prop <> abst_join_disj_disj thm
R24420:24432 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R24420:24432 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R24449:24452 CertiOS.framework.logic.assertion <> invp proj
R24449:24452 CertiOS.framework.logic.assertion <> invp proj
R24465:24472 CertiOS.framework.logic.assertion <> inv_prop def
R24475:24480 CertiOS.framework.logic.assertion <> getinv proj
R24486:24486 Coq.Init.Datatypes <> S constr
R24488:24491 CertiOS.framework.model.language <> INUM def
R24465:24472 CertiOS.framework.logic.assertion <> inv_prop def
R24475:24480 CertiOS.framework.logic.assertion <> getinv proj
R24486:24486 Coq.Init.Datatypes <> S constr
R24488:24491 CertiOS.framework.model.language <> INUM def
R24506:24509 CertiOS.framework.logic.assertion <> prec proj
R24506:24509 CertiOS.framework.logic.assertion <> prec proj
R24650:24658 CertiOS.framework.logic.assertion <> inv_ieoff def
R24670:24672 CertiOS.framework.logic.assertion <> sat def
R24679:24681 CertiOS.framework.logic.assertion <> sat def
R24679:24681 CertiOS.framework.logic.assertion <> sat def
R24712:24717 CertiOS.framework.logic.assertion <> empmem syndef
R24725:24731 CertiOS.framework.logic.assertion <> empabst syndef
R24712:24717 CertiOS.framework.logic.assertion <> empmem syndef
R24725:24731 CertiOS.framework.logic.assertion <> empabst syndef
R24761:24769 CertiOS.framework.logic.assertion <> emposabst def
R24838:24843 CertiOS.framework.logic.assertion <> empmem syndef
R24851:24857 CertiOS.framework.logic.assertion <> empabst syndef
R24838:24843 CertiOS.framework.logic.assertion <> empmem syndef
R24851:24857 CertiOS.framework.logic.assertion <> empabst syndef
R24887:24895 CertiOS.framework.logic.assertion <> emposabst def
R24919:24927 CertiOS.framework.logic.assertion <> emposabst def
R24953:24958 CertiOS.framework.logic.assertion <> empmem syndef
R24966:24972 CertiOS.framework.logic.assertion <> empabst syndef
R24953:24958 CertiOS.framework.logic.assertion <> empmem syndef
R24966:24972 CertiOS.framework.logic.assertion <> empabst syndef
R25010:25018 CertiOS.framework.logic.assertion <> emposabst def
R25042:25050 CertiOS.framework.logic.assertion <> emposabst def
R25071:25086 CertiOS.framework.proof.invariant_prop <> isr_true_S_i_rev thm
R25071:25086 CertiOS.framework.proof.invariant_prop <> isr_true_S_i_rev thm
R25104:25113 CertiOS.framework.logic.assertion <> invlth_isr def
R25130:25147 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
R25130:25147 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
prf 25210:25222 <> int_mem_trans
R25280:25286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25307:25314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25348:25355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25356:25356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25410:25418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25419:25425 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25429:25429 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25433:25433 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25437:25437 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25440:25447 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25463:25472 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25448:25451 CertiOS.framework.auxlibs.Maps <> join meth
R25461:25462 CertiOS.framework.proof.invariant_prop <> Ms var
R25487:25497 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25554:25554 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25473:25476 CertiOS.framework.auxlibs.Maps <> join meth
R25485:25486 CertiOS.framework.proof.invariant_prop <> Os var
R25510:25514 CertiOS.framework.logic.assertion <> absop def
R25545:25548 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R25517:25517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25535:25536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25540:25541 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25544:25544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25518:25527 CertiOS.framework.logic.assertion <> substaskst def
R25529:25530 CertiOS.framework.proof.invariant_prop <> o' var
R25542:25543 CertiOS.framework.proof.invariant_prop <> ab var
R25549:25551 CertiOS.framework.logic.assertion <> INV def
R25553:25553 CertiOS.framework.proof.invariant_prop <> I var
R25369:25373 CertiOS.framework.logic.assertion <> absop def
R25401:25404 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R25376:25376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25392:25393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25396:25397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25400:25400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25377:25386 CertiOS.framework.logic.assertion <> substaskst def
R25390:25391 CertiOS.framework.proof.invariant_prop <> Ms var
R25388:25388 CertiOS.framework.proof.invariant_prop <> o var
R25394:25395 CertiOS.framework.proof.invariant_prop <> Os var
R25398:25399 CertiOS.framework.proof.invariant_prop <> ab var
R25405:25407 CertiOS.framework.logic.assertion <> INV def
R25409:25409 CertiOS.framework.proof.invariant_prop <> I var
R25315:25318 CertiOS.framework.auxlibs.Maps <> join meth
R25327:25333 CertiOS.framework.model.opsem <> get_mem def
R25336:25343 CertiOS.framework.model.language <> get_smem def
R25345:25345 CertiOS.framework.proof.invariant_prop <> o var
R25323:25324 CertiOS.framework.proof.invariant_prop <> Ms var
R25320:25321 CertiOS.framework.proof.invariant_prop <> Ml var
R25287:25294 CertiOS.framework.model.opsem <> lintstep ind
R25305:25306 CertiOS.framework.proof.invariant_prop <> o' var
R25302:25303 CertiOS.framework.proof.invariant_prop <> C' var
R25300:25300 CertiOS.framework.proof.invariant_prop <> o var
R25298:25298 CertiOS.framework.proof.invariant_prop <> C var
R25296:25296 CertiOS.framework.proof.invariant_prop <> p var
R25267:25271 CertiOS.framework.logic.inferules <> GoodI def
R25278:25279 CertiOS.framework.proof.invariant_prop <> li var
R25275:25276 CertiOS.framework.proof.invariant_prop <> sd var
R25273:25273 CertiOS.framework.proof.invariant_prop <> I var
R25584:25591 CertiOS.framework.auxlibs.Maps <> disjoint def
R25584:25591 CertiOS.framework.auxlibs.Maps <> disjoint def
R25610:25621 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R25610:25621 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R25652:25654 Coq.Init.Logic <> :type_scope:x_'='_x not
R25641:25645 CertiOS.framework.auxlibs.Maps <> merge meth
R25655:25661 CertiOS.framework.model.opsem <> get_mem def
R25664:25671 CertiOS.framework.model.language <> get_smem def
R25652:25654 Coq.Init.Logic <> :type_scope:x_'='_x not
R25641:25645 CertiOS.framework.auxlibs.Maps <> merge meth
R25655:25661 CertiOS.framework.model.opsem <> get_mem def
R25664:25671 CertiOS.framework.model.language <> get_smem def
R25689:25698 CertiOS.tactics.basetac.join_lib <> join_merge thm
R25689:25698 CertiOS.tactics.basetac.join_lib <> join_merge thm
R25689:25698 CertiOS.tactics.basetac.join_lib <> join_merge thm
R25689:25698 CertiOS.tactics.basetac.join_lib <> join_merge thm
R25719:25732 CertiOS.framework.proof.invariant_prop <> int_mem_trans1 thm
R25719:25732 CertiOS.framework.proof.invariant_prop <> int_mem_trans1 thm
R25802:25816 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R25802:25816 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R25833:25841 CertiOS.tactics.basetac.join_lib <> join_comm thm
R25833:25841 CertiOS.tactics.basetac.join_lib <> join_comm thm
R25852:25863 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R25852:25863 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R25881:25895 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R25881:25895 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R25940:25954 CertiOS.tactics.hoareforward.symbolic_lemmas <> <> lib
prf 25964:25977 <> mapsto_load_eq
R26021:26024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26061:26068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26103:26106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26108:26109 Coq.Init.Logic <> :type_scope:x_'='_x not
R26107:26107 CertiOS.framework.proof.invariant_prop <> v var
R26110:26111 CertiOS.framework.proof.invariant_prop <> v' var
R26086:26088 Coq.Init.Logic <> :type_scope:x_'='_x not
R26069:26072 CertiOS.framework.model.opsem <> load def
R26085:26085 CertiOS.framework.proof.invariant_prop <> a var
R26083:26083 CertiOS.framework.proof.invariant_prop <> M var
R26075:26078 CertiOS.framework.model.memory <> Tptr constr
R26080:26080 CertiOS.framework.proof.invariant_prop <> t var
R26089:26092 Coq.Init.Datatypes <> Some constr
R26095:26098 CertiOS.framework.model.memory <> Vptr constr
R26100:26101 CertiOS.framework.proof.invariant_prop <> v' var
R26025:26033 CertiOS.framework.logic.assertion <> mapstoval def
R26060:26060 CertiOS.framework.proof.invariant_prop <> m var
R26052:26055 CertiOS.framework.model.memory <> Vptr constr
R26057:26057 CertiOS.framework.proof.invariant_prop <> v var
R26046:26049 Coq.Init.Datatypes <> true constr
R26038:26041 CertiOS.framework.model.memory <> Tptr constr
R26043:26043 CertiOS.framework.proof.invariant_prop <> t var
R26035:26035 CertiOS.framework.proof.invariant_prop <> a var
R26010:26013 CertiOS.framework.auxlibs.Maps <> join meth
R26020:26020 CertiOS.framework.proof.invariant_prop <> M var
R26017:26018 CertiOS.framework.proof.invariant_prop <> m' var
R26015:26015 CertiOS.framework.proof.invariant_prop <> m var
R26142:26155 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R26142:26155 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R26188:26201 CertiOS.framework.proof.lmachLib <> load_mem_deter thm
R26188:26201 CertiOS.framework.proof.lmachLib <> load_mem_deter thm
R26220:26227 CertiOS.framework.auxlibs.Maps <> sub def
R26220:26227 CertiOS.framework.auxlibs.Maps <> sub def
R26244:26253 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R26244:26253 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 26312:26331 <> mapsto_false_load_eq
R26375:26378 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26416:26423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26458:26461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26463:26464 Coq.Init.Logic <> :type_scope:x_'='_x not
R26462:26462 CertiOS.framework.proof.invariant_prop <> v var
R26465:26466 CertiOS.framework.proof.invariant_prop <> v' var
R26441:26443 Coq.Init.Logic <> :type_scope:x_'='_x not
R26424:26427 CertiOS.framework.model.opsem <> load def
R26440:26440 CertiOS.framework.proof.invariant_prop <> a var
R26438:26438 CertiOS.framework.proof.invariant_prop <> M var
R26430:26433 CertiOS.framework.model.memory <> Tptr constr
R26435:26435 CertiOS.framework.proof.invariant_prop <> t var
R26444:26447 Coq.Init.Datatypes <> Some constr
R26450:26453 CertiOS.framework.model.memory <> Vptr constr
R26455:26456 CertiOS.framework.proof.invariant_prop <> v' var
R26379:26387 CertiOS.framework.logic.assertion <> mapstoval def
R26415:26415 CertiOS.framework.proof.invariant_prop <> m var
R26407:26410 CertiOS.framework.model.memory <> Vptr constr
R26412:26412 CertiOS.framework.proof.invariant_prop <> v var
R26400:26404 Coq.Init.Datatypes <> false constr
R26392:26395 CertiOS.framework.model.memory <> Tptr constr
R26397:26397 CertiOS.framework.proof.invariant_prop <> t var
R26389:26389 CertiOS.framework.proof.invariant_prop <> a var
R26364:26367 CertiOS.framework.auxlibs.Maps <> join meth
R26374:26374 CertiOS.framework.proof.invariant_prop <> M var
R26371:26372 CertiOS.framework.proof.invariant_prop <> m' var
R26369:26369 CertiOS.framework.proof.invariant_prop <> m var
R26497:26510 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R26497:26510 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R26543:26556 CertiOS.framework.proof.lmachLib <> load_mem_deter thm
R26543:26556 CertiOS.framework.proof.lmachLib <> load_mem_deter thm
R26575:26582 CertiOS.framework.auxlibs.Maps <> sub def
R26575:26582 CertiOS.framework.auxlibs.Maps <> sub def
R26599:26608 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R26599:26608 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 26667:26683 <> tasks_set_eq_set2
R26726:26728 Coq.Init.Logic <> :type_scope:x_'='_x not
R26708:26719 CertiOS.framework.model.language TasksMod set def
R26725:26725 CertiOS.framework.proof.invariant_prop <> x var
R26723:26723 CertiOS.framework.proof.invariant_prop <> t var
R26721:26721 CertiOS.framework.proof.invariant_prop <> T var
R26729:26740 CertiOS.framework.model.language TasksMod set def
R26765:26765 CertiOS.framework.proof.invariant_prop <> x var
R26763:26763 CertiOS.framework.proof.invariant_prop <> t var
R26743:26754 CertiOS.framework.model.language TasksMod set def
R26760:26760 CertiOS.framework.proof.invariant_prop <> y var
R26758:26758 CertiOS.framework.proof.invariant_prop <> t var
R26756:26756 CertiOS.framework.proof.invariant_prop <> T var
R26794:26816 CertiOS.framework.model.language TasksMod extensionality thm
R26794:26816 CertiOS.framework.model.language TasksMod extensionality thm
R26843:26846 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26841:26841 Coq.Init.Logic <> :type_scope:x_'='_x not
R26848:26849 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26843:26846 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26841:26841 Coq.Init.Logic <> :type_scope:x_'='_x not
R26848:26849 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R26898:26917 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26898:26917 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26898:26917 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26898:26917 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26930:26949 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26930:26949 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26930:26949 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26930:26949 CertiOS.framework.model.language TasksMod set_a_get_a thm
R26968:26986 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R26968:26986 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R27002:27020 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R27002:27020 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R27038:27058 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27038:27058 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27038:27058 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27038:27058 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27071:27091 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27071:27091 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27071:27091 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27071:27091 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27104:27124 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27104:27124 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27104:27124 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27104:27124 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R27143:27163 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R27143:27163 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R27179:27199 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R27179:27199 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R27215:27235 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R27215:27235 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
prf 27256:27264 <> sw_same_t
R27282:27284 CertiOS.framework.model.memory <> var def
R27294:27299 CertiOS.framework.model.language <> taskst def
R27326:27329 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27361:27361 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27318:27325 CertiOS.framework.model.language <> progunit def
R27351:27353 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27339:27341 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27330:27338 CertiOS.framework.model.language <> osapispec def
R27342:27350 CertiOS.framework.model.language <> osintspec def
R27354:27360 CertiOS.framework.model.language <> ossched def
R27381:27388 CertiOS.framework.model.language <> clientst def
R27396:27407 CertiOS.framework.model.language TasksMod map def
R27416:27422 CertiOS.framework.auxlibs.Modules <> addrval def
R27440:27444 CertiOS.framework.auxlibs.Modules <> block def
R27453:27456 CertiOS.framework.model.memory <> type ind
R27468:27477 CertiOS.framework.model.language CodeSpec B def
R27495:27503 CertiOS.framework.auxlibs.Modules tidspec A def
R27515:27523 CertiOS.framework.model.language <> spec_code ind
R27555:27562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27589:27596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27627:27634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27635:27635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27694:27702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27761:27768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27834:27841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27871:27878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28025:28033 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28101:28101 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27879:27884 CertiOS.framework.model.opsem <> hpstep ind
R28023:28024 CertiOS.framework.proof.invariant_prop <> O' var
R28019:28021 CertiOS.framework.proof.invariant_prop <> cst var
R27973:27984 CertiOS.framework.model.language TasksMod set def
R27990:27990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28013:28014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28016:28016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27991:27994 CertiOS.framework.model.language <> curs constr
R27997:28005 CertiOS.framework.model.language <> hapi_code constr
R28007:28011 CertiOS.framework.proof.invariant_prop <> sleft var
R28015:28015 CertiOS.framework.proof.invariant_prop <> k var
R27988:27988 CertiOS.framework.proof.invariant_prop <> t var
R27986:27986 CertiOS.framework.proof.invariant_prop <> T var
R27970:27970 CertiOS.framework.proof.invariant_prop <> O var
R27966:27968 CertiOS.framework.proof.invariant_prop <> cst var
R27900:27911 CertiOS.framework.model.language TasksMod set def
R27917:27917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27950:27950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27952:27952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27918:27921 CertiOS.framework.model.language <> curs constr
R27924:27932 CertiOS.framework.model.language <> hapi_code constr
R27940:27942 CertiOS.framework.model.language <> ::x_';;'_x not
R27935:27939 CertiOS.framework.model.language <> sched constr
R27943:27947 CertiOS.framework.proof.invariant_prop <> sleft var
R27951:27951 CertiOS.framework.proof.invariant_prop <> k var
R27915:27915 CertiOS.framework.proof.invariant_prop <> t var
R27913:27913 CertiOS.framework.proof.invariant_prop <> T var
R27886:27886 CertiOS.framework.proof.invariant_prop <> p var
R28046:28050 CertiOS.framework.logic.assertion <> absop def
R28065:28068 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R28053:28053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28057:28058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28060:28061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28064:28064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28054:28056 CertiOS.framework.proof.invariant_prop <> tst var
R28059:28059 CertiOS.framework.proof.invariant_prop <> O var
R28062:28063 CertiOS.framework.proof.invariant_prop <> ab var
R28092:28095 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R28069:28074 CertiOS.framework.logic.assertion <> AHprio constr
R28090:28091 CertiOS.framework.proof.invariant_prop <> t' var
R28077:28079 Coq.Init.Datatypes <> snd def
R28082:28084 Coq.Init.Datatypes <> snd def
R28086:28086 CertiOS.framework.proof.invariant_prop <> p var
R28096:28100 CertiOS.framework.logic.assertion <> Atrue constr
R27866:27868 Coq.Init.Logic <> :type_scope:x_'='_x not
R27842:27844 CertiOS.framework.auxlibs.Maps <> set meth
R27856:27861 CertiOS.framework.model.language <> oscurt constr
R27863:27864 CertiOS.framework.proof.invariant_prop <> t' var
R27848:27853 CertiOS.framework.model.language <> curtid constr
R27846:27846 CertiOS.framework.proof.invariant_prop <> O var
R27869:27870 CertiOS.framework.proof.invariant_prop <> O' var
R27817:27819 Coq.Init.Logic <> :type_scope:x_'='_x not
R27769:27772 CertiOS.framework.model.opsem <> load def
R27809:27809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27811:27812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27816:27816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27810:27810 CertiOS.framework.proof.invariant_prop <> l var
R27785:27791 CertiOS.framework.model.opsem <> get_mem def
R27794:27801 CertiOS.framework.model.language <> get_smem def
R27803:27805 CertiOS.framework.proof.invariant_prop <> tst var
R27775:27778 CertiOS.framework.model.memory <> Tptr constr
R27780:27781 CertiOS.framework.proof.invariant_prop <> tp var
R27820:27823 Coq.Init.Datatypes <> Some constr
R27826:27829 CertiOS.framework.model.memory <> Vptr constr
R27831:27832 CertiOS.framework.proof.invariant_prop <> t' var
R27741:27743 Coq.Init.Logic <> :type_scope:x_'='_x not
R27703:27712 CertiOS.framework.model.memory EnvMod get def
R27740:27740 CertiOS.framework.proof.invariant_prop <> x var
R27715:27722 CertiOS.framework.model.opsem <> get_genv def
R27725:27732 CertiOS.framework.model.language <> get_smem def
R27734:27736 CertiOS.framework.proof.invariant_prop <> tst var
R27744:27747 Coq.Init.Datatypes <> Some constr
R27749:27749 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27751:27752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27760:27760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27750:27750 CertiOS.framework.proof.invariant_prop <> l var
R27753:27756 CertiOS.framework.model.memory <> Tptr constr
R27758:27759 CertiOS.framework.proof.invariant_prop <> tp var
R27648:27652 CertiOS.framework.logic.assertion <> absop def
R27667:27670 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R27655:27655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27659:27660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27662:27663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27666:27666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27656:27658 CertiOS.framework.proof.invariant_prop <> tst var
R27661:27661 CertiOS.framework.proof.invariant_prop <> O var
R27664:27665 CertiOS.framework.proof.invariant_prop <> ab var
R27671:27675 CertiOS.framework.logic.assertion <> SWPRE def
R27693:27693 CertiOS.framework.proof.invariant_prop <> t var
R27691:27691 CertiOS.framework.proof.invariant_prop <> x var
R27678:27680 Coq.Init.Datatypes <> snd def
R27683:27685 Coq.Init.Datatypes <> snd def
R27687:27687 CertiOS.framework.proof.invariant_prop <> p var
R27609:27611 Coq.Init.Logic <> :type_scope:x_'='_x not
R27597:27599 CertiOS.framework.auxlibs.Maps <> get meth
R27603:27608 CertiOS.framework.model.language <> curtid constr
R27601:27601 CertiOS.framework.proof.invariant_prop <> O var
R27612:27615 Coq.Init.Datatypes <> Some constr
R27618:27623 CertiOS.framework.model.language <> oscurt constr
R27625:27625 CertiOS.framework.proof.invariant_prop <> t var
R27579:27581 Coq.Init.Logic <> :type_scope:x_'='_x not
R27563:27574 CertiOS.framework.model.language TasksMod get def
R27578:27578 CertiOS.framework.proof.invariant_prop <> t var
R27576:27576 CertiOS.framework.proof.invariant_prop <> T var
R27582:27585 Coq.Init.Datatypes <> Some constr
R27587:27588 CertiOS.framework.proof.invariant_prop <> Cl var
R27532:27540 CertiOS.framework.logic.inferules <> GoodSched def
R27543:27545 Coq.Init.Datatypes <> snd def
R27548:27550 Coq.Init.Datatypes <> snd def
R27552:27552 CertiOS.framework.proof.invariant_prop <> p var
R28187:28194 CertiOS.framework.model.language <> get_smem def
R28187:28194 CertiOS.framework.model.language <> get_smem def
R28260:28265 CertiOS.framework.proof.invariant_prop <> absopx def
R28260:28265 CertiOS.framework.proof.invariant_prop <> absopx def
R28378:28380 CertiOS.framework.auxlibs.Maps <> get meth
R28459:28459 Coq.Init.Logic <> :type_scope:x_'='_x not
R28459:28459 Coq.Init.Logic <> :type_scope:x_'='_x not
R28474:28487 CertiOS.framework.proof.invariant_prop <> mapsto_load_eq thm
R28474:28487 CertiOS.framework.proof.invariant_prop <> mapsto_load_eq thm
R28579:28587 CertiOS.framework.model.opsem <> hswi_step constr
R28579:28587 CertiOS.framework.model.opsem <> hswi_step constr
R28685:28687 CertiOS.framework.auxlibs.Maps <> get meth
R28707:28726 CertiOS.framework.model.language TasksMod set_a_get_a thm
R28707:28726 CertiOS.framework.model.language TasksMod set_a_get_a thm
R28707:28726 CertiOS.framework.model.language TasksMod set_a_get_a thm
R28707:28726 CertiOS.framework.model.language TasksMod set_a_get_a thm
R28744:28762 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R28744:28762 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R28778:28794 CertiOS.framework.proof.invariant_prop <> tasks_set_eq_set2 thm
R28778:28794 CertiOS.framework.proof.invariant_prop <> tasks_set_eq_set2 thm
R28832:28837 CertiOS.framework.logic.assertion <> empmem syndef
R28832:28837 CertiOS.framework.logic.assertion <> empmem syndef
R28906:28913 CertiOS.framework.model.language <> get_smem def
R28930:28936 CertiOS.framework.model.opsem <> get_mem def
R28953:28960 CertiOS.framework.model.opsem <> get_genv def
R28977:28979 CertiOS.framework.auxlibs.Maps <> get meth
R29045:29061 CertiOS.framework.auxlibs.Integers Int unsigned_zero thm
R29045:29061 CertiOS.framework.auxlibs.Integers Int unsigned_zero thm
R29045:29061 CertiOS.framework.auxlibs.Integers Int unsigned_zero thm
R29079:29092 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R29079:29092 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R29110:29122 CertiOS.framework.proof.lmachLib <> load_mem_mono thm
R29110:29122 CertiOS.framework.proof.lmachLib <> load_mem_mono thm
R29192:29201 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R29192:29201 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 29236:29262 <> OSAbstMod_join_exists_merge
R29316:29323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29324:29330 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R29333:29334 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R29335:29348 CertiOS.framework.model.language OSAbstMod join def
R29357:29371 CertiOS.framework.model.language OSAbstMod merge def
R29377:29377 CertiOS.framework.proof.invariant_prop <> O var
R29373:29375 CertiOS.framework.proof.invariant_prop <> O12 var
R29350:29351 CertiOS.framework.proof.invariant_prop <> O1 var
R29292:29305 CertiOS.framework.model.language OSAbstMod join def
R29313:29315 CertiOS.framework.proof.invariant_prop <> O12 var
R29310:29311 CertiOS.framework.proof.invariant_prop <> O2 var
R29307:29308 CertiOS.framework.proof.invariant_prop <> O1 var
R29412:29436 CertiOS.framework.model.language OSAbstMod sub_exists_join thm
R29412:29436 CertiOS.framework.model.language OSAbstMod sub_exists_join thm
R29447:29466 CertiOS.framework.model.language OSAbstMod join_sub_l thm
R29447:29466 CertiOS.framework.model.language OSAbstMod join_sub_l thm
R29512:29527 CertiOS.framework.model.language OSAbstMod lookup def
R29545:29563 CertiOS.framework.model.language OSAbstMod merge_sem thm
R29545:29563 CertiOS.framework.model.language OSAbstMod merge_sem thm
R29545:29563 CertiOS.framework.model.language OSAbstMod merge_sem thm
R29639:29651 CertiOS.framework.model.language OSAbstMod get def
R29639:29651 CertiOS.framework.model.language OSAbstMod get def
prf 29678:29688 <> swpre_prop1
R29722:29722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29782:29790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29821:29829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29894:29894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29842:29846 CertiOS.framework.logic.assertion <> absop def
R29878:29881 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R29849:29849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29851:29852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29873:29874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29877:29877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29850:29850 CertiOS.framework.proof.invariant_prop <> o var
R29853:29867 CertiOS.framework.model.language OSAbstMod merge def
R29872:29872 CertiOS.framework.proof.invariant_prop <> O var
R29869:29870 CertiOS.framework.proof.invariant_prop <> O' var
R29875:29876 CertiOS.framework.proof.invariant_prop <> ab var
R29882:29886 CertiOS.framework.logic.assertion <> SWPRE def
R29893:29893 CertiOS.framework.proof.invariant_prop <> t var
R29891:29891 CertiOS.framework.proof.invariant_prop <> x var
R29888:29889 CertiOS.framework.proof.invariant_prop <> sd var
R29791:29798 CertiOS.framework.auxlibs.Maps <> sub def
R29803:29805 Coq.Init.Datatypes <> snd def
R29808:29810 Coq.Init.Datatypes <> fst def
R29813:29815 Coq.Init.Datatypes <> fst def
R29817:29817 CertiOS.framework.proof.invariant_prop <> o var
R29800:29800 CertiOS.framework.proof.invariant_prop <> M var
R29735:29739 CertiOS.framework.logic.assertion <> absop def
R29766:29769 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R29742:29742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29757:29758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29761:29762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29765:29765 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29743:29752 CertiOS.framework.logic.assertion <> substaskst def
R29756:29756 CertiOS.framework.proof.invariant_prop <> M var
R29754:29754 CertiOS.framework.proof.invariant_prop <> o var
R29759:29760 CertiOS.framework.proof.invariant_prop <> O' var
R29763:29764 CertiOS.framework.proof.invariant_prop <> ab var
R29770:29774 CertiOS.framework.logic.assertion <> SWPRE def
R29781:29781 CertiOS.framework.proof.invariant_prop <> t var
R29779:29779 CertiOS.framework.proof.invariant_prop <> x var
R29776:29777 CertiOS.framework.proof.invariant_prop <> sd var
R30084:30090 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R30093:30094 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R30095:30098 CertiOS.framework.auxlibs.Maps <> join meth
R30084:30090 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R30093:30094 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R30095:30098 CertiOS.framework.auxlibs.Maps <> join meth
R30118:30132 CertiOS.tactics.basetac.join_lib <> sub_exists_join thm
R30118:30132 CertiOS.tactics.basetac.join_lib <> sub_exists_join thm
R30169:30180 CertiOS.tactics.basetac.join_lib <> join_assoc_l thm
R30169:30180 CertiOS.tactics.basetac.join_lib <> join_assoc_l thm
R30210:30236 CertiOS.framework.proof.invariant_prop <> OSAbstMod_join_exists_merge thm
R30210:30236 CertiOS.framework.proof.invariant_prop <> OSAbstMod_join_exists_merge thm
R30262:30273 CertiOS.tactics.basetac.join_lib <> join_assoc_l thm
R30262:30273 CertiOS.tactics.basetac.join_lib <> join_assoc_l thm
R30314:30319 CertiOS.framework.logic.assertion <> empmem syndef
R30314:30319 CertiOS.framework.logic.assertion <> empmem syndef
R30385:30390 CertiOS.framework.logic.assertion <> empmem syndef
R30396:30402 CertiOS.framework.logic.assertion <> empabst syndef
R30385:30390 CertiOS.framework.logic.assertion <> empmem syndef
R30396:30402 CertiOS.framework.logic.assertion <> empabst syndef
R30492:30498 CertiOS.framework.logic.assertion <> empabst syndef
R30492:30498 CertiOS.framework.logic.assertion <> empabst syndef
R30551:30556 CertiOS.framework.logic.assertion <> empmem syndef
R30551:30556 CertiOS.framework.logic.assertion <> empmem syndef
R30576:30582 CertiOS.framework.logic.assertion <> empabst syndef
R30584:30590 CertiOS.framework.logic.assertion <> empabst syndef
R30592:30598 CertiOS.framework.logic.assertion <> empabst syndef
R30576:30582 CertiOS.framework.logic.assertion <> empabst syndef
R30584:30590 CertiOS.framework.logic.assertion <> empabst syndef
R30592:30598 CertiOS.framework.logic.assertion <> empabst syndef
R30673:30679 CertiOS.framework.logic.assertion <> empabst syndef
R30673:30679 CertiOS.framework.logic.assertion <> empabst syndef
R30730:30735 CertiOS.framework.logic.assertion <> empmem syndef
R30745:30751 CertiOS.framework.logic.assertion <> empabst syndef
R30753:30759 CertiOS.framework.logic.assertion <> empabst syndef
R30761:30767 CertiOS.framework.logic.assertion <> empabst syndef
R30730:30735 CertiOS.framework.logic.assertion <> empmem syndef
R30745:30751 CertiOS.framework.logic.assertion <> empabst syndef
R30753:30759 CertiOS.framework.logic.assertion <> empabst syndef
R30761:30767 CertiOS.framework.logic.assertion <> empabst syndef
prf 30845:30854 <> swpre_prop
R30871:30876 CertiOS.framework.model.language <> taskst def
R30889:30891 CertiOS.framework.model.memory <> mem def
R30909:30911 CertiOS.framework.model.memory <> var def
R30920:30926 CertiOS.framework.model.language <> ossched def
R30936:30936 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30996:31004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31035:31042 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31056:31063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31076:31080 CertiOS.framework.logic.assertion <> absop def
R31093:31096 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R31083:31083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31085:31086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31088:31089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31092:31092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31084:31084 CertiOS.framework.proof.invariant_prop <> o var
R31087:31087 CertiOS.framework.proof.invariant_prop <> O var
R31090:31091 CertiOS.framework.proof.invariant_prop <> ab var
R31097:31101 CertiOS.framework.logic.assertion <> SWPRE def
R31108:31108 CertiOS.framework.proof.invariant_prop <> t var
R31106:31106 CertiOS.framework.proof.invariant_prop <> x var
R31103:31104 CertiOS.framework.proof.invariant_prop <> sd var
R31043:31050 CertiOS.framework.auxlibs.Maps <> sub def
R31055:31055 CertiOS.framework.proof.invariant_prop <> O var
R31052:31053 CertiOS.framework.proof.invariant_prop <> O' var
R31005:31012 CertiOS.framework.auxlibs.Maps <> sub def
R31017:31019 Coq.Init.Datatypes <> snd def
R31022:31024 Coq.Init.Datatypes <> fst def
R31027:31029 Coq.Init.Datatypes <> fst def
R31031:31031 CertiOS.framework.proof.invariant_prop <> o var
R31014:31014 CertiOS.framework.proof.invariant_prop <> M var
R30949:30953 CertiOS.framework.logic.assertion <> absop def
R30980:30983 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R30956:30956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30971:30972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30975:30976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30979:30979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30957:30966 CertiOS.framework.logic.assertion <> substaskst def
R30970:30970 CertiOS.framework.proof.invariant_prop <> M var
R30968:30968 CertiOS.framework.proof.invariant_prop <> o var
R30973:30974 CertiOS.framework.proof.invariant_prop <> O' var
R30977:30978 CertiOS.framework.proof.invariant_prop <> ab var
R30984:30988 CertiOS.framework.logic.assertion <> SWPRE def
R30995:30995 CertiOS.framework.proof.invariant_prop <> t var
R30993:30993 CertiOS.framework.proof.invariant_prop <> x var
R30990:30991 CertiOS.framework.proof.invariant_prop <> sd var
R31139:31149 CertiOS.framework.proof.invariant_prop <> swpre_prop1 thm
R31156:31161 CertiOS.framework.proof.invariant_prop <> absopx def
R31139:31149 CertiOS.framework.proof.invariant_prop <> swpre_prop1 thm
R31156:31161 CertiOS.framework.proof.invariant_prop <> absopx def
R31182:31186 CertiOS.framework.auxlibs.Maps <> minus meth
R31212:31236 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_merge_minus_eq thm
R31212:31236 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_merge_minus_eq thm
R31212:31236 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_merge_minus_eq thm
R31212:31236 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_merge_minus_eq thm
prf 31264:31271 <> part_sub
R31312:31315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31341:31344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31345:31352 CertiOS.framework.auxlibs.Maps <> sub def
R31357:31357 CertiOS.framework.proof.invariant_prop <> M var
R31354:31355 CertiOS.framework.proof.invariant_prop <> Mc var
R31316:31332 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R31339:31340 CertiOS.framework.proof.invariant_prop <> Mc var
R31337:31337 CertiOS.framework.proof.invariant_prop <> t var
R31334:31335 CertiOS.framework.proof.invariant_prop <> Tm var
R31300:31304 CertiOS.framework.proof.auxdef <> partM ind
R31310:31311 CertiOS.framework.proof.invariant_prop <> Tm var
R31308:31308 CertiOS.framework.proof.invariant_prop <> T var
R31306:31306 CertiOS.framework.proof.invariant_prop <> M var
R31418:31428 CertiOS.framework.auxlibs.Modules tidspec beq def
R31418:31428 CertiOS.framework.auxlibs.Modules tidspec beq def
R31455:31473 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R31455:31473 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R31547:31556 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R31547:31556 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R31576:31592 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R31595:31610 CertiOS.framework.proof.auxdef TMSpecMod remove def
R31576:31592 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R31595:31610 CertiOS.framework.proof.auxdef TMSpecMod remove def
R31635:31659 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R31635:31659 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R31676:31696 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R31676:31696 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R31762:31769 CertiOS.framework.auxlibs.Maps <> sub def
R31762:31769 CertiOS.framework.auxlibs.Maps <> sub def
R31787:31796 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R31787:31796 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R31815:31823 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R31815:31823 CertiOS.tactics.basetac.join_lib <> sub_trans thm
prf 31846:31854 <> parto_sub
R31895:31898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31924:31927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31928:31935 CertiOS.framework.auxlibs.Maps <> sub def
R31940:31940 CertiOS.framework.proof.invariant_prop <> M var
R31937:31938 CertiOS.framework.proof.invariant_prop <> Mc var
R31899:31915 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R31922:31923 CertiOS.framework.proof.invariant_prop <> Mc var
R31920:31920 CertiOS.framework.proof.invariant_prop <> t var
R31917:31918 CertiOS.framework.proof.invariant_prop <> Tm var
R31883:31887 CertiOS.framework.proof.auxdef <> partO ind
R31893:31894 CertiOS.framework.proof.invariant_prop <> Tm var
R31891:31891 CertiOS.framework.proof.invariant_prop <> T var
R31889:31889 CertiOS.framework.proof.invariant_prop <> M var
R32001:32011 CertiOS.framework.auxlibs.Modules tidspec beq def
R32001:32011 CertiOS.framework.auxlibs.Modules tidspec beq def
R32038:32056 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R32038:32056 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R32130:32139 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R32130:32139 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R32159:32175 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R32178:32193 CertiOS.framework.proof.auxdef TOSpecMod remove def
R32159:32175 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R32178:32193 CertiOS.framework.proof.auxdef TOSpecMod remove def
R32218:32242 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R32218:32242 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R32259:32279 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R32259:32279 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R32345:32352 CertiOS.framework.auxlibs.Maps <> sub def
R32345:32352 CertiOS.framework.auxlibs.Maps <> sub def
R32370:32379 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R32370:32379 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R32398:32406 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R32398:32406 CertiOS.tactics.basetac.join_lib <> sub_trans thm
prf 32429:32451 <> abst_join_join_merge_ex
R32503:32510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32511:32517 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R32519:32520 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R32521:32534 CertiOS.framework.model.language OSAbstMod join def
R32542:32556 CertiOS.framework.model.language OSAbstMod merge def
R32561:32562 CertiOS.framework.proof.invariant_prop <> x4 var
R32558:32559 CertiOS.framework.proof.invariant_prop <> x3 var
R32536:32537 CertiOS.framework.proof.invariant_prop <> x1 var
R32480:32493 CertiOS.framework.model.language OSAbstMod join def
R32501:32502 CertiOS.framework.proof.invariant_prop <> x3 var
R32498:32499 CertiOS.framework.proof.invariant_prop <> x2 var
R32495:32496 CertiOS.framework.proof.invariant_prop <> x1 var
R32593:32607 CertiOS.framework.model.language OSAbstMod minus def
R32610:32624 CertiOS.framework.model.language OSAbstMod merge def
R32593:32607 CertiOS.framework.model.language OSAbstMod minus def
R32610:32624 CertiOS.framework.model.language OSAbstMod merge def
R32684:32702 CertiOS.framework.model.language OSAbstMod minus_sem thm
R32684:32702 CertiOS.framework.model.language OSAbstMod minus_sem thm
R32684:32702 CertiOS.framework.model.language OSAbstMod minus_sem thm
R32720:32738 CertiOS.framework.model.language OSAbstMod merge_sem thm
R32720:32738 CertiOS.framework.model.language OSAbstMod merge_sem thm
R32720:32738 CertiOS.framework.model.language OSAbstMod merge_sem thm
R32720:32738 CertiOS.framework.model.language OSAbstMod merge_sem thm
R32720:32738 CertiOS.framework.model.language OSAbstMod merge_sem thm
R32752:32764 CertiOS.framework.model.language OSAbstMod get def
R32786:32798 CertiOS.framework.model.language OSAbstMod get def
R32820:32832 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32752:32764 CertiOS.framework.model.language OSAbstMod get def
R32786:32798 CertiOS.framework.model.language OSAbstMod get def
R32786:32798 CertiOS.framework.model.language OSAbstMod get def
R32820:32832 CertiOS.framework.model.language OSAbstMod get def
R32820:32832 CertiOS.framework.model.language OSAbstMod get def
R32820:32832 CertiOS.framework.model.language OSAbstMod get def
R32820:32832 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
R32854:32866 CertiOS.framework.model.language OSAbstMod get def
prf 32907:32923 <> lemma_trans_temp1
R32972:32979 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32980:32980 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33026:33034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33035:33035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33100:33109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33165:33165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33122:33126 CertiOS.framework.logic.assertion <> absop def
R33139:33143 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33129:33129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33131:33132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33134:33135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33138:33138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33130:33130 CertiOS.framework.proof.invariant_prop <> o var
R33133:33133 CertiOS.framework.proof.invariant_prop <> O var
R33136:33137 CertiOS.framework.proof.invariant_prop <> ab var
R33156:33159 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R33144:33149 CertiOS.framework.logic.assertion <> AHprio constr
R33154:33155 CertiOS.framework.proof.invariant_prop <> t' var
R33151:33152 CertiOS.framework.proof.invariant_prop <> sc var
R33160:33164 CertiOS.framework.logic.assertion <> Atrue constr
R33048:33052 CertiOS.framework.logic.assertion <> absop def
R33075:33078 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33055:33055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33058:33059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33070:33071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33074:33074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33056:33057 CertiOS.framework.proof.invariant_prop <> o' var
R33060:33064 CertiOS.framework.auxlibs.Maps <> merge meth
R33068:33069 CertiOS.framework.proof.invariant_prop <> O' var
R33066:33066 CertiOS.framework.proof.invariant_prop <> O var
R33072:33073 CertiOS.framework.proof.invariant_prop <> ab var
R33091:33094 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R33079:33084 CertiOS.framework.logic.assertion <> AHprio constr
R33089:33090 CertiOS.framework.proof.invariant_prop <> t' var
R33086:33087 CertiOS.framework.proof.invariant_prop <> sc var
R33095:33099 CertiOS.framework.logic.assertion <> Atrue constr
R32993:32997 CertiOS.framework.logic.assertion <> absop def
R33010:33013 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33000:33000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33002:33003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33005:33006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33009:33009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33001:33001 CertiOS.framework.proof.invariant_prop <> o var
R33004:33004 CertiOS.framework.proof.invariant_prop <> O var
R33007:33008 CertiOS.framework.proof.invariant_prop <> ab var
R33014:33018 CertiOS.framework.logic.assertion <> SWPRE def
R33025:33025 CertiOS.framework.proof.invariant_prop <> t var
R33023:33023 CertiOS.framework.proof.invariant_prop <> x var
R33020:33021 CertiOS.framework.proof.invariant_prop <> sc var
R32960:32968 CertiOS.framework.logic.inferules <> GoodSched def
R32970:32971 CertiOS.framework.proof.invariant_prop <> sc var
R33302:33307 CertiOS.framework.logic.assertion <> empmem syndef
R33302:33307 CertiOS.framework.logic.assertion <> empmem syndef
R33464:33468 CertiOS.framework.auxlibs.Maps <> merge meth
R33464:33468 CertiOS.framework.auxlibs.Maps <> merge meth
R33510:33532 CertiOS.framework.proof.invariant_prop <> abst_join_join_merge_ex thm
R33510:33532 CertiOS.framework.proof.invariant_prop <> abst_join_join_merge_ex thm
prf 33587:33602 <> lemma_trans_temp
R33651:33658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33659:33659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33705:33713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33727:33734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33735:33735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33792:33801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33857:33857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33814:33818 CertiOS.framework.logic.assertion <> absop def
R33831:33835 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33821:33821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33823:33824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33826:33827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33830:33830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33822:33822 CertiOS.framework.proof.invariant_prop <> o var
R33825:33825 CertiOS.framework.proof.invariant_prop <> O var
R33828:33829 CertiOS.framework.proof.invariant_prop <> ab var
R33848:33851 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R33836:33841 CertiOS.framework.logic.assertion <> AHprio constr
R33846:33847 CertiOS.framework.proof.invariant_prop <> t' var
R33843:33844 CertiOS.framework.proof.invariant_prop <> sc var
R33852:33856 CertiOS.framework.logic.assertion <> Atrue constr
R33748:33752 CertiOS.framework.logic.assertion <> absop def
R33767:33770 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33755:33755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33758:33759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33762:33763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33766:33766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33756:33757 CertiOS.framework.proof.invariant_prop <> o' var
R33760:33761 CertiOS.framework.proof.invariant_prop <> O' var
R33764:33765 CertiOS.framework.proof.invariant_prop <> ab var
R33783:33786 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R33771:33776 CertiOS.framework.logic.assertion <> AHprio constr
R33781:33782 CertiOS.framework.proof.invariant_prop <> t' var
R33778:33779 CertiOS.framework.proof.invariant_prop <> sc var
R33787:33791 CertiOS.framework.logic.assertion <> Atrue constr
R33714:33721 CertiOS.framework.auxlibs.Maps <> sub def
R33725:33726 CertiOS.framework.proof.invariant_prop <> O' var
R33723:33723 CertiOS.framework.proof.invariant_prop <> O var
R33672:33676 CertiOS.framework.logic.assertion <> absop def
R33689:33692 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R33679:33679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33681:33682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33684:33685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33688:33688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33680:33680 CertiOS.framework.proof.invariant_prop <> o var
R33683:33683 CertiOS.framework.proof.invariant_prop <> O var
R33686:33687 CertiOS.framework.proof.invariant_prop <> ab var
R33693:33697 CertiOS.framework.logic.assertion <> SWPRE def
R33704:33704 CertiOS.framework.proof.invariant_prop <> t var
R33702:33702 CertiOS.framework.proof.invariant_prop <> x var
R33699:33700 CertiOS.framework.proof.invariant_prop <> sc var
R33639:33647 CertiOS.framework.logic.inferules <> GoodSched def
R33649:33650 CertiOS.framework.proof.invariant_prop <> sc var
R33914:33933 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_eq_merge thm
R33914:33933 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_eq_merge thm
R33959:33975 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp1 thm
R33959:33975 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp1 thm
prf 33998:34015 <> parto_task_get_set
R34058:34065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34082:34089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34090:34094 CertiOS.framework.proof.auxdef <> partO ind
R34111:34112 CertiOS.framework.proof.invariant_prop <> To var
R34099:34101 CertiOS.framework.auxlibs.Maps <> set meth
R34107:34108 CertiOS.framework.proof.invariant_prop <> C' var
R34105:34105 CertiOS.framework.proof.invariant_prop <> t var
R34103:34103 CertiOS.framework.proof.invariant_prop <> T var
R34096:34096 CertiOS.framework.proof.invariant_prop <> O var
R34073:34075 Coq.Init.Logic <> :type_scope:x_'='_x not
R34066:34068 CertiOS.framework.auxlibs.Maps <> get meth
R34072:34072 CertiOS.framework.proof.invariant_prop <> t var
R34070:34070 CertiOS.framework.proof.invariant_prop <> T var
R34076:34079 Coq.Init.Datatypes <> Some constr
R34081:34081 CertiOS.framework.proof.invariant_prop <> C var
R34046:34050 CertiOS.framework.proof.auxdef <> partO ind
R34056:34057 CertiOS.framework.proof.invariant_prop <> To var
R34054:34054 CertiOS.framework.proof.invariant_prop <> T var
R34052:34052 CertiOS.framework.proof.invariant_prop <> O var
R34156:34162 CertiOS.framework.proof.auxdef <> parto_O constr
R34156:34162 CertiOS.framework.proof.auxdef <> parto_O constr
R34180:34186 CertiOS.framework.proof.auxdef <> parto_S constr
R34180:34186 CertiOS.framework.proof.auxdef <> parto_S constr
prf 34208:34217 <> new_part_o
R34274:34281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34307:34314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34329:34336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34337:34341 CertiOS.framework.proof.auxdef <> partO ind
R34371:34383 CertiOS.framework.proof.auxdef TOSpecMod put def
R34390:34390 CertiOS.framework.proof.invariant_prop <> O var
R34388:34388 CertiOS.framework.proof.invariant_prop <> t var
R34385:34386 CertiOS.framework.proof.invariant_prop <> To var
R34367:34368 CertiOS.framework.proof.invariant_prop <> Tl var
R34344:34348 CertiOS.framework.auxlibs.Maps <> merge meth
R34353:34357 CertiOS.framework.auxlibs.Maps <> minus meth
R34362:34363 CertiOS.framework.proof.invariant_prop <> Oc var
R34359:34360 CertiOS.framework.proof.invariant_prop <> Ol var
R34350:34350 CertiOS.framework.proof.invariant_prop <> O var
R34315:34319 CertiOS.framework.proof.auxdef <> partO ind
R34327:34328 CertiOS.framework.proof.invariant_prop <> To var
R34324:34325 CertiOS.framework.proof.invariant_prop <> Tl var
R34321:34322 CertiOS.framework.proof.invariant_prop <> Ol var
R34282:34298 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R34305:34306 CertiOS.framework.proof.invariant_prop <> Oc var
R34303:34303 CertiOS.framework.proof.invariant_prop <> t var
R34300:34301 CertiOS.framework.proof.invariant_prop <> To var
R34250:34257 CertiOS.framework.auxlibs.Maps <> disjoint def
R34262:34266 CertiOS.framework.auxlibs.Maps <> minus meth
R34271:34272 CertiOS.framework.proof.invariant_prop <> Oc var
R34268:34269 CertiOS.framework.proof.invariant_prop <> Ol var
R34259:34259 CertiOS.framework.proof.invariant_prop <> O var
R34453:34463 CertiOS.framework.auxlibs.Modules tidspec beq def
R34453:34463 CertiOS.framework.auxlibs.Modules tidspec beq def
R34490:34508 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R34490:34508 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R34585:34585 Coq.Init.Logic <> :type_scope:x_'='_x not
R34607:34611 Coq.Init.Logic <> :type_scope:x_'='_x not
R34653:34653 Coq.Init.Logic <> :type_scope:x_'='_x not
R34586:34601 CertiOS.framework.proof.auxdef TOSpecMod remove def
R34612:34627 CertiOS.framework.proof.auxdef TOSpecMod remove def
R34630:34642 CertiOS.framework.proof.auxdef TOSpecMod put def
R34585:34585 Coq.Init.Logic <> :type_scope:x_'='_x not
R34607:34611 Coq.Init.Logic <> :type_scope:x_'='_x not
R34653:34653 Coq.Init.Logic <> :type_scope:x_'='_x not
R34586:34601 CertiOS.framework.proof.auxdef TOSpecMod remove def
R34612:34627 CertiOS.framework.proof.auxdef TOSpecMod remove def
R34630:34642 CertiOS.framework.proof.auxdef TOSpecMod put def
R34668:34694 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R34668:34694 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R34668:34694 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R34742:34744 Coq.Init.Logic <> :type_scope:x_'='_x not
R34733:34737 CertiOS.framework.auxlibs.Maps <> minus meth
R34742:34744 Coq.Init.Logic <> :type_scope:x_'='_x not
R34733:34737 CertiOS.framework.auxlibs.Maps <> minus meth
R34759:34778 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus_eq thm
R34759:34778 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus_eq thm
R34810:34814 CertiOS.framework.auxlibs.Maps <> minus meth
R34863:34866 CertiOS.framework.auxlibs.Maps <> join meth
R34874:34878 CertiOS.framework.auxlibs.Maps <> merge meth
R34863:34866 CertiOS.framework.auxlibs.Maps <> join meth
R34874:34878 CertiOS.framework.auxlibs.Maps <> merge meth
R34897:34911 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R34897:34911 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R34929:34935 CertiOS.framework.proof.auxdef <> parto_S constr
R34929:34935 CertiOS.framework.proof.auxdef <> parto_S constr
R34953:34972 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R34953:34972 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R34986:34993 CertiOS.framework.auxlibs.Maps <> disjoint def
R34998:35002 CertiOS.framework.auxlibs.Maps <> minus meth
R34986:34993 CertiOS.framework.auxlibs.Maps <> disjoint def
R34998:35002 CertiOS.framework.auxlibs.Maps <> minus meth
R35022:35062 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_minus_disjoint_minus thm
R35022:35062 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_minus_disjoint_minus thm
R35083:35099 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R35102:35117 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35083:35099 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R35102:35117 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35141:35165 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R35141:35165 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R35182:35202 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R35182:35202 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R35296:35298 Coq.Init.Logic <> :type_scope:x_'='_x not
R35254:35266 CertiOS.framework.proof.auxdef TOSpecMod put def
R35269:35284 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35299:35314 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35317:35329 CertiOS.framework.proof.auxdef TOSpecMod put def
R35296:35298 Coq.Init.Logic <> :type_scope:x_'='_x not
R35254:35266 CertiOS.framework.proof.auxdef TOSpecMod put def
R35269:35284 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35299:35314 CertiOS.framework.proof.auxdef TOSpecMod remove def
R35317:35329 CertiOS.framework.proof.auxdef TOSpecMod put def
R35354:35384 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R35354:35384 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R35354:35384 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R35354:35384 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R35401:35421 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R35401:35421 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R35479:35482 CertiOS.framework.auxlibs.Maps <> join meth
R35511:35515 CertiOS.framework.auxlibs.Maps <> merge meth
R35520:35524 CertiOS.framework.auxlibs.Maps <> minus meth
R35487:35491 CertiOS.framework.auxlibs.Maps <> merge meth
R35496:35500 CertiOS.framework.auxlibs.Maps <> minus meth
R35479:35482 CertiOS.framework.auxlibs.Maps <> join meth
R35511:35515 CertiOS.framework.auxlibs.Maps <> merge meth
R35520:35524 CertiOS.framework.auxlibs.Maps <> minus meth
R35487:35491 CertiOS.framework.auxlibs.Maps <> merge meth
R35496:35500 CertiOS.framework.auxlibs.Maps <> minus meth
R35545:35552 CertiOS.framework.auxlibs.Maps <> disjoint def
R35545:35552 CertiOS.framework.auxlibs.Maps <> disjoint def
R35584:35595 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R35584:35595 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R35613:35624 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35613:35624 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35645:35654 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R35645:35654 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R35677:35680 CertiOS.framework.auxlibs.Maps <> join meth
R35699:35703 CertiOS.framework.auxlibs.Maps <> minus meth
R35685:35689 CertiOS.framework.auxlibs.Maps <> minus meth
R35677:35680 CertiOS.framework.auxlibs.Maps <> join meth
R35699:35703 CertiOS.framework.auxlibs.Maps <> minus meth
R35685:35689 CertiOS.framework.auxlibs.Maps <> minus meth
R35722:35752 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_minus_join thm
R35722:35752 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_minus_join thm
R35769:35780 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35769:35780 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35799:35806 CertiOS.framework.auxlibs.Maps <> disjoint def
R35799:35806 CertiOS.framework.auxlibs.Maps <> disjoint def
R35843:35854 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35843:35854 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R35873:35916 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_join_disjoint_disjoint thm
R35873:35916 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_join_disjoint_disjoint thm
R35935:35961 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge1 thm
R35935:35961 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_merge1 thm
R35980:35986 CertiOS.framework.proof.auxdef <> parto_S constr
R35980:35986 CertiOS.framework.proof.auxdef <> parto_S constr
R36006:36031 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R36006:36031 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R36006:36031 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R36006:36031 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R36048:36068 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R36048:36068 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 36096:36104 <> sat_split
R36188:36195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36196:36202 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R36205:36205 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R36208:36208 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R36211:36211 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R36214:36221 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R36234:36237 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36222:36225 CertiOS.framework.auxlibs.Maps <> join meth
R36233:36233 CertiOS.framework.proof.invariant_prop <> M var
R36250:36259 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36238:36241 CertiOS.framework.auxlibs.Maps <> join meth
R36249:36249 CertiOS.framework.proof.invariant_prop <> O var
R36296:36305 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36292:36294 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R36260:36260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36262:36263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36265:36266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36269:36270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36274:36275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36280:36281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36284:36285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36291:36291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36261:36261 CertiOS.framework.proof.invariant_prop <> G var
R36264:36264 CertiOS.framework.proof.invariant_prop <> E var
R36271:36273 CertiOS.framework.proof.invariant_prop <> isr var
R36276:36279 CertiOS.framework.proof.invariant_prop <> auxs var
R36286:36290 CertiOS.framework.proof.invariant_prop <> absop var
R36295:36295 CertiOS.framework.proof.invariant_prop <> P var
R36338:36340 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R36306:36306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36308:36309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36311:36312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36315:36316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36320:36321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36326:36327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36330:36331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36337:36337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36307:36307 CertiOS.framework.proof.invariant_prop <> G var
R36310:36310 CertiOS.framework.proof.invariant_prop <> E var
R36317:36319 CertiOS.framework.proof.invariant_prop <> isr var
R36322:36325 CertiOS.framework.proof.invariant_prop <> auxs var
R36332:36336 CertiOS.framework.proof.invariant_prop <> absop var
R36341:36341 CertiOS.framework.proof.invariant_prop <> Q var
R36179:36181 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R36149:36149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36151:36152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36154:36155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36157:36158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36162:36163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36168:36169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36171:36172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36178:36178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36150:36150 CertiOS.framework.proof.invariant_prop <> G var
R36153:36153 CertiOS.framework.proof.invariant_prop <> E var
R36156:36156 CertiOS.framework.proof.invariant_prop <> M var
R36159:36161 CertiOS.framework.proof.invariant_prop <> isr var
R36164:36167 CertiOS.framework.proof.invariant_prop <> auxs var
R36170:36170 CertiOS.framework.proof.invariant_prop <> O var
R36173:36177 CertiOS.framework.proof.invariant_prop <> absop var
R36183:36186 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R36182:36182 CertiOS.framework.proof.invariant_prop <> P var
R36187:36187 CertiOS.framework.proof.invariant_prop <> Q var
prf 36425:36442 <> ptomvallist_mem_eq
R36495:36502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36527:36534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36537:36539 Coq.Init.Logic <> :type_scope:x_'='_x not
R36535:36536 CertiOS.framework.proof.invariant_prop <> m1 var
R36540:36541 CertiOS.framework.proof.invariant_prop <> m2 var
R36503:36513 CertiOS.framework.logic.assertion <> ptomvallist def
R36525:36526 CertiOS.framework.proof.invariant_prop <> m2 var
R36522:36523 CertiOS.framework.proof.invariant_prop <> vl var
R36517:36520 Coq.Init.Datatypes <> true constr
R36515:36515 CertiOS.framework.proof.invariant_prop <> l var
R36471:36481 CertiOS.framework.logic.assertion <> ptomvallist def
R36493:36494 CertiOS.framework.proof.invariant_prop <> m1 var
R36490:36491 CertiOS.framework.proof.invariant_prop <> vl var
R36485:36488 Coq.Init.Datatypes <> true constr
R36483:36483 CertiOS.framework.proof.invariant_prop <> l var
R36618:36628 CertiOS.framework.logic.assertion <> ptomvallist def
R36641:36651 CertiOS.framework.logic.assertion <> ptomvallist def
R36641:36651 CertiOS.framework.logic.assertion <> ptomvallist def
R36689:36695 CertiOS.framework.logic.assertion <> ptomval def
R36751:36761 CertiOS.tactics.basetac.join_lib <> join_unique thm
R36751:36761 CertiOS.tactics.basetac.join_lib <> join_unique thm
prf 36783:36801 <> curlinv_switch_self
R36890:36897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36912:36919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36964:36971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37017:37023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37113:37120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37156:37163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37211:37218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37219:37222 CertiOS.framework.logic.inferules <> satp def
R37249:37255 CertiOS.framework.logic.inferules <> CurLINV def
R37263:37263 CertiOS.framework.proof.invariant_prop <> t var
R37257:37261 CertiOS.framework.proof.invariant_prop <> lasrt var
R37245:37246 CertiOS.framework.proof.invariant_prop <> O' var
R37224:37224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37227:37228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37231:37232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37236:37237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37239:37240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37243:37243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37225:37226 CertiOS.framework.proof.invariant_prop <> ge var
R37229:37230 CertiOS.framework.proof.invariant_prop <> e0 var
R37233:37235 CertiOS.framework.proof.invariant_prop <> Mcn var
R37238:37238 CertiOS.framework.proof.invariant_prop <> i var
R37241:37242 CertiOS.framework.proof.invariant_prop <> l0 var
R37200:37202 Coq.Init.Logic <> :type_scope:x_'='_x not
R37164:37168 CertiOS.framework.model.memory <> store def
R37193:37196 CertiOS.framework.model.memory <> Vptr constr
R37198:37198 CertiOS.framework.proof.invariant_prop <> t var
R37183:37183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37185:37186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37190:37190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37184:37184 CertiOS.framework.proof.invariant_prop <> b var
R37180:37181 CertiOS.framework.proof.invariant_prop <> Mc var
R37171:37174 CertiOS.framework.model.memory <> Tptr constr
R37176:37177 CertiOS.framework.proof.invariant_prop <> tp var
R37203:37206 Coq.Init.Datatypes <> Some constr
R37208:37210 CertiOS.framework.proof.invariant_prop <> Mcn var
R37136:37138 Coq.Init.Logic <> :type_scope:x_'='_x not
R37121:37123 CertiOS.framework.auxlibs.Maps <> get meth
R37128:37135 CertiOS.framework.model.opsem <> OSTCBCur def
R37125:37126 CertiOS.framework.proof.invariant_prop <> ge var
R37139:37142 Coq.Init.Datatypes <> Some constr
R37144:37144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37146:37147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37155:37155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37145:37145 CertiOS.framework.proof.invariant_prop <> b var
R37148:37151 CertiOS.framework.model.memory <> Tptr constr
R37153:37154 CertiOS.framework.proof.invariant_prop <> tp var
R37024:37027 CertiOS.framework.logic.inferules <> satp def
R37063:37065 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R37085:37086 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R37072:37075 Coq.Init.Datatypes <> list ind
R37077:37084 CertiOS.framework.logic.assertion <> logicvar ind
R37103:37106 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R37087:37090 CertiOS.framework.logic.inferules <> LINV def
R37100:37102 CertiOS.framework.proof.invariant_prop <> lg' var
R37098:37098 CertiOS.framework.proof.invariant_prop <> t var
R37092:37096 CertiOS.framework.proof.invariant_prop <> lasrt var
R37107:37111 CertiOS.framework.logic.assertion <> Atrue constr
R37049:37051 CertiOS.framework.proof.invariant_prop <> Olc var
R37029:37029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37032:37033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37036:37037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37040:37041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37043:37044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37047:37047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37030:37031 CertiOS.framework.proof.invariant_prop <> ge var
R37034:37035 CertiOS.framework.proof.invariant_prop <> e0 var
R37038:37039 CertiOS.framework.proof.invariant_prop <> x4 var
R37042:37042 CertiOS.framework.proof.invariant_prop <> i var
R37045:37046 CertiOS.framework.proof.invariant_prop <> l0 var
R36972:36975 CertiOS.framework.logic.inferules <> satp def
R37001:37007 CertiOS.framework.logic.inferules <> CurLINV def
R37015:37015 CertiOS.framework.proof.invariant_prop <> t var
R37009:37013 CertiOS.framework.proof.invariant_prop <> lasrt var
R36997:36998 CertiOS.framework.proof.invariant_prop <> Oc var
R36977:36977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36980:36981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36984:36985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36988:36989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36991:36992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36995:36995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36978:36979 CertiOS.framework.proof.invariant_prop <> ge var
R36982:36983 CertiOS.framework.proof.invariant_prop <> e0 var
R36986:36987 CertiOS.framework.proof.invariant_prop <> Mc var
R36990:36990 CertiOS.framework.proof.invariant_prop <> i var
R36993:36994 CertiOS.framework.proof.invariant_prop <> l0 var
R36920:36923 CertiOS.framework.logic.inferules <> satp def
R36951:36955 CertiOS.framework.logic.assertion <> SWPRE def
R36962:36962 CertiOS.framework.proof.invariant_prop <> t var
R36960:36960 CertiOS.framework.proof.invariant_prop <> x var
R36957:36958 CertiOS.framework.proof.invariant_prop <> sd var
R36946:36948 CertiOS.framework.proof.invariant_prop <> Occ var
R36925:36925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36928:36929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36932:36933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36937:36938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36940:36941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36944:36944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R36926:36927 CertiOS.framework.proof.invariant_prop <> ge var
R36930:36931 CertiOS.framework.proof.invariant_prop <> e0 var
R36934:36936 CertiOS.framework.proof.invariant_prop <> Mc' var
R36939:36939 CertiOS.framework.proof.invariant_prop <> i var
R36942:36943 CertiOS.framework.proof.invariant_prop <> l0 var
R36898:36901 CertiOS.framework.auxlibs.Maps <> join meth
R36910:36911 CertiOS.framework.proof.invariant_prop <> Mc var
R36906:36908 CertiOS.framework.proof.invariant_prop <> Mc' var
R36903:36904 CertiOS.framework.proof.invariant_prop <> x4 var
R36875:36878 CertiOS.framework.auxlibs.Maps <> join meth
R36888:36889 CertiOS.framework.proof.invariant_prop <> O' var
R36884:36886 CertiOS.framework.proof.invariant_prop <> Occ var
R36880:36882 CertiOS.framework.proof.invariant_prop <> Olc var
R37294:37297 CertiOS.framework.logic.inferules <> satp def
R37323:37329 CertiOS.framework.logic.inferules <> CurLINV def
R37299:37299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37302:37303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37306:37307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37310:37311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37313:37314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37317:37317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37294:37297 CertiOS.framework.logic.inferules <> satp def
R37323:37329 CertiOS.framework.logic.inferules <> CurLINV def
R37299:37299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37302:37303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37306:37307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37310:37311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37313:37314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37317:37317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R37363:37366 CertiOS.framework.logic.inferules <> satp def
R37463:37469 CertiOS.framework.logic.inferules <> CurLINV def
R37492:37496 CertiOS.framework.logic.assertion <> SWPRE def
R37560:37561 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37562:37564 Coq.Init.Datatypes <> nil constr
R37560:37561 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37562:37564 Coq.Init.Datatypes <> nil constr
R37587:37595 CertiOS.framework.proof.invariant_prop <> sat_split thm
R37587:37595 CertiOS.framework.proof.invariant_prop <> sat_split thm
R37662:37694 CertiOS.tactics.sepauto.sep_combine_lemmas <> GV_separate_rw thm
R37662:37694 CertiOS.tactics.sepauto.sep_combine_lemmas <> GV_separate_rw thm
R37711:37719 CertiOS.framework.proof.invariant_prop <> sat_split thm
R37711:37719 CertiOS.framework.proof.invariant_prop <> sat_split thm
R37767:37769 CertiOS.framework.auxlibs.Maps <> get meth
R37841:37850 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R37841:37850 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R37866:37870 CertiOS.framework.auxlibs.Maps <> merge meth
R37876:37880 CertiOS.framework.auxlibs.Maps <> merge meth
R37866:37870 CertiOS.framework.auxlibs.Maps <> merge meth
R37876:37880 CertiOS.framework.auxlibs.Maps <> merge meth
R37901:37907 CertiOS.framework.logic.assertion <> empabst syndef
R37901:37907 CertiOS.framework.logic.assertion <> empabst syndef
R37958:37966 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37958:37966 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37984:37998 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_merge3 thm
R37984:37998 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_merge3 thm
R38016:38023 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38016:38023 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38080:38087 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38080:38087 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38104:38111 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38104:38111 CertiOS.tactics.basetac.join_lib <> join_emp thm
R38215:38223 CertiOS.framework.proof.invariant_prop <> sat_split thm
R38215:38223 CertiOS.framework.proof.invariant_prop <> sat_split thm
R38247:38256 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R38247:38256 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R38271:38275 CertiOS.framework.auxlibs.Maps <> merge meth
R38281:38285 CertiOS.framework.auxlibs.Maps <> merge meth
R38271:38275 CertiOS.framework.auxlibs.Maps <> merge meth
R38281:38285 CertiOS.framework.auxlibs.Maps <> merge meth
R38310:38314 CertiOS.framework.auxlibs.Maps <> merge meth
R38310:38314 CertiOS.framework.auxlibs.Maps <> merge meth
R38350:38358 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38350:38358 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38370:38392 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R38370:38392 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R38409:38417 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38409:38417 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38435:38484 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_join_disjoint_merge thm
R38435:38484 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_join_disjoint_merge thm
R38503:38541 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
R38503:38541 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
R38566:38568 Coq.Init.Logic <> :type_scope:x_'='_x not
R38566:38568 Coq.Init.Logic <> :type_scope:x_'='_x not
R38614:38619 CertiOS.framework.proof.invariant_prop <> absopx def
R38614:38619 CertiOS.framework.proof.invariant_prop <> absopx def
R38641:38645 CertiOS.framework.logic.assertion <> SWPRE def
R38697:38705 CertiOS.framework.proof.invariant_prop <> sat_split thm
R38697:38705 CertiOS.framework.proof.invariant_prop <> sat_split thm
R38751:38753 CertiOS.framework.auxlibs.Maps <> get meth
R38823:38831 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38823:38831 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38850:38853 CertiOS.framework.auxlibs.Maps <> join meth
R38859:38863 CertiOS.framework.auxlibs.Maps <> merge meth
R38850:38853 CertiOS.framework.auxlibs.Maps <> join meth
R38859:38863 CertiOS.framework.auxlibs.Maps <> merge meth
R38886:38911 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R38886:38911 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R38932:38953 CertiOS.framework.proof.lmachLib <> store_mapstoval_frame1 thm
R38932:38953 CertiOS.framework.proof.lmachLib <> store_mapstoval_frame1 thm
R38985:38987 Coq.Init.Logic <> :type_scope:x_'='_x not
R38985:38987 Coq.Init.Logic <> :type_scope:x_'='_x not
R39020:39028 CertiOS.framework.logic.assertion <> mapstoval def
R39052:39069 CertiOS.framework.proof.invariant_prop <> ptomvallist_mem_eq thm
R39052:39069 CertiOS.framework.proof.invariant_prop <> ptomvallist_mem_eq thm
R39098:39108 CertiOS.tactics.basetac.join_lib <> join_unique thm
R39098:39108 CertiOS.tactics.basetac.join_lib <> join_unique thm
prf 39146:39156 <> sw_has_code
R39174:39176 CertiOS.framework.model.memory <> var def
R39186:39191 CertiOS.framework.model.language <> taskst def
R39199:39204 CertiOS.framework.model.language <> osabst def
R39222:39226 CertiOS.framework.model.language <> tasks def
R39236:39242 CertiOS.framework.auxlibs.Modules <> addrval def
R39250:39254 CertiOS.framework.auxlibs.Modules <> block def
R39263:39266 CertiOS.framework.model.memory <> type ind
R39285:39291 CertiOS.framework.model.language <> ossched def
R39311:39318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39319:39319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39367:39375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39429:39436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39495:39502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39514:39517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39518:39524 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R39526:39527 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R39545:39547 Coq.Init.Logic <> :type_scope:x_'='_x not
R39528:39539 CertiOS.framework.model.language TasksMod get def
R39543:39544 CertiOS.framework.proof.invariant_prop <> t' var
R39541:39541 CertiOS.framework.proof.invariant_prop <> T var
R39548:39551 Coq.Init.Datatypes <> Some constr
R39503:39509 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R39513:39513 CertiOS.framework.proof.invariant_prop <> O var
R39511:39511 CertiOS.framework.proof.invariant_prop <> T var
R39478:39480 Coq.Init.Logic <> :type_scope:x_'='_x not
R39437:39440 CertiOS.framework.model.opsem <> load def
R39470:39470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39472:39473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39477:39477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39471:39471 CertiOS.framework.proof.invariant_prop <> l var
R39446:39452 CertiOS.framework.model.opsem <> get_mem def
R39455:39462 CertiOS.framework.model.language <> get_smem def
R39464:39466 CertiOS.framework.proof.invariant_prop <> tst var
R39442:39443 CertiOS.framework.proof.invariant_prop <> tp var
R39481:39484 Coq.Init.Datatypes <> Some constr
R39487:39490 CertiOS.framework.model.memory <> Vptr constr
R39492:39493 CertiOS.framework.proof.invariant_prop <> t' var
R39414:39416 Coq.Init.Logic <> :type_scope:x_'='_x not
R39376:39385 CertiOS.framework.model.memory EnvMod get def
R39413:39413 CertiOS.framework.proof.invariant_prop <> x var
R39388:39395 CertiOS.framework.model.opsem <> get_genv def
R39398:39405 CertiOS.framework.model.language <> get_smem def
R39407:39409 CertiOS.framework.proof.invariant_prop <> tst var
R39417:39420 Coq.Init.Datatypes <> Some constr
R39422:39422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39424:39425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39428:39428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39423:39423 CertiOS.framework.proof.invariant_prop <> l var
R39426:39427 CertiOS.framework.proof.invariant_prop <> tp var
R39332:39336 CertiOS.framework.logic.assertion <> absop def
R39351:39354 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R39339:39339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39343:39344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39346:39347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39350:39350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39340:39342 CertiOS.framework.proof.invariant_prop <> tst var
R39345:39345 CertiOS.framework.proof.invariant_prop <> O var
R39348:39349 CertiOS.framework.proof.invariant_prop <> ab var
R39355:39359 CertiOS.framework.logic.assertion <> SWPRE def
R39366:39366 CertiOS.framework.proof.invariant_prop <> t var
R39364:39364 CertiOS.framework.proof.invariant_prop <> x var
R39361:39362 CertiOS.framework.proof.invariant_prop <> sd var
R39299:39307 CertiOS.framework.logic.inferules <> GoodSched def
R39309:39310 CertiOS.framework.proof.invariant_prop <> sd var
R39605:39610 CertiOS.framework.proof.invariant_prop <> absopx def
R39605:39610 CertiOS.framework.proof.invariant_prop <> absopx def
R39877:39889 CertiOS.framework.model.language OSAbstMod sub def
R39877:39889 CertiOS.framework.model.language OSAbstMod sub def
R39916:39935 CertiOS.framework.model.language OSAbstMod join_sub_l thm
R39916:39935 CertiOS.framework.model.language OSAbstMod join_sub_l thm
R40065:40067 CertiOS.framework.auxlibs.Maps <> get meth
R40139:40139 Coq.Init.Logic <> :type_scope:x_'='_x not
R40139:40139 Coq.Init.Logic <> :type_scope:x_'='_x not
R40154:40167 CertiOS.framework.proof.invariant_prop <> mapsto_load_eq thm
R40154:40167 CertiOS.framework.proof.invariant_prop <> mapsto_load_eq thm
prf 40254:40272 <> osabst_merge_set_eq
R40288:40293 CertiOS.framework.model.language <> osabst def
R40328:40330 Coq.Init.Logic <> :type_scope:x_'='_x not
R40308:40312 CertiOS.framework.auxlibs.Maps <> merge meth
R40326:40327 CertiOS.framework.proof.invariant_prop <> O' var
R40315:40317 CertiOS.framework.auxlibs.Maps <> set meth
R40323:40323 CertiOS.framework.proof.invariant_prop <> y var
R40321:40321 CertiOS.framework.proof.invariant_prop <> x var
R40319:40319 CertiOS.framework.proof.invariant_prop <> O var
R40331:40333 CertiOS.framework.auxlibs.Maps <> set meth
R40350:40350 CertiOS.framework.proof.invariant_prop <> y var
R40348:40348 CertiOS.framework.proof.invariant_prop <> x var
R40336:40340 CertiOS.framework.auxlibs.Maps <> merge meth
R40344:40345 CertiOS.framework.proof.invariant_prop <> O' var
R40342:40342 CertiOS.framework.proof.invariant_prop <> O var
R40380:40393 CertiOS.tactics.basetac.join_lib <> extensionality thm
R40380:40393 CertiOS.tactics.basetac.join_lib <> extensionality thm
R40415:40423 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40415:40423 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40415:40423 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40415:40423 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40438:40454 CertiOS.framework.model.language absdataidspec beq def
R40438:40454 CertiOS.framework.model.language absdataidspec beq def
R40480:40504 CertiOS.framework.model.language absdataidspec beq_true_eq thm
R40480:40504 CertiOS.framework.model.language absdataidspec beq_true_eq thm
R40534:40544 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40534:40544 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40534:40544 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40557:40567 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40557:40567 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40557:40567 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R40582:40584 CertiOS.framework.auxlibs.Maps <> get meth
R40582:40584 CertiOS.framework.auxlibs.Maps <> get meth
R40607:40633 CertiOS.framework.model.language absdataidspec beq_false_neq thm
R40607:40633 CertiOS.framework.model.language absdataidspec beq_false_neq thm
R40653:40664 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40653:40664 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40653:40664 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40653:40664 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40683:40694 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40683:40694 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40683:40694 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40683:40694 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R40713:40721 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40713:40721 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40713:40721 CertiOS.tactics.basetac.join_lib <> merge_sem thm
R40713:40721 CertiOS.tactics.basetac.join_lib <> merge_sem thm
prf 40760:40773 <> swinvt_isr_emp
R40853:40856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40860:40862 Coq.Init.Logic <> :type_scope:x_'='_x not
R40857:40859 CertiOS.framework.proof.invariant_prop <> isr var
R40863:40868 CertiOS.framework.model.language <> empisr def
R40839:40842 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R40815:40815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40833:40833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40835:40835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40838:40838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40816:40816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40819:40819 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40822:40822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40824:40824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40828:40828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40832:40832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40817:40818 CertiOS.framework.proof.invariant_prop <> ge var
R40820:40821 CertiOS.framework.proof.invariant_prop <> le var
R40823:40823 CertiOS.framework.proof.invariant_prop <> m var
R40825:40827 CertiOS.framework.proof.invariant_prop <> isr var
R40829:40831 CertiOS.framework.proof.invariant_prop <> aux var
R40834:40834 CertiOS.framework.proof.invariant_prop <> O var
R40836:40837 CertiOS.framework.proof.invariant_prop <> ab var
R40843:40848 CertiOS.framework.logic.assertion <> SWINVt def
R40852:40852 CertiOS.framework.proof.invariant_prop <> t var
R40850:40850 CertiOS.framework.proof.invariant_prop <> I var
R40887:40892 CertiOS.framework.logic.assertion <> SWINVt def
R40938:40958 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R40938:40958 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R41000:41005 CertiOS.framework.model.language <> empisr def
prf 41026:41039 <> good_inv_prop'
R41055:41058 CertiOS.framework.logic.assertion <> asrt ind
R41075:41082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41096:41103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41120:41122 CertiOS.framework.model.memory <> env def
R41130:41132 CertiOS.framework.model.memory <> mem def
R41150:41154 CertiOS.framework.logic.assertion <> absop def
R41208:41217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41232:41234 CertiOS.framework.model.memory <> env def
R41244:41248 CertiOS.framework.logic.assertion <> absop def
R41298:41301 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41261:41261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41264:41265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41269:41270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41272:41273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41280:41281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41286:41287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41292:41293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41297:41297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41262:41263 CertiOS.framework.proof.invariant_prop <> ge var
R41266:41268 CertiOS.framework.proof.invariant_prop <> le' var
R41271:41271 CertiOS.framework.proof.invariant_prop <> M var
R41274:41279 CertiOS.framework.model.language <> empisr def
R41282:41285 CertiOS.framework.proof.invariant_prop <> aux' var
R41288:41291 CertiOS.framework.proof.invariant_prop <> abst var
R41294:41296 CertiOS.framework.proof.invariant_prop <> op' var
R41302:41302 CertiOS.framework.proof.invariant_prop <> p var
R41203:41206 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41169:41169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41172:41173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41176:41177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41179:41180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41187:41188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41192:41193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41198:41199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41202:41202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41170:41171 CertiOS.framework.proof.invariant_prop <> ge var
R41174:41175 CertiOS.framework.proof.invariant_prop <> le var
R41178:41178 CertiOS.framework.proof.invariant_prop <> M var
R41181:41186 CertiOS.framework.model.language <> empisr def
R41189:41191 CertiOS.framework.proof.invariant_prop <> aux var
R41194:41197 CertiOS.framework.proof.invariant_prop <> abst var
R41200:41201 CertiOS.framework.proof.invariant_prop <> op var
R41207:41207 CertiOS.framework.proof.invariant_prop <> p var
R41083:41093 CertiOS.framework.logic.assertion <> GoodInvAsrt def
R41095:41095 CertiOS.framework.proof.invariant_prop <> p var
R41065:41072 CertiOS.framework.logic.assertion <> inv_prop def
R41074:41074 CertiOS.framework.proof.invariant_prop <> p var
R41383:41383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41386:41387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41391:41392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41394:41395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41402:41403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41416:41417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41427:41427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41396:41401 CertiOS.framework.model.language <> empisr def
R41404:41404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41407:41408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41411:41412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41415:41415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41383:41383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41386:41387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41391:41392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41394:41395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41402:41403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41416:41417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41427:41427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41396:41401 CertiOS.framework.model.language <> empisr def
R41404:41404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41407:41408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41411:41412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41415:41415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41491:41494 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41446:41446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41449:41450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41454:41455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41457:41458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41465:41466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41479:41480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41485:41486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41490:41490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41459:41464 CertiOS.framework.model.language <> empisr def
R41467:41467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41470:41471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41474:41475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41478:41478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41491:41494 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41446:41446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41449:41450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41454:41455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41457:41458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41465:41466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41479:41480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41485:41486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41490:41490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41459:41464 CertiOS.framework.model.language <> empisr def
R41467:41467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41470:41471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41474:41475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41478:41478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41508:41520 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R41508:41520 CertiOS.framework.proof.invariant_prop <> good_inv_prop thm
R41539:41546 CertiOS.framework.logic.assertion <> inv_prop def
R41577:41598 CertiOS.framework.logic.assertion <> inv_isr_prop def
R41627:41627 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41685:41687 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41628:41635 CertiOS.framework.logic.assertion <> set_is_s def
R41637:41637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41640:41641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41645:41646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41648:41649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41656:41657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41670:41671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41676:41677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41681:41681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41650:41655 CertiOS.framework.model.language <> empisr def
R41658:41658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41661:41662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41665:41666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41669:41669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41627:41627 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41685:41687 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41628:41635 CertiOS.framework.logic.assertion <> set_is_s def
R41637:41637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41640:41641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41645:41646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41648:41649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41656:41657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41670:41671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41676:41677 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41681:41681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41650:41655 CertiOS.framework.model.language <> empisr def
R41658:41658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41661:41662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41665:41666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41669:41669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 41753:41771 <> inv_isr_irrev_prop'
R41881:41889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41949:41952 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41912:41912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41915:41916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41920:41921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41923:41924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41931:41932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41937:41938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41943:41944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41948:41948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41913:41914 CertiOS.framework.proof.invariant_prop <> ge var
R41917:41919 CertiOS.framework.proof.invariant_prop <> le' var
R41922:41922 CertiOS.framework.proof.invariant_prop <> M var
R41925:41930 CertiOS.framework.model.language <> empisr def
R41933:41936 CertiOS.framework.proof.invariant_prop <> aux' var
R41939:41942 CertiOS.framework.proof.invariant_prop <> abst var
R41945:41947 CertiOS.framework.proof.invariant_prop <> op' var
R41953:41963 CertiOS.framework.logic.assertion <> starinv_isr def
R41971:41971 CertiOS.framework.proof.invariant_prop <> n var
R41967:41969 CertiOS.framework.proof.invariant_prop <> low var
R41965:41965 CertiOS.framework.proof.invariant_prop <> I var
R41858:41861 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R41824:41824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41827:41828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41831:41832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41834:41835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41842:41843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41847:41848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41853:41854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41857:41857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41825:41826 CertiOS.framework.proof.invariant_prop <> ge var
R41829:41830 CertiOS.framework.proof.invariant_prop <> le var
R41833:41833 CertiOS.framework.proof.invariant_prop <> M var
R41836:41841 CertiOS.framework.model.language <> empisr def
R41844:41846 CertiOS.framework.proof.invariant_prop <> aux var
R41849:41852 CertiOS.framework.proof.invariant_prop <> abst var
R41855:41856 CertiOS.framework.proof.invariant_prop <> op var
R41862:41872 CertiOS.framework.logic.assertion <> starinv_isr def
R41880:41880 CertiOS.framework.proof.invariant_prop <> n var
R41876:41878 CertiOS.framework.proof.invariant_prop <> low var
R41874:41874 CertiOS.framework.proof.invariant_prop <> I var
R42244:42257 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R42244:42257 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R42268:42271 CertiOS.framework.logic.assertion <> prec proj
R42268:42271 CertiOS.framework.logic.assertion <> prec proj
R42284:42287 CertiOS.framework.logic.assertion <> invp proj
R42284:42287 CertiOS.framework.logic.assertion <> invp proj
R42393:42395 CertiOS.framework.logic.assertion <> sat def
R42413:42415 CertiOS.framework.logic.assertion <> sat def
R42413:42415 CertiOS.framework.logic.assertion <> sat def
R42460:42462 CertiOS.framework.logic.assertion <> sat def
R42472:42474 CertiOS.framework.logic.assertion <> sat def
R42472:42474 CertiOS.framework.logic.assertion <> sat def
R42965:42978 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R42965:42978 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R42989:42992 CertiOS.framework.logic.assertion <> prec proj
R42989:42992 CertiOS.framework.logic.assertion <> prec proj
R43005:43008 CertiOS.framework.logic.assertion <> invp proj
R43005:43008 CertiOS.framework.logic.assertion <> invp proj
prf 43080:43093 <> invlth_isr_add
R43180:43187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43202:43209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43215:43218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43230:43237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43291:43299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43365:43373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43430:43433 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R43374:43374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43377:43378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43383:43384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43396:43397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43404:43405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43410:43411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43423:43424 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43429:43429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43375:43376 CertiOS.framework.proof.invariant_prop <> ge var
R43379:43382 CertiOS.framework.proof.invariant_prop <> le'' var
R43385:43389 CertiOS.framework.auxlibs.Maps <> merge meth
R43394:43395 CertiOS.framework.proof.invariant_prop <> M2 var
R43391:43392 CertiOS.framework.proof.invariant_prop <> M1 var
R43398:43403 CertiOS.framework.model.language <> empisr def
R43406:43409 CertiOS.framework.proof.invariant_prop <> aux' var
R43412:43416 CertiOS.framework.auxlibs.Maps <> merge meth
R43421:43422 CertiOS.framework.proof.invariant_prop <> O2 var
R43418:43419 CertiOS.framework.proof.invariant_prop <> O1 var
R43425:43428 CertiOS.framework.proof.invariant_prop <> ab'' var
R43434:43443 CertiOS.framework.logic.assertion <> invlth_isr def
R43449:43449 CertiOS.framework.proof.invariant_prop <> j var
R43445:43445 CertiOS.framework.proof.invariant_prop <> I var
R43335:43338 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R43300:43300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43303:43304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43308:43309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43312:43313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43320:43321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43325:43326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43329:43330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43334:43334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43301:43302 CertiOS.framework.proof.invariant_prop <> ge var
R43305:43307 CertiOS.framework.proof.invariant_prop <> le' var
R43310:43311 CertiOS.framework.proof.invariant_prop <> M2 var
R43314:43319 CertiOS.framework.model.language <> empisr def
R43322:43324 CertiOS.framework.proof.invariant_prop <> aux var
R43327:43328 CertiOS.framework.proof.invariant_prop <> O2 var
R43331:43333 CertiOS.framework.proof.invariant_prop <> ab' var
R43339:43348 CertiOS.framework.logic.assertion <> invlth_isr def
R43364:43364 CertiOS.framework.proof.invariant_prop <> j var
R43355:43355 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43354:43354 CertiOS.framework.proof.invariant_prop <> i var
R43350:43350 CertiOS.framework.proof.invariant_prop <> I var
R43271:43274 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R43238:43238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43241:43242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43245:43246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43249:43250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43257:43258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43262:43263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43266:43267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43270:43270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43239:43240 CertiOS.framework.proof.invariant_prop <> ge var
R43243:43244 CertiOS.framework.proof.invariant_prop <> le var
R43247:43248 CertiOS.framework.proof.invariant_prop <> M1 var
R43251:43256 CertiOS.framework.model.language <> empisr def
R43259:43261 CertiOS.framework.proof.invariant_prop <> aux var
R43264:43265 CertiOS.framework.proof.invariant_prop <> O1 var
R43268:43269 CertiOS.framework.proof.invariant_prop <> ab var
R43275:43284 CertiOS.framework.logic.assertion <> invlth_isr def
R43290:43290 CertiOS.framework.proof.invariant_prop <> i var
R43286:43286 CertiOS.framework.proof.invariant_prop <> I var
R43220:43223 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R43219:43219 CertiOS.framework.proof.invariant_prop <> j var
R43224:43224 Coq.Init.Datatypes <> S constr
R43226:43229 CertiOS.framework.model.language <> INUM def
R43211:43213 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R43210:43210 CertiOS.framework.proof.invariant_prop <> i var
R43214:43214 CertiOS.framework.proof.invariant_prop <> j var
R43188:43195 CertiOS.framework.auxlibs.Maps <> disjoint def
R43200:43201 CertiOS.framework.proof.invariant_prop <> O2 var
R43197:43198 CertiOS.framework.proof.invariant_prop <> O1 var
R43166:43173 CertiOS.framework.auxlibs.Maps <> disjoint def
R43178:43179 CertiOS.framework.proof.invariant_prop <> M2 var
R43175:43176 CertiOS.framework.proof.invariant_prop <> M1 var
R43478:43487 CertiOS.framework.logic.assertion <> invlth_isr def
R43508:43509 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43513:43513 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43511:43511 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43508:43509 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43513:43513 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43511:43511 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43535:43535 Coq.Init.Logic <> :type_scope:x_'='_x not
R43533:43533 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43536:43536 Coq.Init.Datatypes <> S constr
R43539:43539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43535:43535 Coq.Init.Logic <> :type_scope:x_'='_x not
R43533:43533 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43536:43536 Coq.Init.Datatypes <> S constr
R43539:43539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43633:43647 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R43577:43577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43580:43581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43586:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43599:43600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43607:43608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43613:43614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43626:43627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43632:43632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43588:43592 CertiOS.framework.auxlibs.Maps <> merge meth
R43601:43606 CertiOS.framework.model.language <> empisr def
R43615:43619 CertiOS.framework.auxlibs.Maps <> merge meth
R43671:43674 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R43648:43658 CertiOS.framework.logic.assertion <> starinv_isr def
R43666:43668 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43675:43685 CertiOS.framework.logic.assertion <> starinv_isr def
R43691:43693 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43633:43647 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R43577:43577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43580:43581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43586:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43599:43600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43607:43608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43613:43614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43626:43627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43632:43632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43588:43592 CertiOS.framework.auxlibs.Maps <> merge meth
R43601:43606 CertiOS.framework.model.language <> empisr def
R43615:43619 CertiOS.framework.auxlibs.Maps <> merge meth
R43671:43674 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R43648:43658 CertiOS.framework.logic.assertion <> starinv_isr def
R43666:43668 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43675:43685 CertiOS.framework.logic.assertion <> starinv_isr def
R43691:43693 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43710:43712 CertiOS.framework.logic.assertion <> sat def
R43719:43721 CertiOS.framework.logic.assertion <> sat def
R43719:43721 CertiOS.framework.logic.assertion <> sat def
R43779:43783 CertiOS.framework.auxlibs.Maps <> merge meth
R43800:43804 CertiOS.framework.auxlibs.Maps <> merge meth
R43779:43783 CertiOS.framework.auxlibs.Maps <> merge meth
R43800:43804 CertiOS.framework.auxlibs.Maps <> merge meth
R43830:43844 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R43830:43844 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R43862:43876 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R43862:43876 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R43894:43912 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R43894:43912 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R43931:43949 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R43931:43949 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R43968:43984 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R43968:43984 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R44006:44006 Coq.Init.Logic <> :type_scope:x_'='_x not
R44004:44004 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44006:44006 Coq.Init.Logic <> :type_scope:x_'='_x not
R44004:44004 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44053:44054 Coq.Init.Logic <> :type_scope:x_'='_x not
R44051:44051 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44055:44055 Coq.Init.Datatypes <> S constr
R44053:44054 Coq.Init.Logic <> :type_scope:x_'='_x not
R44051:44051 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44055:44055 Coq.Init.Datatypes <> S constr
prf 44110:44124 <> invlth_isr_add'
R44210:44217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44232:44239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44244:44247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44259:44266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44314:44322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44383:44391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44443:44446 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R44392:44392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44395:44395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44400:44401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44413:44413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44420:44420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44425:44425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44437:44437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44442:44442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44393:44394 CertiOS.framework.proof.invariant_prop <> ge var
R44396:44399 CertiOS.framework.proof.invariant_prop <> le'' var
R44402:44406 CertiOS.framework.auxlibs.Maps <> merge meth
R44411:44412 CertiOS.framework.proof.invariant_prop <> M1 var
R44408:44409 CertiOS.framework.proof.invariant_prop <> M2 var
R44414:44419 CertiOS.framework.model.language <> empisr def
R44421:44424 CertiOS.framework.proof.invariant_prop <> aux' var
R44426:44430 CertiOS.framework.auxlibs.Maps <> merge meth
R44435:44436 CertiOS.framework.proof.invariant_prop <> O1 var
R44432:44433 CertiOS.framework.proof.invariant_prop <> O2 var
R44438:44441 CertiOS.framework.proof.invariant_prop <> ab'' var
R44447:44456 CertiOS.framework.logic.assertion <> invlth_isr def
R44462:44462 CertiOS.framework.proof.invariant_prop <> j var
R44458:44458 CertiOS.framework.proof.invariant_prop <> I var
R44353:44356 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R44323:44323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44326:44326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44330:44331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44334:44334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44341:44341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44345:44345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44348:44348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44352:44352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44324:44325 CertiOS.framework.proof.invariant_prop <> ge var
R44327:44329 CertiOS.framework.proof.invariant_prop <> le' var
R44332:44333 CertiOS.framework.proof.invariant_prop <> M2 var
R44335:44340 CertiOS.framework.model.language <> empisr def
R44342:44344 CertiOS.framework.proof.invariant_prop <> aux var
R44346:44347 CertiOS.framework.proof.invariant_prop <> O2 var
R44349:44351 CertiOS.framework.proof.invariant_prop <> ab' var
R44357:44366 CertiOS.framework.logic.assertion <> invlth_isr def
R44382:44382 CertiOS.framework.proof.invariant_prop <> j var
R44373:44373 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44372:44372 CertiOS.framework.proof.invariant_prop <> i var
R44368:44368 CertiOS.framework.proof.invariant_prop <> I var
R44294:44297 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R44267:44267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44270:44270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44273:44273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44276:44276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44283:44283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44287:44287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44290:44290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44293:44293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44268:44269 CertiOS.framework.proof.invariant_prop <> ge var
R44271:44272 CertiOS.framework.proof.invariant_prop <> le var
R44274:44275 CertiOS.framework.proof.invariant_prop <> M1 var
R44277:44282 CertiOS.framework.model.language <> empisr def
R44284:44286 CertiOS.framework.proof.invariant_prop <> aux var
R44288:44289 CertiOS.framework.proof.invariant_prop <> O1 var
R44291:44292 CertiOS.framework.proof.invariant_prop <> ab var
R44298:44307 CertiOS.framework.logic.assertion <> invlth_isr def
R44313:44313 CertiOS.framework.proof.invariant_prop <> i var
R44309:44309 CertiOS.framework.proof.invariant_prop <> I var
R44249:44252 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R44248:44248 CertiOS.framework.proof.invariant_prop <> j var
R44253:44253 Coq.Init.Datatypes <> S constr
R44255:44258 CertiOS.framework.model.language <> INUM def
R44241:44242 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R44240:44240 CertiOS.framework.proof.invariant_prop <> i var
R44243:44243 CertiOS.framework.proof.invariant_prop <> j var
R44218:44225 CertiOS.framework.auxlibs.Maps <> disjoint def
R44230:44231 CertiOS.framework.proof.invariant_prop <> O2 var
R44227:44228 CertiOS.framework.proof.invariant_prop <> O1 var
R44196:44203 CertiOS.framework.auxlibs.Maps <> disjoint def
R44208:44209 CertiOS.framework.proof.invariant_prop <> M2 var
R44205:44206 CertiOS.framework.proof.invariant_prop <> M1 var
R44491:44500 CertiOS.framework.logic.assertion <> invlth_isr def
R44521:44522 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44526:44526 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44524:44524 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44521:44522 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44526:44526 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44524:44524 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44548:44548 Coq.Init.Logic <> :type_scope:x_'='_x not
R44546:44546 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44549:44549 Coq.Init.Datatypes <> S constr
R44552:44552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44548:44548 Coq.Init.Logic <> :type_scope:x_'='_x not
R44546:44546 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44549:44549 Coq.Init.Datatypes <> S constr
R44552:44552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44646:44660 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R44590:44590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44593:44594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44599:44600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44612:44613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44620:44621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44626:44627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44639:44640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44645:44645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44601:44605 CertiOS.framework.auxlibs.Maps <> merge meth
R44614:44619 CertiOS.framework.model.language <> empisr def
R44628:44632 CertiOS.framework.auxlibs.Maps <> merge meth
R44684:44687 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R44661:44671 CertiOS.framework.logic.assertion <> starinv_isr def
R44679:44681 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44688:44698 CertiOS.framework.logic.assertion <> starinv_isr def
R44704:44706 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44646:44660 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R44590:44590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44593:44594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44599:44600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44612:44613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44620:44621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44626:44627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44639:44640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44645:44645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44601:44605 CertiOS.framework.auxlibs.Maps <> merge meth
R44614:44619 CertiOS.framework.model.language <> empisr def
R44628:44632 CertiOS.framework.auxlibs.Maps <> merge meth
R44684:44687 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R44661:44671 CertiOS.framework.logic.assertion <> starinv_isr def
R44679:44681 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44688:44698 CertiOS.framework.logic.assertion <> starinv_isr def
R44704:44706 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44723:44725 CertiOS.framework.logic.assertion <> sat def
R44732:44734 CertiOS.framework.logic.assertion <> sat def
R44732:44734 CertiOS.framework.logic.assertion <> sat def
R44792:44796 CertiOS.framework.auxlibs.Maps <> merge meth
R44813:44817 CertiOS.framework.auxlibs.Maps <> merge meth
R44792:44796 CertiOS.framework.auxlibs.Maps <> merge meth
R44813:44817 CertiOS.framework.auxlibs.Maps <> merge meth
R44842:44856 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R44842:44856 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R44874:44888 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R44874:44888 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R44906:44924 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R44906:44924 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R44943:44961 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R44943:44961 CertiOS.framework.proof.invariant_prop <> inv_isr_irrev_prop' thm
R44980:44996 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R44980:44996 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R45018:45018 Coq.Init.Logic <> :type_scope:x_'='_x not
R45016:45016 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45018:45018 Coq.Init.Logic <> :type_scope:x_'='_x not
R45016:45016 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45065:45066 Coq.Init.Logic <> :type_scope:x_'='_x not
R45063:45063 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45067:45067 Coq.Init.Datatypes <> S constr
R45065:45066 Coq.Init.Logic <> :type_scope:x_'='_x not
R45063:45063 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45067:45067 Coq.Init.Datatypes <> S constr
R45123:45125 Coq.Init.Logic <> :type_scope:x_'='_x not
R45112:45116 CertiOS.framework.auxlibs.Maps <> merge meth
R45126:45130 CertiOS.framework.auxlibs.Maps <> merge meth
R45123:45125 Coq.Init.Logic <> :type_scope:x_'='_x not
R45112:45116 CertiOS.framework.auxlibs.Maps <> merge meth
R45126:45130 CertiOS.framework.auxlibs.Maps <> merge meth
R45149:45166 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45149:45166 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45196:45198 Coq.Init.Logic <> :type_scope:x_'='_x not
R45185:45189 CertiOS.framework.auxlibs.Maps <> merge meth
R45199:45203 CertiOS.framework.auxlibs.Maps <> merge meth
R45196:45198 Coq.Init.Logic <> :type_scope:x_'='_x not
R45185:45189 CertiOS.framework.auxlibs.Maps <> merge meth
R45199:45203 CertiOS.framework.auxlibs.Maps <> merge meth
R45222:45239 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45222:45239 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
prf 45309:45332 <> starinv_isr_ncare_aux_ab
R45445:45450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45486:45523 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R45451:45451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45454:45455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45459:45460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45462:45464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45471:45472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45477:45478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45480:45481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45485:45485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45452:45453 CertiOS.framework.proof.invariant_prop <> ge var
R45456:45458 CertiOS.framework.proof.invariant_prop <> le' var
R45461:45461 CertiOS.framework.proof.invariant_prop <> m var
R45465:45470 CertiOS.framework.model.language <> empisr def
R45473:45476 CertiOS.framework.proof.invariant_prop <> aux' var
R45479:45479 CertiOS.framework.proof.invariant_prop <> O var
R45482:45484 CertiOS.framework.proof.invariant_prop <> ab' var
R45524:45534 CertiOS.framework.logic.assertion <> starinv_isr def
R45540:45540 CertiOS.framework.proof.invariant_prop <> j var
R45538:45538 CertiOS.framework.proof.invariant_prop <> i var
R45536:45536 CertiOS.framework.proof.invariant_prop <> I var
R45418:45427 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R45386:45386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45389:45390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45393:45394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45396:45398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45405:45406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45410:45411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45413:45414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45417:45417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45387:45388 CertiOS.framework.proof.invariant_prop <> ge var
R45391:45392 CertiOS.framework.proof.invariant_prop <> le var
R45395:45395 CertiOS.framework.proof.invariant_prop <> m var
R45399:45404 CertiOS.framework.model.language <> empisr def
R45407:45409 CertiOS.framework.proof.invariant_prop <> aux var
R45412:45412 CertiOS.framework.proof.invariant_prop <> O var
R45415:45416 CertiOS.framework.proof.invariant_prop <> ab var
R45428:45438 CertiOS.framework.logic.assertion <> starinv_isr def
R45444:45444 CertiOS.framework.proof.invariant_prop <> j var
R45442:45442 CertiOS.framework.proof.invariant_prop <> i var
R45440:45440 CertiOS.framework.proof.invariant_prop <> I var
R45634:45644 CertiOS.framework.logic.assertion <> starinv_isr def
R45704:45709 CertiOS.framework.model.language <> empisr def
R45738:45743 CertiOS.framework.model.language <> empisr def
R45738:45743 CertiOS.framework.model.language <> empisr def
R45764:45769 CertiOS.framework.logic.assertion <> empmem syndef
R45775:45781 CertiOS.framework.logic.assertion <> empabst syndef
R45764:45769 CertiOS.framework.logic.assertion <> empmem syndef
R45775:45781 CertiOS.framework.logic.assertion <> empabst syndef
R45811:45824 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R45811:45824 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R45841:45844 CertiOS.framework.logic.assertion <> prec proj
R45841:45844 CertiOS.framework.logic.assertion <> prec proj
R45856:45859 CertiOS.framework.logic.assertion <> invp proj
R45856:45859 CertiOS.framework.logic.assertion <> invp proj
R45881:45891 CertiOS.framework.logic.assertion <> starinv_isr def
R45903:45913 CertiOS.framework.logic.assertion <> starinv_isr def
R45928:45938 CertiOS.framework.logic.assertion <> starinv_isr def
R45928:45938 CertiOS.framework.logic.assertion <> starinv_isr def
R46017:46022 CertiOS.framework.logic.assertion <> empmem syndef
R46028:46034 CertiOS.framework.logic.assertion <> empabst syndef
R46017:46022 CertiOS.framework.logic.assertion <> empmem syndef
R46028:46034 CertiOS.framework.logic.assertion <> empabst syndef
R46056:46061 CertiOS.framework.model.language <> empisr def
R46152:46157 CertiOS.framework.model.language <> empisr def
R46152:46157 CertiOS.framework.model.language <> empisr def
R46181:46186 CertiOS.framework.logic.assertion <> empmem syndef
R46192:46198 CertiOS.framework.logic.assertion <> empabst syndef
R46181:46186 CertiOS.framework.logic.assertion <> empmem syndef
R46192:46198 CertiOS.framework.logic.assertion <> empabst syndef
R46276:46289 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R46276:46289 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R46306:46309 CertiOS.framework.logic.assertion <> prec proj
R46306:46309 CertiOS.framework.logic.assertion <> prec proj
R46320:46323 CertiOS.framework.logic.assertion <> invp proj
R46320:46323 CertiOS.framework.logic.assertion <> invp proj
prf 46358:46376 <> invariant_prop_map3
R46409:46415 CertiOS.framework.auxlibs.Maps <> PermMap class
R46421:46421 CertiOS.framework.proof.invariant_prop <> T var
R46419:46419 CertiOS.framework.proof.invariant_prop <> B var
R46417:46417 CertiOS.framework.proof.invariant_prop <> A var
R46455:46462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46476:46483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46484:46491 CertiOS.framework.auxlibs.Maps <> disjoint def
R46497:46501 CertiOS.framework.auxlibs.Maps <> merge meth
R46506:46507 CertiOS.framework.proof.invariant_prop <> x3 var
R46503:46504 CertiOS.framework.proof.invariant_prop <> Ms var
R46493:46494 CertiOS.framework.proof.invariant_prop <> x4 var
R46463:46466 CertiOS.framework.auxlibs.Maps <> join meth
R46474:46475 CertiOS.framework.proof.invariant_prop <> Mc var
R46471:46472 CertiOS.framework.proof.invariant_prop <> x4 var
R46468:46469 CertiOS.framework.proof.invariant_prop <> x3 var
R46441:46448 CertiOS.framework.auxlibs.Maps <> disjoint def
R46453:46454 CertiOS.framework.proof.invariant_prop <> Ms var
R46450:46451 CertiOS.framework.proof.invariant_prop <> Mc var
prf 46536:46554 <> invariant_prop_map5
R46587:46593 CertiOS.framework.auxlibs.Maps <> PermMap class
R46599:46599 CertiOS.framework.proof.invariant_prop <> T var
R46597:46597 CertiOS.framework.proof.invariant_prop <> B var
R46595:46595 CertiOS.framework.proof.invariant_prop <> A var
R46632:46639 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46654:46661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46674:46681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46682:46689 CertiOS.framework.auxlibs.Maps <> disjoint def
R46694:46698 CertiOS.framework.auxlibs.Maps <> merge meth
R46703:46704 CertiOS.framework.proof.invariant_prop <> Mc var
R46700:46701 CertiOS.framework.proof.invariant_prop <> x0 var
R46691:46691 CertiOS.framework.proof.invariant_prop <> x var
R46662:46665 CertiOS.framework.auxlibs.Maps <> join meth
R46672:46673 CertiOS.framework.proof.invariant_prop <> Ms var
R46669:46670 CertiOS.framework.proof.invariant_prop <> x0 var
R46667:46667 CertiOS.framework.proof.invariant_prop <> x var
R46640:46647 CertiOS.framework.auxlibs.Maps <> disjoint def
R46652:46653 CertiOS.framework.proof.invariant_prop <> Ms var
R46649:46650 CertiOS.framework.proof.invariant_prop <> Mc var
R46625:46627 Coq.Init.Logic <> :type_scope:x_'='_x not
R46618:46624 CertiOS.framework.auxlibs.Maps <> usePerm meth
R46628:46631 Coq.Init.Datatypes <> true constr
prf 46733:46751 <> invariant_prop_map4
R46784:46790 CertiOS.framework.auxlibs.Maps <> PermMap class
R46796:46796 CertiOS.framework.proof.invariant_prop <> T var
R46794:46794 CertiOS.framework.proof.invariant_prop <> B var
R46792:46792 CertiOS.framework.proof.invariant_prop <> A var
R46830:46837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46851:46858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46859:46866 CertiOS.framework.auxlibs.Maps <> disjoint def
R46872:46876 CertiOS.framework.auxlibs.Maps <> merge meth
R46881:46882 CertiOS.framework.proof.invariant_prop <> Ms var
R46878:46879 CertiOS.framework.proof.invariant_prop <> x3 var
R46868:46869 CertiOS.framework.proof.invariant_prop <> x4 var
R46838:46841 CertiOS.framework.auxlibs.Maps <> join meth
R46849:46850 CertiOS.framework.proof.invariant_prop <> Mc var
R46846:46847 CertiOS.framework.proof.invariant_prop <> x4 var
R46843:46844 CertiOS.framework.proof.invariant_prop <> x3 var
R46816:46823 CertiOS.framework.auxlibs.Maps <> disjoint def
R46828:46829 CertiOS.framework.proof.invariant_prop <> Ms var
R46825:46826 CertiOS.framework.proof.invariant_prop <> Mc var
prf 46911:46922 <> swi_rdy_inv'
R46978:46985 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46986:46986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47001:47009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47010:47010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47025:47032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47033:47033 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47087:47094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47095:47095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47155:47162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47180:47187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47206:47221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47544:47549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47222:47228 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R47232:47232 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R47236:47236 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R47240:47240 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R47244:47253 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R47270:47281 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47254:47261 CertiOS.framework.auxlibs.Maps <> disjoint def
R47309:47319 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47295:47297 Coq.Init.Logic <> :type_scope:x_'='_x not
R47282:47286 CertiOS.framework.auxlibs.Maps <> merge meth
R47298:47302 CertiOS.framework.auxlibs.Maps <> merge meth
R47307:47308 CertiOS.framework.proof.invariant_prop <> Ms var
R47304:47305 CertiOS.framework.proof.invariant_prop <> Mc var
R47336:47346 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47320:47327 CertiOS.framework.auxlibs.Maps <> disjoint def
R47373:47396 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47533:47543 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47360:47361 Coq.Init.Logic <> :type_scope:x_'='_x not
R47347:47351 CertiOS.framework.auxlibs.Maps <> merge meth
R47362:47366 CertiOS.framework.auxlibs.Maps <> merge meth
R47371:47372 CertiOS.framework.proof.invariant_prop <> Os var
R47368:47369 CertiOS.framework.proof.invariant_prop <> Ol var
R47397:47397 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47454:47469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47532:47532 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47410:47414 CertiOS.framework.logic.assertion <> absop def
R47445:47448 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47417:47417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47435:47436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47440:47441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47444:47444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47418:47427 CertiOS.framework.logic.assertion <> substaskst def
R47429:47430 CertiOS.framework.proof.invariant_prop <> o' var
R47442:47443 CertiOS.framework.proof.invariant_prop <> ab var
R47449:47451 CertiOS.framework.logic.assertion <> INV def
R47453:47453 CertiOS.framework.proof.invariant_prop <> I var
R47482:47486 CertiOS.framework.logic.assertion <> absop def
R47517:47520 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47489:47489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47507:47508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47512:47513 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47516:47516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47490:47499 CertiOS.framework.logic.assertion <> substaskst def
R47501:47502 CertiOS.framework.proof.invariant_prop <> o' var
R47514:47515 CertiOS.framework.proof.invariant_prop <> ab var
R47521:47526 CertiOS.framework.logic.assertion <> RDYINV def
R47530:47531 CertiOS.framework.proof.invariant_prop <> t' var
R47528:47528 CertiOS.framework.proof.invariant_prop <> I var
R47198:47198 Coq.Init.Logic <> :type_scope:x_'='_x not
R47188:47192 CertiOS.framework.model.opsem <> projS def
R47196:47197 CertiOS.framework.proof.invariant_prop <> t' var
R47194:47194 CertiOS.framework.proof.invariant_prop <> S var
R47199:47202 Coq.Init.Datatypes <> Some constr
R47204:47205 CertiOS.framework.proof.invariant_prop <> o' var
R47172:47173 Coq.Init.Logic <> :type_scope:x_'='_x not
R47163:47167 CertiOS.framework.model.opsem <> projS def
R47171:47171 CertiOS.framework.proof.invariant_prop <> t var
R47169:47169 CertiOS.framework.proof.invariant_prop <> S var
R47174:47177 Coq.Init.Datatypes <> Some constr
R47179:47179 CertiOS.framework.proof.invariant_prop <> o var
R47108:47112 CertiOS.framework.logic.assertion <> absop def
R47140:47143 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47115:47115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47131:47132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47135:47136 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47139:47139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47116:47125 CertiOS.framework.logic.assertion <> substaskst def
R47129:47130 CertiOS.framework.proof.invariant_prop <> Mc var
R47127:47127 CertiOS.framework.proof.invariant_prop <> o var
R47133:47134 CertiOS.framework.proof.invariant_prop <> Ol var
R47137:47138 CertiOS.framework.proof.invariant_prop <> ab var
R47144:47149 CertiOS.framework.logic.assertion <> SWINVt def
R47153:47154 CertiOS.framework.proof.invariant_prop <> t' var
R47151:47151 CertiOS.framework.proof.invariant_prop <> I var
R47046:47050 CertiOS.framework.logic.assertion <> absop def
R47078:47081 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47053:47053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47069:47070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47073:47074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47077:47077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47054:47063 CertiOS.framework.logic.assertion <> substaskst def
R47067:47068 CertiOS.framework.proof.invariant_prop <> Ms var
R47065:47065 CertiOS.framework.proof.invariant_prop <> o var
R47071:47072 CertiOS.framework.proof.invariant_prop <> Os var
R47075:47076 CertiOS.framework.proof.invariant_prop <> ab var
R47082:47084 CertiOS.framework.logic.assertion <> INV def
R47086:47086 CertiOS.framework.proof.invariant_prop <> I var
R47011:47018 CertiOS.framework.auxlibs.Maps <> disjoint def
R47023:47024 CertiOS.framework.proof.invariant_prop <> Ms var
R47020:47021 CertiOS.framework.proof.invariant_prop <> Mc var
R46987:46994 CertiOS.framework.auxlibs.Maps <> disjoint def
R46999:47000 CertiOS.framework.proof.invariant_prop <> Os var
R46996:46997 CertiOS.framework.proof.invariant_prop <> Ol var
R46967:46975 CertiOS.framework.proof.auxdef <> good_is_S def
R46977:46977 CertiOS.framework.proof.invariant_prop <> S var
R47703:47705 Coq.Init.Logic <> :type_scope:x_'='_x not
R47706:47711 CertiOS.framework.model.language <> empisr def
R47703:47705 Coq.Init.Logic <> :type_scope:x_'='_x not
R47706:47711 CertiOS.framework.model.language <> empisr def
R47724:47737 CertiOS.framework.proof.invariant_prop <> swinvt_isr_emp thm
R47724:47737 CertiOS.framework.proof.invariant_prop <> swinvt_isr_emp thm
R47793:47795 Coq.Init.Logic <> :type_scope:x_'='_x not
R47796:47801 CertiOS.framework.model.language <> empisr def
R47793:47795 Coq.Init.Logic <> :type_scope:x_'='_x not
R47796:47801 CertiOS.framework.model.language <> empisr def
R47827:47831 CertiOS.framework.model.opsem <> projS def
R47852:47856 CertiOS.framework.model.opsem <> projD def
R47858:47858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47860:47861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47864:47864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47879:47881 CertiOS.framework.auxlibs.Maps <> get meth
R47852:47856 CertiOS.framework.model.opsem <> projD def
R47858:47858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47860:47861 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47864:47864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47879:47881 CertiOS.framework.auxlibs.Maps <> get meth
R47879:47881 CertiOS.framework.auxlibs.Maps <> get meth
R47951:47953 Coq.Init.Logic <> :type_scope:x_'='_x not
R47954:47959 CertiOS.framework.model.language <> empisr def
R47951:47953 Coq.Init.Logic <> :type_scope:x_'='_x not
R47954:47959 CertiOS.framework.model.language <> empisr def
R47985:47989 CertiOS.framework.model.opsem <> projS def
R48010:48014 CertiOS.framework.model.opsem <> projD def
R48016:48016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48018:48019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48022:48022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48010:48014 CertiOS.framework.model.opsem <> projD def
R48016:48016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48018:48019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48022:48022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48048:48050 CertiOS.framework.auxlibs.Maps <> get meth
R48084:48097 CertiOS.framework.model.language TaskLStMod get def
R48084:48097 CertiOS.framework.model.language TaskLStMod get def
R48194:48196 Coq.Init.Logic <> :type_scope:x_'='_x not
R48168:48172 CertiOS.framework.model.opsem <> projS def
R48174:48174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48176:48177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48180:48181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48188:48189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48191:48191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48182:48187 CertiOS.framework.model.language <> empisr def
R48197:48200 Coq.Init.Datatypes <> Some constr
R48202:48202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48204:48205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48208:48209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48211:48212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48219:48220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48232:48232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48213:48218 CertiOS.framework.model.language <> empisr def
R48221:48221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48224:48225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48228:48229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48231:48231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48194:48196 Coq.Init.Logic <> :type_scope:x_'='_x not
R48168:48172 CertiOS.framework.model.opsem <> projS def
R48174:48174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48176:48177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48180:48181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48188:48189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48191:48191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48182:48187 CertiOS.framework.model.language <> empisr def
R48197:48200 Coq.Init.Datatypes <> Some constr
R48202:48202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48204:48205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48208:48209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48211:48212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48219:48220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48232:48232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48213:48218 CertiOS.framework.model.language <> empisr def
R48221:48221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48224:48225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48228:48229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48231:48231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48288:48290 Coq.Init.Logic <> :type_scope:x_'='_x not
R48261:48265 CertiOS.framework.model.opsem <> projS def
R48267:48267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48269:48270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48273:48274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48281:48282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48284:48284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48275:48280 CertiOS.framework.model.language <> empisr def
R48291:48294 Coq.Init.Datatypes <> Some constr
R48296:48296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48299:48300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48303:48304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48307:48308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48315:48316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48329:48329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48309:48314 CertiOS.framework.model.language <> empisr def
R48317:48317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48320:48321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48324:48325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48328:48328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48288:48290 Coq.Init.Logic <> :type_scope:x_'='_x not
R48261:48265 CertiOS.framework.model.opsem <> projS def
R48267:48267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48269:48270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48273:48274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48281:48282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48284:48284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48275:48280 CertiOS.framework.model.language <> empisr def
R48291:48294 Coq.Init.Datatypes <> Some constr
R48296:48296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48299:48300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48303:48304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48307:48308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48315:48316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48329:48329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48309:48314 CertiOS.framework.model.language <> empisr def
R48317:48317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48320:48321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48324:48325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48328:48328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48391:48393 CertiOS.framework.auxlibs.Maps <> get meth
R48435:48447 CertiOS.framework.model.language CltEnvMod get def
R48435:48447 CertiOS.framework.model.language CltEnvMod get def
R48478:48491 CertiOS.framework.model.language TaskLStMod get def
R48478:48491 CertiOS.framework.model.language TaskLStMod get def
R48521:48533 CertiOS.framework.model.language CltEnvMod get def
R48521:48533 CertiOS.framework.model.language CltEnvMod get def
R48563:48576 CertiOS.framework.model.language TaskLStMod get def
R48563:48576 CertiOS.framework.model.language TaskLStMod get def
R48638:48643 CertiOS.framework.proof.invariant_prop <> absopx def
R48638:48643 CertiOS.framework.proof.invariant_prop <> absopx def
R48672:48677 CertiOS.framework.proof.invariant_prop <> absopx def
R48672:48677 CertiOS.framework.proof.invariant_prop <> absopx def
R48699:48701 CertiOS.framework.logic.assertion <> INV def
R48718:48726 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48718:48726 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48766:48773 CertiOS.framework.logic.assertion <> inv_ieon def
R48788:48796 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48788:48796 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48843:48848 CertiOS.framework.logic.assertion <> SWINVt def
R48865:48873 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48865:48873 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48898:48902 CertiOS.framework.logic.assertion <> SWINV def
R48919:48927 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48919:48927 CertiOS.framework.proof.invariant_prop <> sat_split thm
R48986:48994 CertiOS.framework.logic.assertion <> inv_ieoff def
R49011:49019 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49011:49019 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49058:49066 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49058:49066 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49128:49133 CertiOS.framework.logic.assertion <> SWINVt def
R49150:49158 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49150:49158 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49183:49187 CertiOS.framework.logic.assertion <> SWINV def
R49204:49212 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49204:49212 CertiOS.framework.proof.invariant_prop <> sat_split thm
R49356:49360 CertiOS.framework.auxlibs.Maps <> merge meth
R49369:49375 CertiOS.framework.logic.assertion <> empabst syndef
R49378:49382 CertiOS.framework.auxlibs.Maps <> merge meth
R49356:49360 CertiOS.framework.auxlibs.Maps <> merge meth
R49369:49375 CertiOS.framework.logic.assertion <> empabst syndef
R49378:49382 CertiOS.framework.auxlibs.Maps <> merge meth
R49435:49453 CertiOS.framework.proof.invariant_prop <> invariant_prop_map3 thm
R49435:49453 CertiOS.framework.proof.invariant_prop <> invariant_prop_map3 thm
R49663:49687 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge thm
R49663:49687 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge thm
R49705:49714 CertiOS.tactics.basetac.join_lib <> disj_emp_l thm
R49705:49714 CertiOS.tactics.basetac.join_lib <> disj_emp_l thm
R49738:49740 Coq.Init.Logic <> :type_scope:x_'='_x not
R49727:49731 CertiOS.framework.auxlibs.Maps <> merge meth
R49741:49745 CertiOS.framework.auxlibs.Maps <> merge meth
R49738:49740 Coq.Init.Logic <> :type_scope:x_'='_x not
R49727:49731 CertiOS.framework.auxlibs.Maps <> merge meth
R49741:49745 CertiOS.framework.auxlibs.Maps <> merge meth
R49764:49781 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R49764:49781 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R49792:49803 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R49792:49803 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R49846:49858 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R49846:49858 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R49880:49882 CertiOS.framework.logic.assertion <> INV def
R49893:49902 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R49893:49902 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R49917:49921 CertiOS.framework.auxlibs.Maps <> merge meth
R49934:49938 CertiOS.framework.auxlibs.Maps <> merge meth
R49917:49921 CertiOS.framework.auxlibs.Maps <> merge meth
R49934:49938 CertiOS.framework.auxlibs.Maps <> merge meth
R49967:49994 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R49967:49994 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R50011:50022 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50011:50022 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50034:50059 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R50034:50059 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R50078:50108 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R50078:50108 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R50127:50138 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50127:50138 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50169:50174 CertiOS.framework.logic.assertion <> getinv proj
R50197:50197 Coq.Init.Datatypes <> S constr
R50199:50202 CertiOS.framework.model.language <> INUM def
R50197:50197 Coq.Init.Datatypes <> S constr
R50199:50202 CertiOS.framework.model.language <> INUM def
R50232:50245 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R50232:50245 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R50273:50280 CertiOS.framework.logic.assertion <> inv_ieon def
R50291:50300 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R50291:50300 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R50335:50342 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50335:50342 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50359:50366 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50359:50366 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50391:50399 CertiOS.framework.logic.assertion <> emposabst def
R50439:50453 CertiOS.framework.proof.invariant_prop <> invlth_isr_add' thm
R50439:50453 CertiOS.framework.proof.invariant_prop <> invlth_isr_add' thm
R50491:50499 CertiOS.tactics.basetac.join_lib <> join_comm thm
R50491:50499 CertiOS.tactics.basetac.join_lib <> join_comm thm
R50517:50543 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R50517:50543 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R50578:50589 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50578:50589 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50600:50611 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50600:50611 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R50628:50636 CertiOS.tactics.basetac.join_lib <> join_comm thm
R50628:50636 CertiOS.tactics.basetac.join_lib <> join_comm thm
R50654:50682 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R50654:50682 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R50701:50706 CertiOS.framework.logic.assertion <> RDYINV def
R50725:50734 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R50725:50734 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R50778:50785 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50778:50785 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50802:50809 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50802:50809 CertiOS.tactics.basetac.join_lib <> join_emp thm
R50843:50851 CertiOS.framework.logic.assertion <> emposabst def
R51059:51066 CertiOS.tactics.basetac.join_lib <> join_emp thm
R51059:51066 CertiOS.tactics.basetac.join_lib <> join_emp thm
R51083:51090 CertiOS.tactics.basetac.join_lib <> join_emp thm
R51083:51090 CertiOS.tactics.basetac.join_lib <> join_emp thm
R51195:51199 CertiOS.framework.auxlibs.Maps <> merge meth
R51212:51216 CertiOS.framework.auxlibs.Maps <> merge meth
R51195:51199 CertiOS.framework.auxlibs.Maps <> merge meth
R51212:51216 CertiOS.framework.auxlibs.Maps <> merge meth
R51265:51283 CertiOS.framework.proof.invariant_prop <> invariant_prop_map4 thm
R51265:51283 CertiOS.framework.proof.invariant_prop <> invariant_prop_map4 thm
R51486:51494 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51486:51494 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51512:51537 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge' thm
R51512:51537 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge' thm
R51576:51593 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R51576:51593 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R51611:51619 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51611:51619 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51646:51657 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R51646:51657 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R51676:51704 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R51676:51704 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R51739:51747 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51739:51747 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51765:51790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge' thm
R51765:51790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge' thm
R51844:51846 CertiOS.framework.logic.assertion <> INV def
R51867:51876 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R51867:51876 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R51919:51927 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51919:51927 CertiOS.tactics.basetac.join_lib <> join_comm thm
R51939:51953 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R51939:51953 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R51965:51990 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R51965:51990 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R52008:52016 CertiOS.tactics.basetac.join_lib <> join_comm thm
R52008:52016 CertiOS.tactics.basetac.join_lib <> join_comm thm
R52028:52042 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R52028:52042 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R52054:52082 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R52054:52082 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R52107:52107 Coq.Init.Datatypes <> S constr
R52109:52112 CertiOS.framework.model.language <> INUM def
R52107:52107 Coq.Init.Datatypes <> S constr
R52109:52112 CertiOS.framework.model.language <> INUM def
R52143:52148 CertiOS.framework.logic.assertion <> getinv proj
R52165:52178 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R52165:52178 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R52206:52213 CertiOS.framework.logic.assertion <> inv_ieon def
R52224:52233 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R52224:52233 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R52270:52277 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52270:52277 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52294:52301 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52294:52301 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52326:52334 CertiOS.framework.logic.assertion <> emposabst def
R52374:52380 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R52382:52383 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R52385:52387 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R52388:52391 CertiOS.framework.model.language <> INUM def
R52374:52380 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R52382:52383 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R52385:52387 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R52388:52391 CertiOS.framework.model.language <> INUM def
R52416:52419 CertiOS.framework.model.language <> INUM def
R52457:52460 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52453:52456 CertiOS.framework.model.language <> INUM def
R52461:52461 Coq.Init.Datatypes <> S constr
R52463:52466 CertiOS.framework.model.language <> INUM def
R52457:52460 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52453:52456 CertiOS.framework.model.language <> INUM def
R52461:52461 Coq.Init.Datatypes <> S constr
R52463:52466 CertiOS.framework.model.language <> INUM def
R52479:52482 CertiOS.framework.model.language <> INUM def
R52504:52516 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R52504:52516 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R52547:52549 Coq.Init.Logic <> :type_scope:x_'='_x not
R52550:52554 CertiOS.framework.auxlibs.Maps <> merge meth
R52547:52549 Coq.Init.Logic <> :type_scope:x_'='_x not
R52550:52554 CertiOS.framework.auxlibs.Maps <> merge meth
R52573:52582 CertiOS.tactics.basetac.join_lib <> join_merge thm
R52573:52582 CertiOS.tactics.basetac.join_lib <> join_merge thm
R52603:52605 Coq.Init.Logic <> :type_scope:x_'='_x not
R52606:52610 CertiOS.framework.auxlibs.Maps <> merge meth
R52603:52605 Coq.Init.Logic <> :type_scope:x_'='_x not
R52606:52610 CertiOS.framework.auxlibs.Maps <> merge meth
R52629:52638 CertiOS.tactics.basetac.join_lib <> join_merge thm
R52629:52638 CertiOS.tactics.basetac.join_lib <> join_merge thm
R52676:52689 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R52676:52689 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R52708:52719 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R52708:52719 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R52738:52749 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R52738:52749 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R52770:52775 CertiOS.framework.logic.assertion <> RDYINV def
R52794:52803 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R52794:52803 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R52838:52845 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52838:52845 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52862:52869 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52862:52869 CertiOS.tactics.basetac.join_lib <> join_emp thm
R52894:52902 CertiOS.framework.logic.assertion <> emposabst def
R53006:53010 CertiOS.framework.auxlibs.Maps <> merge meth
R53022:53026 CertiOS.framework.auxlibs.Maps <> merge meth
R53006:53010 CertiOS.framework.auxlibs.Maps <> merge meth
R53022:53026 CertiOS.framework.auxlibs.Maps <> merge meth
R53063:53074 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53063:53074 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53107:53125 CertiOS.framework.proof.invariant_prop <> invariant_prop_map5 thm
R53107:53125 CertiOS.framework.proof.invariant_prop <> invariant_prop_map5 thm
R53329:53355 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge'' thm
R53329:53355 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge'' thm
R53392:53403 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53392:53403 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53415:53432 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R53415:53432 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R53460:53471 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R53460:53471 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R53489:53500 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53489:53500 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R53518:53546 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R53518:53546 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R53582:53608 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge'' thm
R53582:53608 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_merge'' thm
R53636:53638 CertiOS.framework.logic.assertion <> INV def
R53649:53658 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R53649:53658 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R53672:53677 CertiOS.framework.logic.assertion <> empmem syndef
R53682:53688 CertiOS.framework.logic.assertion <> empabst syndef
R53672:53677 CertiOS.framework.logic.assertion <> empmem syndef
R53682:53688 CertiOS.framework.logic.assertion <> empabst syndef
R53709:53717 CertiOS.tactics.basetac.join_lib <> join_comm thm
R53726:53733 CertiOS.tactics.basetac.join_lib <> join_emp thm
R53709:53717 CertiOS.tactics.basetac.join_lib <> join_comm thm
R53726:53733 CertiOS.tactics.basetac.join_lib <> join_emp thm
R53750:53758 CertiOS.tactics.basetac.join_lib <> join_comm thm
R53767:53774 CertiOS.tactics.basetac.join_lib <> join_emp thm
R53750:53758 CertiOS.tactics.basetac.join_lib <> join_comm thm
R53767:53774 CertiOS.tactics.basetac.join_lib <> join_emp thm
R53806:53811 CertiOS.framework.logic.assertion <> getinv proj
R53834:53834 Coq.Init.Datatypes <> S constr
R53836:53839 CertiOS.framework.model.language <> INUM def
R53834:53834 Coq.Init.Datatypes <> S constr
R53836:53839 CertiOS.framework.model.language <> INUM def
R53870:53883 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R53870:53883 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R53912:53920 CertiOS.framework.logic.assertion <> inv_ieoff def
R53931:53940 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R53931:53940 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R53982:53989 CertiOS.tactics.basetac.join_lib <> join_emp thm
R53982:53989 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54007:54014 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54007:54014 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54040:54048 CertiOS.framework.logic.assertion <> emposabst def
R54066:54069 CertiOS.framework.model.language <> INUM def
R54066:54069 CertiOS.framework.model.language <> INUM def
R54080:54089 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R54080:54089 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R54133:54140 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54133:54140 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54157:54164 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54157:54164 CertiOS.tactics.basetac.join_lib <> join_emp thm
R54189:54197 CertiOS.framework.logic.assertion <> emposabst def
R54231:54239 CertiOS.framework.logic.assertion <> emposabst def
R54258:54263 CertiOS.framework.logic.assertion <> RDYINV def
R54284:54289 CertiOS.framework.logic.assertion <> SWINVt def
R54300:54309 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R54300:54309 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R54322:54326 CertiOS.framework.auxlibs.Maps <> merge meth
R54339:54343 CertiOS.framework.auxlibs.Maps <> merge meth
R54322:54326 CertiOS.framework.auxlibs.Maps <> merge meth
R54339:54343 CertiOS.framework.auxlibs.Maps <> merge meth
R54374:54382 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54374:54382 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54393:54401 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54393:54401 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54431:54433 Coq.Init.Logic <> :type_scope:x_'='_x not
R54420:54424 CertiOS.framework.auxlibs.Maps <> merge meth
R54434:54438 CertiOS.framework.auxlibs.Maps <> merge meth
R54431:54433 Coq.Init.Logic <> :type_scope:x_'='_x not
R54420:54424 CertiOS.framework.auxlibs.Maps <> merge meth
R54434:54438 CertiOS.framework.auxlibs.Maps <> merge meth
R54457:54474 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R54457:54474 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R54491:54499 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54491:54499 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54516:54527 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54516:54527 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54545:54570 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R54545:54570 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R54603:54630 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R54603:54630 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R54647:54658 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54647:54658 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54669:54680 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54669:54680 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54697:54705 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54697:54705 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54723:54748 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R54723:54748 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R54767:54775 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54767:54775 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54806:54814 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54806:54814 CertiOS.tactics.basetac.join_lib <> join_comm thm
R54844:54846 Coq.Init.Logic <> :type_scope:x_'='_x not
R54833:54837 CertiOS.framework.auxlibs.Maps <> merge meth
R54847:54851 CertiOS.framework.auxlibs.Maps <> merge meth
R54844:54846 Coq.Init.Logic <> :type_scope:x_'='_x not
R54833:54837 CertiOS.framework.auxlibs.Maps <> merge meth
R54847:54851 CertiOS.framework.auxlibs.Maps <> merge meth
R54870:54887 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R54870:54887 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R54905:54933 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R54905:54933 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R54951:54962 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54951:54962 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R54993:55023 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R54993:55023 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R55040:55048 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55040:55048 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55065:55076 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R55065:55076 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R55087:55098 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R55087:55098 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R55116:55144 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R55116:55144 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R55164:55168 CertiOS.framework.logic.assertion <> SWINV def
R55179:55188 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R55179:55188 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R55223:55230 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55223:55230 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55247:55254 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55247:55254 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55311:55318 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55311:55318 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55335:55342 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55335:55342 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55371:55379 CertiOS.framework.logic.assertion <> emposabst def
R55425:55428 CertiOS.framework.model.language <> INUM def
R55425:55428 CertiOS.framework.model.language <> INUM def
R55439:55448 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R55439:55448 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R55492:55499 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55492:55499 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55516:55523 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55516:55523 CertiOS.tactics.basetac.join_lib <> join_emp thm
R55548:55556 CertiOS.framework.logic.assertion <> emposabst def
R55576:55583 CertiOS.framework.auxlibs.Maps <> disjoint def
R55576:55583 CertiOS.framework.auxlibs.Maps <> disjoint def
R55621:55629 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55621:55629 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55647:55673 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R55647:55673 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R55693:55700 CertiOS.framework.auxlibs.Maps <> disjoint def
R55693:55700 CertiOS.framework.auxlibs.Maps <> disjoint def
R55738:55746 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55738:55746 CertiOS.tactics.basetac.join_lib <> join_comm thm
R55764:55790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R55764:55790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R55868:55881 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R55868:55881 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R55944:55956 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R55944:55956 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R55974:55977 CertiOS.framework.model.language <> INUM def
R55996:55999 CertiOS.framework.model.language <> INUM def
R56029:56042 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R56029:56042 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R56060:56071 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R56060:56071 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R56090:56101 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R56090:56101 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R56120:56123 CertiOS.framework.model.language <> INUM def
R56142:56145 CertiOS.framework.model.language <> INUM def
R56167:56169 Coq.Init.Logic <> :type_scope:x_'='_x not
R56170:56174 CertiOS.framework.auxlibs.Maps <> merge meth
R56167:56169 Coq.Init.Logic <> :type_scope:x_'='_x not
R56170:56174 CertiOS.framework.auxlibs.Maps <> merge meth
R56192:56201 CertiOS.tactics.basetac.join_lib <> join_merge thm
R56192:56201 CertiOS.tactics.basetac.join_lib <> join_merge thm
R56222:56224 Coq.Init.Logic <> :type_scope:x_'='_x not
R56225:56229 CertiOS.framework.auxlibs.Maps <> merge meth
R56222:56224 Coq.Init.Logic <> :type_scope:x_'='_x not
R56225:56229 CertiOS.framework.auxlibs.Maps <> merge meth
R56248:56257 CertiOS.tactics.basetac.join_lib <> join_merge thm
R56248:56257 CertiOS.tactics.basetac.join_lib <> join_merge thm
R56286:56297 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56286:56297 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56286:56297 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56310:56321 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56310:56321 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56310:56321 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R56446:56453 CertiOS.tactics.basetac.join_lib <> join_emp thm
R56446:56453 CertiOS.tactics.basetac.join_lib <> join_emp thm
R56470:56477 CertiOS.tactics.basetac.join_lib <> join_emp thm
R56470:56477 CertiOS.tactics.basetac.join_lib <> join_emp thm
R56506:56514 CertiOS.framework.logic.assertion <> emposabst def
R56749:56760 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R56684:56684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56686:56687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56690:56691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56703:56704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56711:56712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56727:56728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56740:56741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56748:56748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56692:56696 CertiOS.framework.auxlibs.Maps <> merge meth
R56705:56710 CertiOS.framework.model.language <> empisr def
R56713:56713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56719:56720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56723:56724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56726:56726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56714:56718 Coq.Init.Datatypes <> false constr
R56729:56733 CertiOS.framework.auxlibs.Maps <> merge meth
R56742:56747 CertiOS.framework.proof.invariant_prop <> absopx def
R56761:56770 CertiOS.framework.logic.assertion <> invlth_isr def
R56776:56779 CertiOS.framework.model.language <> INUM def
R56749:56760 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R56684:56684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56686:56687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56690:56691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56703:56704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56711:56712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56727:56728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56740:56741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56748:56748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56692:56696 CertiOS.framework.auxlibs.Maps <> merge meth
R56705:56710 CertiOS.framework.model.language <> empisr def
R56713:56713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56719:56720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56723:56724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56726:56726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56714:56718 Coq.Init.Datatypes <> false constr
R56729:56733 CertiOS.framework.auxlibs.Maps <> merge meth
R56742:56747 CertiOS.framework.proof.invariant_prop <> absopx def
R56761:56770 CertiOS.framework.logic.assertion <> invlth_isr def
R56776:56779 CertiOS.framework.model.language <> INUM def
R56868:56881 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R56868:56881 CertiOS.framework.proof.invariant_prop <> invlth_isr_add thm
R56899:56907 CertiOS.tactics.basetac.join_lib <> join_comm thm
R56899:56907 CertiOS.tactics.basetac.join_lib <> join_comm thm
R56925:56951 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R56925:56951 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R56969:56977 CertiOS.tactics.basetac.join_lib <> join_comm thm
R56969:56977 CertiOS.tactics.basetac.join_lib <> join_comm thm
R56995:57021 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R56995:57021 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_disjoint thm
R57082:57091 CertiOS.framework.logic.assertion <> invlth_isr def
R57109:57120 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57109:57120 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57109:57120 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57133:57144 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57133:57144 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57133:57144 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R57156:57179 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R57156:57179 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R57201:57213 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R57201:57213 CertiOS.framework.proof.invariant_prop <> invlth_divide thm
R57251:57255 CertiOS.framework.auxlibs.Maps <> merge meth
R57265:57269 CertiOS.framework.auxlibs.Maps <> merge meth
R57278:57282 CertiOS.framework.auxlibs.Maps <> merge meth
R57292:57296 CertiOS.framework.auxlibs.Maps <> merge meth
R57251:57255 CertiOS.framework.auxlibs.Maps <> merge meth
R57265:57269 CertiOS.framework.auxlibs.Maps <> merge meth
R57278:57282 CertiOS.framework.auxlibs.Maps <> merge meth
R57292:57296 CertiOS.framework.auxlibs.Maps <> merge meth
R57325:57333 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57325:57333 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57351:57400 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge_join_disjoint_merge_merge thm
R57351:57400 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge_join_disjoint_merge_merge thm
R57418:57426 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57418:57426 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57444:57468 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge4 thm
R57444:57468 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge4 thm
R57486:57494 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57486:57494 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57512:57561 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge_join_disjoint_merge_merge thm
R57512:57561 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge_join_disjoint_merge_merge thm
R57579:57587 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57579:57587 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57605:57629 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge4 thm
R57605:57629 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_join_merge4 thm
R57658:57660 CertiOS.framework.logic.assertion <> INV def
R57671:57680 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R57671:57680 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R57723:57737 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R57723:57737 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R57772:57780 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57772:57780 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57797:57808 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R57797:57808 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R57820:57847 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint thm
R57820:57847 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint thm
R57890:57904 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R57890:57904 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R57915:57923 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57915:57923 CertiOS.tactics.basetac.join_lib <> join_comm thm
R57940:57951 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R57940:57951 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R57963:57990 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint thm
R57963:57990 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint thm
R58024:58029 CertiOS.framework.logic.assertion <> getinv proj
R58052:58052 Coq.Init.Datatypes <> S constr
R58054:58057 CertiOS.framework.model.language <> INUM def
R58052:58052 Coq.Init.Datatypes <> S constr
R58054:58057 CertiOS.framework.model.language <> INUM def
R58088:58101 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R58088:58101 CertiOS.framework.proof.invariant_prop <> good_inv_prop' thm
R58130:58138 CertiOS.framework.logic.assertion <> inv_ieoff def
R58149:58158 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58149:58158 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58202:58209 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58202:58209 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58227:58234 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58227:58234 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58259:58267 CertiOS.framework.logic.assertion <> emposabst def
R58296:58305 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58296:58305 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58349:58356 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58349:58356 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58373:58380 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58373:58380 CertiOS.tactics.basetac.join_lib <> join_emp thm
R58405:58413 CertiOS.framework.logic.assertion <> emposabst def
R58473:58482 CertiOS.framework.logic.assertion <> invlth_isr def
R58499:58522 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R58499:58522 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R58551:58556 CertiOS.framework.logic.assertion <> RDYINV def
R58577:58582 CertiOS.framework.logic.assertion <> SWINVt def
R58593:58602 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58593:58602 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58645:58653 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58662:58676 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R58645:58653 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58662:58676 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R58717:58728 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R58717:58728 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R58739:58747 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58739:58747 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58765:58793 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint' thm
R58765:58793 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint' thm
R58811:58819 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58811:58819 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58830:58844 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R58830:58844 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R58879:58887 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58879:58887 CertiOS.tactics.basetac.join_lib <> join_comm thm
R58904:58915 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R58904:58915 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R58927:58955 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint' thm
R58927:58955 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_join_merge_disjoint' thm
R58975:58979 CertiOS.framework.logic.assertion <> SWINV def
R58990:58999 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R58990:58999 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R59034:59041 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59034:59041 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59058:59065 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59058:59065 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59122:59129 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59122:59129 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59146:59153 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59146:59153 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59182:59190 CertiOS.framework.logic.assertion <> emposabst def
R59247:59256 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R59247:59256 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R59300:59307 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59300:59307 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59324:59331 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59324:59331 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59356:59364 CertiOS.framework.logic.assertion <> emposabst def
R59397:59406 CertiOS.framework.logic.assertion <> invlth_isr def
R59423:59446 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R59423:59446 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab thm
R59567:59574 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59567:59574 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59591:59598 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59591:59598 CertiOS.tactics.basetac.join_lib <> join_emp thm
R59625:59633 CertiOS.framework.logic.assertion <> emposabst def
R59706:59711 CertiOS.framework.proof.invariant_prop <> absopx def
R59706:59711 CertiOS.framework.proof.invariant_prop <> absopx def
prf 59726:59751 <> osabst_disj_indom_set_disj
R59766:59771 CertiOS.framework.model.language <> osabst def
R59795:59798 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59812:59819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59820:59827 CertiOS.framework.auxlibs.Maps <> disjoint def
R59841:59842 CertiOS.framework.proof.invariant_prop <> O' var
R59830:59832 CertiOS.framework.auxlibs.Maps <> set meth
R59838:59838 CertiOS.framework.proof.invariant_prop <> y var
R59836:59836 CertiOS.framework.proof.invariant_prop <> x var
R59834:59834 CertiOS.framework.proof.invariant_prop <> O var
R59799:59806 CertiOS.framework.auxlibs.Maps <> disjoint def
R59810:59811 CertiOS.framework.proof.invariant_prop <> O' var
R59808:59808 CertiOS.framework.proof.invariant_prop <> O var
R59786:59790 CertiOS.framework.auxlibs.Maps <> indom def
R59794:59794 CertiOS.framework.proof.invariant_prop <> x var
R59792:59792 CertiOS.framework.proof.invariant_prop <> O var
R59899:59913 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R59899:59913 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
prf 59935:59949 <> swi_rdy_inv'''1
R59967:59972 CertiOS.framework.model.language <> taskst def
R60003:60005 CertiOS.framework.logic.assertion <> Inv def
R60016:60018 CertiOS.framework.auxlibs.Modules <> tid def
R60026:60032 CertiOS.framework.model.language <> osstate def
R60077:60079 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R60071:60073 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R60065:60067 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R60053:60055 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R60050:60052 CertiOS.framework.model.memory <> env def
R60056:60064 CertiOS.framework.model.language EnvSpec B def
R60068:60070 CertiOS.framework.model.memory <> mem def
R60074:60076 CertiOS.framework.model.language <> isr def
R60080:60092 CertiOS.framework.model.language LocalStSpec B def
R60110:60114 CertiOS.framework.auxlibs.Modules <> block def
R60123:60126 CertiOS.framework.model.memory <> type ind
R60136:60138 CertiOS.framework.model.memory <> mem def
R60147:60153 CertiOS.framework.model.language <> ossched def
R60166:60166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60233:60241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60253:60260 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60274:60280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60295:60302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60317:60324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60325:60325 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60379:60387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60388:60388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60447:60455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60456:60456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60526:60534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60553:60560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60581:60588 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60652:60659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60708:60715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60716:60722 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R60726:60726 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R60730:60730 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R60734:60734 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R60738:60745 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R60762:60771 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60746:60753 CertiOS.framework.auxlibs.Maps <> disjoint def
R60800:60809 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60785:60787 Coq.Init.Logic <> :type_scope:x_'='_x not
R60772:60776 CertiOS.framework.auxlibs.Maps <> merge meth
R60788:60792 CertiOS.framework.auxlibs.Maps <> merge meth
R60798:60799 CertiOS.framework.proof.invariant_prop <> Ms var
R60794:60796 CertiOS.framework.proof.invariant_prop <> Mcc var
R60826:60835 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60810:60817 CertiOS.framework.auxlibs.Maps <> disjoint def
R60889:60898 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60849:60852 Coq.Init.Logic <> :type_scope:x_'='_x not
R60836:60840 CertiOS.framework.auxlibs.Maps <> merge meth
R60853:60855 CertiOS.framework.auxlibs.Maps <> set meth
R60879:60884 CertiOS.framework.model.language <> oscurt constr
R60886:60887 CertiOS.framework.proof.invariant_prop <> t' var
R60871:60876 CertiOS.framework.model.language <> curtid constr
R60858:60862 CertiOS.framework.auxlibs.Maps <> merge meth
R60867:60868 CertiOS.framework.proof.invariant_prop <> Os var
R60864:60865 CertiOS.framework.proof.invariant_prop <> Ol var
R60899:60899 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60956:60967 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61030:61030 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60912:60916 CertiOS.framework.logic.assertion <> absop def
R60947:60950 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60919:60919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60937:60938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60942:60943 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60946:60946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60920:60929 CertiOS.framework.logic.assertion <> substaskst def
R60931:60932 CertiOS.framework.proof.invariant_prop <> o' var
R60944:60945 CertiOS.framework.proof.invariant_prop <> ab var
R60951:60953 CertiOS.framework.logic.assertion <> INV def
R60955:60955 CertiOS.framework.proof.invariant_prop <> I var
R60980:60984 CertiOS.framework.logic.assertion <> absop def
R61015:61018 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60987:60987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61005:61006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61010:61011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61014:61014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60988:60997 CertiOS.framework.logic.assertion <> substaskst def
R60999:61000 CertiOS.framework.proof.invariant_prop <> o' var
R61012:61013 CertiOS.framework.proof.invariant_prop <> ab var
R61019:61024 CertiOS.framework.logic.assertion <> RDYINV def
R61028:61029 CertiOS.framework.proof.invariant_prop <> t' var
R61026:61026 CertiOS.framework.proof.invariant_prop <> I var
R60697:60699 Coq.Init.Logic <> :type_scope:x_'='_x not
R60660:60664 CertiOS.framework.model.memory <> store def
R60689:60692 CertiOS.framework.model.memory <> Vptr constr
R60694:60695 CertiOS.framework.proof.invariant_prop <> t' var
R60679:60679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60681:60682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60686:60686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60680:60680 CertiOS.framework.proof.invariant_prop <> b var
R60676:60677 CertiOS.framework.proof.invariant_prop <> Mc var
R60667:60670 CertiOS.framework.model.memory <> Tptr constr
R60672:60673 CertiOS.framework.proof.invariant_prop <> tp var
R60700:60703 Coq.Init.Datatypes <> Some constr
R60705:60707 CertiOS.framework.proof.invariant_prop <> Mcc var
R60632:60634 Coq.Init.Logic <> :type_scope:x_'='_x not
R60589:60598 CertiOS.framework.model.memory EnvMod get def
R60624:60631 CertiOS.framework.model.opsem <> OSTCBCur def
R60601:60608 CertiOS.framework.model.opsem <> get_genv def
R60611:60618 CertiOS.framework.model.language <> get_smem def
R60620:60620 CertiOS.framework.proof.invariant_prop <> o var
R60635:60638 Coq.Init.Datatypes <> Some constr
R60640:60640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60642:60643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60651:60651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60641:60641 CertiOS.framework.proof.invariant_prop <> b var
R60644:60647 CertiOS.framework.model.memory <> Tptr constr
R60649:60650 CertiOS.framework.proof.invariant_prop <> tp var
R60571:60573 Coq.Init.Logic <> :type_scope:x_'='_x not
R60561:60565 CertiOS.framework.model.opsem <> projS def
R60569:60570 CertiOS.framework.proof.invariant_prop <> t' var
R60567:60567 CertiOS.framework.proof.invariant_prop <> S var
R60574:60577 Coq.Init.Datatypes <> Some constr
R60579:60580 CertiOS.framework.proof.invariant_prop <> o' var
R60544:60546 Coq.Init.Logic <> :type_scope:x_'='_x not
R60535:60539 CertiOS.framework.model.opsem <> projS def
R60543:60543 CertiOS.framework.proof.invariant_prop <> t var
R60541:60541 CertiOS.framework.proof.invariant_prop <> S var
R60547:60550 Coq.Init.Datatypes <> Some constr
R60552:60552 CertiOS.framework.proof.invariant_prop <> o var
R60469:60473 CertiOS.framework.logic.assertion <> absop def
R60501:60504 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60476:60476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60492:60493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60496:60497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60500:60500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60477:60486 CertiOS.framework.logic.assertion <> substaskst def
R60490:60491 CertiOS.framework.proof.invariant_prop <> Mc var
R60488:60488 CertiOS.framework.proof.invariant_prop <> o var
R60494:60495 CertiOS.framework.proof.invariant_prop <> Ol var
R60498:60499 CertiOS.framework.proof.invariant_prop <> ab var
R60517:60520 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60505:60510 CertiOS.framework.logic.assertion <> AHprio constr
R60515:60516 CertiOS.framework.proof.invariant_prop <> t' var
R60512:60513 CertiOS.framework.proof.invariant_prop <> sc var
R60521:60525 CertiOS.framework.logic.assertion <> Atrue constr
R60401:60405 CertiOS.framework.logic.assertion <> absop def
R60433:60436 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60408:60408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60424:60425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60428:60429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60432:60432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60409:60418 CertiOS.framework.logic.assertion <> substaskst def
R60422:60423 CertiOS.framework.proof.invariant_prop <> Mc var
R60420:60420 CertiOS.framework.proof.invariant_prop <> o var
R60426:60427 CertiOS.framework.proof.invariant_prop <> Ol var
R60430:60431 CertiOS.framework.proof.invariant_prop <> ab var
R60437:60442 CertiOS.framework.logic.assertion <> SWINVt def
R60446:60446 CertiOS.framework.proof.invariant_prop <> t var
R60444:60444 CertiOS.framework.proof.invariant_prop <> I var
R60338:60342 CertiOS.framework.logic.assertion <> absop def
R60370:60373 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60345:60345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60361:60362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60365:60366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60369:60369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60346:60355 CertiOS.framework.logic.assertion <> substaskst def
R60359:60360 CertiOS.framework.proof.invariant_prop <> Ms var
R60357:60357 CertiOS.framework.proof.invariant_prop <> o var
R60363:60364 CertiOS.framework.proof.invariant_prop <> Os var
R60367:60368 CertiOS.framework.proof.invariant_prop <> ab var
R60374:60376 CertiOS.framework.logic.assertion <> INV def
R60378:60378 CertiOS.framework.proof.invariant_prop <> I var
R60303:60310 CertiOS.framework.auxlibs.Maps <> disjoint def
R60315:60316 CertiOS.framework.proof.invariant_prop <> Ms var
R60312:60313 CertiOS.framework.proof.invariant_prop <> Mc var
R60281:60288 CertiOS.framework.auxlibs.Maps <> disjoint def
R60293:60294 CertiOS.framework.proof.invariant_prop <> Os var
R60290:60291 CertiOS.framework.proof.invariant_prop <> Ol var
R60261:60265 CertiOS.framework.logic.inferules <> GoodI def
R60272:60273 CertiOS.framework.proof.invariant_prop <> li var
R60269:60270 CertiOS.framework.proof.invariant_prop <> sc var
R60267:60267 CertiOS.framework.proof.invariant_prop <> I var
R60242:60250 CertiOS.framework.proof.auxdef <> good_is_S def
R60252:60252 CertiOS.framework.proof.invariant_prop <> S var
R60179:60183 CertiOS.framework.logic.assertion <> absop def
R60211:60214 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R60186:60186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60202:60203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60206:60207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60210:60210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60187:60196 CertiOS.framework.logic.assertion <> substaskst def
R60200:60201 CertiOS.framework.proof.invariant_prop <> Mc var
R60198:60198 CertiOS.framework.proof.invariant_prop <> o var
R60204:60205 CertiOS.framework.proof.invariant_prop <> Ol var
R60208:60209 CertiOS.framework.proof.invariant_prop <> ab var
R60215:60225 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R60232:60232 CertiOS.framework.proof.invariant_prop <> t var
R60230:60230 CertiOS.framework.proof.invariant_prop <> x var
R60227:60228 CertiOS.framework.proof.invariant_prop <> sc var
R61094:61098 CertiOS.framework.logic.assertion <> absop def
R61149:61152 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R61101:61101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61118:61118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61144:61145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61148:61148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61102:61111 CertiOS.framework.logic.assertion <> substaskst def
R61119:61121 CertiOS.framework.auxlibs.Maps <> set meth
R61134:61139 CertiOS.framework.model.language <> oscurt constr
R61126:61131 CertiOS.framework.model.language <> curtid constr
R61146:61147 CertiOS.framework.proof.invariant_prop <> ab var
R61153:61158 CertiOS.framework.logic.assertion <> SWINVt def
R61094:61098 CertiOS.framework.logic.assertion <> absop def
R61149:61152 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R61101:61101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61118:61118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61144:61145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61148:61148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61102:61111 CertiOS.framework.logic.assertion <> substaskst def
R61119:61121 CertiOS.framework.auxlibs.Maps <> set meth
R61134:61139 CertiOS.framework.model.language <> oscurt constr
R61126:61131 CertiOS.framework.model.language <> curtid constr
R61146:61147 CertiOS.framework.proof.invariant_prop <> ab var
R61153:61158 CertiOS.framework.logic.assertion <> SWINVt def
R61176:61180 CertiOS.framework.logic.inferules <> GoodI def
R61240:61241 Coq.Init.Logic <> :type_scope:x_'='_x not
R61224:61233 CertiOS.framework.logic.assertion <> substaskst def
R61242:61251 CertiOS.framework.logic.assertion <> substaskst def
R61254:61263 CertiOS.framework.logic.assertion <> substaskst def
R61240:61241 Coq.Init.Logic <> :type_scope:x_'='_x not
R61224:61233 CertiOS.framework.logic.assertion <> substaskst def
R61242:61251 CertiOS.framework.logic.assertion <> substaskst def
R61254:61263 CertiOS.framework.logic.assertion <> substaskst def
R61478:61488 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R61643:61645 Coq.Init.Logic <> :type_scope:x_'='_x not
R61599:61601 CertiOS.framework.auxlibs.Maps <> get meth
R61634:61642 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R61604:61606 CertiOS.framework.auxlibs.Maps <> sig meth
R61619:61628 CertiOS.framework.model.language <> abstcblist constr
R61608:61616 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R61646:61649 Coq.Init.Datatypes <> Some constr
R61652:61661 CertiOS.framework.model.language <> abstcblist constr
R61643:61645 Coq.Init.Logic <> :type_scope:x_'='_x not
R61599:61601 CertiOS.framework.auxlibs.Maps <> get meth
R61634:61642 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R61604:61606 CertiOS.framework.auxlibs.Maps <> sig meth
R61619:61628 CertiOS.framework.model.language <> abstcblist constr
R61608:61616 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R61646:61649 Coq.Init.Datatypes <> Some constr
R61652:61661 CertiOS.framework.model.language <> abstcblist constr
R61676:61686 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R61676:61686 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R61698:61707 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R61698:61707 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R61844:61862 CertiOS.framework.proof.invariant_prop <> osabst_merge_set_eq thm
R61844:61862 CertiOS.framework.proof.invariant_prop <> osabst_merge_set_eq thm
R61844:61862 CertiOS.framework.proof.invariant_prop <> osabst_merge_set_eq thm
R61874:61885 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv' thm
R61874:61885 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv' thm
R61903:61928 CertiOS.framework.proof.invariant_prop <> osabst_disj_indom_set_disj thm
R61903:61928 CertiOS.framework.proof.invariant_prop <> osabst_disj_indom_set_disj thm
R61958:61962 CertiOS.framework.logic.assertion <> absop def
R61990:61993 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R61965:61965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61981:61982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61985:61986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61989:61989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61966:61975 CertiOS.framework.logic.assertion <> substaskst def
R61987:61988 CertiOS.framework.proof.invariant_prop <> ab var
R62004:62007 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R61994:61999 CertiOS.framework.logic.assertion <> SWINVt def
R62008:62011 CertiOS.framework.logic.assertion <> Aemp constr
R61958:61962 CertiOS.framework.logic.assertion <> absop def
R61990:61993 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R61965:61965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61981:61982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61985:61986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61989:61989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61966:61975 CertiOS.framework.logic.assertion <> substaskst def
R61987:61988 CertiOS.framework.proof.invariant_prop <> ab var
R62004:62007 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R61994:61999 CertiOS.framework.logic.assertion <> SWINVt def
R62008:62011 CertiOS.framework.logic.assertion <> Aemp constr
R62063:62084 CertiOS.framework.proof.invariant_prop <> GoodI_SWINV_indom_curt thm
R62063:62084 CertiOS.framework.proof.invariant_prop <> GoodI_SWINV_indom_curt thm
R62123:62137 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R62123:62137 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
prf 63551:63568 <> partm_task_get_set
R63611:63614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63631:63634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63635:63639 CertiOS.framework.proof.auxdef <> partM ind
R63656:63657 CertiOS.framework.proof.invariant_prop <> To var
R63644:63646 CertiOS.framework.auxlibs.Maps <> set meth
R63652:63653 CertiOS.framework.proof.invariant_prop <> C' var
R63650:63650 CertiOS.framework.proof.invariant_prop <> t var
R63648:63648 CertiOS.framework.proof.invariant_prop <> T var
R63641:63641 CertiOS.framework.proof.invariant_prop <> O var
R63622:63624 Coq.Init.Logic <> :type_scope:x_'='_x not
R63615:63617 CertiOS.framework.auxlibs.Maps <> get meth
R63621:63621 CertiOS.framework.proof.invariant_prop <> t var
R63619:63619 CertiOS.framework.proof.invariant_prop <> T var
R63625:63628 Coq.Init.Datatypes <> Some constr
R63630:63630 CertiOS.framework.proof.invariant_prop <> C var
R63599:63603 CertiOS.framework.proof.auxdef <> partM ind
R63609:63610 CertiOS.framework.proof.invariant_prop <> To var
R63607:63607 CertiOS.framework.proof.invariant_prop <> T var
R63605:63605 CertiOS.framework.proof.invariant_prop <> O var
R63699:63705 CertiOS.framework.proof.auxdef <> partm_O constr
R63699:63705 CertiOS.framework.proof.auxdef <> partm_O constr
R63724:63730 CertiOS.framework.proof.auxdef <> partm_S constr
R63724:63730 CertiOS.framework.proof.auxdef <> partm_S constr
prf 63753:63768 <> partm_merge_disj
R63788:63792 CertiOS.framework.model.language <> tasks def
R63801:63813 CertiOS.framework.proof.auxdef TMSpecMod Map def
R63830:63840 CertiOS.framework.proof.auxdef TMSpecMod A def
R63867:63874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63900:63907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63920:63927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63928:63932 CertiOS.framework.proof.auxdef <> partM ind
R63950:63962 CertiOS.framework.proof.auxdef TMSpecMod put def
R63970:63974 CertiOS.framework.auxlibs.Maps <> merge meth
R63979:63980 CertiOS.framework.proof.invariant_prop <> Mn var
R63976:63977 CertiOS.framework.proof.invariant_prop <> Mc var
R63967:63967 CertiOS.framework.proof.invariant_prop <> t var
R63964:63965 CertiOS.framework.proof.invariant_prop <> Tm var
R63947:63947 CertiOS.framework.proof.invariant_prop <> T var
R63935:63939 CertiOS.framework.auxlibs.Maps <> merge meth
R63943:63944 CertiOS.framework.proof.invariant_prop <> Mn var
R63941:63941 CertiOS.framework.proof.invariant_prop <> M var
R63908:63912 CertiOS.framework.proof.auxdef <> partM ind
R63918:63919 CertiOS.framework.proof.invariant_prop <> Tm var
R63916:63916 CertiOS.framework.proof.invariant_prop <> T var
R63914:63914 CertiOS.framework.proof.invariant_prop <> M var
R63875:63891 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R63898:63899 CertiOS.framework.proof.invariant_prop <> Mc var
R63896:63896 CertiOS.framework.proof.invariant_prop <> t var
R63893:63894 CertiOS.framework.proof.invariant_prop <> Tm var
R63854:63861 CertiOS.framework.auxlibs.Maps <> disjoint def
R63865:63866 CertiOS.framework.proof.invariant_prop <> Mn var
R63863:63863 CertiOS.framework.proof.invariant_prop <> M var
R64173:64183 CertiOS.framework.auxlibs.Modules tidspec beq def
R64173:64183 CertiOS.framework.auxlibs.Modules tidspec beq def
R64210:64228 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R64210:64228 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R64304:64304 Coq.Init.Logic <> :type_scope:x_'='_x not
R64326:64330 Coq.Init.Logic <> :type_scope:x_'='_x not
R64387:64387 Coq.Init.Logic <> :type_scope:x_'='_x not
R64305:64320 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64331:64346 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64350:64362 CertiOS.framework.proof.auxdef TMSpecMod put def
R64370:64374 CertiOS.framework.auxlibs.Maps <> merge meth
R64304:64304 Coq.Init.Logic <> :type_scope:x_'='_x not
R64326:64330 Coq.Init.Logic <> :type_scope:x_'='_x not
R64387:64387 Coq.Init.Logic <> :type_scope:x_'='_x not
R64305:64320 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64331:64346 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64350:64362 CertiOS.framework.proof.auxdef TMSpecMod put def
R64370:64374 CertiOS.framework.auxlibs.Maps <> merge meth
R64401:64427 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R64401:64427 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R64401:64427 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R64465:64468 CertiOS.framework.auxlibs.Maps <> join meth
R64489:64493 CertiOS.framework.auxlibs.Maps <> merge meth
R64471:64475 CertiOS.framework.auxlibs.Maps <> merge meth
R64465:64468 CertiOS.framework.auxlibs.Maps <> join meth
R64489:64493 CertiOS.framework.auxlibs.Maps <> merge meth
R64471:64475 CertiOS.framework.auxlibs.Maps <> merge meth
R64514:64536 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R64514:64536 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R64554:64560 CertiOS.framework.proof.auxdef <> partm_S constr
R64554:64560 CertiOS.framework.proof.auxdef <> partm_S constr
R64580:64599 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R64580:64599 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R64580:64599 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R64619:64626 CertiOS.framework.auxlibs.Maps <> disjoint def
R64619:64626 CertiOS.framework.auxlibs.Maps <> disjoint def
R64645:64653 CertiOS.tactics.basetac.join_lib <> join_comm thm
R64645:64653 CertiOS.tactics.basetac.join_lib <> join_comm thm
R64671:64696 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R64671:64696 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R64716:64732 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R64735:64750 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64716:64732 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R64735:64750 CertiOS.framework.proof.auxdef TMSpecMod remove def
R64775:64799 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R64775:64799 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R64816:64836 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R64816:64836 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R64896:64926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R64896:64926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R64896:64926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R64896:64926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R64945:64948 CertiOS.framework.auxlibs.Maps <> join meth
R64968:64972 CertiOS.framework.auxlibs.Maps <> merge meth
R64951:64955 CertiOS.framework.auxlibs.Maps <> merge meth
R64945:64948 CertiOS.framework.auxlibs.Maps <> join meth
R64968:64972 CertiOS.framework.auxlibs.Maps <> merge meth
R64951:64955 CertiOS.framework.auxlibs.Maps <> merge meth
R64991:64999 CertiOS.tactics.basetac.join_lib <> join_comm thm
R64991:64999 CertiOS.tactics.basetac.join_lib <> join_comm thm
R65017:65039 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R65017:65039 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_disjoint_merge thm
R65096:65098 Coq.Init.Logic <> :type_scope:x_'='_x not
R65059:65071 CertiOS.framework.proof.auxdef TMSpecMod put def
R65080:65084 CertiOS.framework.auxlibs.Maps <> merge meth
R65099:65102 Coq.Init.Datatypes <> Some constr
R65096:65098 Coq.Init.Logic <> :type_scope:x_'='_x not
R65059:65071 CertiOS.framework.proof.auxdef TMSpecMod put def
R65080:65084 CertiOS.framework.auxlibs.Maps <> merge meth
R65099:65102 Coq.Init.Datatypes <> Some constr
R65118:65143 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R65118:65143 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R65118:65143 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R65118:65143 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R65160:65180 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R65160:65180 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R65198:65204 CertiOS.framework.proof.auxdef <> partm_S constr
R65198:65204 CertiOS.framework.proof.auxdef <> partm_S constr
R65222:65230 CertiOS.tactics.basetac.join_lib <> join_comm thm
R65222:65230 CertiOS.tactics.basetac.join_lib <> join_comm thm
R65248:65268 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R65248:65268 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 65290:65324 <> mem_join_sub_join_minus_minus'_auto
R65358:65364 CertiOS.framework.auxlibs.Maps <> PermMap class
R65370:65370 CertiOS.framework.proof.invariant_prop <> T var
R65368:65368 CertiOS.framework.proof.invariant_prop <> B var
R65366:65366 CertiOS.framework.proof.invariant_prop <> A var
R65404:65411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65425:65432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65447:65454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65455:65458 CertiOS.framework.auxlibs.Maps <> join meth
R65478:65482 CertiOS.framework.auxlibs.Maps <> minus meth
R65487:65488 CertiOS.framework.proof.invariant_prop <> m4 var
R65484:65485 CertiOS.framework.proof.invariant_prop <> m3 var
R65464:65468 CertiOS.framework.auxlibs.Maps <> minus meth
R65473:65474 CertiOS.framework.proof.invariant_prop <> m4 var
R65470:65471 CertiOS.framework.proof.invariant_prop <> m2 var
R65460:65461 CertiOS.framework.proof.invariant_prop <> m1 var
R65433:65440 CertiOS.framework.auxlibs.Maps <> sub def
R65445:65446 CertiOS.framework.proof.invariant_prop <> m2 var
R65442:65443 CertiOS.framework.proof.invariant_prop <> m4 var
R65412:65415 CertiOS.framework.auxlibs.Maps <> join meth
R65423:65424 CertiOS.framework.proof.invariant_prop <> m3 var
R65420:65421 CertiOS.framework.proof.invariant_prop <> m2 var
R65417:65418 CertiOS.framework.proof.invariant_prop <> m1 var
R65397:65399 Coq.Init.Logic <> :type_scope:x_'='_x not
R65390:65396 CertiOS.framework.auxlibs.Maps <> usePerm meth
R65400:65403 Coq.Init.Datatypes <> true constr
prf 65510:65539 <> mem_join_sub_join_minus_minus'
R65556:65558 CertiOS.framework.model.memory <> mem def
R65588:65595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65610:65617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65618:65621 CertiOS.framework.auxlibs.Maps <> join meth
R65641:65645 CertiOS.framework.auxlibs.Maps <> minus meth
R65650:65651 CertiOS.framework.proof.invariant_prop <> m4 var
R65647:65648 CertiOS.framework.proof.invariant_prop <> m3 var
R65627:65631 CertiOS.framework.auxlibs.Maps <> minus meth
R65636:65637 CertiOS.framework.proof.invariant_prop <> m4 var
R65633:65634 CertiOS.framework.proof.invariant_prop <> m2 var
R65623:65624 CertiOS.framework.proof.invariant_prop <> m1 var
R65596:65603 CertiOS.framework.auxlibs.Maps <> sub def
R65608:65609 CertiOS.framework.proof.invariant_prop <> m2 var
R65605:65606 CertiOS.framework.proof.invariant_prop <> m4 var
R65575:65578 CertiOS.framework.auxlibs.Maps <> join meth
R65586:65587 CertiOS.framework.proof.invariant_prop <> m3 var
R65583:65584 CertiOS.framework.proof.invariant_prop <> m2 var
R65580:65581 CertiOS.framework.proof.invariant_prop <> m1 var
R65679:65713 CertiOS.framework.proof.invariant_prop <> mem_join_sub_join_minus_minus'_auto thm
R65679:65713 CertiOS.framework.proof.invariant_prop <> mem_join_sub_join_minus_minus'_auto thm
prf 65733:65747 <> partm_minus_sub
R65770:65772 CertiOS.framework.model.memory <> mem def
R65780:65784 CertiOS.framework.model.language <> tasks def
R65793:65805 CertiOS.framework.proof.auxdef TMSpecMod Map def
R65823:65833 CertiOS.framework.proof.auxdef TMSpecMod A def
R65855:65862 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65888:65895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65908:65915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R65916:65920 CertiOS.framework.proof.auxdef <> partM ind
R65938:65950 CertiOS.framework.proof.auxdef TMSpecMod put def
R65958:65962 CertiOS.framework.auxlibs.Maps <> minus meth
R65967:65968 CertiOS.framework.proof.invariant_prop <> Mm var
R65964:65965 CertiOS.framework.proof.invariant_prop <> Mc var
R65955:65955 CertiOS.framework.proof.invariant_prop <> t var
R65952:65953 CertiOS.framework.proof.invariant_prop <> Tm var
R65935:65935 CertiOS.framework.proof.invariant_prop <> T var
R65923:65927 CertiOS.framework.auxlibs.Maps <> minus meth
R65931:65932 CertiOS.framework.proof.invariant_prop <> Mm var
R65929:65929 CertiOS.framework.proof.invariant_prop <> M var
R65896:65900 CertiOS.framework.proof.auxdef <> partM ind
R65906:65907 CertiOS.framework.proof.invariant_prop <> Tm var
R65904:65904 CertiOS.framework.proof.invariant_prop <> T var
R65902:65902 CertiOS.framework.proof.invariant_prop <> M var
R65863:65879 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R65886:65887 CertiOS.framework.proof.invariant_prop <> Mc var
R65884:65884 CertiOS.framework.proof.invariant_prop <> t var
R65881:65882 CertiOS.framework.proof.invariant_prop <> Tm var
R65841:65848 CertiOS.framework.auxlibs.Maps <> sub def
R65853:65854 CertiOS.framework.proof.invariant_prop <> Mc var
R65850:65851 CertiOS.framework.proof.invariant_prop <> Mm var
R66032:66042 CertiOS.framework.auxlibs.Modules tidspec beq def
R66032:66042 CertiOS.framework.auxlibs.Modules tidspec beq def
R66069:66087 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R66069:66087 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R66185:66187 Coq.Init.Logic <> :type_scope:x_'='_x not
R66164:66179 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66188:66203 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66206:66218 CertiOS.framework.proof.auxdef TMSpecMod put def
R66226:66230 CertiOS.framework.auxlibs.Maps <> minus meth
R66185:66187 Coq.Init.Logic <> :type_scope:x_'='_x not
R66164:66179 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66188:66203 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66206:66218 CertiOS.framework.proof.auxdef TMSpecMod put def
R66226:66230 CertiOS.framework.auxlibs.Maps <> minus meth
R66253:66279 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R66253:66279 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R66253:66279 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R66329:66332 CertiOS.framework.auxlibs.Maps <> join meth
R66351:66355 CertiOS.framework.auxlibs.Maps <> minus meth
R66335:66339 CertiOS.framework.auxlibs.Maps <> minus meth
R66329:66332 CertiOS.framework.auxlibs.Maps <> join meth
R66351:66355 CertiOS.framework.auxlibs.Maps <> minus meth
R66335:66339 CertiOS.framework.auxlibs.Maps <> minus meth
R66374:66396 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_sub_join_minus_join thm
R66374:66396 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_sub_join_minus_join thm
R66415:66421 CertiOS.framework.proof.auxdef <> partm_S constr
R66415:66421 CertiOS.framework.proof.auxdef <> partm_S constr
R66441:66460 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R66441:66460 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R66441:66460 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R66480:66496 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R66499:66514 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66480:66496 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R66499:66514 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66539:66563 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R66539:66563 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R66580:66600 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R66580:66600 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R66703:66714 Coq.Init.Logic <> :type_scope:x_'='_x not
R66649:66661 CertiOS.framework.proof.auxdef TMSpecMod put def
R66691:66695 CertiOS.framework.auxlibs.Maps <> minus meth
R66664:66679 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66715:66730 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66733:66745 CertiOS.framework.proof.auxdef TMSpecMod put def
R66753:66757 CertiOS.framework.auxlibs.Maps <> minus meth
R66703:66714 Coq.Init.Logic <> :type_scope:x_'='_x not
R66649:66661 CertiOS.framework.proof.auxdef TMSpecMod put def
R66691:66695 CertiOS.framework.auxlibs.Maps <> minus meth
R66664:66679 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66715:66730 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66733:66745 CertiOS.framework.proof.auxdef TMSpecMod put def
R66753:66757 CertiOS.framework.auxlibs.Maps <> minus meth
R66782:66812 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R66782:66812 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R66782:66812 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R66782:66812 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R66829:66849 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R66829:66849 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R66906:66909 CertiOS.framework.auxlibs.Maps <> join meth
R66928:66932 CertiOS.framework.auxlibs.Maps <> minus meth
R66914:66918 CertiOS.framework.auxlibs.Maps <> minus meth
R66906:66909 CertiOS.framework.auxlibs.Maps <> join meth
R66928:66932 CertiOS.framework.auxlibs.Maps <> minus meth
R66914:66918 CertiOS.framework.auxlibs.Maps <> minus meth
R66952:66968 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R66971:66986 CertiOS.framework.proof.auxdef TMSpecMod remove def
R66952:66968 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R66971:66986 CertiOS.framework.proof.auxdef TMSpecMod remove def
R67010:67034 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R67010:67034 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R67051:67071 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R67051:67071 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R67097:67104 CertiOS.framework.auxlibs.Maps <> disjoint def
R67097:67104 CertiOS.framework.auxlibs.Maps <> disjoint def
R67121:67132 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67121:67132 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67144:67155 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R67144:67155 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R67176:67185 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R67176:67185 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R67207:67214 CertiOS.framework.auxlibs.Maps <> disjoint def
R67207:67214 CertiOS.framework.auxlibs.Maps <> disjoint def
R67231:67242 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67231:67242 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67276:67287 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67276:67287 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67304:67315 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67304:67315 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R67327:67351 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_disjoint_sub_disjoint thm
R67327:67351 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_disjoint_sub_disjoint thm
R67371:67378 CertiOS.framework.auxlibs.Maps <> sub def
R67371:67378 CertiOS.framework.auxlibs.Maps <> sub def
R67400:67407 CertiOS.framework.proof.invariant_prop <> part_sub thm
R67400:67407 CertiOS.framework.proof.invariant_prop <> part_sub thm
R67425:67433 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R67425:67433 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R67453:67482 CertiOS.framework.proof.invariant_prop <> mem_join_sub_join_minus_minus' thm
R67453:67482 CertiOS.framework.proof.invariant_prop <> mem_join_sub_join_minus_minus' thm
R67502:67508 CertiOS.framework.proof.auxdef <> partm_S constr
R67502:67508 CertiOS.framework.proof.auxdef <> partm_S constr
R67528:67553 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R67528:67553 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R67528:67553 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R67528:67553 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R67570:67590 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R67570:67590 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 67618:67631 <> parto_disjoint
R67680:67687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67713:67720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67748:67755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67763:67770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R67771:67778 CertiOS.framework.auxlibs.Maps <> disjoint def
R67783:67785 CertiOS.framework.proof.invariant_prop <> Oc' var
R67780:67781 CertiOS.framework.proof.invariant_prop <> Oc var
R67757:67760 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R67756:67756 CertiOS.framework.proof.invariant_prop <> t var
R67761:67762 CertiOS.framework.proof.invariant_prop <> t' var
R67721:67737 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R67745:67747 CertiOS.framework.proof.invariant_prop <> Oc' var
R67742:67743 CertiOS.framework.proof.invariant_prop <> t' var
R67739:67740 CertiOS.framework.proof.invariant_prop <> To var
R67688:67704 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R67711:67712 CertiOS.framework.proof.invariant_prop <> Oc var
R67709:67709 CertiOS.framework.proof.invariant_prop <> t var
R67706:67707 CertiOS.framework.proof.invariant_prop <> To var
R67668:67672 CertiOS.framework.proof.auxdef <> partO ind
R67678:67679 CertiOS.framework.proof.invariant_prop <> To var
R67676:67676 CertiOS.framework.proof.invariant_prop <> T var
R67674:67674 CertiOS.framework.proof.invariant_prop <> O var
R67854:67864 CertiOS.framework.auxlibs.Modules tidspec beq def
R67896:67906 CertiOS.framework.auxlibs.Modules tidspec beq def
R67854:67864 CertiOS.framework.auxlibs.Modules tidspec beq def
R67896:67906 CertiOS.framework.auxlibs.Modules tidspec beq def
R67896:67906 CertiOS.framework.auxlibs.Modules tidspec beq def
R67937:67955 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R67975:67993 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R67937:67955 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R67975:67993 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R68030:68048 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R68030:68048 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R68121:68137 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68140:68155 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68121:68137 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68140:68155 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68180:68204 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68180:68204 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68224:68232 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R68224:68232 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R68250:68273 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_disjoint thm
R68250:68273 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_disjoint thm
R68292:68310 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R68292:68310 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R68383:68399 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68402:68417 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68383:68399 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68402:68417 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68441:68465 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68441:68465 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68485:68493 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R68485:68493 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R68509:68520 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R68509:68520 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R68532:68555 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_disjoint thm
R68532:68555 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_disjoint thm
R68575:68591 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68594:68609 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68575:68591 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68594:68609 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68633:68657 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68633:68657 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68674:68694 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R68674:68694 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R68720:68736 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68739:68754 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68720:68736 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R68739:68754 CertiOS.framework.proof.auxdef TOSpecMod remove def
R68780:68804 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68780:68804 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R68821:68841 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R68821:68841 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 68892:68905 <> parto_tl_irrel
R68950:68957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68958:68962 CertiOS.framework.proof.auxdef <> partO ind
R68971:68972 CertiOS.framework.proof.invariant_prop <> To var
R68967:68969 CertiOS.framework.proof.invariant_prop <> Tl' var
R68964:68965 CertiOS.framework.proof.invariant_prop <> Ol var
R68936:68940 CertiOS.framework.proof.auxdef <> partO ind
R68948:68949 CertiOS.framework.proof.invariant_prop <> To var
R68945:68946 CertiOS.framework.proof.invariant_prop <> Tl var
R68942:68943 CertiOS.framework.proof.invariant_prop <> Ol var
R69039:69045 CertiOS.framework.proof.auxdef <> parto_S constr
R69039:69045 CertiOS.framework.proof.auxdef <> parto_S constr
prf 69067:69087 <> tospecmod_remove_comm
R69120:69127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69128:69128 Coq.Init.Logic <> :type_scope:x_'='_x not
R69172:69180 Coq.Init.Logic <> :type_scope:x_'='_x not
R69224:69224 Coq.Init.Logic <> :type_scope:x_'='_x not
R69129:69144 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69170:69171 CertiOS.framework.proof.invariant_prop <> t0 var
R69147:69162 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69167:69167 CertiOS.framework.proof.invariant_prop <> t var
R69164:69165 CertiOS.framework.proof.invariant_prop <> Tm var
R69181:69196 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69223:69223 CertiOS.framework.proof.invariant_prop <> t var
R69199:69214 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69219:69220 CertiOS.framework.proof.invariant_prop <> t0 var
R69216:69217 CertiOS.framework.proof.invariant_prop <> Tm var
R69114:69117 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R69113:69113 CertiOS.framework.proof.invariant_prop <> t var
R69118:69119 CertiOS.framework.proof.invariant_prop <> t0 var
R69252:69275 CertiOS.framework.proof.auxdef TOSpecMod extensionality prfax
R69252:69275 CertiOS.framework.proof.auxdef TOSpecMod extensionality prfax
R69299:69309 CertiOS.framework.auxlibs.Modules tidspec beq def
R69342:69352 CertiOS.framework.auxlibs.Modules tidspec beq def
R69299:69309 CertiOS.framework.auxlibs.Modules tidspec beq def
R69342:69352 CertiOS.framework.auxlibs.Modules tidspec beq def
R69342:69352 CertiOS.framework.auxlibs.Modules tidspec beq def
R69379:69397 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69417:69435 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69379:69397 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69417:69435 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69476:69494 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69476:69494 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69523:69542 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69545:69560 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69523:69542 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69545:69560 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69612:69631 CertiOS.framework.proof.auxdef TOSpecMod not_in_dom def
R69636:69651 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69612:69631 CertiOS.framework.proof.auxdef TOSpecMod not_in_dom def
R69636:69651 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69669:69688 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69669:69688 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69703:69730 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R69703:69730 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R69768:69786 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69768:69786 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R69815:69834 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69837:69852 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69815:69834 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69837:69852 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69905:69924 CertiOS.framework.proof.auxdef TOSpecMod not_in_dom def
R69929:69944 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69905:69924 CertiOS.framework.proof.auxdef TOSpecMod not_in_dom def
R69929:69944 CertiOS.framework.proof.auxdef TOSpecMod remove def
R69962:69981 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69962:69981 CertiOS.framework.proof.auxdef TOSpecMod nid_remove thm
R69996:70023 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R69996:70023 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70062:70082 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R70102:70122 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R70062:70082 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R70102:70122 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R70173:70197 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70173:70197 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70220:70244 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70220:70244 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70281:70305 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70281:70305 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70328:70352 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70328:70352 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R70396:70423 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70396:70423 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70444:70471 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70444:70471 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70507:70534 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70507:70534 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70556:70583 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R70556:70583 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
prf 70626:70643 <> parto_minus_remove
R70693:70700 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70726:70733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70734:70738 CertiOS.framework.proof.auxdef <> partO ind
R70759:70774 CertiOS.framework.proof.auxdef TOSpecMod remove def
R70779:70779 CertiOS.framework.proof.invariant_prop <> t var
R70776:70777 CertiOS.framework.proof.invariant_prop <> To var
R70754:70756 CertiOS.framework.proof.invariant_prop <> Tl' var
R70741:70745 CertiOS.framework.auxlibs.Maps <> minus meth
R70750:70751 CertiOS.framework.proof.invariant_prop <> Oc var
R70747:70748 CertiOS.framework.proof.invariant_prop <> Ol var
R70701:70717 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R70724:70725 CertiOS.framework.proof.invariant_prop <> Oc var
R70722:70722 CertiOS.framework.proof.invariant_prop <> t var
R70719:70720 CertiOS.framework.proof.invariant_prop <> To var
R70679:70683 CertiOS.framework.proof.auxdef <> partO ind
R70691:70692 CertiOS.framework.proof.invariant_prop <> To var
R70688:70689 CertiOS.framework.proof.invariant_prop <> Tl var
R70685:70686 CertiOS.framework.proof.invariant_prop <> Ol var
R70841:70851 CertiOS.framework.auxlibs.Modules tidspec beq def
R70841:70851 CertiOS.framework.auxlibs.Modules tidspec beq def
R70878:70896 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R70878:70896 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R70982:70984 Coq.Init.Logic <> :type_scope:x_'='_x not
R70972:70976 CertiOS.framework.auxlibs.Maps <> minus meth
R70982:70984 Coq.Init.Logic <> :type_scope:x_'='_x not
R70972:70976 CertiOS.framework.auxlibs.Maps <> minus meth
R70999:71016 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus1 thm
R70999:71016 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus1 thm
R71044:71057 CertiOS.framework.proof.invariant_prop <> parto_tl_irrel thm
R71044:71057 CertiOS.framework.proof.invariant_prop <> parto_tl_irrel thm
R71076:71096 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R71076:71096 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R71116:71132 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R71135:71150 CertiOS.framework.proof.auxdef TOSpecMod remove def
R71116:71132 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R71135:71150 CertiOS.framework.proof.auxdef TOSpecMod remove def
R71175:71199 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71175:71199 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71242:71262 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R71242:71262 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R71242:71262 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R71242:71262 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R71286:71292 CertiOS.framework.proof.auxdef <> parto_S constr
R71286:71292 CertiOS.framework.proof.auxdef <> parto_S constr
R71311:71335 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71311:71335 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71355:71371 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R71374:71389 CertiOS.framework.proof.auxdef TOSpecMod remove def
R71355:71371 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R71374:71389 CertiOS.framework.proof.auxdef TOSpecMod remove def
R71414:71438 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71414:71438 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R71459:71467 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R71459:71467 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R71503:71528 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_join_minus thm
R71503:71528 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_sub_join_minus thm
prf 71550:71570 <> tmspecmod_remove_comm
R71603:71610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71611:71611 Coq.Init.Logic <> :type_scope:x_'='_x not
R71655:71663 Coq.Init.Logic <> :type_scope:x_'='_x not
R71707:71707 Coq.Init.Logic <> :type_scope:x_'='_x not
R71612:71627 CertiOS.framework.proof.auxdef TMSpecMod remove def
R71653:71654 CertiOS.framework.proof.invariant_prop <> t0 var
R71630:71645 CertiOS.framework.proof.auxdef TMSpecMod remove def
R71650:71650 CertiOS.framework.proof.invariant_prop <> t var
R71647:71648 CertiOS.framework.proof.invariant_prop <> Tm var
R71664:71679 CertiOS.framework.proof.auxdef TMSpecMod remove def
R71706:71706 CertiOS.framework.proof.invariant_prop <> t var
R71682:71697 CertiOS.framework.proof.auxdef TMSpecMod remove def
R71702:71703 CertiOS.framework.proof.invariant_prop <> t0 var
R71699:71700 CertiOS.framework.proof.invariant_prop <> Tm var
R71597:71600 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R71596:71596 CertiOS.framework.proof.invariant_prop <> t var
R71601:71602 CertiOS.framework.proof.invariant_prop <> t0 var
R71735:71758 CertiOS.framework.proof.auxdef TMSpecMod extensionality prfax
R71735:71758 CertiOS.framework.proof.auxdef TMSpecMod extensionality prfax
R71782:71792 CertiOS.framework.auxlibs.Modules tidspec beq def
R71825:71835 CertiOS.framework.auxlibs.Modules tidspec beq def
R71782:71792 CertiOS.framework.auxlibs.Modules tidspec beq def
R71825:71835 CertiOS.framework.auxlibs.Modules tidspec beq def
R71825:71835 CertiOS.framework.auxlibs.Modules tidspec beq def
R71862:71880 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R71900:71918 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R71862:71880 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R71900:71918 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R71959:71977 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R71959:71977 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R72006:72025 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72028:72043 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72006:72025 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72028:72043 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72095:72114 CertiOS.framework.proof.auxdef TMSpecMod not_in_dom def
R72119:72134 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72095:72114 CertiOS.framework.proof.auxdef TMSpecMod not_in_dom def
R72119:72134 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72152:72171 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72152:72171 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72186:72213 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72186:72213 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72251:72269 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R72251:72269 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R72298:72317 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72320:72335 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72298:72317 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72320:72335 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72388:72407 CertiOS.framework.proof.auxdef TMSpecMod not_in_dom def
R72412:72427 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72388:72407 CertiOS.framework.proof.auxdef TMSpecMod not_in_dom def
R72412:72427 CertiOS.framework.proof.auxdef TMSpecMod remove def
R72445:72464 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72445:72464 CertiOS.framework.proof.auxdef TMSpecMod nid_remove thm
R72479:72506 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72479:72506 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72545:72565 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R72585:72605 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R72545:72565 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R72585:72605 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R72656:72680 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72656:72680 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72703:72727 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72703:72727 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72764:72788 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72764:72788 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72811:72835 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72811:72835 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R72879:72906 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72879:72906 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72927:72954 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72927:72954 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72990:73017 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R72990:73017 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R73039:73066 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R73039:73066 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
prf 73108:73121 <> partm_tl_irrel
R73166:73173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73174:73178 CertiOS.framework.proof.auxdef <> partM ind
R73187:73188 CertiOS.framework.proof.invariant_prop <> Tm var
R73183:73185 CertiOS.framework.proof.invariant_prop <> Tl' var
R73180:73181 CertiOS.framework.proof.invariant_prop <> Ml var
R73152:73156 CertiOS.framework.proof.auxdef <> partM ind
R73164:73165 CertiOS.framework.proof.invariant_prop <> Tm var
R73161:73162 CertiOS.framework.proof.invariant_prop <> Tl var
R73158:73159 CertiOS.framework.proof.invariant_prop <> Ml var
R73255:73261 CertiOS.framework.proof.auxdef <> partm_S constr
R73255:73261 CertiOS.framework.proof.auxdef <> partm_S constr
prf 73283:73300 <> partm_minus_remove
R73350:73357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73383:73390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73391:73395 CertiOS.framework.proof.auxdef <> partM ind
R73416:73431 CertiOS.framework.proof.auxdef TMSpecMod remove def
R73436:73436 CertiOS.framework.proof.invariant_prop <> t var
R73433:73434 CertiOS.framework.proof.invariant_prop <> Tm var
R73411:73413 CertiOS.framework.proof.invariant_prop <> Tl' var
R73398:73402 CertiOS.framework.auxlibs.Maps <> minus meth
R73407:73408 CertiOS.framework.proof.invariant_prop <> Mc var
R73404:73405 CertiOS.framework.proof.invariant_prop <> Ml var
R73358:73374 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R73381:73382 CertiOS.framework.proof.invariant_prop <> Mc var
R73379:73379 CertiOS.framework.proof.invariant_prop <> t var
R73376:73377 CertiOS.framework.proof.invariant_prop <> Tm var
R73336:73340 CertiOS.framework.proof.auxdef <> partM ind
R73348:73349 CertiOS.framework.proof.invariant_prop <> Tm var
R73345:73346 CertiOS.framework.proof.invariant_prop <> Tl var
R73342:73343 CertiOS.framework.proof.invariant_prop <> Ml var
R73498:73508 CertiOS.framework.auxlibs.Modules tidspec beq def
R73498:73508 CertiOS.framework.auxlibs.Modules tidspec beq def
R73535:73553 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R73535:73553 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R73639:73641 Coq.Init.Logic <> :type_scope:x_'='_x not
R73629:73633 CertiOS.framework.auxlibs.Maps <> minus meth
R73639:73641 Coq.Init.Logic <> :type_scope:x_'='_x not
R73629:73633 CertiOS.framework.auxlibs.Maps <> minus meth
R73656:73670 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_minus1 thm
R73656:73670 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_minus1 thm
R73699:73712 CertiOS.framework.proof.invariant_prop <> partm_tl_irrel thm
R73699:73712 CertiOS.framework.proof.invariant_prop <> partm_tl_irrel thm
R73731:73751 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R73731:73751 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R73771:73787 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R73790:73805 CertiOS.framework.proof.auxdef TMSpecMod remove def
R73771:73787 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R73790:73805 CertiOS.framework.proof.auxdef TMSpecMod remove def
R73830:73854 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R73830:73854 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R73897:73917 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R73897:73917 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R73897:73917 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R73897:73917 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R73941:73947 CertiOS.framework.proof.auxdef <> partm_S constr
R73941:73947 CertiOS.framework.proof.auxdef <> partm_S constr
R73966:73990 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R73966:73990 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R74010:74026 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R74029:74044 CertiOS.framework.proof.auxdef TMSpecMod remove def
R74010:74026 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R74029:74044 CertiOS.framework.proof.auxdef TMSpecMod remove def
R74069:74093 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R74069:74093 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R74114:74121 CertiOS.framework.proof.invariant_prop <> part_sub thm
R74114:74121 CertiOS.framework.proof.invariant_prop <> part_sub thm
R74157:74179 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_join_minus thm
R74157:74179 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_join_minus thm
prf 74202:74214 <> parto_complex
R74280:74287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74314:74321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74347:74354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74362:74369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74382:74389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74407:74414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74454:74461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74462:74466 CertiOS.framework.proof.auxdef <> partO ind
R74521:74533 CertiOS.framework.proof.auxdef TOSpecMod put def
R74564:74568 CertiOS.framework.auxlibs.Maps <> merge meth
R74573:74576 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R74570:74571 CertiOS.framework.proof.invariant_prop <> On var
R74560:74561 CertiOS.framework.proof.invariant_prop <> t' var
R74536:74548 CertiOS.framework.proof.auxdef TOSpecMod put def
R74555:74557 CertiOS.framework.proof.invariant_prop <> Olc var
R74553:74553 CertiOS.framework.proof.invariant_prop <> t var
R74550:74551 CertiOS.framework.proof.invariant_prop <> To var
R74507:74508 CertiOS.framework.proof.invariant_prop <> Tl var
R74469:74473 CertiOS.framework.auxlibs.Maps <> merge meth
R74493:74497 CertiOS.framework.auxlibs.Maps <> minus meth
R74502:74503 CertiOS.framework.proof.invariant_prop <> Oc var
R74499:74500 CertiOS.framework.proof.invariant_prop <> Ol var
R74476:74480 CertiOS.framework.auxlibs.Maps <> merge meth
R74487:74489 CertiOS.framework.proof.invariant_prop <> Olc var
R74482:74485 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R74415:74422 CertiOS.framework.auxlibs.Maps <> disjoint def
R74442:74446 CertiOS.framework.auxlibs.Maps <> minus meth
R74451:74452 CertiOS.framework.proof.invariant_prop <> Oc var
R74448:74449 CertiOS.framework.proof.invariant_prop <> Ol var
R74425:74429 CertiOS.framework.auxlibs.Maps <> merge meth
R74436:74438 CertiOS.framework.proof.invariant_prop <> Olc var
R74431:74434 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R74390:74397 CertiOS.framework.auxlibs.Maps <> disjoint def
R74404:74406 CertiOS.framework.proof.invariant_prop <> Olc var
R74399:74402 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R74370:74373 CertiOS.framework.auxlibs.Maps <> join meth
R74381:74381 CertiOS.framework.proof.invariant_prop <> O var
R74378:74379 CertiOS.framework.proof.invariant_prop <> Os var
R74375:74376 CertiOS.framework.proof.invariant_prop <> Ol var
R74356:74359 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R74355:74355 CertiOS.framework.proof.invariant_prop <> t var
R74360:74361 CertiOS.framework.proof.invariant_prop <> t' var
R74322:74338 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R74345:74346 CertiOS.framework.proof.invariant_prop <> Oc var
R74343:74343 CertiOS.framework.proof.invariant_prop <> t var
R74340:74341 CertiOS.framework.proof.invariant_prop <> To var
R74288:74304 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R74312:74313 CertiOS.framework.proof.invariant_prop <> On var
R74309:74310 CertiOS.framework.proof.invariant_prop <> t' var
R74306:74307 CertiOS.framework.proof.invariant_prop <> To var
R74266:74270 CertiOS.framework.proof.auxdef <> partO ind
R74278:74279 CertiOS.framework.proof.invariant_prop <> To var
R74275:74276 CertiOS.framework.proof.invariant_prop <> Tl var
R74272:74273 CertiOS.framework.proof.invariant_prop <> Ol var
R74632:74649 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R74632:74649 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R74697:74713 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R74716:74731 CertiOS.framework.proof.auxdef TOSpecMod remove def
R74697:74713 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R74716:74731 CertiOS.framework.proof.auxdef TOSpecMod remove def
R74755:74779 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R74755:74779 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R74800:74817 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R74800:74817 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R74867:74874 CertiOS.framework.auxlibs.Maps <> disjoint def
R74881:74885 CertiOS.framework.auxlibs.Maps <> minus meth
R74888:74892 CertiOS.framework.auxlibs.Maps <> minus meth
R74867:74874 CertiOS.framework.auxlibs.Maps <> disjoint def
R74881:74885 CertiOS.framework.auxlibs.Maps <> minus meth
R74888:74892 CertiOS.framework.auxlibs.Maps <> minus meth
R74919:74927 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R74919:74927 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R74945:74980 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R74945:74980 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R75002:75032 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_merge_disjoint2 thm
R75002:75032 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_merge_disjoint2 thm
R75053:75057 CertiOS.framework.proof.auxdef <> partO ind
R75100:75112 CertiOS.framework.proof.auxdef TOSpecMod put def
R75115:75130 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75060:75064 CertiOS.framework.auxlibs.Maps <> merge meth
R75071:75075 CertiOS.framework.auxlibs.Maps <> minus meth
R75078:75082 CertiOS.framework.auxlibs.Maps <> minus meth
R75053:75057 CertiOS.framework.proof.auxdef <> partO ind
R75100:75112 CertiOS.framework.proof.auxdef TOSpecMod put def
R75115:75130 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75060:75064 CertiOS.framework.auxlibs.Maps <> merge meth
R75071:75075 CertiOS.framework.auxlibs.Maps <> minus meth
R75078:75082 CertiOS.framework.auxlibs.Maps <> minus meth
R75201:75203 Coq.Init.Logic <> :type_scope:x_'='_x not
R75158:75173 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75176:75191 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75204:75219 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75222:75234 CertiOS.framework.proof.auxdef TOSpecMod put def
R75237:75252 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75201:75203 Coq.Init.Logic <> :type_scope:x_'='_x not
R75158:75173 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75176:75191 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75204:75219 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75222:75234 CertiOS.framework.proof.auxdef TOSpecMod put def
R75237:75252 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75282:75308 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75282:75308 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75282:75308 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75357:75363 CertiOS.framework.proof.auxdef <> parto_S constr
R75357:75363 CertiOS.framework.proof.auxdef <> parto_S constr
R75382:75401 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R75382:75401 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R75412:75426 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R75412:75426 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R75525:75537 Coq.Init.Logic <> :type_scope:x_'='_x not
R75446:75461 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75464:75476 CertiOS.framework.proof.auxdef TOSpecMod put def
R75507:75511 CertiOS.framework.auxlibs.Maps <> merge meth
R75479:75491 CertiOS.framework.proof.auxdef TOSpecMod put def
R75538:75550 CertiOS.framework.proof.auxdef TOSpecMod put def
R75553:75568 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75525:75537 Coq.Init.Logic <> :type_scope:x_'='_x not
R75446:75461 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75464:75476 CertiOS.framework.proof.auxdef TOSpecMod put def
R75507:75511 CertiOS.framework.auxlibs.Maps <> merge meth
R75479:75491 CertiOS.framework.proof.auxdef TOSpecMod put def
R75538:75550 CertiOS.framework.proof.auxdef TOSpecMod put def
R75553:75568 CertiOS.framework.proof.auxdef TOSpecMod remove def
R75597:75623 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75597:75623 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75597:75623 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R75642:75672 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R75642:75672 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R75642:75672 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R75642:75672 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R75713:75719 CertiOS.framework.proof.auxdef <> parto_S constr
R75713:75719 CertiOS.framework.proof.auxdef <> parto_S constr
R75739:75758 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R75739:75758 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R75739:75758 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R75780:75793 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R75780:75793 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R75819:75827 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R75819:75827 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R75896:75898 Coq.Init.Logic <> :type_scope:x_'='_x not
R75874:75878 CertiOS.framework.auxlibs.Maps <> minus meth
R75881:75885 CertiOS.framework.auxlibs.Maps <> minus meth
R75899:75903 CertiOS.framework.auxlibs.Maps <> minus meth
R75906:75910 CertiOS.framework.auxlibs.Maps <> minus meth
R75896:75898 Coq.Init.Logic <> :type_scope:x_'='_x not
R75874:75878 CertiOS.framework.auxlibs.Maps <> minus meth
R75881:75885 CertiOS.framework.auxlibs.Maps <> minus meth
R75899:75903 CertiOS.framework.auxlibs.Maps <> minus meth
R75906:75910 CertiOS.framework.auxlibs.Maps <> minus meth
R75933:75944 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R75933:75944 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R75962:75987 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R75962:75987 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R76031:76035 CertiOS.framework.auxlibs.Maps <> minus meth
R76031:76035 CertiOS.framework.auxlibs.Maps <> minus meth
R76061:76101 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_disjoint_merge_distribute thm
R76061:76101 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_disjoint_merge_distribute thm
R76131:76159 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_disjoint_sub_minus thm
R76131:76159 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_disjoint_sub_minus thm
R76176:76187 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R76176:76187 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
prf 76208:76218 <> switch_linv
R76281:76287 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76304:76310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76311:76311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76376:76384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76471:76478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76479:76482 CertiOS.framework.logic.inferules <> satp def
R76533:76539 CertiOS.framework.logic.inferules <> CurLINV def
R76547:76548 CertiOS.framework.proof.invariant_prop <> t' var
R76541:76545 CertiOS.framework.proof.invariant_prop <> lasrt var
R76517:76521 CertiOS.framework.auxlibs.Maps <> merge meth
R76526:76529 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R76523:76524 CertiOS.framework.proof.invariant_prop <> On var
R76485:76494 CertiOS.framework.logic.assertion <> substaskst def
R76500:76504 CertiOS.framework.auxlibs.Maps <> merge meth
R76509:76512 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R76506:76507 CertiOS.framework.proof.invariant_prop <> Mn var
R76496:76497 CertiOS.framework.proof.invariant_prop <> on var
R76385:76388 CertiOS.framework.logic.inferules <> satp def
R76422:76424 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76443:76444 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76430:76433 Coq.Init.Datatypes <> list ind
R76435:76442 CertiOS.framework.logic.assertion <> logicvar ind
R76461:76464 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R76445:76448 CertiOS.framework.logic.inferules <> LINV def
R76459:76460 CertiOS.framework.proof.invariant_prop <> lg var
R76456:76457 CertiOS.framework.proof.invariant_prop <> t' var
R76450:76454 CertiOS.framework.proof.invariant_prop <> lasrt var
R76465:76469 CertiOS.framework.logic.assertion <> Atrue constr
R76409:76410 CertiOS.framework.proof.invariant_prop <> On var
R76391:76400 CertiOS.framework.logic.assertion <> substaskst def
R76405:76406 CertiOS.framework.proof.invariant_prop <> Mn var
R76402:76403 CertiOS.framework.proof.invariant_prop <> on var
R76324:76328 CertiOS.framework.logic.assertion <> absop def
R76361:76364 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R76331:76331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76350:76351 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76356:76357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76360:76360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R76332:76341 CertiOS.framework.logic.assertion <> substaskst def
R76346:76349 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R76343:76344 CertiOS.framework.proof.invariant_prop <> on var
R76352:76355 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R76358:76359 CertiOS.framework.proof.invariant_prop <> ab var
R76365:76370 CertiOS.framework.logic.assertion <> RDYINV def
R76374:76375 CertiOS.framework.proof.invariant_prop <> t' var
R76372:76372 CertiOS.framework.proof.invariant_prop <> I var
R76288:76295 CertiOS.framework.auxlibs.Maps <> disjoint def
R76302:76303 CertiOS.framework.proof.invariant_prop <> On var
R76297:76300 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R76265:76272 CertiOS.framework.auxlibs.Maps <> disjoint def
R76279:76280 CertiOS.framework.proof.invariant_prop <> Mn var
R76274:76277 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R76578:76581 CertiOS.framework.logic.inferules <> satp def
R76722:76727 CertiOS.framework.logic.assertion <> RDYINV def
R76760:76768 CertiOS.framework.proof.invariant_prop <> sat_split thm
R76760:76768 CertiOS.framework.proof.invariant_prop <> sat_split thm
R76830:76836 CertiOS.framework.logic.inferules <> CurLINV def
R76875:76880 CertiOS.framework.logic.inferules <> CurTid def
R76910:76913 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R76895:76898 CertiOS.framework.logic.inferules <> LINV def
R76914:76918 CertiOS.framework.logic.assertion <> Atrue constr
R76910:76913 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R76895:76898 CertiOS.framework.logic.inferules <> LINV def
R76914:76918 CertiOS.framework.logic.assertion <> Atrue constr
R76934:76936 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76946:76947 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76942:76945 CertiOS.framework.model.memory <> type ind
R76948:76950 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76959:76961 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76969:76975 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76951:76958 CertiOS.framework.model.opsem <> OSTCBCur def
R76962:76965 CertiOS.framework.model.memory <> Tptr constr
R76967:76968 CertiOS.framework.proof.invariant_prop <> tp var
R76976:76979 CertiOS.framework.model.memory <> Vptr constr
R76934:76936 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76946:76947 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R76942:76945 CertiOS.framework.model.memory <> type ind
R76948:76950 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76959:76961 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76969:76975 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R76951:76958 CertiOS.framework.model.opsem <> OSTCBCur def
R76962:76965 CertiOS.framework.model.memory <> Tptr constr
R76967:76968 CertiOS.framework.proof.invariant_prop <> tp var
R76976:76979 CertiOS.framework.model.memory <> Vptr constr
R77078:77086 CertiOS.tactics.basetac.join_lib <> join_comm thm
R77078:77086 CertiOS.tactics.basetac.join_lib <> join_comm thm
R77098:77112 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R77098:77112 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R77123:77134 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77123:77134 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77151:77159 CertiOS.tactics.basetac.join_lib <> join_comm thm
R77151:77159 CertiOS.tactics.basetac.join_lib <> join_comm thm
R77171:77185 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R77171:77185 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R77196:77207 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77196:77207 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77226:77231 CertiOS.framework.logic.assertion <> SWINVt def
R77249:77255 CertiOS.framework.logic.inferules <> CurLINV def
R77267:77272 CertiOS.framework.logic.inferules <> CurTid def
R77315:77317 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77327:77328 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77323:77326 CertiOS.framework.model.memory <> type ind
R77329:77331 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77340:77342 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77350:77356 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77332:77339 CertiOS.framework.model.opsem <> OSTCBCur def
R77343:77346 CertiOS.framework.model.memory <> Tptr constr
R77348:77349 CertiOS.framework.proof.invariant_prop <> tp var
R77357:77360 CertiOS.framework.model.memory <> Vptr constr
R77315:77317 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77327:77328 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77323:77326 CertiOS.framework.model.memory <> type ind
R77329:77331 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77340:77342 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77350:77356 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77332:77339 CertiOS.framework.model.opsem <> OSTCBCur def
R77343:77346 CertiOS.framework.model.memory <> Tptr constr
R77348:77349 CertiOS.framework.proof.invariant_prop <> tp var
R77357:77360 CertiOS.framework.model.memory <> Vptr constr
R77395:77398 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R77380:77383 CertiOS.framework.logic.inferules <> LINV def
R77399:77403 CertiOS.framework.logic.assertion <> Atrue constr
R77395:77398 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R77380:77383 CertiOS.framework.logic.inferules <> LINV def
R77399:77403 CertiOS.framework.logic.assertion <> Atrue constr
R77439:77447 CertiOS.framework.proof.invariant_prop <> sat_split thm
R77439:77447 CertiOS.framework.proof.invariant_prop <> sat_split thm
R77478:77480 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77490:77491 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77486:77489 CertiOS.framework.model.memory <> type ind
R77492:77494 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77503:77505 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77513:77519 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77495:77502 CertiOS.framework.model.opsem <> OSTCBCur def
R77506:77509 CertiOS.framework.model.memory <> Tptr constr
R77511:77512 CertiOS.framework.proof.invariant_prop <> tp var
R77520:77523 CertiOS.framework.model.memory <> Vptr constr
R77478:77480 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77490:77491 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R77486:77489 CertiOS.framework.model.memory <> type ind
R77492:77494 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77503:77505 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77513:77519 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R77495:77502 CertiOS.framework.model.opsem <> OSTCBCur def
R77506:77509 CertiOS.framework.model.memory <> Tptr constr
R77511:77512 CertiOS.framework.proof.invariant_prop <> tp var
R77520:77523 CertiOS.framework.model.memory <> Vptr constr
R77558:77561 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R77543:77546 CertiOS.framework.logic.inferules <> LINV def
R77562:77566 CertiOS.framework.logic.assertion <> Atrue constr
R77558:77561 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R77543:77546 CertiOS.framework.logic.inferules <> LINV def
R77562:77566 CertiOS.framework.logic.assertion <> Atrue constr
R77592:77596 CertiOS.framework.auxlibs.Maps <> merge meth
R77592:77596 CertiOS.framework.auxlibs.Maps <> merge meth
R77628:77632 CertiOS.framework.auxlibs.Maps <> merge meth
R77628:77632 CertiOS.framework.auxlibs.Maps <> merge meth
R77691:77693 Coq.Init.Logic <> :type_scope:x_'='_x not
R77678:77682 CertiOS.framework.auxlibs.Maps <> merge meth
R77694:77698 CertiOS.framework.auxlibs.Maps <> merge meth
R77691:77693 Coq.Init.Logic <> :type_scope:x_'='_x not
R77678:77682 CertiOS.framework.auxlibs.Maps <> merge meth
R77694:77698 CertiOS.framework.auxlibs.Maps <> merge meth
R77719:77736 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R77719:77736 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R77747:77758 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77747:77758 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77790:77817 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R77790:77817 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R77849:77851 Coq.Init.Logic <> :type_scope:x_'='_x not
R77836:77840 CertiOS.framework.auxlibs.Maps <> merge meth
R77852:77856 CertiOS.framework.auxlibs.Maps <> merge meth
R77849:77851 Coq.Init.Logic <> :type_scope:x_'='_x not
R77836:77840 CertiOS.framework.auxlibs.Maps <> merge meth
R77852:77856 CertiOS.framework.auxlibs.Maps <> merge meth
R77877:77894 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R77877:77894 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R77905:77916 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77905:77916 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R77948:77978 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R77948:77978 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R78009:78012 CertiOS.framework.logic.inferules <> LINV def
R78009:78012 CertiOS.framework.logic.inferules <> LINV def
R78073:78077 CertiOS.framework.auxlibs.Maps <> merge meth
R78073:78077 CertiOS.framework.auxlibs.Maps <> merge meth
R78109:78113 CertiOS.framework.auxlibs.Maps <> merge meth
R78109:78113 CertiOS.framework.auxlibs.Maps <> merge meth
R78171:78173 Coq.Init.Logic <> :type_scope:x_'='_x not
R78160:78164 CertiOS.framework.auxlibs.Maps <> merge meth
R78174:78178 CertiOS.framework.auxlibs.Maps <> merge meth
R78171:78173 Coq.Init.Logic <> :type_scope:x_'='_x not
R78160:78164 CertiOS.framework.auxlibs.Maps <> merge meth
R78174:78178 CertiOS.framework.auxlibs.Maps <> merge meth
R78197:78214 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R78197:78214 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R78225:78233 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78225:78233 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78251:78276 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R78251:78276 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R78309:78336 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R78309:78336 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R78353:78361 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78353:78361 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78378:78389 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R78378:78389 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R78401:78426 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R78401:78426 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R78458:78460 Coq.Init.Logic <> :type_scope:x_'='_x not
R78447:78451 CertiOS.framework.auxlibs.Maps <> merge meth
R78461:78465 CertiOS.framework.auxlibs.Maps <> merge meth
R78458:78460 Coq.Init.Logic <> :type_scope:x_'='_x not
R78447:78451 CertiOS.framework.auxlibs.Maps <> merge meth
R78461:78465 CertiOS.framework.auxlibs.Maps <> merge meth
R78484:78501 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R78484:78501 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R78512:78520 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78512:78520 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78538:78566 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R78538:78566 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R78599:78629 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R78599:78629 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R78646:78654 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78646:78654 CertiOS.tactics.basetac.join_lib <> join_comm thm
R78671:78682 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R78671:78682 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R78694:78722 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R78694:78722 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
prf 78745:78758 <> partm_disjoint
R78807:78814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78840:78847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78875:78882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78890:78897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78898:78905 CertiOS.framework.auxlibs.Maps <> disjoint def
R78910:78912 CertiOS.framework.proof.invariant_prop <> Mc' var
R78907:78908 CertiOS.framework.proof.invariant_prop <> Mc var
R78884:78887 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R78883:78883 CertiOS.framework.proof.invariant_prop <> t var
R78888:78889 CertiOS.framework.proof.invariant_prop <> t' var
R78848:78864 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R78872:78874 CertiOS.framework.proof.invariant_prop <> Mc' var
R78869:78870 CertiOS.framework.proof.invariant_prop <> t' var
R78866:78867 CertiOS.framework.proof.invariant_prop <> Tm var
R78815:78831 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R78838:78839 CertiOS.framework.proof.invariant_prop <> Mc var
R78836:78836 CertiOS.framework.proof.invariant_prop <> t var
R78833:78834 CertiOS.framework.proof.invariant_prop <> Tm var
R78795:78799 CertiOS.framework.proof.auxdef <> partM ind
R78805:78806 CertiOS.framework.proof.invariant_prop <> Tm var
R78803:78803 CertiOS.framework.proof.invariant_prop <> T var
R78801:78801 CertiOS.framework.proof.invariant_prop <> M var
R78981:78991 CertiOS.framework.auxlibs.Modules tidspec beq def
R79023:79033 CertiOS.framework.auxlibs.Modules tidspec beq def
R78981:78991 CertiOS.framework.auxlibs.Modules tidspec beq def
R79023:79033 CertiOS.framework.auxlibs.Modules tidspec beq def
R79023:79033 CertiOS.framework.auxlibs.Modules tidspec beq def
R79064:79082 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79102:79120 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79064:79082 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79102:79120 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79157:79175 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79157:79175 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79248:79264 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79267:79282 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79248:79264 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79267:79282 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79307:79331 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79307:79331 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79351:79358 CertiOS.framework.proof.invariant_prop <> part_sub thm
R79351:79358 CertiOS.framework.proof.invariant_prop <> part_sub thm
R79375:79395 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R79375:79395 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R79414:79432 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79414:79432 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R79505:79521 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79524:79539 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79505:79521 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79524:79539 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79563:79587 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79563:79587 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79607:79614 CertiOS.framework.proof.invariant_prop <> part_sub thm
R79607:79614 CertiOS.framework.proof.invariant_prop <> part_sub thm
R79630:79641 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R79630:79641 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R79653:79673 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R79653:79673 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R79693:79709 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79712:79727 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79693:79709 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79712:79727 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79751:79775 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79751:79775 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79792:79812 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R79792:79812 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R79838:79854 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79857:79872 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79838:79854 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R79857:79872 CertiOS.framework.proof.auxdef TMSpecMod remove def
R79898:79922 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79898:79922 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R79939:79959 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R79939:79959 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
prf 80011:80025 <> partm_merge_sub
R80074:80081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80107:80114 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80142:80149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80157:80164 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80165:80172 CertiOS.framework.auxlibs.Maps <> sub def
R80189:80189 CertiOS.framework.proof.invariant_prop <> M var
R80175:80179 CertiOS.framework.auxlibs.Maps <> merge meth
R80184:80186 CertiOS.framework.proof.invariant_prop <> Mc' var
R80181:80182 CertiOS.framework.proof.invariant_prop <> Mc var
R80151:80154 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R80150:80150 CertiOS.framework.proof.invariant_prop <> t var
R80155:80156 CertiOS.framework.proof.invariant_prop <> t' var
R80115:80131 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80139:80141 CertiOS.framework.proof.invariant_prop <> Mc' var
R80136:80137 CertiOS.framework.proof.invariant_prop <> t' var
R80133:80134 CertiOS.framework.proof.invariant_prop <> Tm var
R80082:80098 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80105:80106 CertiOS.framework.proof.invariant_prop <> Mc var
R80103:80103 CertiOS.framework.proof.invariant_prop <> t var
R80100:80101 CertiOS.framework.proof.invariant_prop <> Tm var
R80062:80066 CertiOS.framework.proof.auxdef <> partM ind
R80072:80073 CertiOS.framework.proof.invariant_prop <> Tm var
R80070:80070 CertiOS.framework.proof.invariant_prop <> T var
R80068:80068 CertiOS.framework.proof.invariant_prop <> M var
R80258:80268 CertiOS.framework.auxlibs.Modules tidspec beq def
R80300:80310 CertiOS.framework.auxlibs.Modules tidspec beq def
R80258:80268 CertiOS.framework.auxlibs.Modules tidspec beq def
R80300:80310 CertiOS.framework.auxlibs.Modules tidspec beq def
R80300:80310 CertiOS.framework.auxlibs.Modules tidspec beq def
R80341:80359 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80379:80397 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80341:80359 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80379:80397 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80434:80452 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80434:80452 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80525:80541 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80544:80559 CertiOS.framework.proof.auxdef TMSpecMod remove def
R80525:80541 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80544:80559 CertiOS.framework.proof.auxdef TMSpecMod remove def
R80584:80608 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R80584:80608 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R80628:80635 CertiOS.framework.proof.invariant_prop <> part_sub thm
R80628:80635 CertiOS.framework.proof.invariant_prop <> part_sub thm
R80654:80675 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_sub_merge thm
R80654:80675 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_sub_merge thm
R80694:80712 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80694:80712 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R80785:80801 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80804:80819 CertiOS.framework.proof.auxdef TMSpecMod remove def
R80785:80801 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80804:80819 CertiOS.framework.proof.auxdef TMSpecMod remove def
R80843:80867 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R80843:80867 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R80887:80894 CertiOS.framework.proof.invariant_prop <> part_sub thm
R80887:80894 CertiOS.framework.proof.invariant_prop <> part_sub thm
R80912:80934 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_sub_merge' thm
R80912:80934 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_sub_merge' thm
R80954:80970 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80973:80988 CertiOS.framework.proof.auxdef TMSpecMod remove def
R80954:80970 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R80973:80988 CertiOS.framework.proof.auxdef TMSpecMod remove def
R81012:81036 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R81012:81036 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R81053:81073 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R81053:81073 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R81099:81115 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R81118:81133 CertiOS.framework.proof.auxdef TMSpecMod remove def
R81099:81115 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R81118:81133 CertiOS.framework.proof.auxdef TMSpecMod remove def
R81159:81183 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R81159:81183 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R81200:81220 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R81200:81220 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R81245:81256 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> sub_join_sub thm
R81245:81256 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> sub_join_sub thm
prf 81279:81293 <> parto_merge_sub
R81342:81349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81375:81382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81410:81417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81425:81432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R81433:81440 CertiOS.framework.auxlibs.Maps <> sub def
R81457:81457 CertiOS.framework.proof.invariant_prop <> O var
R81443:81447 CertiOS.framework.auxlibs.Maps <> merge meth
R81452:81454 CertiOS.framework.proof.invariant_prop <> Oc' var
R81449:81450 CertiOS.framework.proof.invariant_prop <> Oc var
R81419:81422 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R81418:81418 CertiOS.framework.proof.invariant_prop <> t var
R81423:81424 CertiOS.framework.proof.invariant_prop <> t' var
R81383:81399 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R81407:81409 CertiOS.framework.proof.invariant_prop <> Oc' var
R81404:81405 CertiOS.framework.proof.invariant_prop <> t' var
R81401:81402 CertiOS.framework.proof.invariant_prop <> To var
R81350:81366 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R81373:81374 CertiOS.framework.proof.invariant_prop <> Oc var
R81371:81371 CertiOS.framework.proof.invariant_prop <> t var
R81368:81369 CertiOS.framework.proof.invariant_prop <> To var
R81330:81334 CertiOS.framework.proof.auxdef <> partO ind
R81340:81341 CertiOS.framework.proof.invariant_prop <> To var
R81338:81338 CertiOS.framework.proof.invariant_prop <> T var
R81336:81336 CertiOS.framework.proof.invariant_prop <> O var
R81526:81536 CertiOS.framework.auxlibs.Modules tidspec beq def
R81568:81578 CertiOS.framework.auxlibs.Modules tidspec beq def
R81526:81536 CertiOS.framework.auxlibs.Modules tidspec beq def
R81568:81578 CertiOS.framework.auxlibs.Modules tidspec beq def
R81568:81578 CertiOS.framework.auxlibs.Modules tidspec beq def
R81609:81627 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81647:81665 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81609:81627 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81647:81665 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81702:81720 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81702:81720 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81793:81809 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R81812:81827 CertiOS.framework.proof.auxdef TOSpecMod remove def
R81793:81809 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R81812:81827 CertiOS.framework.proof.auxdef TOSpecMod remove def
R81852:81876 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R81852:81876 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R81896:81904 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R81896:81904 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R81924:81941 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> join_sub_sub_merge thm
R81924:81941 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> join_sub_sub_merge thm
R81960:81978 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R81960:81978 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R82051:82067 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82070:82085 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82051:82067 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82070:82085 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82109:82133 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82109:82133 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82153:82161 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R82153:82161 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R82179:82197 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> join_sub_sub_merge' thm
R82179:82197 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> join_sub_sub_merge' thm
R82217:82233 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82236:82251 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82217:82233 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82236:82251 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82275:82299 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82275:82299 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82316:82336 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R82316:82336 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R82362:82378 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82381:82396 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82362:82378 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R82381:82396 CertiOS.framework.proof.auxdef TOSpecMod remove def
R82422:82446 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82422:82446 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R82463:82483 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R82463:82483 CertiOS.framework.auxlibs.Modules tidspec beq_false_neq thm
R82508:82519 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> sub_join_sub thm
R82508:82519 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> sub_join_sub thm
prf 82541:82555 <> mem_set_get_neq
R82589:82596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82609:82611 Coq.Init.Logic <> :type_scope:x_'='_x not
R82597:82599 CertiOS.framework.auxlibs.Maps <> set meth
R82607:82608 CertiOS.framework.proof.invariant_prop <> a' var
R82605:82605 CertiOS.framework.proof.invariant_prop <> x var
R82603:82603 CertiOS.framework.proof.invariant_prop <> a var
R82601:82601 CertiOS.framework.proof.invariant_prop <> m var
R82612:82612 CertiOS.framework.proof.invariant_prop <> m var
R82614:82615 CertiOS.framework.proof.invariant_prop <> a' var
R82583:82586 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R82582:82582 CertiOS.framework.proof.invariant_prop <> a var
R82587:82588 CertiOS.framework.proof.invariant_prop <> a' var
R82663:82665 Coq.Init.Logic <> :type_scope:x_'='_x not
R82645:82647 CertiOS.framework.auxlibs.Maps <> get meth
R82650:82652 CertiOS.framework.auxlibs.Maps <> set meth
R82666:82668 CertiOS.framework.auxlibs.Maps <> get meth
R82663:82665 Coq.Init.Logic <> :type_scope:x_'='_x not
R82645:82647 CertiOS.framework.auxlibs.Maps <> get meth
R82650:82652 CertiOS.framework.auxlibs.Maps <> set meth
R82666:82668 CertiOS.framework.auxlibs.Maps <> get meth
R82687:82698 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R82687:82698 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R82687:82698 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
R82687:82698 CertiOS.tactics.basetac.join_lib <> set_a_get_a' thm
prf 82728:82753 <> storebytes_mem_eq_dom_true
R82808:82815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R82816:82830 CertiOS.framework.proof.mem_join_lemmas <> mem_eq_dom_true def
R82834:82835 CertiOS.framework.proof.invariant_prop <> M' var
R82832:82832 CertiOS.framework.proof.invariant_prop <> M var
R82798:82800 Coq.Init.Logic <> :type_scope:x_'='_x not
R82781:82790 CertiOS.framework.model.memory <> storebytes def
R82796:82797 CertiOS.framework.proof.invariant_prop <> vl var
R82794:82794 CertiOS.framework.proof.invariant_prop <> a var
R82792:82792 CertiOS.framework.proof.invariant_prop <> M var
R82801:82804 Coq.Init.Datatypes <> Some constr
R82806:82807 CertiOS.framework.proof.invariant_prop <> M' var
R82982:82991 CertiOS.framework.model.memory <> storebytes def
R83004:83013 CertiOS.framework.model.memory <> storebytes def
R83004:83013 CertiOS.framework.model.memory <> storebytes def
R83045:83047 CertiOS.framework.auxlibs.Maps <> get meth
R83079:83093 CertiOS.framework.model.memory HalfPermMap get def
R83097:83097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83099:83100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83102:83102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83079:83093 CertiOS.framework.model.memory HalfPermMap get def
R83097:83097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83099:83100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83102:83102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83178:83187 CertiOS.framework.model.memory <> storebytes def
R83191:83191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83193:83194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83204:83204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83197:83199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R83178:83187 CertiOS.framework.model.memory <> storebytes def
R83191:83191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83193:83194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83204:83204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83197:83199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R83318:83321 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R83313:83315 Coq.Init.Logic <> :type_scope:x_'='_x not
R83307:83307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83309:83310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83312:83312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83328:83331 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R83322:83322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83324:83325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83327:83327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83318:83321 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R83313:83315 Coq.Init.Logic <> :type_scope:x_'='_x not
R83307:83307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83309:83310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83312:83312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83328:83331 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R83322:83322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83324:83325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83327:83327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83462:83464 Coq.Init.Logic <> :type_scope:x_'='_x not
R83438:83452 CertiOS.framework.model.memory HalfPermMap get def
R83456:83456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83458:83459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83461:83461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83465:83468 Coq.Init.Datatypes <> Some constr
R83470:83470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83475:83476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83478:83478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83471:83474 Coq.Init.Datatypes <> true constr
R83462:83464 Coq.Init.Logic <> :type_scope:x_'='_x not
R83438:83452 CertiOS.framework.model.memory HalfPermMap get def
R83456:83456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83458:83459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83461:83461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83465:83468 Coq.Init.Datatypes <> Some constr
R83470:83470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83475:83476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83478:83478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83471:83474 Coq.Init.Datatypes <> true constr
R83581:83583 Coq.Init.Logic <> :type_scope:x_'='_x not
R83546:83548 CertiOS.framework.auxlibs.Maps <> get meth
R83575:83575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83577:83578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83580:83580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83551:83553 CertiOS.framework.auxlibs.Maps <> set meth
R83564:83564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83569:83570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83572:83572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83565:83568 Coq.Init.Datatypes <> true constr
R83557:83557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83559:83560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83562:83562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83584:83587 Coq.Init.Datatypes <> Some constr
R83589:83589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83594:83595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83597:83597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83590:83593 Coq.Init.Datatypes <> true constr
R83581:83583 Coq.Init.Logic <> :type_scope:x_'='_x not
R83546:83548 CertiOS.framework.auxlibs.Maps <> get meth
R83575:83575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83577:83578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83580:83580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83551:83553 CertiOS.framework.auxlibs.Maps <> set meth
R83564:83564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83569:83570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83572:83572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83565:83568 Coq.Init.Datatypes <> true constr
R83557:83557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83559:83560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83562:83562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83584:83587 Coq.Init.Datatypes <> Some constr
R83589:83589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83594:83595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83597:83597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83590:83593 Coq.Init.Datatypes <> true constr
R83610:83620 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83610:83620 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83705:83707 Coq.Init.Logic <> :type_scope:x_'='_x not
R83670:83672 CertiOS.framework.auxlibs.Maps <> get meth
R83699:83699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83701:83702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83704:83704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83675:83677 CertiOS.framework.auxlibs.Maps <> set meth
R83688:83688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83693:83694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83696:83696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83689:83692 Coq.Init.Datatypes <> true constr
R83681:83681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83683:83684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83686:83686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83708:83711 Coq.Init.Datatypes <> Some constr
R83713:83713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83718:83719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83721:83721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83714:83717 Coq.Init.Datatypes <> true constr
R83705:83707 Coq.Init.Logic <> :type_scope:x_'='_x not
R83670:83672 CertiOS.framework.auxlibs.Maps <> get meth
R83699:83699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83701:83702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83704:83704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83675:83677 CertiOS.framework.auxlibs.Maps <> set meth
R83688:83688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83693:83694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83696:83696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83689:83692 Coq.Init.Datatypes <> true constr
R83681:83681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83683:83684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83686:83686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83708:83711 Coq.Init.Datatypes <> Some constr
R83713:83713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83718:83719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83721:83721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83714:83717 Coq.Init.Datatypes <> true constr
R83744:83754 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83744:83754 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83744:83754 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83841:83855 CertiOS.framework.model.memory HalfPermMap get def
R83941:83943 Coq.Init.Logic <> :type_scope:x_'='_x not
R83906:83908 CertiOS.framework.auxlibs.Maps <> get meth
R83935:83935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83937:83938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83940:83940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83911:83913 CertiOS.framework.auxlibs.Maps <> set meth
R83924:83924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83929:83930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83932:83932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83925:83928 Coq.Init.Datatypes <> true constr
R83917:83917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83919:83920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83922:83922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83944:83947 Coq.Init.Datatypes <> Some constr
R83949:83949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83955:83956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83958:83958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83950:83954 Coq.Init.Datatypes <> false constr
R83941:83943 Coq.Init.Logic <> :type_scope:x_'='_x not
R83906:83908 CertiOS.framework.auxlibs.Maps <> get meth
R83935:83935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83937:83938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83940:83940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83911:83913 CertiOS.framework.auxlibs.Maps <> set meth
R83924:83924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83929:83930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83932:83932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83925:83928 Coq.Init.Datatypes <> true constr
R83917:83917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83919:83920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83922:83922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83944:83947 Coq.Init.Datatypes <> Some constr
R83949:83949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83955:83956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83958:83958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R83950:83954 Coq.Init.Datatypes <> false constr
R83981:83991 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83981:83991 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R83981:83991 CertiOS.tactics.basetac.join_lib <> set_a_get_a thm
R84022:84036 CertiOS.framework.proof.invariant_prop <> mem_set_get_neq thm
R84022:84036 CertiOS.framework.proof.invariant_prop <> mem_set_get_neq thm
R84022:84036 CertiOS.framework.proof.invariant_prop <> mem_set_get_neq thm
R84022:84036 CertiOS.framework.proof.invariant_prop <> mem_set_get_neq thm
prf 84057:84077 <> store_mem_eq_dom_true
R84129:84136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84137:84151 CertiOS.framework.proof.mem_join_lemmas <> mem_eq_dom_true def
R84155:84156 CertiOS.framework.proof.invariant_prop <> M' var
R84153:84153 CertiOS.framework.proof.invariant_prop <> M var
R84119:84121 Coq.Init.Logic <> :type_scope:x_'='_x not
R84106:84110 CertiOS.framework.model.memory <> store def
R84118:84118 CertiOS.framework.proof.invariant_prop <> v var
R84116:84116 CertiOS.framework.proof.invariant_prop <> a var
R84114:84114 CertiOS.framework.proof.invariant_prop <> M var
R84112:84112 CertiOS.framework.proof.invariant_prop <> t var
R84122:84125 Coq.Init.Datatypes <> Some constr
R84127:84128 CertiOS.framework.proof.invariant_prop <> M' var
R84185:84189 CertiOS.framework.model.memory <> store def
R84218:84243 CertiOS.framework.proof.invariant_prop <> storebytes_mem_eq_dom_true thm
R84218:84243 CertiOS.framework.proof.invariant_prop <> storebytes_mem_eq_dom_true thm
prf 84266:84279 <> disj_complex''
R84375:84381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84431:84438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84454:84461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84476:84483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84510:84517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84543:84550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84558:84565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84578:84585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84600:84607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R84608:84615 CertiOS.framework.auxlibs.Maps <> disjoint def
R84622:84623 CertiOS.framework.proof.invariant_prop <> Mn var
R84617:84620 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R84586:84589 CertiOS.framework.auxlibs.Maps <> join meth
R84598:84599 CertiOS.framework.proof.invariant_prop <> Mc var
R84594:84596 CertiOS.framework.proof.invariant_prop <> Mc' var
R84591:84592 CertiOS.framework.proof.invariant_prop <> ml var
R84566:84569 CertiOS.framework.auxlibs.Maps <> join meth
R84577:84577 CertiOS.framework.proof.invariant_prop <> m var
R84574:84575 CertiOS.framework.proof.invariant_prop <> Ms var
R84571:84572 CertiOS.framework.proof.invariant_prop <> Ml var
R84552:84555 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R84551:84551 CertiOS.framework.proof.invariant_prop <> t var
R84556:84557 CertiOS.framework.proof.invariant_prop <> t' var
R84518:84534 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R84541:84542 CertiOS.framework.proof.invariant_prop <> Mc var
R84539:84539 CertiOS.framework.proof.invariant_prop <> t var
R84536:84537 CertiOS.framework.proof.invariant_prop <> Tm var
R84484:84500 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R84508:84509 CertiOS.framework.proof.invariant_prop <> Mn var
R84505:84506 CertiOS.framework.proof.invariant_prop <> t' var
R84502:84503 CertiOS.framework.proof.invariant_prop <> Tm var
R84462:84466 CertiOS.framework.proof.auxdef <> partM ind
R84474:84475 CertiOS.framework.proof.invariant_prop <> Tm var
R84471:84472 CertiOS.framework.proof.invariant_prop <> Tl var
R84468:84469 CertiOS.framework.proof.invariant_prop <> Ml var
R84439:84446 CertiOS.framework.auxlibs.Maps <> sub def
R84452:84453 CertiOS.framework.proof.invariant_prop <> Ml var
R84448:84450 CertiOS.framework.proof.invariant_prop <> Mc' var
R84420:84422 Coq.Init.Logic <> :type_scope:x_'='_x not
R84382:84386 CertiOS.framework.model.memory <> store def
R84412:84415 CertiOS.framework.model.memory <> Vptr constr
R84417:84418 CertiOS.framework.proof.invariant_prop <> t' var
R84402:84402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84404:84405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84409:84409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84403:84403 CertiOS.framework.proof.invariant_prop <> b var
R84398:84400 CertiOS.framework.proof.invariant_prop <> Mc' var
R84389:84392 CertiOS.framework.model.memory <> Tptr constr
R84394:84395 CertiOS.framework.proof.invariant_prop <> tp var
R84423:84426 Coq.Init.Datatypes <> Some constr
R84428:84430 CertiOS.framework.proof.invariant_prop <> Mcc var
R84360:84362 Coq.Init.Logic <> :type_scope:x_'='_x not
R84346:84350 CertiOS.framework.auxlibs.Maps <> merge meth
R84357:84359 CertiOS.framework.proof.invariant_prop <> Ms' var
R84352:84355 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R84363:84367 CertiOS.framework.auxlibs.Maps <> merge meth
R84373:84374 CertiOS.framework.proof.invariant_prop <> Ms var
R84369:84371 CertiOS.framework.proof.invariant_prop <> Mcc var
R84656:84669 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R84656:84669 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R84696:84710 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R84696:84710 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R84736:84743 CertiOS.framework.auxlibs.Maps <> sub def
R84746:84750 CertiOS.framework.auxlibs.Maps <> merge meth
R84736:84743 CertiOS.framework.auxlibs.Maps <> sub def
R84746:84750 CertiOS.framework.auxlibs.Maps <> merge meth
R84774:84800 CertiOS.framework.proof.mem_join_lemmas <> mem_disjoint_sub_merge_part thm
R84774:84800 CertiOS.framework.proof.mem_join_lemmas <> mem_disjoint_sub_merge_part thm
R84825:84845 CertiOS.framework.proof.invariant_prop <> store_mem_eq_dom_true thm
R84825:84845 CertiOS.framework.proof.invariant_prop <> store_mem_eq_dom_true thm
R84863:84891 CertiOS.framework.proof.mem_join_lemmas <> mem_sub_merge_mem_eq_dom_true thm
R84863:84891 CertiOS.framework.proof.mem_join_lemmas <> mem_sub_merge_mem_eq_dom_true thm
R84939:84947 CertiOS.tactics.basetac.join_lib <> join_comm thm
R84939:84947 CertiOS.tactics.basetac.join_lib <> join_comm thm
R84965:84986 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R84965:84986 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R85020:85027 CertiOS.framework.auxlibs.Maps <> disjoint def
R85020:85027 CertiOS.framework.auxlibs.Maps <> disjoint def
R85067:85099 CertiOS.framework.proof.mem_join_lemmas <> disjoint_mem_eq_dom_true_disjoint thm
R85067:85099 CertiOS.framework.proof.mem_join_lemmas <> disjoint_mem_eq_dom_true_disjoint thm
R85120:85127 CertiOS.framework.auxlibs.Maps <> disjoint def
R85120:85127 CertiOS.framework.auxlibs.Maps <> disjoint def
R85146:85154 CertiOS.tactics.basetac.join_lib <> join_comm thm
R85146:85154 CertiOS.tactics.basetac.join_lib <> join_comm thm
R85172:85197 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R85172:85197 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R85217:85224 CertiOS.framework.auxlibs.Maps <> disjoint def
R85217:85224 CertiOS.framework.auxlibs.Maps <> disjoint def
R85244:85258 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R85244:85258 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R85276:85287 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R85276:85287 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R85309:85344 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_merge_disjoint_merge_disjont thm
R85309:85344 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_merge_disjoint_merge_disjont thm
R85390:85417 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_disjoint_merge_disjoint1 thm
R85390:85417 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_disjoint_merge_disjoint1 thm
prf 85440:85454 <> disj_complex'''
R85506:85511 CertiOS.framework.model.language <> osabst def
R85575:85582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85602:85609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85641:85648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85664:85671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85687:85694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85720:85727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85742:85749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85775:85782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85809:85816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85824:85831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R85832:85839 CertiOS.framework.auxlibs.Maps <> disjoint def
R85846:85847 CertiOS.framework.proof.invariant_prop <> On var
R85841:85844 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R85818:85821 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R85817:85817 CertiOS.framework.proof.invariant_prop <> t var
R85822:85823 CertiOS.framework.proof.invariant_prop <> t' var
R85783:85799 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R85807:85808 CertiOS.framework.proof.invariant_prop <> On var
R85804:85805 CertiOS.framework.proof.invariant_prop <> t' var
R85801:85802 CertiOS.framework.proof.invariant_prop <> To var
R85750:85766 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R85773:85774 CertiOS.framework.proof.invariant_prop <> Oc var
R85771:85771 CertiOS.framework.proof.invariant_prop <> t var
R85768:85769 CertiOS.framework.proof.invariant_prop <> To var
R85728:85732 CertiOS.framework.proof.auxdef <> partO ind
R85740:85741 CertiOS.framework.proof.invariant_prop <> To var
R85737:85738 CertiOS.framework.proof.invariant_prop <> Tl var
R85734:85735 CertiOS.framework.proof.invariant_prop <> Ol var
R85695:85698 CertiOS.framework.auxlibs.Maps <> join meth
R85718:85719 CertiOS.framework.proof.invariant_prop <> x0 var
R85705:85709 CertiOS.framework.auxlibs.Maps <> minus meth
R85714:85715 CertiOS.framework.proof.invariant_prop <> Oc var
R85711:85712 CertiOS.framework.proof.invariant_prop <> Ol var
R85700:85702 CertiOS.framework.proof.invariant_prop <> OO' var
R85672:85675 CertiOS.framework.auxlibs.Maps <> join meth
R85684:85686 CertiOS.framework.proof.invariant_prop <> OO' var
R85680:85682 CertiOS.framework.proof.invariant_prop <> Os' var
R85677:85678 CertiOS.framework.proof.invariant_prop <> O' var
R85649:85652 CertiOS.framework.auxlibs.Maps <> join meth
R85662:85663 CertiOS.framework.proof.invariant_prop <> O' var
R85658:85660 CertiOS.framework.proof.invariant_prop <> Occ var
R85654:85656 CertiOS.framework.proof.invariant_prop <> Olc var
R85614:85616 Coq.Init.Logic <> :type_scope:x_'='_x not
R85610:85613 CertiOS.framework.proof.invariant_prop <> OO'' var
R85617:85619 CertiOS.framework.auxlibs.Maps <> set meth
R85639:85640 CertiOS.framework.proof.invariant_prop <> b' var
R85637:85637 CertiOS.framework.proof.invariant_prop <> a var
R85622:85626 CertiOS.framework.auxlibs.Maps <> merge meth
R85632:85634 CertiOS.framework.proof.invariant_prop <> Os' var
R85628:85630 CertiOS.framework.proof.invariant_prop <> Occ var
R85583:85586 CertiOS.framework.auxlibs.Maps <> join meth
R85598:85601 CertiOS.framework.proof.invariant_prop <> OO'' var
R85593:85596 CertiOS.framework.proof.invariant_prop <> Os'' var
R85588:85591 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R85566:85568 Coq.Init.Logic <> :type_scope:x_'='_x not
R85557:85559 CertiOS.framework.auxlibs.Maps <> get meth
R85565:85565 CertiOS.framework.proof.invariant_prop <> a var
R85561:85563 CertiOS.framework.proof.invariant_prop <> Occ var
R85569:85572 Coq.Init.Datatypes <> Some constr
R85574:85574 CertiOS.framework.proof.invariant_prop <> b var
R85880:85887 CertiOS.framework.auxlibs.Maps <> disjoint def
R85880:85887 CertiOS.framework.auxlibs.Maps <> disjoint def
R85909:85922 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R85909:85922 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R85948:85955 CertiOS.framework.auxlibs.Maps <> disjoint def
R85962:85966 CertiOS.framework.auxlibs.Maps <> minus meth
R85948:85955 CertiOS.framework.auxlibs.Maps <> disjoint def
R85962:85966 CertiOS.framework.auxlibs.Maps <> minus meth
R85986:85997 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R85986:85997 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R86018:86025 CertiOS.framework.auxlibs.Maps <> sub def
R86018:86025 CertiOS.framework.auxlibs.Maps <> sub def
R86047:86055 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R86047:86055 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R86080:86091 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R86080:86091 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R86109:86142 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_sub_disjoint thm
R86109:86142 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_sub_disjoint thm
R86163:86170 CertiOS.framework.auxlibs.Maps <> disjoint def
R86173:86177 CertiOS.framework.auxlibs.Maps <> merge meth
R86163:86170 CertiOS.framework.auxlibs.Maps <> disjoint def
R86173:86177 CertiOS.framework.auxlibs.Maps <> merge meth
R86203:86242 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_join_disjoint_merge_disjoint thm
R86203:86242 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_join_disjoint_merge_disjoint thm
R86288:86290 Coq.Init.Logic <> :type_scope:x_'='_x not
R86267:86269 CertiOS.framework.auxlibs.Maps <> get meth
R86272:86276 CertiOS.framework.auxlibs.Maps <> merge meth
R86291:86294 Coq.Init.Datatypes <> Some constr
R86288:86290 Coq.Init.Logic <> :type_scope:x_'='_x not
R86267:86269 CertiOS.framework.auxlibs.Maps <> get meth
R86272:86276 CertiOS.framework.auxlibs.Maps <> merge meth
R86291:86294 Coq.Init.Datatypes <> Some constr
R86310:86325 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_merge thm
R86310:86325 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_merge thm
R86345:86352 CertiOS.framework.auxlibs.Maps <> disjoint def
R86345:86352 CertiOS.framework.auxlibs.Maps <> disjoint def
R86384:86406 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R86384:86406 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R86426:86454 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R86426:86454 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
prf 86477:86489 <> rdyinv_isremp
R86507:86512 CertiOS.framework.model.language <> taskst def
R86520:86525 CertiOS.framework.model.language <> osabst def
R86533:86535 CertiOS.framework.logic.assertion <> Inv def
R86543:86545 CertiOS.framework.model.memory <> mem def
R86555:86555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R86612:86620 Coq.Init.Logic <> :type_scope:x_'->'_x not
R86633:86635 CertiOS.framework.model.memory <> mem def
R86665:86667 Coq.Init.Logic <> :type_scope:x_'='_x not
R86638:86646 CertiOS.framework.proof.auxdef <> RdyChange def
R86649:86658 CertiOS.framework.logic.assertion <> substaskst def
R86662:86663 CertiOS.framework.proof.invariant_prop <> M' var
R86660:86660 CertiOS.framework.proof.invariant_prop <> o var
R86668:86677 CertiOS.framework.logic.assertion <> substaskst def
R86681:86682 CertiOS.framework.proof.invariant_prop <> M' var
R86679:86679 CertiOS.framework.proof.invariant_prop <> o var
R86568:86572 CertiOS.framework.logic.assertion <> absop def
R86598:86601 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R86575:86575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R86590:86591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R86593:86594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R86597:86597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R86576:86585 CertiOS.framework.logic.assertion <> substaskst def
R86589:86589 CertiOS.framework.proof.invariant_prop <> M var
R86587:86587 CertiOS.framework.proof.invariant_prop <> o var
R86592:86592 CertiOS.framework.proof.invariant_prop <> O var
R86595:86596 CertiOS.framework.proof.invariant_prop <> ab var
R86602:86607 CertiOS.framework.logic.assertion <> RDYINV def
R86611:86611 CertiOS.framework.proof.invariant_prop <> t var
R86609:86609 CertiOS.framework.proof.invariant_prop <> I var
R86718:86723 CertiOS.framework.proof.invariant_prop <> absopx def
R86718:86723 CertiOS.framework.proof.invariant_prop <> absopx def
R86859:86861 Coq.Init.Logic <> :type_scope:x_'='_x not
R86862:86867 CertiOS.framework.model.language <> empisr def
R86859:86861 Coq.Init.Logic <> :type_scope:x_'='_x not
R86862:86867 CertiOS.framework.model.language <> empisr def
R86903:86908 CertiOS.framework.model.language <> empisr def
R86919:86939 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R86919:86939 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R86957:86966 CertiOS.framework.logic.assertion <> invlth_isr def
R86984:86986 Coq.Init.Logic <> :type_scope:x_'='_x not
R86987:86992 CertiOS.framework.model.language <> empisr def
R86984:86986 Coq.Init.Logic <> :type_scope:x_'='_x not
R86987:86992 CertiOS.framework.model.language <> empisr def
R87028:87033 CertiOS.framework.model.language <> empisr def
R87044:87064 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R87044:87064 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
prf 87086:87099 <> swi_rdy_eq_swi
R87117:87122 CertiOS.framework.model.language <> taskst def
R87133:87135 CertiOS.framework.model.memory <> mem def
R87146:87151 CertiOS.framework.model.language <> osabst def
R87159:87161 CertiOS.framework.logic.assertion <> Inv def
R87171:87171 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87228:87236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87237:87237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87296:87304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R87317:87321 CertiOS.framework.logic.assertion <> absop def
R87361:87364 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R87324:87324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87352:87353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87356:87357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87360:87360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87325:87333 CertiOS.framework.proof.auxdef <> RdyChange def
R87336:87345 CertiOS.framework.logic.assertion <> substaskst def
R87349:87350 CertiOS.framework.proof.invariant_prop <> Mr var
R87347:87347 CertiOS.framework.proof.invariant_prop <> o var
R87354:87355 CertiOS.framework.proof.invariant_prop <> Or var
R87358:87359 CertiOS.framework.proof.invariant_prop <> ab var
R87365:87370 CertiOS.framework.logic.assertion <> SWINVt def
R87374:87374 CertiOS.framework.proof.invariant_prop <> t var
R87372:87372 CertiOS.framework.proof.invariant_prop <> I var
R87250:87254 CertiOS.framework.logic.assertion <> absop def
R87282:87285 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R87257:87257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87273:87274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87277:87278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87281:87281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87258:87267 CertiOS.framework.logic.assertion <> substaskst def
R87271:87272 CertiOS.framework.proof.invariant_prop <> Mr var
R87269:87269 CertiOS.framework.proof.invariant_prop <> o var
R87275:87276 CertiOS.framework.proof.invariant_prop <> Or var
R87279:87280 CertiOS.framework.proof.invariant_prop <> ab var
R87286:87291 CertiOS.framework.logic.assertion <> RDYINV def
R87295:87295 CertiOS.framework.proof.invariant_prop <> t var
R87293:87293 CertiOS.framework.proof.invariant_prop <> I var
R87184:87188 CertiOS.framework.logic.assertion <> absop def
R87214:87217 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R87191:87191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87206:87207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87209:87210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87213:87213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R87192:87201 CertiOS.framework.logic.assertion <> substaskst def
R87205:87205 CertiOS.framework.proof.invariant_prop <> M var
R87203:87203 CertiOS.framework.proof.invariant_prop <> o var
R87208:87208 CertiOS.framework.proof.invariant_prop <> O var
R87211:87212 CertiOS.framework.proof.invariant_prop <> ab var
R87218:87223 CertiOS.framework.logic.assertion <> SWINVt def
R87227:87227 CertiOS.framework.proof.invariant_prop <> t var
R87225:87225 CertiOS.framework.proof.invariant_prop <> I var
R87631:87637 CertiOS.framework.logic.assertion <> empabst syndef
R87631:87637 CertiOS.framework.logic.assertion <> empabst syndef
R87668:87676 CertiOS.tactics.basetac.join_lib <> join_comm thm
R87685:87692 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87668:87676 CertiOS.tactics.basetac.join_lib <> join_comm thm
R87685:87692 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87710:87715 CertiOS.framework.logic.assertion <> empmem syndef
R87723:87729 CertiOS.framework.logic.assertion <> empabst syndef
R87710:87715 CertiOS.framework.logic.assertion <> empmem syndef
R87723:87729 CertiOS.framework.logic.assertion <> empabst syndef
R87763:87770 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87763:87770 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87787:87794 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87787:87794 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87846:87854 CertiOS.tactics.basetac.join_lib <> join_comm thm
R87864:87871 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87846:87854 CertiOS.tactics.basetac.join_lib <> join_comm thm
R87864:87871 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87889:87896 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87889:87896 CertiOS.tactics.basetac.join_lib <> join_emp thm
R87926:87934 CertiOS.framework.logic.assertion <> emposabst def
R88012:88019 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88012:88019 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88038:88045 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88038:88045 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88064:88072 CertiOS.framework.logic.assertion <> emposabst def
R88100:88107 Coq.Arith.Plus <> plus_0_r syndef
R88100:88107 Coq.Arith.Plus <> plus_0_r syndef
R88100:88107 Coq.Arith.Plus <> plus_0_r syndef
R88120:88122 Coq.Init.Logic <> :type_scope:x_'='_x not
R88123:88128 CertiOS.framework.model.language <> empisr def
R88120:88122 Coq.Init.Logic <> :type_scope:x_'='_x not
R88123:88128 CertiOS.framework.model.language <> empisr def
R88164:88169 CertiOS.framework.model.language <> empisr def
R88180:88200 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R88180:88200 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R88250:88257 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88250:88257 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88275:88282 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88275:88282 CertiOS.tactics.basetac.join_lib <> join_emp thm
R88311:88319 CertiOS.framework.logic.assertion <> emposabst def
prf 88369:88380 <> swinv_isremp
R88398:88403 CertiOS.framework.model.language <> taskst def
R88411:88416 CertiOS.framework.model.language <> osabst def
R88424:88426 CertiOS.framework.logic.assertion <> Inv def
R88436:88436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R88480:88488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R88500:88502 Coq.Init.Logic <> :type_scope:x_'='_x not
R88489:88497 CertiOS.framework.proof.auxdef <> RdyChange def
R88499:88499 CertiOS.framework.proof.invariant_prop <> o var
R88503:88503 CertiOS.framework.proof.invariant_prop <> o var
R88449:88453 CertiOS.framework.logic.assertion <> absop def
R88466:88469 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R88456:88456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88458:88459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88461:88462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88465:88465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88457:88457 CertiOS.framework.proof.invariant_prop <> o var
R88460:88460 CertiOS.framework.proof.invariant_prop <> O var
R88463:88464 CertiOS.framework.proof.invariant_prop <> ab var
R88470:88475 CertiOS.framework.logic.assertion <> SWINVt def
R88479:88479 CertiOS.framework.proof.invariant_prop <> t var
R88477:88477 CertiOS.framework.proof.invariant_prop <> I var
R88539:88544 CertiOS.framework.proof.invariant_prop <> absopx def
R88539:88544 CertiOS.framework.proof.invariant_prop <> absopx def
R88761:88776 CertiOS.framework.logic.assertion <> getmem def
R88793:88800 CertiOS.framework.model.language <> get_smem def
R88815:88821 CertiOS.framework.model.opsem <> get_mem def
R88845:88847 Coq.Init.Logic <> :type_scope:x_'='_x not
R88839:88844 CertiOS.framework.model.language <> empisr def
R88845:88847 Coq.Init.Logic <> :type_scope:x_'='_x not
R88839:88844 CertiOS.framework.model.language <> empisr def
R88863:88883 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R88863:88883 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R88895:88900 CertiOS.framework.model.language <> empisr def
prf 88946:88964 <> swdead_ahprio_false
R89007:89014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89044:89051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89084:89091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89092:89096 Coq.Init.Logic <> False ind
R89060:89063 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R89052:89052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89054:89054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89056:89056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89059:89059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89053:89053 CertiOS.framework.proof.invariant_prop <> o var
R89055:89055 CertiOS.framework.proof.invariant_prop <> O var
R89057:89058 CertiOS.framework.proof.invariant_prop <> ab var
R89075:89078 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R89064:89069 CertiOS.framework.logic.assertion <> AHprio constr
R89074:89074 CertiOS.framework.proof.invariant_prop <> t var
R89071:89072 CertiOS.framework.proof.invariant_prop <> sd var
R89079:89083 CertiOS.framework.logic.assertion <> Atrue constr
R89023:89026 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R89015:89015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89017:89017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89019:89019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89022:89022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89016:89016 CertiOS.framework.proof.invariant_prop <> o var
R89018:89018 CertiOS.framework.proof.invariant_prop <> O var
R89020:89021 CertiOS.framework.proof.invariant_prop <> ab var
R89027:89036 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R89043:89043 CertiOS.framework.proof.invariant_prop <> t var
R89041:89041 CertiOS.framework.proof.invariant_prop <> x var
R89038:89039 CertiOS.framework.proof.invariant_prop <> sd var
R88995:89003 CertiOS.framework.logic.inferules <> GoodSched def
R89005:89006 CertiOS.framework.proof.invariant_prop <> sd var
R89219:89228 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R89311:89313 Coq.Init.Logic <> :type_scope:x_'='_x not
R89296:89298 CertiOS.framework.auxlibs.Maps <> get meth
R89302:89310 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R89314:89317 Coq.Init.Datatypes <> Some constr
R89320:89329 CertiOS.framework.model.language <> abstcblist constr
R89311:89313 Coq.Init.Logic <> :type_scope:x_'='_x not
R89296:89298 CertiOS.framework.auxlibs.Maps <> get meth
R89302:89310 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R89314:89317 Coq.Init.Datatypes <> Some constr
R89320:89329 CertiOS.framework.model.language <> abstcblist constr
R89409:89411 Coq.Init.Logic <> :type_scope:x_'='_x not
R89394:89396 CertiOS.framework.auxlibs.Maps <> get meth
R89400:89408 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R89412:89415 Coq.Init.Datatypes <> Some constr
R89418:89427 CertiOS.framework.model.language <> abstcblist constr
R89409:89411 Coq.Init.Logic <> :type_scope:x_'='_x not
R89394:89396 CertiOS.framework.auxlibs.Maps <> get meth
R89400:89408 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R89412:89415 Coq.Init.Datatypes <> Some constr
R89418:89427 CertiOS.framework.model.language <> abstcblist constr
prf 89533:89549 <> partm_minus_partm
R89606:89613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R89614:89618 CertiOS.framework.proof.auxdef <> partM ind
R89627:89628 CertiOS.framework.proof.invariant_prop <> Tm var
R89623:89625 CertiOS.framework.proof.invariant_prop <> Tl' var
R89620:89621 CertiOS.framework.proof.invariant_prop <> Ml var
R89582:89586 CertiOS.framework.proof.auxdef <> partM ind
R89604:89605 CertiOS.framework.proof.invariant_prop <> Tm var
R89601:89602 CertiOS.framework.proof.invariant_prop <> Tl var
R89589:89593 CertiOS.framework.auxlibs.Maps <> minus meth
R89598:89598 CertiOS.framework.proof.invariant_prop <> M var
R89595:89596 CertiOS.framework.proof.invariant_prop <> Ml var
R89673:89679 CertiOS.framework.proof.auxdef <> partm_O constr
R89673:89679 CertiOS.framework.proof.auxdef <> partm_O constr
R89699:89705 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89708:89708 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89711:89725 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89738:89741 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R89726:89729 CertiOS.framework.auxlibs.Maps <> join meth
R89742:89745 CertiOS.framework.auxlibs.Maps <> join meth
R89699:89705 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89708:89708 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89711:89725 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R89738:89741 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R89726:89729 CertiOS.framework.auxlibs.Maps <> join meth
R89742:89745 CertiOS.framework.auxlibs.Maps <> join meth
R89767:89783 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_minus_extend thm
R89767:89783 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_minus_extend thm
R89814:89816 Coq.Init.Logic <> :type_scope:x_'='_x not
R89817:89821 CertiOS.framework.auxlibs.Maps <> minus meth
R89814:89816 Coq.Init.Logic <> :type_scope:x_'='_x not
R89817:89821 CertiOS.framework.auxlibs.Maps <> minus meth
R89839:89851 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R89839:89851 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R89893:89899 CertiOS.framework.proof.auxdef <> partm_S constr
R89893:89899 CertiOS.framework.proof.auxdef <> partm_S constr
prf 89923:89939 <> parto_minus_parto
R89996:90003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90004:90008 CertiOS.framework.proof.auxdef <> partO ind
R90017:90018 CertiOS.framework.proof.invariant_prop <> To var
R90013:90015 CertiOS.framework.proof.invariant_prop <> Tl' var
R90010:90011 CertiOS.framework.proof.invariant_prop <> Ol var
R89972:89976 CertiOS.framework.proof.auxdef <> partO ind
R89994:89995 CertiOS.framework.proof.invariant_prop <> To var
R89991:89992 CertiOS.framework.proof.invariant_prop <> Tl var
R89979:89983 CertiOS.framework.auxlibs.Maps <> minus meth
R89988:89988 CertiOS.framework.proof.invariant_prop <> O var
R89985:89986 CertiOS.framework.proof.invariant_prop <> Ol var
R90063:90069 CertiOS.framework.proof.auxdef <> parto_O constr
R90063:90069 CertiOS.framework.proof.auxdef <> parto_O constr
R90089:90095 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90098:90098 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90101:90115 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90128:90131 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90116:90119 CertiOS.framework.auxlibs.Maps <> join meth
R90132:90135 CertiOS.framework.auxlibs.Maps <> join meth
R90089:90095 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90098:90098 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90101:90115 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R90128:90131 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90116:90119 CertiOS.framework.auxlibs.Maps <> join meth
R90132:90135 CertiOS.framework.auxlibs.Maps <> join meth
R90157:90173 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_minus_extend thm
R90157:90173 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_minus_extend thm
R90204:90206 Coq.Init.Logic <> :type_scope:x_'='_x not
R90207:90211 CertiOS.framework.auxlibs.Maps <> minus meth
R90204:90206 Coq.Init.Logic <> :type_scope:x_'='_x not
R90207:90211 CertiOS.framework.auxlibs.Maps <> minus meth
R90229:90241 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R90229:90241 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R90283:90289 CertiOS.framework.proof.auxdef <> parto_S constr
R90283:90289 CertiOS.framework.proof.auxdef <> parto_S constr
prf 90312:90320 <> crt_partm
R90377:90384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90397:90404 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90430:90437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90454:90461 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90476:90483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R90484:90488 CertiOS.framework.proof.auxdef <> partM ind
R90529:90541 CertiOS.framework.proof.auxdef TMSpecMod put def
R90571:90574 CertiOS.framework.proof.invariant_prop <> Mcre var
R90568:90569 CertiOS.framework.proof.invariant_prop <> t' var
R90544:90556 CertiOS.framework.proof.auxdef TMSpecMod put def
R90563:90565 CertiOS.framework.proof.invariant_prop <> Mlc var
R90561:90561 CertiOS.framework.proof.invariant_prop <> t var
R90558:90559 CertiOS.framework.proof.invariant_prop <> Tm var
R90494:90496 CertiOS.framework.auxlibs.Maps <> set meth
R90515:90515 CertiOS.framework.proof.invariant_prop <> y var
R90512:90513 CertiOS.framework.proof.invariant_prop <> t' var
R90499:90501 CertiOS.framework.auxlibs.Maps <> set meth
R90508:90509 CertiOS.framework.proof.invariant_prop <> x' var
R90506:90506 CertiOS.framework.proof.invariant_prop <> t var
R90503:90504 CertiOS.framework.proof.invariant_prop <> Tl var
R90490:90491 CertiOS.framework.proof.invariant_prop <> Ml var
R90462:90466 CertiOS.framework.proof.auxdef <> partM ind
R90474:90475 CertiOS.framework.proof.invariant_prop <> Tm var
R90471:90472 CertiOS.framework.proof.invariant_prop <> Tl var
R90468:90469 CertiOS.framework.proof.invariant_prop <> Ml var
R90438:90441 CertiOS.framework.auxlibs.Maps <> join meth
R90452:90453 CertiOS.framework.proof.invariant_prop <> Mc var
R90447:90450 CertiOS.framework.proof.invariant_prop <> Mcre var
R90443:90445 CertiOS.framework.proof.invariant_prop <> Mlc var
R90405:90421 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R90428:90429 CertiOS.framework.proof.invariant_prop <> Mc var
R90426:90426 CertiOS.framework.proof.invariant_prop <> t var
R90423:90424 CertiOS.framework.proof.invariant_prop <> Tm var
R90393:90395 Coq.Init.Logic <> :type_scope:x_'='_x not
R90385:90387 CertiOS.framework.auxlibs.Maps <> get meth
R90392:90392 CertiOS.framework.proof.invariant_prop <> t var
R90389:90390 CertiOS.framework.proof.invariant_prop <> Tl var
R90396:90396 CertiOS.framework.proof.invariant_prop <> x var
R90371:90374 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R90370:90370 CertiOS.framework.proof.invariant_prop <> t var
R90375:90376 CertiOS.framework.proof.invariant_prop <> t' var
R90620:90624 CertiOS.framework.proof.auxdef <> partM ind
R90646:90658 CertiOS.framework.proof.auxdef TMSpecMod put def
R90627:90631 CertiOS.framework.auxlibs.Maps <> minus meth
R90620:90624 CertiOS.framework.proof.auxdef <> partM ind
R90646:90658 CertiOS.framework.proof.auxdef TMSpecMod put def
R90627:90631 CertiOS.framework.auxlibs.Maps <> minus meth
R90683:90700 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R90683:90700 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R90769:90771 Coq.Init.Logic <> :type_scope:x_'='_x not
R90748:90763 CertiOS.framework.proof.auxdef TMSpecMod remove def
R90772:90787 CertiOS.framework.proof.auxdef TMSpecMod remove def
R90790:90802 CertiOS.framework.proof.auxdef TMSpecMod put def
R90769:90771 Coq.Init.Logic <> :type_scope:x_'='_x not
R90748:90763 CertiOS.framework.proof.auxdef TMSpecMod remove def
R90772:90787 CertiOS.framework.proof.auxdef TMSpecMod remove def
R90790:90802 CertiOS.framework.proof.auxdef TMSpecMod put def
R90828:90854 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R90828:90854 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R90828:90854 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R90902:90908 CertiOS.framework.proof.auxdef <> partm_S constr
R90902:90908 CertiOS.framework.proof.auxdef <> partm_S constr
R90928:90947 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R90928:90947 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R90928:90947 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R90970:90977 CertiOS.framework.proof.invariant_prop <> part_sub thm
R90970:90977 CertiOS.framework.proof.invariant_prop <> part_sub thm
R90996:91024 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_sub_join_minus_minus thm
R90996:91024 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_sub_join_minus_minus thm
R91044:91064 CertiOS.framework.proof.auxdef TMSpecMod in_or_notin thm
R91070:91082 CertiOS.framework.proof.auxdef TMSpecMod put def
R91044:91064 CertiOS.framework.proof.auxdef TMSpecMod in_or_notin thm
R91070:91082 CertiOS.framework.proof.auxdef TMSpecMod put def
R91151:91167 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R91170:91182 CertiOS.framework.proof.auxdef TMSpecMod put def
R91151:91167 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R91170:91182 CertiOS.framework.proof.auxdef TMSpecMod put def
R91223:91242 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R91223:91242 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R91223:91242 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R91262:91279 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R91262:91279 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R91327:91353 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91327:91353 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91327:91353 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91372:91397 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R91372:91397 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R91372:91397 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R91372:91397 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R91422:91438 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R91441:91456 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91422:91438 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R91441:91456 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91480:91504 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R91480:91504 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R91525:91542 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R91525:91542 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R91592:91596 CertiOS.framework.proof.auxdef <> partM ind
R91629:91644 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91647:91659 CertiOS.framework.proof.auxdef TMSpecMod put def
R91599:91603 CertiOS.framework.auxlibs.Maps <> minus meth
R91606:91610 CertiOS.framework.auxlibs.Maps <> minus meth
R91592:91596 CertiOS.framework.proof.auxdef <> partM ind
R91629:91644 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91647:91659 CertiOS.framework.proof.auxdef TMSpecMod put def
R91599:91603 CertiOS.framework.auxlibs.Maps <> minus meth
R91606:91610 CertiOS.framework.auxlibs.Maps <> minus meth
R91730:91742 Coq.Init.Logic <> :type_scope:x_'='_x not
R91687:91702 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91705:91720 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91743:91758 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91761:91776 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91779:91791 CertiOS.framework.proof.auxdef TMSpecMod put def
R91730:91742 Coq.Init.Logic <> :type_scope:x_'='_x not
R91687:91702 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91705:91720 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91743:91758 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91761:91776 CertiOS.framework.proof.auxdef TMSpecMod remove def
R91779:91791 CertiOS.framework.proof.auxdef TMSpecMod put def
R91833:91853 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R91833:91853 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R91833:91853 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R91833:91853 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R91872:91898 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91872:91898 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91872:91898 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R91947:91953 CertiOS.framework.proof.auxdef <> partm_S constr
R91947:91953 CertiOS.framework.proof.auxdef <> partm_S constr
R91973:92003 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R91973:92003 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R91973:92003 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R91973:92003 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R92022:92041 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92022:92041 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92022:92041 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92064:92071 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92064:92071 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92092:92099 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92092:92099 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92120:92133 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R92120:92133 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R92159:92173 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R92159:92173 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R92202:92232 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_sub_disjoint_join_minus thm
R92202:92232 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_sub_disjoint_join_minus thm
R92315:92327 Coq.Init.Logic <> :type_scope:x_'='_x not
R92271:92286 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92289:92301 CertiOS.framework.proof.auxdef TMSpecMod put def
R92328:92343 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92346:92358 CertiOS.framework.proof.auxdef TMSpecMod put def
R92361:92373 CertiOS.framework.proof.auxdef TMSpecMod put def
R92315:92327 Coq.Init.Logic <> :type_scope:x_'='_x not
R92271:92286 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92289:92301 CertiOS.framework.proof.auxdef TMSpecMod put def
R92328:92343 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92346:92358 CertiOS.framework.proof.auxdef TMSpecMod put def
R92361:92373 CertiOS.framework.proof.auxdef TMSpecMod put def
R92409:92435 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R92409:92435 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R92409:92435 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R92501:92505 CertiOS.framework.proof.auxdef <> partM ind
R92563:92575 CertiOS.framework.proof.auxdef TMSpecMod put def
R92578:92590 CertiOS.framework.proof.auxdef TMSpecMod put def
R92522:92524 CertiOS.framework.auxlibs.Maps <> set meth
R92527:92529 CertiOS.framework.auxlibs.Maps <> set meth
R92508:92512 CertiOS.framework.auxlibs.Maps <> minus meth
R92501:92505 CertiOS.framework.proof.auxdef <> partM ind
R92563:92575 CertiOS.framework.proof.auxdef TMSpecMod put def
R92578:92590 CertiOS.framework.proof.auxdef TMSpecMod put def
R92522:92524 CertiOS.framework.auxlibs.Maps <> set meth
R92527:92529 CertiOS.framework.auxlibs.Maps <> set meth
R92508:92512 CertiOS.framework.auxlibs.Maps <> minus meth
R92622:92628 CertiOS.framework.proof.auxdef <> partm_S constr
R92622:92628 CertiOS.framework.proof.auxdef <> partm_S constr
R92648:92667 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92648:92667 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92648:92667 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R92690:92697 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92690:92697 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92718:92725 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92718:92725 CertiOS.framework.proof.invariant_prop <> part_sub thm
R92746:92759 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R92746:92759 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R92785:92799 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R92785:92799 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R92826:92857 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_sub_disjoint_join_minus1 thm
R92826:92857 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_sub_disjoint_join_minus1 thm
R92895:92911 CertiOS.framework.proof.invariant_prop <> partm_minus_partm thm
R92895:92911 CertiOS.framework.proof.invariant_prop <> partm_minus_partm thm
R92953:92965 Coq.Init.Logic <> :type_scope:x_'='_x not
R92931:92943 CertiOS.framework.proof.auxdef TMSpecMod put def
R92966:92981 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92984:92996 CertiOS.framework.proof.auxdef TMSpecMod put def
R92999:93011 CertiOS.framework.proof.auxdef TMSpecMod put def
R92953:92965 Coq.Init.Logic <> :type_scope:x_'='_x not
R92931:92943 CertiOS.framework.proof.auxdef TMSpecMod put def
R92966:92981 CertiOS.framework.proof.auxdef TMSpecMod remove def
R92984:92996 CertiOS.framework.proof.auxdef TMSpecMod put def
R92999:93011 CertiOS.framework.proof.auxdef TMSpecMod put def
R93047:93073 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R93047:93073 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R93047:93073 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R93089:93112 CertiOS.framework.proof.auxdef TMSpecMod remove_nothing thm
R93089:93112 CertiOS.framework.proof.auxdef TMSpecMod remove_nothing thm
R93089:93112 CertiOS.framework.proof.auxdef TMSpecMod remove_nothing thm
R93089:93112 CertiOS.framework.proof.auxdef TMSpecMod remove_nothing thm
R93160:93166 CertiOS.framework.proof.auxdef <> partm_S constr
R93160:93166 CertiOS.framework.proof.auxdef <> partm_S constr
R93186:93205 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R93186:93205 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R93186:93205 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R93225:93232 CertiOS.framework.auxlibs.Maps <> sub def
R93225:93232 CertiOS.framework.auxlibs.Maps <> sub def
R93255:93262 CertiOS.framework.proof.invariant_prop <> part_sub thm
R93255:93262 CertiOS.framework.proof.invariant_prop <> part_sub thm
R93281:93288 CertiOS.framework.auxlibs.Maps <> sub def
R93281:93288 CertiOS.framework.auxlibs.Maps <> sub def
R93309:93318 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R93309:93318 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R93337:93345 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R93337:93345 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R93368:93385 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_join_minus thm
R93368:93385 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_sub_join_minus thm
prf 93408:93416 <> crt_parto
R93504:93512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93527:93534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93560:93567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93575:93582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93601:93608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93635:93642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93668:93675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93692:93699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R93700:93704 CertiOS.framework.proof.auxdef <> partO ind
R93767:93779 CertiOS.framework.proof.auxdef TOSpecMod put def
R93809:93812 CertiOS.framework.proof.invariant_prop <> Ocre var
R93806:93807 CertiOS.framework.proof.invariant_prop <> t' var
R93782:93794 CertiOS.framework.proof.auxdef TOSpecMod put def
R93801:93803 CertiOS.framework.proof.invariant_prop <> Olc var
R93799:93799 CertiOS.framework.proof.invariant_prop <> t var
R93796:93797 CertiOS.framework.proof.invariant_prop <> To var
R93732:93734 CertiOS.framework.auxlibs.Maps <> set meth
R93753:93753 CertiOS.framework.proof.invariant_prop <> y var
R93750:93751 CertiOS.framework.proof.invariant_prop <> t' var
R93737:93739 CertiOS.framework.auxlibs.Maps <> set meth
R93746:93747 CertiOS.framework.proof.invariant_prop <> x' var
R93744:93744 CertiOS.framework.proof.invariant_prop <> t var
R93741:93742 CertiOS.framework.proof.invariant_prop <> Tl var
R93707:93711 CertiOS.framework.auxlibs.Maps <> merge meth
R93717:93721 CertiOS.framework.auxlibs.Maps <> minus meth
R93726:93727 CertiOS.framework.proof.invariant_prop <> Oc var
R93723:93724 CertiOS.framework.proof.invariant_prop <> Ol var
R93713:93714 CertiOS.framework.proof.invariant_prop <> O' var
R93676:93679 CertiOS.framework.auxlibs.Maps <> join meth
R93690:93691 CertiOS.framework.proof.invariant_prop <> O' var
R93685:93688 CertiOS.framework.proof.invariant_prop <> Ocre var
R93681:93683 CertiOS.framework.proof.invariant_prop <> Olc var
R93643:93646 CertiOS.framework.auxlibs.Maps <> join meth
R93666:93667 CertiOS.framework.proof.invariant_prop <> x0 var
R93653:93657 CertiOS.framework.auxlibs.Maps <> minus meth
R93662:93663 CertiOS.framework.proof.invariant_prop <> Oc var
R93659:93660 CertiOS.framework.proof.invariant_prop <> Ol var
R93648:93650 CertiOS.framework.proof.invariant_prop <> OO' var
R93609:93612 CertiOS.framework.auxlibs.Maps <> join meth
R93622:93624 CertiOS.framework.auxlibs.Maps <> set meth
R93632:93633 CertiOS.framework.proof.invariant_prop <> b' var
R93630:93630 CertiOS.framework.proof.invariant_prop <> a var
R93626:93628 CertiOS.framework.proof.invariant_prop <> OO' var
R93617:93619 CertiOS.framework.proof.invariant_prop <> Os' var
R93614:93615 CertiOS.framework.proof.invariant_prop <> O' var
R93592:93594 Coq.Init.Logic <> :type_scope:x_'='_x not
R93583:93585 CertiOS.framework.auxlibs.Maps <> get meth
R93591:93591 CertiOS.framework.proof.invariant_prop <> a var
R93587:93589 CertiOS.framework.proof.invariant_prop <> OO' var
R93595:93598 Coq.Init.Datatypes <> Some constr
R93600:93600 CertiOS.framework.proof.invariant_prop <> b var
R93569:93572 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R93568:93568 CertiOS.framework.proof.invariant_prop <> t var
R93573:93574 CertiOS.framework.proof.invariant_prop <> t' var
R93535:93551 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R93558:93559 CertiOS.framework.proof.invariant_prop <> Oc var
R93556:93556 CertiOS.framework.proof.invariant_prop <> t var
R93553:93554 CertiOS.framework.proof.invariant_prop <> To var
R93513:93517 CertiOS.framework.proof.auxdef <> partO ind
R93525:93526 CertiOS.framework.proof.invariant_prop <> To var
R93522:93523 CertiOS.framework.proof.invariant_prop <> Tl var
R93519:93520 CertiOS.framework.proof.invariant_prop <> Ol var
R93495:93497 Coq.Init.Logic <> :type_scope:x_'='_x not
R93487:93489 CertiOS.framework.auxlibs.Maps <> get meth
R93494:93494 CertiOS.framework.proof.invariant_prop <> t var
R93491:93492 CertiOS.framework.proof.invariant_prop <> Tl var
R93498:93501 Coq.Init.Datatypes <> Some constr
R93503:93503 CertiOS.framework.proof.invariant_prop <> x var
R93855:93875 CertiOS.framework.proof.auxdef TOSpecMod in_or_notin thm
R93855:93875 CertiOS.framework.proof.auxdef TOSpecMod in_or_notin thm
R93957:93974 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R93957:93974 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R94021:94037 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R94040:94055 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94021:94037 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R94040:94055 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94079:94103 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R94079:94103 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R94124:94141 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R94124:94141 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R94191:94195 CertiOS.framework.proof.auxdef <> partO ind
R94238:94250 CertiOS.framework.proof.auxdef TOSpecMod put def
R94253:94268 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94198:94202 CertiOS.framework.auxlibs.Maps <> merge meth
R94209:94213 CertiOS.framework.auxlibs.Maps <> minus meth
R94216:94220 CertiOS.framework.auxlibs.Maps <> minus meth
R94191:94195 CertiOS.framework.proof.auxdef <> partO ind
R94238:94250 CertiOS.framework.proof.auxdef TOSpecMod put def
R94253:94268 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94198:94202 CertiOS.framework.auxlibs.Maps <> merge meth
R94209:94213 CertiOS.framework.auxlibs.Maps <> minus meth
R94216:94220 CertiOS.framework.auxlibs.Maps <> minus meth
R94340:94353 Coq.Init.Logic <> :type_scope:x_'='_x not
R94297:94312 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94315:94330 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94354:94369 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94372:94384 CertiOS.framework.proof.auxdef TOSpecMod put def
R94387:94402 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94340:94353 Coq.Init.Logic <> :type_scope:x_'='_x not
R94297:94312 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94315:94330 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94354:94369 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94372:94384 CertiOS.framework.proof.auxdef TOSpecMod put def
R94387:94402 CertiOS.framework.proof.auxdef TOSpecMod remove def
R94432:94458 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R94432:94458 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R94432:94458 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R94507:94513 CertiOS.framework.proof.auxdef <> parto_S constr
R94507:94513 CertiOS.framework.proof.auxdef <> parto_S constr
R94533:94552 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R94533:94552 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R94533:94552 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R94574:94582 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R94574:94582 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R94602:94610 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R94602:94610 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R94631:94644 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R94631:94644 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R94668:94675 CertiOS.framework.auxlibs.Maps <> disjoint def
R94682:94686 CertiOS.framework.auxlibs.Maps <> minus meth
R94689:94693 CertiOS.framework.auxlibs.Maps <> minus meth
R94668:94675 CertiOS.framework.auxlibs.Maps <> disjoint def
R94682:94686 CertiOS.framework.auxlibs.Maps <> minus meth
R94689:94693 CertiOS.framework.auxlibs.Maps <> minus meth
R94718:94725 CertiOS.framework.auxlibs.Maps <> disjoint def
R94732:94736 CertiOS.framework.auxlibs.Maps <> minus meth
R94739:94743 CertiOS.framework.auxlibs.Maps <> minus meth
R94718:94725 CertiOS.framework.auxlibs.Maps <> disjoint def
R94732:94736 CertiOS.framework.auxlibs.Maps <> minus meth
R94739:94743 CertiOS.framework.auxlibs.Maps <> minus meth
R94768:94775 CertiOS.framework.auxlibs.Maps <> disjoint def
R94782:94786 CertiOS.framework.auxlibs.Maps <> minus meth
R94768:94775 CertiOS.framework.auxlibs.Maps <> disjoint def
R94782:94786 CertiOS.framework.auxlibs.Maps <> minus meth
R94806:94817 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R94806:94817 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R94836:94871 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R94836:94871 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R94890:94897 CertiOS.framework.auxlibs.Maps <> disjoint def
R94915:94919 CertiOS.framework.auxlibs.Maps <> minus meth
R94922:94926 CertiOS.framework.auxlibs.Maps <> minus meth
R94900:94902 CertiOS.framework.auxlibs.Maps <> set meth
R94890:94897 CertiOS.framework.auxlibs.Maps <> disjoint def
R94915:94919 CertiOS.framework.auxlibs.Maps <> minus meth
R94922:94926 CertiOS.framework.auxlibs.Maps <> minus meth
R94900:94902 CertiOS.framework.auxlibs.Maps <> set meth
R94950:94972 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R94950:94972 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R94992:94999 CertiOS.framework.auxlibs.Maps <> disjoint def
R95005:95009 CertiOS.framework.auxlibs.Maps <> minus meth
R95012:95016 CertiOS.framework.auxlibs.Maps <> minus meth
R94992:94999 CertiOS.framework.auxlibs.Maps <> disjoint def
R95005:95009 CertiOS.framework.auxlibs.Maps <> minus meth
R95012:95016 CertiOS.framework.auxlibs.Maps <> minus meth
R95040:95068 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R95040:95068 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R95087:95115 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R95087:95115 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R95134:95148 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R95134:95148 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R95175:95179 CertiOS.framework.proof.auxdef <> partO ind
R95255:95267 CertiOS.framework.proof.auxdef TOSpecMod put def
R95270:95282 CertiOS.framework.proof.auxdef TOSpecMod put def
R95218:95220 CertiOS.framework.auxlibs.Maps <> set meth
R95223:95225 CertiOS.framework.auxlibs.Maps <> set meth
R95182:95186 CertiOS.framework.auxlibs.Maps <> merge meth
R95192:95196 CertiOS.framework.auxlibs.Maps <> minus meth
R95199:95203 CertiOS.framework.auxlibs.Maps <> minus meth
R95175:95179 CertiOS.framework.proof.auxdef <> partO ind
R95255:95267 CertiOS.framework.proof.auxdef TOSpecMod put def
R95270:95282 CertiOS.framework.proof.auxdef TOSpecMod put def
R95218:95220 CertiOS.framework.auxlibs.Maps <> set meth
R95223:95225 CertiOS.framework.auxlibs.Maps <> set meth
R95182:95186 CertiOS.framework.auxlibs.Maps <> merge meth
R95192:95196 CertiOS.framework.auxlibs.Maps <> minus meth
R95199:95203 CertiOS.framework.auxlibs.Maps <> minus meth
R95364:95376 Coq.Init.Logic <> :type_scope:x_'='_x not
R95320:95332 CertiOS.framework.proof.auxdef TOSpecMod put def
R95335:95350 CertiOS.framework.proof.auxdef TOSpecMod remove def
R95377:95392 CertiOS.framework.proof.auxdef TOSpecMod remove def
R95395:95407 CertiOS.framework.proof.auxdef TOSpecMod put def
R95410:95422 CertiOS.framework.proof.auxdef TOSpecMod put def
R95364:95376 Coq.Init.Logic <> :type_scope:x_'='_x not
R95320:95332 CertiOS.framework.proof.auxdef TOSpecMod put def
R95335:95350 CertiOS.framework.proof.auxdef TOSpecMod remove def
R95377:95392 CertiOS.framework.proof.auxdef TOSpecMod remove def
R95395:95407 CertiOS.framework.proof.auxdef TOSpecMod put def
R95410:95422 CertiOS.framework.proof.auxdef TOSpecMod put def
R95458:95484 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R95458:95484 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R95458:95484 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R95497:95527 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R95497:95527 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R95497:95527 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R95497:95527 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R95575:95581 CertiOS.framework.proof.auxdef <> parto_S constr
R95575:95581 CertiOS.framework.proof.auxdef <> parto_S constr
R95601:95620 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R95601:95620 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R95601:95620 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R95643:95647 CertiOS.framework.auxlibs.Maps <> minus meth
R95650:95654 CertiOS.framework.auxlibs.Maps <> minus meth
R95643:95647 CertiOS.framework.auxlibs.Maps <> minus meth
R95650:95654 CertiOS.framework.auxlibs.Maps <> minus meth
R95683:95690 CertiOS.framework.auxlibs.Maps <> disjoint def
R95683:95690 CertiOS.framework.auxlibs.Maps <> disjoint def
R95711:95719 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R95711:95719 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R95739:95747 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R95739:95747 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R95768:95781 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R95768:95781 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R95805:95812 CertiOS.framework.auxlibs.Maps <> disjoint def
R95819:95823 CertiOS.framework.auxlibs.Maps <> minus meth
R95826:95830 CertiOS.framework.auxlibs.Maps <> minus meth
R95805:95812 CertiOS.framework.auxlibs.Maps <> disjoint def
R95819:95823 CertiOS.framework.auxlibs.Maps <> minus meth
R95826:95830 CertiOS.framework.auxlibs.Maps <> minus meth
R95855:95862 CertiOS.framework.auxlibs.Maps <> disjoint def
R95869:95873 CertiOS.framework.auxlibs.Maps <> minus meth
R95855:95862 CertiOS.framework.auxlibs.Maps <> disjoint def
R95869:95873 CertiOS.framework.auxlibs.Maps <> minus meth
R95893:95904 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R95893:95904 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R95923:95958 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R95923:95958 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_minus_disjoint thm
R95977:95984 CertiOS.framework.auxlibs.Maps <> disjoint def
R96002:96006 CertiOS.framework.auxlibs.Maps <> minus meth
R96009:96013 CertiOS.framework.auxlibs.Maps <> minus meth
R95987:95989 CertiOS.framework.auxlibs.Maps <> set meth
R95977:95984 CertiOS.framework.auxlibs.Maps <> disjoint def
R96002:96006 CertiOS.framework.auxlibs.Maps <> minus meth
R96009:96013 CertiOS.framework.auxlibs.Maps <> minus meth
R95987:95989 CertiOS.framework.auxlibs.Maps <> set meth
R96037:96059 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R96037:96059 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_get_set_disjoint thm
R96079:96086 CertiOS.framework.auxlibs.Maps <> disjoint def
R96092:96096 CertiOS.framework.auxlibs.Maps <> minus meth
R96099:96103 CertiOS.framework.auxlibs.Maps <> minus meth
R96079:96086 CertiOS.framework.auxlibs.Maps <> disjoint def
R96092:96096 CertiOS.framework.auxlibs.Maps <> minus meth
R96099:96103 CertiOS.framework.auxlibs.Maps <> minus meth
R96127:96155 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R96127:96155 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R96191:96227 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_join_merge_merge thm
R96191:96227 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_join_merge_merge thm
R96244:96252 CertiOS.tactics.basetac.join_lib <> join_comm thm
R96244:96252 CertiOS.tactics.basetac.join_lib <> join_comm thm
R96312:96320 Coq.Init.Logic <> :type_scope:x_'='_x not
R96279:96283 CertiOS.framework.auxlibs.Maps <> merge meth
R96289:96293 CertiOS.framework.auxlibs.Maps <> minus meth
R96296:96300 CertiOS.framework.auxlibs.Maps <> minus meth
R96321:96325 CertiOS.framework.auxlibs.Maps <> minus meth
R96328:96332 CertiOS.framework.auxlibs.Maps <> merge meth
R96338:96342 CertiOS.framework.auxlibs.Maps <> minus meth
R96312:96320 Coq.Init.Logic <> :type_scope:x_'='_x not
R96279:96283 CertiOS.framework.auxlibs.Maps <> merge meth
R96289:96293 CertiOS.framework.auxlibs.Maps <> minus meth
R96296:96300 CertiOS.framework.auxlibs.Maps <> minus meth
R96321:96325 CertiOS.framework.auxlibs.Maps <> minus meth
R96328:96332 CertiOS.framework.auxlibs.Maps <> merge meth
R96338:96342 CertiOS.framework.auxlibs.Maps <> minus meth
R96373:96380 CertiOS.framework.auxlibs.Maps <> disjoint def
R96373:96380 CertiOS.framework.auxlibs.Maps <> disjoint def
R96400:96407 CertiOS.framework.auxlibs.Maps <> disjoint def
R96414:96418 CertiOS.framework.auxlibs.Maps <> minus meth
R96400:96407 CertiOS.framework.auxlibs.Maps <> disjoint def
R96414:96418 CertiOS.framework.auxlibs.Maps <> minus meth
R96438:96449 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R96438:96449 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R96469:96476 CertiOS.framework.auxlibs.Maps <> sub def
R96469:96476 CertiOS.framework.auxlibs.Maps <> sub def
R96498:96506 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R96498:96506 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R96530:96537 CertiOS.framework.auxlibs.Maps <> disjoint def
R96530:96537 CertiOS.framework.auxlibs.Maps <> disjoint def
R96557:96590 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_sub_disjoint thm
R96557:96590 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_sub_disjoint thm
R96612:96625 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R96612:96625 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R96647:96658 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R96647:96658 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R96677:96684 CertiOS.framework.auxlibs.Maps <> disjoint def
R96687:96689 CertiOS.framework.auxlibs.Maps <> set meth
R96677:96684 CertiOS.framework.auxlibs.Maps <> disjoint def
R96687:96689 CertiOS.framework.auxlibs.Maps <> set meth
R96715:96729 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R96715:96729 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R96748:96776 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R96748:96776 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R96799:96830 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_merge_comm thm
R96799:96830 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_minus_merge_comm thm
R96856:96860 CertiOS.framework.auxlibs.Maps <> minus meth
R96928:96930 Coq.Init.Logic <> :type_scope:x_'='_x not
R96906:96910 CertiOS.framework.auxlibs.Maps <> minus meth
R96913:96917 CertiOS.framework.auxlibs.Maps <> minus meth
R96931:96935 CertiOS.framework.auxlibs.Maps <> minus meth
R96938:96942 CertiOS.framework.auxlibs.Maps <> minus meth
R96928:96930 Coq.Init.Logic <> :type_scope:x_'='_x not
R96906:96910 CertiOS.framework.auxlibs.Maps <> minus meth
R96913:96917 CertiOS.framework.auxlibs.Maps <> minus meth
R96931:96935 CertiOS.framework.auxlibs.Maps <> minus meth
R96938:96942 CertiOS.framework.auxlibs.Maps <> minus meth
R96968:96981 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R96968:96981 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R97005:97030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R97005:97030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R97005:97030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R97005:97030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_disjoint_minus_comm thm
R97047:97058 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R97047:97058 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R97129:97145 CertiOS.framework.proof.invariant_prop <> parto_minus_parto thm
R97129:97145 CertiOS.framework.proof.invariant_prop <> parto_minus_parto thm
R97189:97206 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R97189:97206 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R97254:97258 CertiOS.framework.proof.auxdef <> partO ind
R97290:97302 CertiOS.framework.proof.auxdef TOSpecMod put def
R97261:97265 CertiOS.framework.auxlibs.Maps <> merge meth
R97272:97276 CertiOS.framework.auxlibs.Maps <> minus meth
R97254:97258 CertiOS.framework.proof.auxdef <> partO ind
R97290:97302 CertiOS.framework.proof.auxdef TOSpecMod put def
R97261:97265 CertiOS.framework.auxlibs.Maps <> merge meth
R97272:97276 CertiOS.framework.auxlibs.Maps <> minus meth
R97354:97362 Coq.Init.Logic <> :type_scope:x_'='_x not
R97333:97348 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97363:97378 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97381:97393 CertiOS.framework.proof.auxdef TOSpecMod put def
R97354:97362 Coq.Init.Logic <> :type_scope:x_'='_x not
R97333:97348 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97363:97378 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97381:97393 CertiOS.framework.proof.auxdef TOSpecMod put def
R97424:97450 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R97424:97450 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R97424:97450 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R97498:97504 CertiOS.framework.proof.auxdef <> parto_S constr
R97498:97504 CertiOS.framework.proof.auxdef <> parto_S constr
R97524:97543 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R97524:97543 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R97524:97543 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R97563:97570 CertiOS.framework.auxlibs.Maps <> disjoint def
R97577:97581 CertiOS.framework.auxlibs.Maps <> minus meth
R97563:97570 CertiOS.framework.auxlibs.Maps <> disjoint def
R97577:97581 CertiOS.framework.auxlibs.Maps <> minus meth
R97602:97609 CertiOS.framework.auxlibs.Maps <> disjoint def
R97616:97620 CertiOS.framework.auxlibs.Maps <> minus meth
R97602:97609 CertiOS.framework.auxlibs.Maps <> disjoint def
R97616:97620 CertiOS.framework.auxlibs.Maps <> minus meth
R97640:97651 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R97640:97651 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R97671:97678 CertiOS.framework.auxlibs.Maps <> disjoint def
R97696:97700 CertiOS.framework.auxlibs.Maps <> minus meth
R97681:97683 CertiOS.framework.auxlibs.Maps <> set meth
R97671:97678 CertiOS.framework.auxlibs.Maps <> disjoint def
R97696:97700 CertiOS.framework.auxlibs.Maps <> minus meth
R97681:97683 CertiOS.framework.auxlibs.Maps <> set meth
R97720:97734 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R97720:97734 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R97754:97761 CertiOS.framework.auxlibs.Maps <> disjoint def
R97767:97771 CertiOS.framework.auxlibs.Maps <> minus meth
R97754:97761 CertiOS.framework.auxlibs.Maps <> disjoint def
R97767:97771 CertiOS.framework.auxlibs.Maps <> minus meth
R97791:97819 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R97791:97819 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R97838:97866 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R97838:97866 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R97885:97899 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R97885:97899 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R97948:97956 Coq.Init.Logic <> :type_scope:x_'='_x not
R97926:97938 CertiOS.framework.proof.auxdef TOSpecMod put def
R97957:97972 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97975:97987 CertiOS.framework.proof.auxdef TOSpecMod put def
R97990:98002 CertiOS.framework.proof.auxdef TOSpecMod put def
R97948:97956 Coq.Init.Logic <> :type_scope:x_'='_x not
R97926:97938 CertiOS.framework.proof.auxdef TOSpecMod put def
R97957:97972 CertiOS.framework.proof.auxdef TOSpecMod remove def
R97975:97987 CertiOS.framework.proof.auxdef TOSpecMod put def
R97990:98002 CertiOS.framework.proof.auxdef TOSpecMod put def
R98043:98069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R98043:98069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R98043:98069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R98085:98108 CertiOS.framework.proof.auxdef TOSpecMod remove_nothing thm
R98085:98108 CertiOS.framework.proof.auxdef TOSpecMod remove_nothing thm
R98085:98108 CertiOS.framework.proof.auxdef TOSpecMod remove_nothing thm
R98085:98108 CertiOS.framework.proof.auxdef TOSpecMod remove_nothing thm
R98125:98149 CertiOS.framework.proof.auxdef TOSpecMod putA_presv_nidB thm
R98125:98149 CertiOS.framework.proof.auxdef TOSpecMod putA_presv_nidB thm
R98198:98204 CertiOS.framework.proof.auxdef <> parto_S constr
R98198:98204 CertiOS.framework.proof.auxdef <> parto_S constr
R98224:98243 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R98224:98243 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R98224:98243 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R98262:98298 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_join_merge_merge thm
R98262:98298 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_join_merge_merge thm
R98317:98324 CertiOS.framework.auxlibs.Maps <> disjoint def
R98331:98335 CertiOS.framework.auxlibs.Maps <> minus meth
R98317:98324 CertiOS.framework.auxlibs.Maps <> disjoint def
R98331:98335 CertiOS.framework.auxlibs.Maps <> minus meth
R98355:98366 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R98355:98366 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R98386:98393 CertiOS.framework.auxlibs.Maps <> disjoint def
R98411:98415 CertiOS.framework.auxlibs.Maps <> minus meth
R98396:98398 CertiOS.framework.auxlibs.Maps <> set meth
R98386:98393 CertiOS.framework.auxlibs.Maps <> disjoint def
R98411:98415 CertiOS.framework.auxlibs.Maps <> minus meth
R98396:98398 CertiOS.framework.auxlibs.Maps <> set meth
R98435:98449 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R98435:98449 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R98469:98476 CertiOS.framework.auxlibs.Maps <> disjoint def
R98482:98486 CertiOS.framework.auxlibs.Maps <> minus meth
R98469:98476 CertiOS.framework.auxlibs.Maps <> disjoint def
R98482:98486 CertiOS.framework.auxlibs.Maps <> minus meth
R98506:98534 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R98506:98534 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_disjoint_join_disjoint thm
R98560:98568 CertiOS.tactics.basetac.join_lib <> join_comm thm
R98560:98568 CertiOS.tactics.basetac.join_lib <> join_comm thm
R98598:98609 CertiOS.framework.proof.rulesoundlib <> <> lib
prf 98618:98637 <> linv_change_linv_aux
R98758:98765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R98766:98769 CertiOS.framework.logic.inferules <> satp def
R98808:98811 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R98798:98802 CertiOS.framework.proof.invariant_prop <> lasrt var
R98806:98807 CertiOS.framework.proof.invariant_prop <> lg var
R98804:98804 CertiOS.framework.proof.invariant_prop <> t var
R98812:98813 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R98832:98833 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R98814:98825 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R98827:98831 CertiOS.framework.proof.invariant_prop <> lasrt var
R98793:98793 CertiOS.framework.proof.invariant_prop <> O var
R98771:98771 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98773:98774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98777:98778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98780:98781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98785:98786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98791:98791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98772:98772 CertiOS.framework.proof.invariant_prop <> g var
R98775:98776 CertiOS.framework.proof.invariant_prop <> e' var
R98779:98779 CertiOS.framework.proof.invariant_prop <> m var
R98782:98784 CertiOS.framework.proof.invariant_prop <> ir' var
R98787:98790 CertiOS.framework.proof.invariant_prop <> aux' var
R98692:98695 CertiOS.framework.logic.inferules <> satp def
R98731:98734 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R98721:98725 CertiOS.framework.proof.invariant_prop <> lasrt var
R98729:98730 CertiOS.framework.proof.invariant_prop <> lg var
R98727:98727 CertiOS.framework.proof.invariant_prop <> t var
R98735:98736 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R98755:98756 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R98737:98748 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R98750:98754 CertiOS.framework.proof.invariant_prop <> lasrt var
R98716:98716 CertiOS.framework.proof.invariant_prop <> O var
R98697:98697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98699:98700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98702:98703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98705:98706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98709:98710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98714:98714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98698:98698 CertiOS.framework.proof.invariant_prop <> g var
R98701:98701 CertiOS.framework.proof.invariant_prop <> e var
R98704:98704 CertiOS.framework.proof.invariant_prop <> m var
R98707:98708 CertiOS.framework.proof.invariant_prop <> ir var
R98711:98713 CertiOS.framework.proof.invariant_prop <> aux var
R98863:98874 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R98891:98894 CertiOS.framework.logic.inferules <> satp def
R98988:99009 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R98988:99009 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 99043:99050 <> crt_init
R99112:99119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99136:99143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99144:99144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99235:99243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99352:99359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99360:99363 CertiOS.framework.logic.inferules <> satp def
R99463:99466 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R99454:99459 CertiOS.framework.logic.inferules <> CurTid def
R99461:99462 CertiOS.framework.proof.invariant_prop <> t' var
R99488:99491 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R99467:99470 CertiOS.framework.logic.inferules <> LINV def
R99481:99487 CertiOS.framework.logic.inferules <> init_lg def
R99478:99479 CertiOS.framework.proof.invariant_prop <> t' var
R99472:99476 CertiOS.framework.proof.invariant_prop <> lasrt var
R99492:99495 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R99502:99503 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R99508:99509 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R99513:99514 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R99518:99518 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R99496:99501 CertiOS.framework.model.language <> empisr def
R99504:99507 Coq.Init.Datatypes <> true constr
R99510:99512 Coq.Init.Datatypes <> nil constr
R99515:99517 Coq.Init.Datatypes <> nil constr
R99429:99433 CertiOS.framework.auxlibs.Maps <> merge meth
R99438:99441 CertiOS.framework.proof.invariant_prop <> Ocre var
R99435:99436 CertiOS.framework.proof.invariant_prop <> Or var
R99365:99365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99367:99368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99375:99376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99390:99391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99398:99399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99416:99416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99366:99366 CertiOS.framework.proof.invariant_prop <> e var
R99369:99374 CertiOS.framework.logic.assertion <> empenv syndef
R99377:99381 CertiOS.framework.auxlibs.Maps <> merge meth
R99386:99389 CertiOS.framework.proof.invariant_prop <> Mcre var
R99383:99384 CertiOS.framework.proof.invariant_prop <> Mr var
R99392:99397 CertiOS.framework.model.language <> empisr def
R99400:99400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99405:99406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99410:99411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99415:99415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99401:99404 Coq.Init.Datatypes <> true constr
R99407:99409 Coq.Init.Datatypes <> nil constr
R99412:99414 Coq.Init.Datatypes <> nil constr
R99244:99247 CertiOS.framework.logic.inferules <> satp def
R99325:99328 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R99309:99313 CertiOS.framework.proof.invariant_prop <> lasrt var
R99318:99324 CertiOS.framework.logic.inferules <> init_lg def
R99315:99316 CertiOS.framework.proof.invariant_prop <> t' var
R99329:99330 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R99349:99350 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R99331:99342 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R99344:99348 CertiOS.framework.proof.invariant_prop <> lasrt var
R99294:99297 CertiOS.framework.proof.invariant_prop <> Ocre var
R99249:99249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99251:99252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99259:99260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99265:99266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99273:99274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99291:99292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99250:99250 CertiOS.framework.proof.invariant_prop <> e var
R99253:99258 CertiOS.framework.logic.assertion <> empenv syndef
R99261:99264 CertiOS.framework.proof.invariant_prop <> Mcre var
R99267:99272 CertiOS.framework.model.language <> empisr def
R99275:99275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99280:99281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99285:99286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99290:99290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99276:99279 Coq.Init.Datatypes <> true constr
R99282:99284 Coq.Init.Datatypes <> nil constr
R99287:99289 Coq.Init.Datatypes <> nil constr
R99157:99161 CertiOS.framework.logic.assertion <> absop def
R99220:99223 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R99171:99171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99173:99174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99181:99182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99185:99186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99193:99194 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99211:99212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99215:99216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99219:99219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99172:99172 CertiOS.framework.proof.invariant_prop <> e var
R99175:99180 CertiOS.framework.logic.assertion <> empenv syndef
R99183:99184 CertiOS.framework.proof.invariant_prop <> Mr var
R99187:99192 CertiOS.framework.model.language <> empisr def
R99195:99195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99200:99201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99205:99206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99210:99210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R99196:99199 Coq.Init.Datatypes <> true constr
R99202:99204 Coq.Init.Datatypes <> nil constr
R99207:99209 Coq.Init.Datatypes <> nil constr
R99213:99214 CertiOS.framework.proof.invariant_prop <> Or var
R99217:99218 CertiOS.framework.proof.invariant_prop <> ab var
R99224:99229 CertiOS.framework.logic.assertion <> RDYINV def
R99233:99234 CertiOS.framework.proof.invariant_prop <> t' var
R99231:99231 CertiOS.framework.proof.invariant_prop <> I var
R99120:99127 CertiOS.framework.auxlibs.Maps <> disjoint def
R99132:99135 CertiOS.framework.proof.invariant_prop <> Ocre var
R99129:99130 CertiOS.framework.proof.invariant_prop <> Or var
R99096:99103 CertiOS.framework.auxlibs.Maps <> disjoint def
R99108:99111 CertiOS.framework.proof.invariant_prop <> Mcre var
R99105:99106 CertiOS.framework.proof.invariant_prop <> Mr var
R99548:99551 CertiOS.framework.logic.inferules <> satp def
R99639:99644 CertiOS.framework.logic.assertion <> RDYINV def
R99674:99682 CertiOS.framework.proof.invariant_prop <> sat_split thm
R99674:99682 CertiOS.framework.proof.invariant_prop <> sat_split thm
R99729:99734 CertiOS.framework.logic.inferules <> CurTid def
R99749:99751 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R99761:99762 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R99757:99760 CertiOS.framework.model.memory <> type ind
R99763:99765 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99774:99776 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99784:99790 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99766:99773 CertiOS.framework.model.opsem <> OSTCBCur def
R99777:99780 CertiOS.framework.model.memory <> Tptr constr
R99782:99783 CertiOS.framework.proof.invariant_prop <> tp var
R99791:99794 CertiOS.framework.model.memory <> Vptr constr
R99749:99751 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R99761:99762 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R99757:99760 CertiOS.framework.model.memory <> type ind
R99763:99765 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99774:99776 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99784:99790 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R99766:99773 CertiOS.framework.model.opsem <> OSTCBCur def
R99777:99780 CertiOS.framework.model.memory <> Tptr constr
R99782:99783 CertiOS.framework.proof.invariant_prop <> tp var
R99791:99794 CertiOS.framework.model.memory <> Vptr constr
R99809:99818 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R99809:99818 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R99872:99886 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R99872:99886 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R99903:99917 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R99903:99917 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R99935:99938 CertiOS.framework.logic.inferules <> LINV def
R99963:99968 CertiOS.framework.logic.assertion <> SWINVt def
R99986:99991 CertiOS.framework.logic.inferules <> CurTid def
R100026:100034 CertiOS.framework.proof.invariant_prop <> sat_split thm
R100026:100034 CertiOS.framework.proof.invariant_prop <> sat_split thm
R100058:100067 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R100058:100067 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R100082:100086 CertiOS.framework.auxlibs.Maps <> merge meth
R100082:100086 CertiOS.framework.auxlibs.Maps <> merge meth
R100111:100115 CertiOS.framework.auxlibs.Maps <> merge meth
R100111:100115 CertiOS.framework.auxlibs.Maps <> merge meth
R100153:100180 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R100153:100180 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R100198:100228 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R100198:100228 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R100247:100251 CertiOS.framework.logic.assertion <> SWINV def
prf 100304:100313 <> linv_split
R100443:100450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100451:100457 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R100461:100461 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R100465:100465 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R100469:100469 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R100473:100480 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R100496:100505 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100481:100484 CertiOS.framework.auxlibs.Maps <> join meth
R100494:100495 CertiOS.framework.proof.invariant_prop <> Md var
R100521:100530 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100506:100509 CertiOS.framework.auxlibs.Maps <> join meth
R100519:100520 CertiOS.framework.proof.invariant_prop <> Od var
R100531:100534 CertiOS.framework.logic.inferules <> satp def
R100574:100576 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R100595:100596 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R100582:100585 Coq.Init.Datatypes <> list ind
R100587:100594 CertiOS.framework.logic.assertion <> logicvar ind
R100597:100600 CertiOS.framework.logic.inferules <> LINV def
R100610:100611 CertiOS.framework.proof.invariant_prop <> lg var
R100608:100608 CertiOS.framework.proof.invariant_prop <> t var
R100602:100606 CertiOS.framework.proof.invariant_prop <> lasrt var
R100536:100536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100539:100540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100543:100544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100548:100549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100551:100552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100556:100556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100537:100538 CertiOS.framework.proof.invariant_prop <> ge var
R100541:100542 CertiOS.framework.proof.invariant_prop <> le var
R100550:100550 CertiOS.framework.proof.invariant_prop <> i var
R100553:100555 CertiOS.framework.proof.invariant_prop <> aux var
R100356:100359 CertiOS.framework.logic.inferules <> satp def
R100395:100397 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R100416:100417 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R100403:100406 Coq.Init.Datatypes <> list ind
R100408:100415 CertiOS.framework.logic.assertion <> logicvar ind
R100433:100436 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R100418:100421 CertiOS.framework.logic.inferules <> LINV def
R100431:100432 CertiOS.framework.proof.invariant_prop <> lg var
R100429:100429 CertiOS.framework.proof.invariant_prop <> t var
R100423:100427 CertiOS.framework.proof.invariant_prop <> lasrt var
R100437:100441 CertiOS.framework.logic.assertion <> Atrue constr
R100382:100383 CertiOS.framework.proof.invariant_prop <> Od var
R100361:100361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100364:100365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100368:100369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100372:100373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100375:100376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100380:100380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100362:100363 CertiOS.framework.proof.invariant_prop <> ge var
R100366:100367 CertiOS.framework.proof.invariant_prop <> le var
R100370:100371 CertiOS.framework.proof.invariant_prop <> Md var
R100374:100374 CertiOS.framework.proof.invariant_prop <> i var
R100377:100379 CertiOS.framework.proof.invariant_prop <> aux var
R100647:100652 CertiOS.framework.proof.invariant_prop <> absopx def
R100647:100652 CertiOS.framework.proof.invariant_prop <> absopx def
R100687:100695 CertiOS.framework.proof.invariant_prop <> sat_split thm
R100687:100695 CertiOS.framework.proof.invariant_prop <> sat_split thm
R100757:100760 CertiOS.framework.logic.inferules <> satp def
R100791:100794 CertiOS.framework.logic.inferules <> LINV def
R100849:100870 CertiOS.framework.proof.rulesoundlib <> good_linvasrt_aop_irev thm
R100849:100870 CertiOS.framework.proof.rulesoundlib <> good_linvasrt_aop_irev thm
prf 100894:100907 <> delother_partm
R100966:100973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100999:101006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101033:101040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101048:101055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101071:101078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R101079:101083 CertiOS.framework.proof.auxdef <> partM ind
R101092:101104 CertiOS.framework.proof.auxdef TMSpecMod put def
R101145:101147 CertiOS.framework.proof.invariant_prop <> Mdl var
R101142:101143 CertiOS.framework.proof.invariant_prop <> t' var
R101107:101119 CertiOS.framework.proof.auxdef TMSpecMod put def
R101127:101131 CertiOS.framework.auxlibs.Maps <> merge meth
R101136:101138 CertiOS.framework.proof.invariant_prop <> Mdc var
R101133:101134 CertiOS.framework.proof.invariant_prop <> Mc var
R101124:101124 CertiOS.framework.proof.invariant_prop <> t var
R101121:101122 CertiOS.framework.proof.invariant_prop <> Tm var
R101088:101089 CertiOS.framework.proof.invariant_prop <> Tl var
R101085:101086 CertiOS.framework.proof.invariant_prop <> Ml var
R101056:101059 CertiOS.framework.auxlibs.Maps <> join meth
R101069:101070 CertiOS.framework.proof.invariant_prop <> Md var
R101065:101067 CertiOS.framework.proof.invariant_prop <> Mdl var
R101061:101063 CertiOS.framework.proof.invariant_prop <> Mdc var
R101042:101045 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R101041:101041 CertiOS.framework.proof.invariant_prop <> t var
R101046:101047 CertiOS.framework.proof.invariant_prop <> t' var
R101007:101023 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R101031:101032 CertiOS.framework.proof.invariant_prop <> Md var
R101028:101029 CertiOS.framework.proof.invariant_prop <> t' var
R101025:101026 CertiOS.framework.proof.invariant_prop <> Tm var
R100974:100990 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R100997:100998 CertiOS.framework.proof.invariant_prop <> Mc var
R100995:100995 CertiOS.framework.proof.invariant_prop <> t var
R100992:100993 CertiOS.framework.proof.invariant_prop <> Tm var
R100952:100956 CertiOS.framework.proof.auxdef <> partM ind
R100964:100965 CertiOS.framework.proof.invariant_prop <> Tm var
R100961:100962 CertiOS.framework.proof.invariant_prop <> Tl var
R100958:100959 CertiOS.framework.proof.invariant_prop <> Ml var
R101179:101196 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R101179:101196 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R101244:101260 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R101263:101278 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101244:101260 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R101263:101278 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101302:101326 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R101302:101326 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R101348:101365 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R101348:101365 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R101415:101419 CertiOS.framework.proof.auxdef <> partM ind
R101489:101504 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101507:101519 CertiOS.framework.proof.auxdef TMSpecMod put def
R101527:101531 CertiOS.framework.auxlibs.Maps <> merge meth
R101422:101426 CertiOS.framework.auxlibs.Maps <> merge meth
R101444:101448 CertiOS.framework.auxlibs.Maps <> minus meth
R101451:101455 CertiOS.framework.auxlibs.Maps <> minus meth
R101429:101433 CertiOS.framework.auxlibs.Maps <> merge meth
R101415:101419 CertiOS.framework.proof.auxdef <> partM ind
R101489:101504 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101507:101519 CertiOS.framework.proof.auxdef TMSpecMod put def
R101527:101531 CertiOS.framework.auxlibs.Maps <> merge meth
R101422:101426 CertiOS.framework.auxlibs.Maps <> merge meth
R101444:101448 CertiOS.framework.auxlibs.Maps <> minus meth
R101451:101455 CertiOS.framework.auxlibs.Maps <> minus meth
R101429:101433 CertiOS.framework.auxlibs.Maps <> merge meth
R101601:101613 Coq.Init.Logic <> :type_scope:x_'='_x not
R101558:101573 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101576:101591 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101614:101629 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101632:101647 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101650:101662 CertiOS.framework.proof.auxdef TMSpecMod put def
R101670:101674 CertiOS.framework.auxlibs.Maps <> merge meth
R101601:101613 Coq.Init.Logic <> :type_scope:x_'='_x not
R101558:101573 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101576:101591 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101614:101629 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101632:101647 CertiOS.framework.proof.auxdef TMSpecMod remove def
R101650:101662 CertiOS.framework.proof.auxdef TMSpecMod put def
R101670:101674 CertiOS.framework.auxlibs.Maps <> merge meth
R101713:101743 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101713:101743 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101713:101743 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101713:101743 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101762:101788 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R101762:101788 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R101762:101788 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R101801:101821 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R101801:101821 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R101801:101821 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R101801:101821 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_comm thm
R101870:101876 CertiOS.framework.proof.auxdef <> partm_S constr
R101870:101876 CertiOS.framework.proof.auxdef <> partm_S constr
R101896:101926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101896:101926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101896:101926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101896:101926 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R101945:101964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R101945:101964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R101945:101964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R101987:102000 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R101987:102000 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R102025:102032 CertiOS.framework.auxlibs.Maps <> disjoint def
R102050:102054 CertiOS.framework.auxlibs.Maps <> minus meth
R102057:102061 CertiOS.framework.auxlibs.Maps <> minus meth
R102035:102039 CertiOS.framework.auxlibs.Maps <> merge meth
R102025:102032 CertiOS.framework.auxlibs.Maps <> disjoint def
R102050:102054 CertiOS.framework.auxlibs.Maps <> minus meth
R102057:102061 CertiOS.framework.auxlibs.Maps <> minus meth
R102035:102039 CertiOS.framework.auxlibs.Maps <> merge meth
R102088:102102 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R102088:102102 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R102148:102189 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_sub_disjoint_merge_minus thm
R102148:102189 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_sub_disjoint_merge_minus thm
R102208:102222 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R102208:102222 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R102297:102309 Coq.Init.Logic <> :type_scope:x_'='_x not
R102242:102257 CertiOS.framework.proof.auxdef TMSpecMod remove def
R102260:102272 CertiOS.framework.proof.auxdef TMSpecMod put def
R102280:102284 CertiOS.framework.auxlibs.Maps <> merge meth
R102310:102325 CertiOS.framework.proof.auxdef TMSpecMod remove def
R102328:102340 CertiOS.framework.proof.auxdef TMSpecMod put def
R102343:102355 CertiOS.framework.proof.auxdef TMSpecMod put def
R102363:102367 CertiOS.framework.auxlibs.Maps <> merge meth
R102297:102309 Coq.Init.Logic <> :type_scope:x_'='_x not
R102242:102257 CertiOS.framework.proof.auxdef TMSpecMod remove def
R102260:102272 CertiOS.framework.proof.auxdef TMSpecMod put def
R102280:102284 CertiOS.framework.auxlibs.Maps <> merge meth
R102310:102325 CertiOS.framework.proof.auxdef TMSpecMod remove def
R102328:102340 CertiOS.framework.proof.auxdef TMSpecMod put def
R102343:102355 CertiOS.framework.proof.auxdef TMSpecMod put def
R102363:102367 CertiOS.framework.auxlibs.Maps <> merge meth
R102411:102437 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R102411:102437 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R102411:102437 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R102485:102491 CertiOS.framework.proof.auxdef <> partm_S constr
R102485:102491 CertiOS.framework.proof.auxdef <> partm_S constr
R102511:102530 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R102511:102530 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R102511:102530 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R102553:102566 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R102553:102566 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R102592:102606 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R102592:102606 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R102651:102682 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_sub_merge_join thm
R102651:102682 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_sub_merge_join thm
prf 102704:102717 <> delother_parto
R102776:102783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102809:102816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102843:102850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102858:102865 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102881:102888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102889:102893 CertiOS.framework.proof.auxdef <> partO ind
R102902:102914 CertiOS.framework.proof.auxdef TOSpecMod put def
R102955:102957 CertiOS.framework.proof.invariant_prop <> Mdl var
R102952:102953 CertiOS.framework.proof.invariant_prop <> t' var
R102917:102929 CertiOS.framework.proof.auxdef TOSpecMod put def
R102937:102941 CertiOS.framework.auxlibs.Maps <> merge meth
R102946:102948 CertiOS.framework.proof.invariant_prop <> Mdc var
R102943:102944 CertiOS.framework.proof.invariant_prop <> Mc var
R102934:102934 CertiOS.framework.proof.invariant_prop <> t var
R102931:102932 CertiOS.framework.proof.invariant_prop <> Tm var
R102898:102899 CertiOS.framework.proof.invariant_prop <> Tl var
R102895:102896 CertiOS.framework.proof.invariant_prop <> Ml var
R102866:102869 CertiOS.framework.auxlibs.Maps <> join meth
R102879:102880 CertiOS.framework.proof.invariant_prop <> Md var
R102875:102877 CertiOS.framework.proof.invariant_prop <> Mdl var
R102871:102873 CertiOS.framework.proof.invariant_prop <> Mdc var
R102852:102855 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R102851:102851 CertiOS.framework.proof.invariant_prop <> t var
R102856:102857 CertiOS.framework.proof.invariant_prop <> t' var
R102817:102833 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R102841:102842 CertiOS.framework.proof.invariant_prop <> Md var
R102838:102839 CertiOS.framework.proof.invariant_prop <> t' var
R102835:102836 CertiOS.framework.proof.invariant_prop <> Tm var
R102784:102800 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R102807:102808 CertiOS.framework.proof.invariant_prop <> Mc var
R102805:102805 CertiOS.framework.proof.invariant_prop <> t var
R102802:102803 CertiOS.framework.proof.invariant_prop <> Tm var
R102762:102766 CertiOS.framework.proof.auxdef <> partO ind
R102774:102775 CertiOS.framework.proof.invariant_prop <> Tm var
R102771:102772 CertiOS.framework.proof.invariant_prop <> Tl var
R102768:102769 CertiOS.framework.proof.invariant_prop <> Ml var
R102989:103006 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R102989:103006 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R103054:103070 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R103073:103088 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103054:103070 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R103073:103088 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103112:103136 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R103112:103136 CertiOS.framework.proof.auxdef TOSpecMod removeX_presv_Y thm
R103158:103175 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R103158:103175 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R103225:103229 CertiOS.framework.proof.auxdef <> partO ind
R103299:103314 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103317:103329 CertiOS.framework.proof.auxdef TOSpecMod put def
R103337:103341 CertiOS.framework.auxlibs.Maps <> merge meth
R103232:103236 CertiOS.framework.auxlibs.Maps <> merge meth
R103254:103258 CertiOS.framework.auxlibs.Maps <> minus meth
R103261:103265 CertiOS.framework.auxlibs.Maps <> minus meth
R103239:103243 CertiOS.framework.auxlibs.Maps <> merge meth
R103225:103229 CertiOS.framework.proof.auxdef <> partO ind
R103299:103314 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103317:103329 CertiOS.framework.proof.auxdef TOSpecMod put def
R103337:103341 CertiOS.framework.auxlibs.Maps <> merge meth
R103232:103236 CertiOS.framework.auxlibs.Maps <> merge meth
R103254:103258 CertiOS.framework.auxlibs.Maps <> minus meth
R103261:103265 CertiOS.framework.auxlibs.Maps <> minus meth
R103239:103243 CertiOS.framework.auxlibs.Maps <> merge meth
R103411:103423 Coq.Init.Logic <> :type_scope:x_'='_x not
R103368:103383 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103386:103401 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103424:103439 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103442:103457 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103460:103472 CertiOS.framework.proof.auxdef TOSpecMod put def
R103480:103484 CertiOS.framework.auxlibs.Maps <> merge meth
R103411:103423 Coq.Init.Logic <> :type_scope:x_'='_x not
R103368:103383 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103386:103401 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103424:103439 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103442:103457 CertiOS.framework.proof.auxdef TOSpecMod remove def
R103460:103472 CertiOS.framework.proof.auxdef TOSpecMod put def
R103480:103484 CertiOS.framework.auxlibs.Maps <> merge meth
R103523:103553 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103523:103553 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103523:103553 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103523:103553 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103572:103598 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R103572:103598 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R103572:103598 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R103611:103631 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R103611:103631 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R103611:103631 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R103611:103631 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_comm thm
R103680:103686 CertiOS.framework.proof.auxdef <> parto_S constr
R103680:103686 CertiOS.framework.proof.auxdef <> parto_S constr
R103706:103736 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103706:103736 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103706:103736 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103706:103736 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R103755:103774 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R103755:103774 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R103755:103774 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R103797:103810 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R103797:103810 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R103835:103842 CertiOS.framework.auxlibs.Maps <> disjoint def
R103860:103864 CertiOS.framework.auxlibs.Maps <> minus meth
R103867:103871 CertiOS.framework.auxlibs.Maps <> minus meth
R103845:103849 CertiOS.framework.auxlibs.Maps <> merge meth
R103835:103842 CertiOS.framework.auxlibs.Maps <> disjoint def
R103860:103864 CertiOS.framework.auxlibs.Maps <> minus meth
R103867:103871 CertiOS.framework.auxlibs.Maps <> minus meth
R103845:103849 CertiOS.framework.auxlibs.Maps <> merge meth
R103898:103912 CertiOS.framework.proof.invariant_prop <> parto_merge_sub thm
R103898:103912 CertiOS.framework.proof.invariant_prop <> parto_merge_sub thm
R103958:104002 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_sub_disjoint_merge_minus thm
R103958:104002 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_sub_disjoint_merge_minus thm
R104021:104035 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R104021:104035 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R104110:104122 Coq.Init.Logic <> :type_scope:x_'='_x not
R104055:104070 CertiOS.framework.proof.auxdef TOSpecMod remove def
R104073:104085 CertiOS.framework.proof.auxdef TOSpecMod put def
R104093:104097 CertiOS.framework.auxlibs.Maps <> merge meth
R104123:104138 CertiOS.framework.proof.auxdef TOSpecMod remove def
R104141:104153 CertiOS.framework.proof.auxdef TOSpecMod put def
R104156:104168 CertiOS.framework.proof.auxdef TOSpecMod put def
R104176:104180 CertiOS.framework.auxlibs.Maps <> merge meth
R104110:104122 Coq.Init.Logic <> :type_scope:x_'='_x not
R104055:104070 CertiOS.framework.proof.auxdef TOSpecMod remove def
R104073:104085 CertiOS.framework.proof.auxdef TOSpecMod put def
R104093:104097 CertiOS.framework.auxlibs.Maps <> merge meth
R104123:104138 CertiOS.framework.proof.auxdef TOSpecMod remove def
R104141:104153 CertiOS.framework.proof.auxdef TOSpecMod put def
R104156:104168 CertiOS.framework.proof.auxdef TOSpecMod put def
R104176:104180 CertiOS.framework.auxlibs.Maps <> merge meth
R104224:104250 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R104224:104250 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R104224:104250 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R104298:104304 CertiOS.framework.proof.auxdef <> parto_S constr
R104298:104304 CertiOS.framework.proof.auxdef <> parto_S constr
R104324:104343 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R104324:104343 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R104324:104343 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R104366:104379 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R104366:104379 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R104405:104419 CertiOS.framework.proof.invariant_prop <> parto_merge_sub thm
R104405:104419 CertiOS.framework.proof.invariant_prop <> parto_merge_sub thm
R104464:104498 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_sub_merge_join thm
R104464:104498 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_sub_merge_join thm
prf 104521:104536 <> disj_complex''''
R104612:104619 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104646:104653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104679:104686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104701:104708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104734:104741 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104768:104771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104779:104782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R104783:104790 CertiOS.framework.auxlibs.Maps <> disjoint def
R104795:104796 CertiOS.framework.proof.invariant_prop <> Od var
R104792:104793 CertiOS.framework.proof.invariant_prop <> O' var
R104773:104776 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R104772:104772 CertiOS.framework.proof.invariant_prop <> t var
R104777:104778 CertiOS.framework.proof.invariant_prop <> t' var
R104742:104758 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R104766:104767 CertiOS.framework.proof.invariant_prop <> Od var
R104763:104764 CertiOS.framework.proof.invariant_prop <> t' var
R104760:104761 CertiOS.framework.proof.invariant_prop <> To var
R104709:104725 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R104732:104733 CertiOS.framework.proof.invariant_prop <> Oc var
R104730:104730 CertiOS.framework.proof.invariant_prop <> t var
R104727:104728 CertiOS.framework.proof.invariant_prop <> To var
R104687:104691 CertiOS.framework.proof.auxdef <> partO ind
R104699:104700 CertiOS.framework.proof.invariant_prop <> To var
R104696:104697 CertiOS.framework.proof.invariant_prop <> Tl var
R104693:104694 CertiOS.framework.proof.invariant_prop <> Ol var
R104654:104657 CertiOS.framework.auxlibs.Maps <> join meth
R104677:104678 CertiOS.framework.proof.invariant_prop <> x0 var
R104664:104668 CertiOS.framework.auxlibs.Maps <> minus meth
R104673:104674 CertiOS.framework.proof.invariant_prop <> Oc var
R104670:104671 CertiOS.framework.proof.invariant_prop <> Ol var
R104659:104661 CertiOS.framework.proof.invariant_prop <> OO' var
R104620:104623 CertiOS.framework.auxlibs.Maps <> join meth
R104633:104635 CertiOS.framework.auxlibs.Maps <> set meth
R104643:104644 CertiOS.framework.proof.invariant_prop <> b' var
R104641:104641 CertiOS.framework.proof.invariant_prop <> a var
R104637:104639 CertiOS.framework.proof.invariant_prop <> OO' var
R104628:104630 CertiOS.framework.proof.invariant_prop <> Os' var
R104625:104626 CertiOS.framework.proof.invariant_prop <> O' var
R104603:104605 Coq.Init.Logic <> :type_scope:x_'='_x not
R104594:104596 CertiOS.framework.auxlibs.Maps <> get meth
R104602:104602 CertiOS.framework.proof.invariant_prop <> a var
R104598:104600 CertiOS.framework.proof.invariant_prop <> OO' var
R104606:104609 Coq.Init.Datatypes <> Some constr
R104611:104611 CertiOS.framework.proof.invariant_prop <> b var
R104827:104840 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R104827:104840 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R104865:104872 CertiOS.framework.auxlibs.Maps <> disjoint def
R104879:104883 CertiOS.framework.auxlibs.Maps <> minus meth
R104865:104872 CertiOS.framework.auxlibs.Maps <> disjoint def
R104879:104883 CertiOS.framework.auxlibs.Maps <> minus meth
R104903:104914 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R104903:104914 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R104937:104945 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R104937:104945 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R104965:104972 CertiOS.framework.auxlibs.Maps <> sub def
R104978:104982 CertiOS.framework.auxlibs.Maps <> minus meth
R104965:104972 CertiOS.framework.auxlibs.Maps <> sub def
R104978:104982 CertiOS.framework.auxlibs.Maps <> minus meth
R105002:105030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_disjoint_sub_minus thm
R105002:105030 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_sub_disjoint_sub_minus thm
R105048:105059 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R105048:105059 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R105079:105086 CertiOS.framework.auxlibs.Maps <> disjoint def
R105079:105086 CertiOS.framework.auxlibs.Maps <> disjoint def
R105106:105119 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R105106:105119 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R105140:105147 CertiOS.framework.auxlibs.Maps <> disjoint def
R105150:105152 CertiOS.framework.auxlibs.Maps <> set meth
R105140:105147 CertiOS.framework.auxlibs.Maps <> disjoint def
R105150:105152 CertiOS.framework.auxlibs.Maps <> set meth
R105178:105192 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R105178:105192 CertiOS.tactics.basetac.join_lib <> disj_set_disj_1 thm
R105211:105239 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R105211:105239 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
prf 105261:105279 <> swpre_hpswitch_nabt
R105354:105361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R105362:105368 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R105371:105371 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R105374:105374 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R105377:105384 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R105414:105423 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R105393:105395 Coq.Init.Logic <> :type_scope:x_'='_x not
R105385:105387 CertiOS.framework.auxlibs.Maps <> get meth
R105392:105392 CertiOS.framework.proof.invariant_prop <> x var
R105389:105390 CertiOS.framework.proof.invariant_prop <> ge var
R105396:105399 Coq.Init.Datatypes <> Some constr
R105401:105401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105404:105405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105413:105413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105406:105409 CertiOS.framework.model.memory <> Tptr constr
R105450:105452 Coq.Init.Logic <> :type_scope:x_'='_x not
R105424:105427 CertiOS.framework.model.opsem <> load def
R105441:105441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105444:105445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105449:105449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105439:105439 CertiOS.framework.proof.invariant_prop <> m var
R105430:105433 CertiOS.framework.model.memory <> Tptr constr
R105453:105456 Coq.Init.Datatypes <> Some constr
R105459:105462 CertiOS.framework.model.memory <> Vptr constr
R105316:105319 CertiOS.framework.logic.inferules <> satp def
R105342:105346 CertiOS.framework.logic.assertion <> SWPRE def
R105352:105352 CertiOS.framework.proof.invariant_prop <> t var
R105350:105350 CertiOS.framework.proof.invariant_prop <> x var
R105348:105348 CertiOS.framework.proof.invariant_prop <> A var
R105339:105339 CertiOS.framework.proof.invariant_prop <> O var
R105321:105321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105324:105325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105328:105329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105331:105332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105334:105335 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105337:105337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105322:105323 CertiOS.framework.proof.invariant_prop <> ge var
R105326:105327 CertiOS.framework.proof.invariant_prop <> le var
R105330:105330 CertiOS.framework.proof.invariant_prop <> m var
R105333:105333 CertiOS.framework.proof.invariant_prop <> i var
R105336:105336 CertiOS.framework.proof.invariant_prop <> l var
R105501:105506 CertiOS.framework.proof.invariant_prop <> absopx def
R105501:105506 CertiOS.framework.proof.invariant_prop <> absopx def
R105527:105531 CertiOS.framework.logic.assertion <> SWPRE def
R105624:105637 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R105624:105637 CertiOS.tactics.hoareforward.symbolic_lemmas <> mapstoval_load thm
R105668:105680 CertiOS.framework.proof.lmachLib <> load_mem_mono thm
R105668:105680 CertiOS.framework.proof.lmachLib <> load_mem_mono thm
R105699:105708 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R105699:105708 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 105730:105742 <> ahprio_nodead
R105789:105795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R105828:105835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R105836:105847 CertiOS.framework.proof.auxdef <> task_no_dead def
R105851:105851 CertiOS.framework.proof.invariant_prop <> t var
R105849:105849 CertiOS.framework.proof.invariant_prop <> O var
R105804:105807 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R105796:105796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105798:105798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105800:105800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105803:105803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105797:105797 CertiOS.framework.proof.invariant_prop <> o var
R105799:105799 CertiOS.framework.proof.invariant_prop <> O var
R105801:105802 CertiOS.framework.proof.invariant_prop <> ab var
R105819:105822 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R105808:105813 CertiOS.framework.logic.assertion <> AHprio constr
R105818:105818 CertiOS.framework.proof.invariant_prop <> t var
R105815:105816 CertiOS.framework.proof.invariant_prop <> sd var
R105823:105827 CertiOS.framework.logic.assertion <> Atrue constr
R105776:105780 CertiOS.framework.logic.inferules <> GoodI def
R105787:105788 CertiOS.framework.proof.invariant_prop <> li var
R105784:105785 CertiOS.framework.proof.invariant_prop <> sd var
R105782:105782 CertiOS.framework.proof.invariant_prop <> I var
R106038:106040 Coq.Init.Logic <> :type_scope:x_'='_x not
R106023:106025 CertiOS.framework.auxlibs.Maps <> get meth
R106029:106037 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106041:106044 Coq.Init.Datatypes <> Some constr
R106047:106056 CertiOS.framework.model.language <> abstcblist constr
R106038:106040 Coq.Init.Logic <> :type_scope:x_'='_x not
R106023:106025 CertiOS.framework.auxlibs.Maps <> get meth
R106029:106037 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106041:106044 Coq.Init.Datatypes <> Some constr
R106047:106056 CertiOS.framework.model.language <> abstcblist constr
R106072:106085 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R106072:106085 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
prf 106160:106171 <> AHprio_local
R106238:106245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106260:106267 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106278:106281 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R106268:106268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106270:106271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106273:106274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106277:106277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106269:106269 CertiOS.framework.proof.invariant_prop <> o var
R106272:106272 CertiOS.framework.proof.invariant_prop <> O var
R106275:106276 CertiOS.framework.proof.invariant_prop <> ab var
R106292:106295 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R106282:106287 CertiOS.framework.logic.assertion <> AHprio constr
R106291:106291 CertiOS.framework.proof.invariant_prop <> t var
R106289:106289 CertiOS.framework.proof.invariant_prop <> x var
R106296:106300 CertiOS.framework.logic.assertion <> Atrue constr
R106246:106253 CertiOS.framework.auxlibs.Maps <> sub def
R106259:106259 CertiOS.framework.proof.invariant_prop <> O var
R106255:106257 CertiOS.framework.proof.invariant_prop <> Occ var
R106215:106218 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R106203:106203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106205:106206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106210:106211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106214:106214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106204:106204 CertiOS.framework.proof.invariant_prop <> o var
R106207:106209 CertiOS.framework.proof.invariant_prop <> Occ var
R106212:106213 CertiOS.framework.proof.invariant_prop <> ab var
R106229:106232 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R106219:106224 CertiOS.framework.logic.assertion <> AHprio constr
R106228:106228 CertiOS.framework.proof.invariant_prop <> t var
R106226:106226 CertiOS.framework.proof.invariant_prop <> x var
R106233:106237 CertiOS.framework.logic.assertion <> Atrue constr
R106435:106439 CertiOS.framework.auxlibs.Maps <> merge meth
R106435:106439 CertiOS.framework.auxlibs.Maps <> merge meth
R106483:106490 CertiOS.tactics.basetac.join_lib <> join_emp thm
R106483:106490 CertiOS.tactics.basetac.join_lib <> join_emp thm
R106508:106524 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
R106508:106524 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
prf 106546:106567 <> nodead_swpredead_false
R106619:106625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106655:106662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106676:106683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106701:106708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R106709:106713 Coq.Init.Logic <> False ind
R106684:106695 CertiOS.framework.proof.auxdef <> task_no_dead def
R106700:106700 CertiOS.framework.proof.invariant_prop <> t var
R106697:106698 CertiOS.framework.proof.invariant_prop <> O' var
R106663:106670 CertiOS.framework.auxlibs.Maps <> sub def
R106674:106675 CertiOS.framework.proof.invariant_prop <> O' var
R106672:106672 CertiOS.framework.proof.invariant_prop <> O var
R106634:106637 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R106626:106626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106628:106628 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106630:106630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106633:106633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106627:106627 CertiOS.framework.proof.invariant_prop <> o var
R106629:106629 CertiOS.framework.proof.invariant_prop <> O var
R106631:106632 CertiOS.framework.proof.invariant_prop <> ab var
R106638:106647 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R106654:106654 CertiOS.framework.proof.invariant_prop <> t var
R106652:106652 CertiOS.framework.proof.invariant_prop <> x var
R106649:106650 CertiOS.framework.proof.invariant_prop <> sd var
R106606:106610 CertiOS.framework.logic.inferules <> GoodI def
R106617:106618 CertiOS.framework.proof.invariant_prop <> li var
R106614:106615 CertiOS.framework.proof.invariant_prop <> sd var
R106612:106612 CertiOS.framework.proof.invariant_prop <> I var
R106768:106777 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R106925:106927 Coq.Init.Logic <> :type_scope:x_'='_x not
R106880:106882 CertiOS.framework.auxlibs.Maps <> get meth
R106916:106924 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106885:106887 CertiOS.framework.auxlibs.Maps <> sig meth
R106900:106909 CertiOS.framework.model.language <> abstcblist constr
R106889:106897 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106928:106931 Coq.Init.Datatypes <> Some constr
R106934:106943 CertiOS.framework.model.language <> abstcblist constr
R106925:106927 Coq.Init.Logic <> :type_scope:x_'='_x not
R106880:106882 CertiOS.framework.auxlibs.Maps <> get meth
R106916:106924 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106885:106887 CertiOS.framework.auxlibs.Maps <> sig meth
R106900:106909 CertiOS.framework.model.language <> abstcblist constr
R106889:106897 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R106928:106931 Coq.Init.Datatypes <> Some constr
R106934:106943 CertiOS.framework.model.language <> abstcblist constr
R106960:106970 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R106960:106970 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R106998:107000 Coq.Init.Logic <> :type_scope:x_'='_x not
R106983:106985 CertiOS.framework.auxlibs.Maps <> get meth
R106989:106997 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R107001:107004 Coq.Init.Datatypes <> Some constr
R107007:107016 CertiOS.framework.model.language <> abstcblist constr
R106998:107000 Coq.Init.Logic <> :type_scope:x_'='_x not
R106983:106985 CertiOS.framework.auxlibs.Maps <> get meth
R106989:106997 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R107001:107004 Coq.Init.Datatypes <> Some constr
R107007:107016 CertiOS.framework.model.language <> abstcblist constr
R107033:107046 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R107033:107046 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R107082:107084 Coq.Init.Logic <> :type_scope:x_'='_x not
R107066:107068 CertiOS.framework.auxlibs.Maps <> get meth
R107073:107081 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R107085:107088 Coq.Init.Datatypes <> Some constr
R107091:107100 CertiOS.framework.model.language <> abstcblist constr
R107082:107084 Coq.Init.Logic <> :type_scope:x_'='_x not
R107066:107068 CertiOS.framework.auxlibs.Maps <> get meth
R107073:107081 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R107085:107088 Coq.Init.Datatypes <> Some constr
R107091:107100 CertiOS.framework.model.language <> abstcblist constr
R107147:107160 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R107147:107160 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R107210:107214 CertiOS.framework.auxlibs.Maps <> indom def
prf 107250:107255 <> ret_st
R107275:107277 CertiOS.framework.model.memory <> env def
R107285:107287 CertiOS.framework.model.memory <> mem def
R107296:107298 CertiOS.framework.model.language <> isr def
R107307:107308 CertiOS.framework.model.language <> ie def
R107327:107329 CertiOS.framework.model.language <> hid def
R107339:107342 Coq.Init.Datatypes <> list ind
R107344:107346 CertiOS.framework.model.language <> hid def
R107355:107356 CertiOS.framework.model.language <> cs def
R107364:107369 CertiOS.framework.model.language <> osabst def
R107392:107394 CertiOS.framework.model.language <> isr def
R107402:107404 CertiOS.framework.model.language <> hid def
R107413:107416 Coq.Init.Datatypes <> list ind
R107418:107420 CertiOS.framework.model.language <> hid def
R107428:107430 CertiOS.framework.logic.assertion <> Inv def
R107454:107458 CertiOS.framework.logic.assertion <> absop def
R107466:107468 CertiOS.framework.model.memory <> env def
R107727:107733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R107760:107763 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R107736:107738 Coq.Init.Logic <> :type_scope:x_'='_x not
R107734:107735 CertiOS.framework.proof.invariant_prop <> ir var
R107739:107744 CertiOS.framework.model.language <> isrupd def
R107755:107759 Coq.Init.Datatypes <> false constr
R107753:107753 CertiOS.framework.proof.invariant_prop <> i var
R107746:107751 CertiOS.framework.proof.invariant_prop <> isrreg var
R107770:107773 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R107766:107768 Coq.Init.Logic <> :type_scope:x_'='_x not
R107764:107765 CertiOS.framework.proof.invariant_prop <> i0 var
R107769:107769 CertiOS.framework.proof.invariant_prop <> i var
R107782:107785 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R107777:107779 Coq.Init.Logic <> :type_scope:x_'='_x not
R107774:107776 CertiOS.framework.proof.invariant_prop <> si0 var
R107780:107781 CertiOS.framework.proof.invariant_prop <> si var
R107794:107797 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R107788:107790 Coq.Init.Logic <> :type_scope:x_'='_x not
R107786:107787 CertiOS.framework.proof.invariant_prop <> ci var
R107791:107793 Coq.Init.Datatypes <> nil constr
R107800:107802 Coq.Init.Logic <> :type_scope:x_'='_x not
R107798:107799 CertiOS.framework.proof.invariant_prop <> ge var
R107803:107803 CertiOS.framework.proof.invariant_prop <> G var
R107538:107547 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R107487:107487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107490:107491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107494:107495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107497:107498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107501:107502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107522:107523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107525:107526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107532:107532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107488:107489 CertiOS.framework.proof.invariant_prop <> ge var
R107492:107493 CertiOS.framework.proof.invariant_prop <> le var
R107496:107496 CertiOS.framework.proof.invariant_prop <> M var
R107499:107500 CertiOS.framework.proof.invariant_prop <> ir var
R107503:107503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107506:107507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107517:107518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107521:107521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107504:107505 CertiOS.framework.proof.invariant_prop <> ei var
R107510:107513 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R107508:107509 CertiOS.framework.proof.invariant_prop <> i0 var
R107514:107516 CertiOS.framework.proof.invariant_prop <> si0 var
R107519:107520 CertiOS.framework.proof.invariant_prop <> ci var
R107524:107524 CertiOS.framework.proof.invariant_prop <> O var
R107527:107531 CertiOS.framework.proof.invariant_prop <> gamma var
R107555:107566 CertiOS.framework.logic.assertion <> ::x_'//\\'_x not
R107548:107552 CertiOS.framework.logic.assertion <> Agenv constr
R107554:107554 CertiOS.framework.proof.invariant_prop <> G var
R107567:107568 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107698:107708 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107579:107595 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107569:107572 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107575:107578 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107573:107574 CertiOS.framework.proof.invariant_prop <> Ch var
R107624:107639 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107596:107599 CertiOS.framework.logic.assertion <> Aisr constr
R107602:107607 CertiOS.framework.model.language <> isrupd def
R107618:107622 Coq.Init.Datatypes <> false constr
R107616:107616 CertiOS.framework.proof.invariant_prop <> i var
R107609:107614 CertiOS.framework.proof.invariant_prop <> isrreg var
R107658:107661 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107640:107642 CertiOS.framework.logic.assertion <> Ais constr
R107646:107649 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R107645:107645 CertiOS.framework.proof.invariant_prop <> i var
R107650:107651 CertiOS.framework.proof.invariant_prop <> si var
R107669:107672 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107662:107664 CertiOS.framework.logic.assertion <> Acs constr
R107666:107668 Coq.Init.Datatypes <> nil constr
R107680:107683 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107673:107677 CertiOS.framework.logic.assertion <> IRINV def
R107679:107679 CertiOS.framework.proof.invariant_prop <> I var
R107684:107693 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R107695:107697 Coq.Init.Datatypes <> nil constr
R107709:107715 CertiOS.framework.logic.inferules <> p_local def
R107725:107726 CertiOS.framework.proof.invariant_prop <> lg var
R107723:107723 CertiOS.framework.proof.invariant_prop <> t var
R107717:107721 CertiOS.framework.proof.invariant_prop <> lasrt var
R107882:107897 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107872:107875 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107878:107881 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107926:107940 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107898:107901 CertiOS.framework.logic.assertion <> Aisr constr
R107904:107909 CertiOS.framework.model.language <> isrupd def
R107920:107924 Coq.Init.Datatypes <> false constr
R107959:107962 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107941:107943 CertiOS.framework.logic.assertion <> Ais constr
R107947:107950 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R107970:107973 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107963:107965 CertiOS.framework.logic.assertion <> Acs constr
R107967:107969 Coq.Init.Datatypes <> nil constr
R107981:107984 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107974:107978 CertiOS.framework.logic.assertion <> IRINV def
R107985:107994 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R107996:107998 Coq.Init.Datatypes <> nil constr
R107882:107897 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107872:107875 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107878:107881 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R107926:107940 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107898:107901 CertiOS.framework.logic.assertion <> Aisr constr
R107904:107909 CertiOS.framework.model.language <> isrupd def
R107920:107924 Coq.Init.Datatypes <> false constr
R107959:107962 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107941:107943 CertiOS.framework.logic.assertion <> Ais constr
R107947:107950 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R107970:107973 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107963:107965 CertiOS.framework.logic.assertion <> Acs constr
R107967:107969 Coq.Init.Datatypes <> nil constr
R107981:107984 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R107974:107978 CertiOS.framework.logic.assertion <> IRINV def
R107985:107994 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R107996:107998 Coq.Init.Datatypes <> nil constr
R108016:108018 CertiOS.framework.logic.assertion <> sat def
R108032:108034 CertiOS.framework.logic.assertion <> sat def
R108032:108034 CertiOS.framework.logic.assertion <> sat def
R108084:108090 CertiOS.framework.logic.assertion <> getabst def
R108105:108111 CertiOS.framework.logic.assertion <> substmo def
R108126:108135 CertiOS.framework.logic.assertion <> substaskst def
R108150:108165 CertiOS.framework.logic.assertion <> getmem def
R108180:108186 CertiOS.framework.model.opsem <> get_mem def
R108201:108208 CertiOS.framework.model.language <> get_smem def
R108084:108090 CertiOS.framework.logic.assertion <> getabst def
R108105:108111 CertiOS.framework.logic.assertion <> substmo def
R108126:108135 CertiOS.framework.logic.assertion <> substaskst def
R108150:108165 CertiOS.framework.logic.assertion <> getmem def
R108180:108186 CertiOS.framework.model.opsem <> get_mem def
R108201:108208 CertiOS.framework.model.language <> get_smem def
prf 108287:108304 <> good_inv_prop_iret
R108323:108325 CertiOS.framework.model.language <> hid def
R108387:108394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108408:108415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108428:108435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108488:108495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R108537:108540 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108496:108496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108499:108500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108504:108505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108507:108508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108511:108512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108525:108526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108531:108532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108536:108536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108497:108498 CertiOS.framework.proof.invariant_prop <> ge var
R108501:108503 CertiOS.framework.proof.invariant_prop <> le' var
R108506:108506 CertiOS.framework.proof.invariant_prop <> M var
R108509:108510 CertiOS.framework.proof.invariant_prop <> ir var
R108513:108513 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108517:108517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108520:108520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108524:108524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108514:108516 CertiOS.framework.proof.invariant_prop <> ie' var
R108518:108519 CertiOS.framework.proof.invariant_prop <> is var
R108521:108523 CertiOS.framework.proof.invariant_prop <> cs' var
R108527:108530 CertiOS.framework.proof.invariant_prop <> abst var
R108533:108535 CertiOS.framework.proof.invariant_prop <> op' var
R108541:108541 CertiOS.framework.proof.invariant_prop <> p var
R108483:108486 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108436:108436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108439:108440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108443:108444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108446:108447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108450:108451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108472:108473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108478:108479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108482:108482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108437:108438 CertiOS.framework.proof.invariant_prop <> ge var
R108441:108442 CertiOS.framework.proof.invariant_prop <> le var
R108445:108445 CertiOS.framework.proof.invariant_prop <> M var
R108448:108449 CertiOS.framework.proof.invariant_prop <> ir var
R108452:108452 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108455:108456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108462:108463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108466:108466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108453:108454 CertiOS.framework.proof.invariant_prop <> ie var
R108458:108459 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108457:108457 CertiOS.framework.proof.invariant_prop <> i var
R108460:108461 CertiOS.framework.proof.invariant_prop <> is var
R108464:108465 CertiOS.framework.proof.invariant_prop <> cs var
R108474:108477 CertiOS.framework.proof.invariant_prop <> abst var
R108480:108481 CertiOS.framework.proof.invariant_prop <> op var
R108487:108487 CertiOS.framework.proof.invariant_prop <> p var
R108420:108422 Coq.Init.Logic <> :type_scope:x_'='_x not
R108416:108417 CertiOS.framework.proof.invariant_prop <> ir var
R108419:108419 CertiOS.framework.proof.invariant_prop <> i var
R108423:108427 Coq.Init.Datatypes <> false constr
R108395:108405 CertiOS.framework.logic.assertion <> GoodInvAsrt def
R108407:108407 CertiOS.framework.proof.invariant_prop <> p var
R108377:108384 CertiOS.framework.logic.assertion <> inv_prop def
R108386:108386 CertiOS.framework.proof.invariant_prop <> p var
R108617:108620 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108571:108571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108574:108575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108579:108580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108582:108583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108586:108587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108605:108606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108611:108612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108616:108616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108588:108588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108592:108593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108599:108600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108604:108604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108595:108596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108617:108620 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108571:108571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108574:108575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108579:108580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108582:108583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108586:108587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108605:108606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108611:108612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108616:108616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108588:108588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108592:108593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108599:108600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108604:108604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108595:108596 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108639:108651 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R108639:108651 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R108670:108677 CertiOS.framework.logic.assertion <> inv_prop def
R108708:108729 CertiOS.framework.logic.assertion <> inv_isr_prop def
R108758:108758 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108817:108819 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108759:108766 CertiOS.framework.logic.assertion <> set_is_s def
R108768:108768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108771:108772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108776:108777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108779:108780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108783:108784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108802:108803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108808:108809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108813:108813 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108785:108785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108789:108790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108796:108797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108801:108801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108792:108793 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108758:108758 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108817:108819 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R108759:108766 CertiOS.framework.logic.assertion <> set_is_s def
R108768:108768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108771:108772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108776:108777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108779:108780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108783:108784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108802:108803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108808:108809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108813:108813 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108785:108785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108789:108790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108796:108797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108801:108801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108792:108793 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
prf 108893:108921 <> starinv_isr_ncare_aux_ab_iret
R108939:108941 CertiOS.framework.model.language <> hid def
R108949:108951 CertiOS.framework.logic.assertion <> Inv def
R108967:108969 CertiOS.framework.model.memory <> env def
R108987:108989 CertiOS.framework.model.memory <> mem def
R108997:109002 CertiOS.framework.model.language <> osabst def
R109015:109019 CertiOS.framework.logic.assertion <> absop def
R109069:109077 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109141:109148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R109187:109190 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R109149:109149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109152:109153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109157:109158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109160:109161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109164:109165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109178:109179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109181:109182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109186:109186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109150:109151 CertiOS.framework.proof.invariant_prop <> ge var
R109154:109156 CertiOS.framework.proof.invariant_prop <> le' var
R109159:109159 CertiOS.framework.proof.invariant_prop <> m var
R109162:109163 CertiOS.framework.proof.invariant_prop <> ir var
R109166:109166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109170:109170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109173:109173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109177:109177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109167:109169 CertiOS.framework.proof.invariant_prop <> ie' var
R109171:109172 CertiOS.framework.proof.invariant_prop <> is var
R109174:109176 CertiOS.framework.proof.invariant_prop <> cs' var
R109180:109180 CertiOS.framework.proof.invariant_prop <> O var
R109183:109185 CertiOS.framework.proof.invariant_prop <> ab' var
R109191:109201 CertiOS.framework.logic.assertion <> starinv_isr def
R109207:109207 CertiOS.framework.proof.invariant_prop <> j var
R109205:109205 CertiOS.framework.proof.invariant_prop <> i var
R109203:109203 CertiOS.framework.proof.invariant_prop <> I var
R109120:109123 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R109078:109078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109081:109082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109085:109086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109088:109089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109092:109093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109107:109108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109110:109111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109114:109114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109079:109080 CertiOS.framework.proof.invariant_prop <> ge var
R109083:109084 CertiOS.framework.proof.invariant_prop <> le var
R109087:109087 CertiOS.framework.proof.invariant_prop <> m var
R109090:109091 CertiOS.framework.proof.invariant_prop <> ir var
R109094:109094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109097:109097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109103:109103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109106:109106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109095:109096 CertiOS.framework.proof.invariant_prop <> ie var
R109099:109100 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R109098:109098 CertiOS.framework.proof.invariant_prop <> f var
R109101:109102 CertiOS.framework.proof.invariant_prop <> is var
R109104:109105 CertiOS.framework.proof.invariant_prop <> cs var
R109109:109109 CertiOS.framework.proof.invariant_prop <> O var
R109112:109113 CertiOS.framework.proof.invariant_prop <> ab var
R109124:109134 CertiOS.framework.logic.assertion <> starinv_isr def
R109140:109140 CertiOS.framework.proof.invariant_prop <> j var
R109138:109138 CertiOS.framework.proof.invariant_prop <> i var
R109136:109136 CertiOS.framework.proof.invariant_prop <> I var
R109062:109063 Coq.Init.Logic <> :type_scope:x_'='_x not
R109058:109059 CertiOS.framework.proof.invariant_prop <> ir var
R109061:109061 CertiOS.framework.proof.invariant_prop <> f var
R109064:109068 Coq.Init.Datatypes <> false constr
R109251:109261 CertiOS.framework.logic.assertion <> starinv_isr def
R109377:109382 CertiOS.framework.logic.assertion <> empmem syndef
R109388:109394 CertiOS.framework.logic.assertion <> empabst syndef
R109377:109382 CertiOS.framework.logic.assertion <> empmem syndef
R109388:109394 CertiOS.framework.logic.assertion <> empabst syndef
R109472:109475 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R109425:109425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109428:109429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109433:109434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109436:109437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109439:109440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109458:109459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109461:109462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109466:109466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109441:109441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109445:109446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109452:109453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109457:109457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109448:109449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R109476:109481 CertiOS.framework.logic.assertion <> getinv proj
R109472:109475 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R109425:109425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109428:109429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109433:109434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109436:109437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109439:109440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109458:109459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109461:109462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109466:109466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109441:109441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109445:109446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109452:109453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109457:109457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109448:109449 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R109476:109481 CertiOS.framework.logic.assertion <> getinv proj
R109500:109512 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R109500:109512 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R109529:109532 CertiOS.framework.logic.assertion <> invp proj
R109529:109532 CertiOS.framework.logic.assertion <> invp proj
R109545:109548 CertiOS.framework.logic.assertion <> prec proj
R109545:109548 CertiOS.framework.logic.assertion <> prec proj
R109568:109575 CertiOS.framework.logic.assertion <> inv_prop def
R109608:109629 CertiOS.framework.logic.assertion <> inv_isr_prop def
R109714:109724 CertiOS.framework.logic.assertion <> starinv_isr def
R109736:109746 CertiOS.framework.logic.assertion <> starinv_isr def
R109762:109772 CertiOS.framework.logic.assertion <> starinv_isr def
R109762:109772 CertiOS.framework.logic.assertion <> starinv_isr def
R109852:109857 CertiOS.framework.logic.assertion <> empmem syndef
R109863:109869 CertiOS.framework.logic.assertion <> empabst syndef
R109852:109857 CertiOS.framework.logic.assertion <> empmem syndef
R109863:109869 CertiOS.framework.logic.assertion <> empabst syndef
R110013:110018 CertiOS.framework.logic.assertion <> empmem syndef
R110024:110030 CertiOS.framework.logic.assertion <> empabst syndef
R110013:110018 CertiOS.framework.logic.assertion <> empmem syndef
R110024:110030 CertiOS.framework.logic.assertion <> empabst syndef
R110109:110112 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110060:110060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110063:110064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110068:110069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110071:110072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110075:110076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110094:110095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110098:110099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110103:110103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110077:110077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110081:110082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110088:110089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110093:110093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110084:110085 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R110113:110118 CertiOS.framework.logic.assertion <> getinv proj
R110109:110112 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110060:110060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110063:110064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110068:110069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110071:110072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110075:110076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110094:110095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110098:110099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110103:110103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110077:110077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110081:110082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110088:110089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110093:110093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110084:110085 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R110113:110118 CertiOS.framework.logic.assertion <> getinv proj
R110137:110149 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R110137:110149 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R110166:110169 CertiOS.framework.logic.assertion <> invp proj
R110166:110169 CertiOS.framework.logic.assertion <> invp proj
R110182:110185 CertiOS.framework.logic.assertion <> prec proj
R110182:110185 CertiOS.framework.logic.assertion <> prec proj
R110205:110212 CertiOS.framework.logic.assertion <> inv_prop def
R110245:110266 CertiOS.framework.logic.assertion <> inv_isr_prop def
prf 110365:110383 <> invlth_isr_add_iret
R110479:110486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110519:110526 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110531:110534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110545:110551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110613:110621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110698:110706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R110763:110766 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110707:110707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110710:110710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110715:110715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110727:110728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110731:110732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110745:110745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110757:110757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110762:110762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110708:110709 CertiOS.framework.proof.invariant_prop <> ge var
R110711:110714 CertiOS.framework.proof.invariant_prop <> le'' var
R110716:110720 CertiOS.framework.auxlibs.Maps <> merge meth
R110725:110726 CertiOS.framework.proof.invariant_prop <> M1 var
R110722:110723 CertiOS.framework.proof.invariant_prop <> M2 var
R110729:110730 CertiOS.framework.proof.invariant_prop <> ir var
R110733:110733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110737:110737 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110740:110740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110744:110744 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110734:110736 CertiOS.framework.proof.invariant_prop <> ie' var
R110738:110739 CertiOS.framework.proof.invariant_prop <> is var
R110741:110743 CertiOS.framework.proof.invariant_prop <> cs' var
R110746:110750 CertiOS.framework.auxlibs.Maps <> merge meth
R110755:110756 CertiOS.framework.proof.invariant_prop <> O1 var
R110752:110753 CertiOS.framework.proof.invariant_prop <> O2 var
R110758:110761 CertiOS.framework.proof.invariant_prop <> ab'' var
R110767:110776 CertiOS.framework.logic.assertion <> invlth_isr def
R110782:110782 CertiOS.framework.proof.invariant_prop <> j var
R110778:110778 CertiOS.framework.proof.invariant_prop <> I var
R110668:110671 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110622:110622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110625:110625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110629:110630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110633:110634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110637:110637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110655:110655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110658:110658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110662:110662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110623:110624 CertiOS.framework.proof.invariant_prop <> ge var
R110626:110628 CertiOS.framework.proof.invariant_prop <> le' var
R110631:110632 CertiOS.framework.proof.invariant_prop <> M2 var
R110635:110636 CertiOS.framework.proof.invariant_prop <> ir var
R110638:110638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110641:110642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110650:110651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110654:110654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110639:110640 CertiOS.framework.proof.invariant_prop <> ie var
R110644:110647 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R110643:110643 CertiOS.framework.proof.invariant_prop <> f var
R110648:110649 CertiOS.framework.proof.invariant_prop <> is var
R110652:110653 CertiOS.framework.proof.invariant_prop <> cs var
R110656:110657 CertiOS.framework.proof.invariant_prop <> O2 var
R110659:110661 CertiOS.framework.proof.invariant_prop <> ab' var
R110672:110681 CertiOS.framework.logic.assertion <> invlth_isr def
R110697:110697 CertiOS.framework.proof.invariant_prop <> j var
R110688:110688 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110687:110687 CertiOS.framework.proof.invariant_prop <> i var
R110683:110683 CertiOS.framework.proof.invariant_prop <> I var
R110593:110596 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110552:110552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110555:110555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110558:110558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110561:110561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110564:110564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110581:110581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110584:110584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110587:110587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110553:110554 CertiOS.framework.proof.invariant_prop <> ge var
R110556:110557 CertiOS.framework.proof.invariant_prop <> le var
R110559:110560 CertiOS.framework.proof.invariant_prop <> M1 var
R110562:110563 CertiOS.framework.proof.invariant_prop <> ir var
R110565:110565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110568:110569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110576:110577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110580:110580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110566:110567 CertiOS.framework.proof.invariant_prop <> ie var
R110571:110573 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R110570:110570 CertiOS.framework.proof.invariant_prop <> f var
R110574:110575 CertiOS.framework.proof.invariant_prop <> is var
R110578:110579 CertiOS.framework.proof.invariant_prop <> cs var
R110582:110583 CertiOS.framework.proof.invariant_prop <> O1 var
R110585:110586 CertiOS.framework.proof.invariant_prop <> ab var
R110597:110606 CertiOS.framework.logic.assertion <> invlth_isr def
R110612:110612 CertiOS.framework.proof.invariant_prop <> i var
R110608:110608 CertiOS.framework.proof.invariant_prop <> I var
R110536:110538 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R110535:110535 CertiOS.framework.proof.invariant_prop <> j var
R110539:110539 Coq.Init.Datatypes <> S constr
R110541:110544 CertiOS.framework.model.language <> INUM def
R110528:110529 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R110527:110527 CertiOS.framework.proof.invariant_prop <> i var
R110530:110530 CertiOS.framework.proof.invariant_prop <> j var
R110501:110504 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R110487:110494 CertiOS.framework.auxlibs.Maps <> disjoint def
R110499:110500 CertiOS.framework.proof.invariant_prop <> M2 var
R110496:110497 CertiOS.framework.proof.invariant_prop <> M1 var
R110505:110512 CertiOS.framework.auxlibs.Maps <> disjoint def
R110517:110518 CertiOS.framework.proof.invariant_prop <> O2 var
R110514:110515 CertiOS.framework.proof.invariant_prop <> O1 var
R110471:110473 Coq.Init.Logic <> :type_scope:x_'='_x not
R110467:110468 CertiOS.framework.proof.invariant_prop <> ir var
R110470:110470 CertiOS.framework.proof.invariant_prop <> f var
R110474:110478 Coq.Init.Datatypes <> false constr
R110826:110835 CertiOS.framework.logic.assertion <> invlth_isr def
R110856:110857 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110861:110861 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110859:110859 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110856:110857 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110861:110861 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110859:110859 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110883:110883 Coq.Init.Logic <> :type_scope:x_'='_x not
R110881:110881 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110884:110884 Coq.Init.Datatypes <> S constr
R110887:110887 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110883:110883 Coq.Init.Logic <> :type_scope:x_'='_x not
R110881:110881 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R110884:110884 Coq.Init.Datatypes <> S constr
R110887:110887 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110985:110999 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110925:110925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110928:110929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110934:110935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110947:110948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110951:110952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110965:110966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110978:110979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110984:110984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110936:110940 CertiOS.framework.auxlibs.Maps <> merge meth
R110953:110953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110957:110957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110960:110960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110964:110964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110967:110971 CertiOS.framework.auxlibs.Maps <> merge meth
R111023:111026 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R111000:111010 CertiOS.framework.logic.assertion <> starinv_isr def
R111018:111020 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R111027:111037 CertiOS.framework.logic.assertion <> starinv_isr def
R111043:111045 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R110985:110999 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R110925:110925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110928:110929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110934:110935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110947:110948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110951:110952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110965:110966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110978:110979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110984:110984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110936:110940 CertiOS.framework.auxlibs.Maps <> merge meth
R110953:110953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110957:110957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110960:110960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110964:110964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R110967:110971 CertiOS.framework.auxlibs.Maps <> merge meth
R111023:111026 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R111000:111010 CertiOS.framework.logic.assertion <> starinv_isr def
R111018:111020 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R111027:111037 CertiOS.framework.logic.assertion <> starinv_isr def
R111043:111045 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R111062:111064 CertiOS.framework.logic.assertion <> sat def
R111071:111073 CertiOS.framework.logic.assertion <> sat def
R111071:111073 CertiOS.framework.logic.assertion <> sat def
R111131:111135 CertiOS.framework.auxlibs.Maps <> merge meth
R111152:111156 CertiOS.framework.auxlibs.Maps <> merge meth
R111131:111135 CertiOS.framework.auxlibs.Maps <> merge meth
R111152:111156 CertiOS.framework.auxlibs.Maps <> merge meth
R111181:111195 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R111181:111195 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R111213:111227 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R111213:111227 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R111248:111276 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R111248:111276 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R111295:111323 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R111295:111323 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R111341:111357 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R111341:111357 CertiOS.framework.proof.rulesoundlib <> starinv_isr_elim1 thm
R111379:111379 Coq.Init.Logic <> :type_scope:x_'='_x not
R111377:111377 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R111379:111379 Coq.Init.Logic <> :type_scope:x_'='_x not
R111377:111377 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R111426:111427 Coq.Init.Logic <> :type_scope:x_'='_x not
R111424:111424 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R111428:111428 Coq.Init.Datatypes <> S constr
R111426:111427 Coq.Init.Logic <> :type_scope:x_'='_x not
R111424:111424 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R111428:111428 Coq.Init.Datatypes <> S constr
R111506:111508 Coq.Init.Logic <> :type_scope:x_'='_x not
R111495:111499 CertiOS.framework.auxlibs.Maps <> merge meth
R111509:111513 CertiOS.framework.auxlibs.Maps <> merge meth
R111506:111508 Coq.Init.Logic <> :type_scope:x_'='_x not
R111495:111499 CertiOS.framework.auxlibs.Maps <> merge meth
R111509:111513 CertiOS.framework.auxlibs.Maps <> merge meth
R111533:111551 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111533:111551 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111533:111551 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111533:111551 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111568:111579 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R111568:111579 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R111623:111625 Coq.Init.Logic <> :type_scope:x_'='_x not
R111612:111616 CertiOS.framework.auxlibs.Maps <> merge meth
R111626:111630 CertiOS.framework.auxlibs.Maps <> merge meth
R111623:111625 Coq.Init.Logic <> :type_scope:x_'='_x not
R111612:111616 CertiOS.framework.auxlibs.Maps <> merge meth
R111626:111630 CertiOS.framework.auxlibs.Maps <> merge meth
R111650:111668 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111650:111668 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111650:111668 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111650:111668 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R111685:111696 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R111685:111696 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
prf 111741:111749 <> iret_spec
R111775:111777 CertiOS.framework.model.memory <> env def
R111785:111787 CertiOS.framework.model.memory <> mem def
R111800:111802 CertiOS.framework.model.language <> isr def
R111822:111823 CertiOS.framework.model.language <> ie def
R111833:111834 CertiOS.framework.model.language <> is def
R111844:111845 CertiOS.framework.model.language <> cs def
R111856:111861 CertiOS.framework.model.language <> osabst def
R111881:111884 Coq.Init.Datatypes <> list ind
R111886:111888 CertiOS.framework.model.language <> hid def
R111896:111898 CertiOS.framework.model.language <> hid def
R111907:111911 CertiOS.framework.logic.assertion <> absop def
R111920:111922 CertiOS.framework.model.memory <> mem def
R111940:111942 CertiOS.framework.logic.assertion <> Inv def
R111952:111956 CertiOS.framework.logic.assertion <> absop def
R111964:111966 CertiOS.framework.model.memory <> env def
R112003:112010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R112023:112030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R112112:112119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R112373:112380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R112381:112387 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R112390:112390 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R112393:112393 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R112396:112396 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R112399:112406 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R112420:112429 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R112407:112410 CertiOS.framework.auxlibs.Maps <> join meth
R112418:112419 CertiOS.framework.proof.invariant_prop <> MM var
R112443:112452 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R112430:112433 CertiOS.framework.auxlibs.Maps <> join meth
R112441:112442 CertiOS.framework.proof.invariant_prop <> OO var
R112526:112536 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R112453:112456 CertiOS.framework.logic.inferules <> satp def
R112520:112522 CertiOS.framework.logic.assertion <> INV def
R112524:112524 CertiOS.framework.proof.invariant_prop <> I var
R112458:112458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112463:112464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112469:112470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112473:112474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112496:112497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112514:112514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112459:112462 CertiOS.framework.proof.invariant_prop <> genv var
R112465:112468 CertiOS.framework.proof.invariant_prop <> lenv var
R112475:112480 CertiOS.framework.model.language <> isrupd def
R112491:112495 Coq.Init.Datatypes <> false constr
R112489:112489 CertiOS.framework.proof.invariant_prop <> i var
R112482:112487 CertiOS.framework.proof.invariant_prop <> isrreg var
R112498:112498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112503:112504 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112508:112509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112513:112513 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112499:112502 Coq.Init.Datatypes <> true constr
R112505:112507 CertiOS.framework.proof.invariant_prop <> is' var
R112510:112512 CertiOS.framework.proof.invariant_prop <> cs0 var
R112537:112540 CertiOS.framework.logic.inferules <> satp def
R112617:112623 CertiOS.framework.logic.inferules <> p_local def
R112633:112634 CertiOS.framework.proof.invariant_prop <> lg var
R112631:112631 CertiOS.framework.proof.invariant_prop <> t var
R112625:112629 CertiOS.framework.proof.invariant_prop <> lasrt var
R112542:112542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112547:112548 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112553:112554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112557:112558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112580:112594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112611:112611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112543:112546 CertiOS.framework.proof.invariant_prop <> genv var
R112549:112552 CertiOS.framework.proof.invariant_prop <> lenv var
R112559:112564 CertiOS.framework.model.language <> isrupd def
R112575:112579 Coq.Init.Datatypes <> false constr
R112573:112573 CertiOS.framework.proof.invariant_prop <> i var
R112566:112571 CertiOS.framework.proof.invariant_prop <> isrreg var
R112595:112595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112600:112601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112605:112606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112610:112610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112596:112599 Coq.Init.Datatypes <> true constr
R112602:112604 CertiOS.framework.proof.invariant_prop <> is' var
R112607:112609 CertiOS.framework.proof.invariant_prop <> cs0 var
R112182:112191 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R112120:112120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112125:112126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112131:112132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112134:112135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112157:112158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112174:112175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112177:112178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112181:112181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112121:112124 CertiOS.framework.proof.invariant_prop <> genv var
R112127:112130 CertiOS.framework.proof.invariant_prop <> lenv var
R112133:112133 CertiOS.framework.proof.invariant_prop <> m var
R112136:112141 CertiOS.framework.model.language <> isrupd def
R112152:112156 Coq.Init.Datatypes <> false constr
R112150:112150 CertiOS.framework.proof.invariant_prop <> i var
R112143:112148 CertiOS.framework.proof.invariant_prop <> isrreg var
R112159:112159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112163:112164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112168:112169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112173:112173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112160:112162 CertiOS.framework.proof.invariant_prop <> ie0 var
R112165:112167 CertiOS.framework.proof.invariant_prop <> is0 var
R112170:112172 CertiOS.framework.proof.invariant_prop <> cs0 var
R112176:112176 CertiOS.framework.proof.invariant_prop <> O var
R112179:112180 CertiOS.framework.proof.invariant_prop <> ab var
R112199:112210 CertiOS.framework.logic.assertion <> ::x_'//\\'_x not
R112192:112196 CertiOS.framework.logic.assertion <> Agenv constr
R112198:112198 CertiOS.framework.proof.invariant_prop <> G var
R112211:112212 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112344:112354 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112224:112240 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112213:112216 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R112220:112223 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R112217:112219 CertiOS.framework.proof.invariant_prop <> ab' var
R112269:112284 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112241:112244 CertiOS.framework.logic.assertion <> Aisr constr
R112247:112252 CertiOS.framework.model.language <> isrupd def
R112263:112267 Coq.Init.Datatypes <> false constr
R112261:112261 CertiOS.framework.proof.invariant_prop <> i var
R112254:112259 CertiOS.framework.proof.invariant_prop <> isrreg var
R112304:112307 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112285:112287 CertiOS.framework.logic.assertion <> Ais constr
R112291:112294 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R112290:112290 CertiOS.framework.proof.invariant_prop <> i var
R112295:112297 CertiOS.framework.proof.invariant_prop <> is' var
R112315:112318 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112308:112310 CertiOS.framework.logic.assertion <> Acs constr
R112312:112314 Coq.Init.Datatypes <> nil constr
R112326:112329 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R112319:112323 CertiOS.framework.logic.assertion <> IRINV def
R112325:112325 CertiOS.framework.proof.invariant_prop <> I var
R112330:112339 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R112341:112343 Coq.Init.Datatypes <> nil constr
R112355:112361 CertiOS.framework.logic.inferules <> p_local def
R112371:112372 CertiOS.framework.proof.invariant_prop <> lg var
R112369:112369 CertiOS.framework.proof.invariant_prop <> t var
R112363:112367 CertiOS.framework.proof.invariant_prop <> lasrt var
R112031:112034 CertiOS.framework.logic.inferules <> satp def
R112106:112108 CertiOS.framework.logic.assertion <> INV def
R112110:112110 CertiOS.framework.proof.invariant_prop <> I var
R112102:112103 CertiOS.framework.proof.invariant_prop <> Os var
R112036:112036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112041:112042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112047:112048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112051:112052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112074:112075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112091:112091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112037:112040 CertiOS.framework.proof.invariant_prop <> genv var
R112043:112046 CertiOS.framework.proof.invariant_prop <> lenv var
R112049:112050 CertiOS.framework.proof.invariant_prop <> Ms var
R112053:112058 CertiOS.framework.model.language <> isrupd def
R112069:112073 Coq.Init.Datatypes <> false constr
R112067:112067 CertiOS.framework.proof.invariant_prop <> i var
R112060:112065 CertiOS.framework.proof.invariant_prop <> isrreg var
R112076:112076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112080:112081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112085:112086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112090:112090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112077:112079 CertiOS.framework.proof.invariant_prop <> ie0 var
R112082:112084 CertiOS.framework.proof.invariant_prop <> is0 var
R112087:112089 CertiOS.framework.proof.invariant_prop <> cs0 var
R112011:112014 CertiOS.framework.auxlibs.Maps <> join meth
R112021:112022 CertiOS.framework.proof.invariant_prop <> OO var
R112018:112019 CertiOS.framework.proof.invariant_prop <> Os var
R112016:112016 CertiOS.framework.proof.invariant_prop <> O var
R111991:111994 CertiOS.framework.auxlibs.Maps <> join meth
R112001:112002 CertiOS.framework.proof.invariant_prop <> MM var
R111998:111999 CertiOS.framework.proof.invariant_prop <> Ms var
R111996:111996 CertiOS.framework.proof.invariant_prop <> m var
R112671:112676 CertiOS.framework.proof.invariant_prop <> absopx def
R112671:112676 CertiOS.framework.proof.invariant_prop <> absopx def
R112755:112763 CertiOS.framework.proof.invariant_prop <> sat_split thm
R112755:112763 CertiOS.framework.proof.invariant_prop <> sat_split thm
R112810:112812 CertiOS.framework.logic.assertion <> INV def
R112832:112838 CertiOS.framework.logic.inferules <> p_local def
R112832:112838 CertiOS.framework.logic.inferules <> p_local def
R112943:112946 CertiOS.framework.logic.inferules <> satp def
R112964:112972 CertiOS.framework.proof.invariant_prop <> sat_split thm
R112964:112972 CertiOS.framework.proof.invariant_prop <> sat_split thm
R112996:113005 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R112996:113005 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R113050:113067 CertiOS.framework.proof.invariant_prop <> good_inv_prop_iret thm
R113050:113067 CertiOS.framework.proof.invariant_prop <> good_inv_prop_iret thm
R113085:113088 CertiOS.framework.logic.assertion <> prec proj
R113085:113088 CertiOS.framework.logic.assertion <> prec proj
R113099:113102 CertiOS.framework.logic.assertion <> invp proj
R113099:113102 CertiOS.framework.logic.assertion <> invp proj
R113114:113119 CertiOS.framework.model.language <> isrupd def
R113143:113154 Coq.Arith.PeanoNat Nat eqb_refl thm
R113143:113154 Coq.Arith.PeanoNat Nat eqb_refl thm
R113143:113154 Coq.Arith.PeanoNat Nat eqb_refl thm
R113210:113217 CertiOS.framework.logic.assertion <> inv_ieon def
R113233:113241 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113233:113241 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113265:113274 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R113265:113274 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R113319:113328 CertiOS.framework.logic.assertion <> invlth_isr def
R113345:113373 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R113345:113373 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R113392:113397 CertiOS.framework.model.language <> isrupd def
R113410:113421 Coq.Arith.PeanoNat Nat eqb_refl thm
R113410:113421 Coq.Arith.PeanoNat Nat eqb_refl thm
R113410:113421 Coq.Arith.PeanoNat Nat eqb_refl thm
R113454:113462 CertiOS.framework.logic.assertion <> inv_ieoff def
R113526:113532 CertiOS.framework.logic.inferules <> p_local def
R113549:113552 CertiOS.framework.logic.inferules <> satp def
R113570:113578 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113570:113578 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113603:113612 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R113603:113612 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R113657:113660 CertiOS.framework.logic.inferules <> LINV def
R113761:113782 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R113761:113782 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R113816:113824 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113816:113824 CertiOS.framework.proof.invariant_prop <> sat_split thm
R113854:113858 CertiOS.framework.auxlibs.Maps <> merge meth
R113854:113858 CertiOS.framework.auxlibs.Maps <> merge meth
R113883:113887 CertiOS.framework.auxlibs.Maps <> merge meth
R113883:113887 CertiOS.framework.auxlibs.Maps <> merge meth
R113940:113948 CertiOS.tactics.basetac.join_lib <> join_comm thm
R113940:113948 CertiOS.tactics.basetac.join_lib <> join_comm thm
R113964:113972 CertiOS.tactics.basetac.join_lib <> join_comm thm
R113964:113972 CertiOS.tactics.basetac.join_lib <> join_comm thm
R113984:114003 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R113984:114003 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R114039:114047 CertiOS.tactics.basetac.join_lib <> join_comm thm
R114039:114047 CertiOS.tactics.basetac.join_lib <> join_comm thm
R114064:114072 CertiOS.tactics.basetac.join_lib <> join_comm thm
R114064:114072 CertiOS.tactics.basetac.join_lib <> join_comm thm
R114084:114103 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R114084:114103 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R114215:114218 CertiOS.framework.logic.inferules <> satp def
R114236:114245 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R114236:114245 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R114260:114264 CertiOS.framework.auxlibs.Maps <> merge meth
R114260:114264 CertiOS.framework.auxlibs.Maps <> merge meth
R114288:114292 CertiOS.framework.auxlibs.Maps <> merge meth
R114288:114292 CertiOS.framework.auxlibs.Maps <> merge meth
R114322:114349 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R114322:114349 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R114383:114394 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R114383:114394 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R114406:114427 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R114406:114427 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R114446:114476 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R114446:114476 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R114511:114522 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R114511:114522 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R114534:114549 CertiOS.tactics.basetac.join_lib <> join_join_disj_l thm
R114534:114549 CertiOS.tactics.basetac.join_lib <> join_join_disj_l thm
R114570:114573 CertiOS.framework.logic.assertion <> prec proj
R114579:114579 Coq.Init.Datatypes <> S constr
R114581:114584 CertiOS.framework.model.language <> INUM def
R114570:114573 CertiOS.framework.logic.assertion <> prec proj
R114579:114579 Coq.Init.Datatypes <> S constr
R114581:114584 CertiOS.framework.model.language <> INUM def
R114598:114605 CertiOS.framework.logic.assertion <> inv_prop def
R114638:114659 CertiOS.framework.logic.assertion <> inv_isr_prop def
R114686:114698 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R114686:114698 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R114764:114771 CertiOS.framework.logic.assertion <> set_is_s def
R114812:114817 CertiOS.framework.model.language <> isrupd def
R114830:114841 Coq.Arith.PeanoNat Nat eqb_refl thm
R114830:114841 Coq.Arith.PeanoNat Nat eqb_refl thm
R114830:114841 Coq.Arith.PeanoNat Nat eqb_refl thm
R114873:114876 CertiOS.framework.logic.assertion <> invp proj
R114873:114876 CertiOS.framework.logic.assertion <> invp proj
R114897:114905 CertiOS.framework.logic.assertion <> inv_ieoff def
R114922:114929 CertiOS.framework.logic.assertion <> inv_ieon def
R114985:114994 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R114985:114994 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R115036:115043 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115036:115043 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115060:115067 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115060:115067 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115092:115100 CertiOS.framework.logic.assertion <> emposabst def
R115118:115136 CertiOS.framework.proof.invariant_prop <> invlth_isr_add_iret thm
R115118:115136 CertiOS.framework.proof.invariant_prop <> invlth_isr_add_iret thm
R115154:115159 CertiOS.framework.model.language <> isrupd def
R115172:115183 Coq.Arith.PeanoNat Nat eqb_refl thm
R115172:115183 Coq.Arith.PeanoNat Nat eqb_refl thm
R115172:115183 Coq.Arith.PeanoNat Nat eqb_refl thm
R115229:115237 CertiOS.tactics.basetac.join_lib <> join_comm thm
R115229:115237 CertiOS.tactics.basetac.join_lib <> join_comm thm
R115256:115280 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_join_disjoint13 thm
R115256:115280 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_join_disjoint13 thm
R115319:115327 CertiOS.tactics.basetac.join_lib <> join_comm thm
R115319:115327 CertiOS.tactics.basetac.join_lib <> join_comm thm
R115345:115369 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_join_disjoint13 thm
R115345:115369 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_join_disjoint13 thm
R115388:115397 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R115388:115397 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R115442:115449 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115442:115449 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115468:115475 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115468:115475 CertiOS.tactics.basetac.join_lib <> join_emp thm
R115501:115509 CertiOS.framework.logic.assertion <> emposabst def
R115527:115536 CertiOS.framework.logic.assertion <> invlth_isr def
R115561:115573 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R115561:115573 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R115561:115573 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R115561:115573 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R115561:115573 CertiOS.tactics.basetac.join_general <> jl_merge_emp' thm
R115624:115627 CertiOS.framework.model.language <> INUM def
R115585:115613 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R115624:115627 CertiOS.framework.model.language <> INUM def
R115585:115613 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_aux_ab_iret thm
R115662:115668 CertiOS.framework.logic.inferules <> p_local def
R115685:115688 CertiOS.framework.logic.inferules <> satp def
R115707:115715 CertiOS.framework.proof.invariant_prop <> sat_split thm
R115707:115715 CertiOS.framework.proof.invariant_prop <> sat_split thm
R115740:115749 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R115740:115749 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R115792:115795 CertiOS.framework.logic.inferules <> LINV def
R115904:115925 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R115904:115925 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 115948:115970 <> mapstoval_false_vptr_eq
R116036:116039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116078:116085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116087:116089 Coq.Init.Logic <> :type_scope:x_'='_x not
R116086:116086 CertiOS.framework.proof.invariant_prop <> m var
R116090:116091 CertiOS.framework.proof.invariant_prop <> m' var
R116040:116048 CertiOS.framework.logic.assertion <> mapstoval def
R116076:116077 CertiOS.framework.proof.invariant_prop <> m' var
R116068:116071 CertiOS.framework.model.memory <> Vptr constr
R116073:116073 CertiOS.framework.proof.invariant_prop <> x var
R116061:116065 Coq.Init.Datatypes <> false constr
R116053:116056 CertiOS.framework.model.memory <> Tptr constr
R116058:116058 CertiOS.framework.proof.invariant_prop <> a var
R116050:116050 CertiOS.framework.proof.invariant_prop <> l var
R115999:116007 CertiOS.framework.logic.assertion <> mapstoval def
R116035:116035 CertiOS.framework.proof.invariant_prop <> m var
R116027:116030 CertiOS.framework.model.memory <> Vptr constr
R116032:116032 CertiOS.framework.proof.invariant_prop <> x var
R116020:116024 Coq.Init.Datatypes <> false constr
R116012:116015 CertiOS.framework.model.memory <> Tptr constr
R116017:116017 CertiOS.framework.proof.invariant_prop <> a var
R116009:116009 CertiOS.framework.proof.invariant_prop <> l var
R116120:116128 CertiOS.framework.logic.assertion <> mapstoval def
R116233:116239 CertiOS.framework.logic.assertion <> ptomval def
R116267:116269 Coq.Init.Logic <> :type_scope:x_'='_x not
R116267:116269 Coq.Init.Logic <> :type_scope:x_'='_x not
R116285:116295 CertiOS.tactics.basetac.join_lib <> join_unique thm
R116285:116295 CertiOS.tactics.basetac.join_lib <> join_unique thm
R116327:116329 Coq.Init.Logic <> :type_scope:x_'='_x not
R116327:116329 Coq.Init.Logic <> :type_scope:x_'='_x not
R116344:116354 CertiOS.tactics.basetac.join_lib <> join_unique thm
R116344:116354 CertiOS.tactics.basetac.join_lib <> join_unique thm
R116383:116393 CertiOS.tactics.basetac.join_lib <> join_unique thm
R116383:116393 CertiOS.tactics.basetac.join_lib <> join_unique thm
prf 116415:116426 <> curtid_exact
R116537:116544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116593:116600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116607:116610 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R116602:116604 Coq.Init.Logic <> :type_scope:x_'='_x not
R116601:116601 CertiOS.framework.proof.invariant_prop <> M var
R116605:116606 CertiOS.framework.proof.invariant_prop <> M' var
R116612:116614 Coq.Init.Logic <> :type_scope:x_'='_x not
R116611:116611 CertiOS.framework.proof.invariant_prop <> O var
R116615:116616 CertiOS.framework.proof.invariant_prop <> O' var
R116581:116584 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R116545:116545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116548:116549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116553:116554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116557:116558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116562:116563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116568:116569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116572:116573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116580:116580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116546:116547 CertiOS.framework.proof.invariant_prop <> ge var
R116550:116552 CertiOS.framework.proof.invariant_prop <> le' var
R116555:116556 CertiOS.framework.proof.invariant_prop <> M' var
R116559:116561 CertiOS.framework.proof.invariant_prop <> ir' var
R116564:116567 CertiOS.framework.proof.invariant_prop <> aux' var
R116570:116571 CertiOS.framework.proof.invariant_prop <> O' var
R116574:116579 CertiOS.framework.proof.invariant_prop <> absop' var
R116585:116590 CertiOS.framework.logic.inferules <> CurTid def
R116592:116592 CertiOS.framework.proof.invariant_prop <> t var
R116525:116528 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R116495:116495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116498:116499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116502:116503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116505:116506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116509:116510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116514:116515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116517:116518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116524:116524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116496:116497 CertiOS.framework.proof.invariant_prop <> ge var
R116500:116501 CertiOS.framework.proof.invariant_prop <> le var
R116504:116504 CertiOS.framework.proof.invariant_prop <> M var
R116507:116508 CertiOS.framework.proof.invariant_prop <> ir var
R116511:116513 CertiOS.framework.proof.invariant_prop <> aux var
R116516:116516 CertiOS.framework.proof.invariant_prop <> O var
R116519:116523 CertiOS.framework.proof.invariant_prop <> absop var
R116529:116534 CertiOS.framework.logic.inferules <> CurTid def
R116536:116536 CertiOS.framework.proof.invariant_prop <> t var
R116705:116727 CertiOS.framework.proof.invariant_prop <> mapstoval_false_vptr_eq thm
R116705:116727 CertiOS.framework.proof.invariant_prop <> mapstoval_false_vptr_eq thm
prf 116755:116764 <> linv_exact
R116891:116898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116954:116961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R116968:116971 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R116963:116965 Coq.Init.Logic <> :type_scope:x_'='_x not
R116962:116962 CertiOS.framework.proof.invariant_prop <> M var
R116966:116967 CertiOS.framework.proof.invariant_prop <> M' var
R116973:116975 Coq.Init.Logic <> :type_scope:x_'='_x not
R116972:116972 CertiOS.framework.proof.invariant_prop <> O var
R116976:116977 CertiOS.framework.proof.invariant_prop <> O' var
R116935:116938 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R116899:116899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116902:116903 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116907:116908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116911:116912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116916:116917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116922:116923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116926:116927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116934:116934 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116900:116901 CertiOS.framework.proof.invariant_prop <> ge var
R116904:116906 CertiOS.framework.proof.invariant_prop <> le' var
R116909:116910 CertiOS.framework.proof.invariant_prop <> M' var
R116913:116915 CertiOS.framework.proof.invariant_prop <> ir' var
R116918:116921 CertiOS.framework.proof.invariant_prop <> aux' var
R116924:116925 CertiOS.framework.proof.invariant_prop <> O' var
R116928:116933 CertiOS.framework.proof.invariant_prop <> absop' var
R116939:116942 CertiOS.framework.logic.inferules <> LINV def
R116952:116953 CertiOS.framework.proof.invariant_prop <> lg var
R116950:116950 CertiOS.framework.proof.invariant_prop <> t var
R116944:116948 CertiOS.framework.proof.invariant_prop <> lasrt var
R116872:116875 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R116842:116842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116845:116846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116849:116850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116852:116853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116856:116857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116861:116862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116864:116865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116871:116871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116843:116844 CertiOS.framework.proof.invariant_prop <> ge var
R116847:116848 CertiOS.framework.proof.invariant_prop <> le var
R116851:116851 CertiOS.framework.proof.invariant_prop <> M var
R116854:116855 CertiOS.framework.proof.invariant_prop <> ir var
R116858:116860 CertiOS.framework.proof.invariant_prop <> aux var
R116863:116863 CertiOS.framework.proof.invariant_prop <> O var
R116866:116870 CertiOS.framework.proof.invariant_prop <> absop var
R116876:116879 CertiOS.framework.logic.inferules <> LINV def
R116889:116890 CertiOS.framework.proof.invariant_prop <> lg var
R116887:116887 CertiOS.framework.proof.invariant_prop <> t var
R116881:116885 CertiOS.framework.proof.invariant_prop <> lasrt var
R117006:117009 CertiOS.framework.logic.inferules <> LINV def
R117156:117159 CertiOS.framework.logic.inferules <> satp def
R117161:117161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117164:117165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117168:117169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117171:117172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117175:117176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117180:117180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117156:117159 CertiOS.framework.logic.inferules <> satp def
R117161:117161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117164:117165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117168:117169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117171:117172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117175:117176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117180:117180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117226:117250 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R117226:117250 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R117270:117273 CertiOS.framework.logic.inferules <> satp def
R117275:117275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117278:117279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117283:117284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117287:117288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117292:117293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117298:117298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117270:117273 CertiOS.framework.logic.inferules <> satp def
R117275:117275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117278:117279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117283:117284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117287:117288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117292:117293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117298:117298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117345:117369 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R117345:117369 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
prf 117411:117423 <> p_local_exact
R117531:117538 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117588:117595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R117602:117605 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R117598:117600 Coq.Init.Logic <> :type_scope:x_'='_x not
R117596:117597 CertiOS.framework.proof.invariant_prop <> M' var
R117601:117601 CertiOS.framework.proof.invariant_prop <> M var
R117608:117610 Coq.Init.Logic <> :type_scope:x_'='_x not
R117606:117607 CertiOS.framework.proof.invariant_prop <> O' var
R117611:117611 CertiOS.framework.proof.invariant_prop <> O var
R117539:117542 CertiOS.framework.logic.inferules <> satp def
R117569:117575 CertiOS.framework.logic.inferules <> p_local def
R117585:117586 CertiOS.framework.proof.invariant_prop <> lg var
R117583:117583 CertiOS.framework.proof.invariant_prop <> t var
R117577:117581 CertiOS.framework.proof.invariant_prop <> lasrt var
R117565:117566 CertiOS.framework.proof.invariant_prop <> O' var
R117544:117544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117547:117547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117551:117551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117554:117554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117558:117558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117563:117563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117545:117546 CertiOS.framework.proof.invariant_prop <> ge var
R117548:117550 CertiOS.framework.proof.invariant_prop <> le' var
R117552:117553 CertiOS.framework.proof.invariant_prop <> M' var
R117555:117557 CertiOS.framework.proof.invariant_prop <> ir' var
R117559:117562 CertiOS.framework.proof.invariant_prop <> aux' var
R117487:117490 CertiOS.framework.logic.inferules <> satp def
R117512:117518 CertiOS.framework.logic.inferules <> p_local def
R117528:117529 CertiOS.framework.proof.invariant_prop <> lg var
R117526:117526 CertiOS.framework.proof.invariant_prop <> t var
R117520:117524 CertiOS.framework.proof.invariant_prop <> lasrt var
R117509:117509 CertiOS.framework.proof.invariant_prop <> O var
R117492:117492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117495:117495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117498:117498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117500:117500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117503:117503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117507:117507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117493:117494 CertiOS.framework.proof.invariant_prop <> ge var
R117496:117497 CertiOS.framework.proof.invariant_prop <> le var
R117499:117499 CertiOS.framework.proof.invariant_prop <> M var
R117501:117502 CertiOS.framework.proof.invariant_prop <> ir var
R117504:117506 CertiOS.framework.proof.invariant_prop <> aux var
R117644:117649 CertiOS.framework.proof.invariant_prop <> absopx def
R117644:117649 CertiOS.framework.proof.invariant_prop <> absopx def
R117676:117681 CertiOS.framework.proof.invariant_prop <> absopx def
R117676:117681 CertiOS.framework.proof.invariant_prop <> absopx def
R117703:117709 CertiOS.framework.logic.inferules <> p_local def
R117725:117733 CertiOS.framework.proof.invariant_prop <> sat_split thm
R117748:117756 CertiOS.framework.proof.invariant_prop <> sat_split thm
R117725:117733 CertiOS.framework.proof.invariant_prop <> sat_split thm
R117748:117756 CertiOS.framework.proof.invariant_prop <> sat_split thm
R117791:117802 CertiOS.framework.proof.invariant_prop <> curtid_exact thm
R117791:117802 CertiOS.framework.proof.invariant_prop <> curtid_exact thm
R117834:117843 CertiOS.framework.proof.invariant_prop <> linv_exact thm
R117834:117843 CertiOS.framework.proof.invariant_prop <> linv_exact thm
R117868:117878 CertiOS.tactics.basetac.join_lib <> join_unique thm
R117868:117878 CertiOS.tactics.basetac.join_lib <> join_unique thm
R117897:117907 CertiOS.tactics.basetac.join_lib <> join_unique thm
R117897:117907 CertiOS.tactics.basetac.join_lib <> join_unique thm
prf 117930:117943 <> INV_irrev_prop
R118027:118035 Coq.Init.Logic <> :type_scope:x_'->'_x not
R118090:118093 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R118058:118058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118061:118062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118066:118067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118069:118070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118073:118074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118078:118079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118084:118085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118089:118089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118059:118060 CertiOS.framework.proof.invariant_prop <> ge var
R118063:118065 CertiOS.framework.proof.invariant_prop <> le' var
R118068:118068 CertiOS.framework.proof.invariant_prop <> M var
R118071:118072 CertiOS.framework.proof.invariant_prop <> ir var
R118075:118077 CertiOS.framework.proof.invariant_prop <> aux var
R118080:118083 CertiOS.framework.proof.invariant_prop <> abst var
R118086:118088 CertiOS.framework.proof.invariant_prop <> op' var
R118094:118096 CertiOS.framework.logic.assertion <> INV def
R118098:118098 CertiOS.framework.proof.invariant_prop <> I var
R118018:118021 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R117988:117988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117991:117992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117995:117996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117998:117999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118002:118003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118007:118008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118013:118014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118017:118017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117989:117990 CertiOS.framework.proof.invariant_prop <> ge var
R117993:117994 CertiOS.framework.proof.invariant_prop <> le var
R117997:117997 CertiOS.framework.proof.invariant_prop <> M var
R118000:118001 CertiOS.framework.proof.invariant_prop <> ir var
R118004:118006 CertiOS.framework.proof.invariant_prop <> aux var
R118009:118012 CertiOS.framework.proof.invariant_prop <> abst var
R118015:118016 CertiOS.framework.proof.invariant_prop <> op var
R118022:118024 CertiOS.framework.logic.assertion <> INV def
R118026:118026 CertiOS.framework.proof.invariant_prop <> I var
R118142:118144 CertiOS.framework.logic.assertion <> INV def
R118161:118168 CertiOS.framework.logic.assertion <> inv_ieon def
R118185:118193 CertiOS.framework.logic.assertion <> inv_ieoff def
R118210:118219 CertiOS.framework.logic.assertion <> invlth_isr def
R118236:118238 CertiOS.framework.logic.assertion <> sat def
R118253:118255 CertiOS.framework.logic.assertion <> sat def
R118253:118255 CertiOS.framework.logic.assertion <> sat def
R118592:118604 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R118592:118604 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R118617:118620 CertiOS.framework.logic.assertion <> invp proj
R118627:118627 Coq.Init.Datatypes <> S constr
R118629:118632 CertiOS.framework.model.language <> INUM def
R118617:118620 CertiOS.framework.logic.assertion <> invp proj
R118627:118627 Coq.Init.Datatypes <> S constr
R118629:118632 CertiOS.framework.model.language <> INUM def
R118845:118862 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
R118845:118862 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
R119232:119233 Coq.Init.Logic <> :type_scope:x_'='_x not
R119228:119230 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119224:119226 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119213:119220 CertiOS.framework.logic.assertion <> gettopis def
R119245:119247 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119234:119241 CertiOS.framework.logic.assertion <> gettopis def
R119232:119233 Coq.Init.Logic <> :type_scope:x_'='_x not
R119228:119230 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119224:119226 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119213:119220 CertiOS.framework.logic.assertion <> gettopis def
R119245:119247 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119234:119241 CertiOS.framework.logic.assertion <> gettopis def
R119287:119304 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
R119287:119304 CertiOS.framework.proof.rulesoundlib <> inv_isr_irrev_prop thm
R119359:119366 CertiOS.framework.logic.assertion <> gettopis def
R119390:119392 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119379:119386 CertiOS.framework.logic.assertion <> gettopis def
R119390:119392 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R119379:119386 CertiOS.framework.logic.assertion <> gettopis def
R119359:119366 CertiOS.framework.logic.assertion <> gettopis def
prf 119437:119448 <> inv_ncare_le
R119472:119474 CertiOS.framework.model.memory <> env def
R119482:119484 CertiOS.framework.model.memory <> mem def
R119493:119495 CertiOS.framework.model.language <> isr def
R119514:119520 CertiOS.framework.model.language <> localst def
R119528:119533 CertiOS.framework.model.language <> osabst def
R119542:119544 CertiOS.framework.logic.assertion <> Inv def
R119586:119593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R119594:119597 CertiOS.framework.logic.inferules <> satp def
R119623:119625 CertiOS.framework.logic.assertion <> INV def
R119627:119627 CertiOS.framework.proof.invariant_prop <> I var
R119620:119620 CertiOS.framework.proof.invariant_prop <> O var
R119599:119599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119602:119603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119607:119608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119610:119611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119614:119615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119618:119618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119600:119601 CertiOS.framework.proof.invariant_prop <> ge var
R119604:119606 CertiOS.framework.proof.invariant_prop <> le' var
R119609:119609 CertiOS.framework.proof.invariant_prop <> m var
R119612:119613 CertiOS.framework.proof.invariant_prop <> ir var
R119616:119617 CertiOS.framework.proof.invariant_prop <> ls var
R119552:119555 CertiOS.framework.logic.inferules <> satp def
R119580:119582 CertiOS.framework.logic.assertion <> INV def
R119584:119584 CertiOS.framework.proof.invariant_prop <> I var
R119577:119577 CertiOS.framework.proof.invariant_prop <> O var
R119557:119557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119560:119561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119564:119565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119567:119568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119571:119572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119575:119575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119558:119559 CertiOS.framework.proof.invariant_prop <> ge var
R119562:119563 CertiOS.framework.proof.invariant_prop <> le var
R119566:119566 CertiOS.framework.proof.invariant_prop <> m var
R119569:119570 CertiOS.framework.proof.invariant_prop <> ir var
R119573:119574 CertiOS.framework.proof.invariant_prop <> ls var
R119657:119660 CertiOS.framework.logic.inferules <> satp def
R119704:119717 CertiOS.framework.proof.invariant_prop <> INV_irrev_prop thm
R119704:119717 CertiOS.framework.proof.invariant_prop <> INV_irrev_prop thm
prf 119740:119757 <> p_local_ignore_int
R119779:119781 CertiOS.framework.model.memory <> env def
R119789:119791 CertiOS.framework.model.memory <> mem def
R119802:119804 CertiOS.framework.model.language <> isr def
R119824:119830 CertiOS.framework.model.language <> localst def
R119838:119843 CertiOS.framework.model.language <> osabst def
R119853:119855 CertiOS.framework.model.memory <> env def
R119876:119878 CertiOS.framework.model.language <> isr def
R119889:119895 CertiOS.framework.model.language <> localst def
R119910:119913 Coq.Init.Logic <> :type_scope:x_'->'_x not
R119927:119930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R119931:119934 CertiOS.framework.logic.assertion <> asrt ind
R119914:119917 Coq.Init.Datatypes <> list ind
R119919:119926 CertiOS.framework.logic.assertion <> logicvar ind
R119907:119909 CertiOS.framework.auxlibs.Modules <> tid def
R119951:119957 CertiOS.framework.auxlibs.Modules <> addrval def
R120018:120025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R120026:120029 CertiOS.framework.logic.inferules <> satp def
R120059:120065 CertiOS.framework.logic.inferules <> p_local def
R120075:120076 CertiOS.framework.proof.invariant_prop <> lg var
R120073:120073 CertiOS.framework.proof.invariant_prop <> t var
R120067:120071 CertiOS.framework.proof.invariant_prop <> lasrt var
R120056:120056 CertiOS.framework.proof.invariant_prop <> O var
R120031:120031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120034:120035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120039:120040 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120042:120043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120048:120049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120054:120054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120032:120033 CertiOS.framework.proof.invariant_prop <> ge var
R120036:120038 CertiOS.framework.proof.invariant_prop <> le' var
R120041:120041 CertiOS.framework.proof.invariant_prop <> m var
R120044:120047 CertiOS.framework.proof.invariant_prop <> isr' var
R120050:120053 CertiOS.framework.proof.invariant_prop <> aux' var
R119968:119971 CertiOS.framework.logic.inferules <> satp def
R119999:120005 CertiOS.framework.logic.inferules <> p_local def
R120015:120016 CertiOS.framework.proof.invariant_prop <> lg var
R120013:120013 CertiOS.framework.proof.invariant_prop <> t var
R120007:120011 CertiOS.framework.proof.invariant_prop <> lasrt var
R119996:119996 CertiOS.framework.proof.invariant_prop <> O var
R119973:119973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119976:119977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119980:119981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119983:119984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119989:119990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119994:119994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119974:119975 CertiOS.framework.proof.invariant_prop <> ge var
R119978:119979 CertiOS.framework.proof.invariant_prop <> le var
R119982:119982 CertiOS.framework.proof.invariant_prop <> m var
R119985:119988 CertiOS.framework.proof.invariant_prop <> isr0 var
R119991:119993 CertiOS.framework.proof.invariant_prop <> aux var
R120106:120109 CertiOS.framework.logic.inferules <> satp def
R120164:120170 CertiOS.framework.logic.inferules <> p_local def
R120187:120189 CertiOS.framework.logic.assertion <> sat def
R120202:120204 CertiOS.framework.logic.assertion <> sat def
R120202:120204 CertiOS.framework.logic.assertion <> sat def
R120303:120306 CertiOS.framework.logic.inferules <> LINV def
R120359:120380 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R120359:120380 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 120415:120433 <> linvtrue_merge_hold
R120497:120504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R120520:120527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R120617:120624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R120625:120628 CertiOS.framework.logic.inferules <> satp def
R120684:120686 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R120706:120707 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R120693:120696 Coq.Init.Datatypes <> list ind
R120698:120705 CertiOS.framework.logic.assertion <> logicvar ind
R120724:120727 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R120708:120711 CertiOS.framework.logic.inferules <> LINV def
R120721:120723 CertiOS.framework.proof.invariant_prop <> lg' var
R120719:120719 CertiOS.framework.proof.invariant_prop <> t var
R120713:120717 CertiOS.framework.proof.invariant_prop <> lasrt var
R120728:120732 CertiOS.framework.logic.assertion <> Atrue constr
R120660:120664 CertiOS.framework.auxlibs.Maps <> merge meth
R120669:120671 CertiOS.framework.proof.invariant_prop <> Oll var
R120666:120667 CertiOS.framework.proof.invariant_prop <> Ol var
R120630:120630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120632:120633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120636:120637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120650:120651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120654:120655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120657:120657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120631:120631 CertiOS.framework.proof.invariant_prop <> e var
R120634:120635 CertiOS.framework.proof.invariant_prop <> e0 var
R120638:120642 CertiOS.framework.auxlibs.Maps <> merge meth
R120647:120649 CertiOS.framework.proof.invariant_prop <> Mll var
R120644:120645 CertiOS.framework.proof.invariant_prop <> Ml var
R120652:120653 CertiOS.framework.proof.invariant_prop <> i0 var
R120656:120656 CertiOS.framework.proof.invariant_prop <> l var
R120528:120531 CertiOS.framework.logic.inferules <> satp def
R120567:120569 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R120589:120590 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R120576:120579 Coq.Init.Datatypes <> list ind
R120581:120588 CertiOS.framework.logic.assertion <> logicvar ind
R120607:120610 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R120591:120594 CertiOS.framework.logic.inferules <> LINV def
R120604:120606 CertiOS.framework.proof.invariant_prop <> lg' var
R120602:120602 CertiOS.framework.proof.invariant_prop <> t var
R120596:120600 CertiOS.framework.proof.invariant_prop <> lasrt var
R120611:120615 CertiOS.framework.logic.assertion <> Atrue constr
R120553:120555 CertiOS.framework.proof.invariant_prop <> Oll var
R120533:120533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120535:120536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120539:120540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120544:120545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120548:120549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120551:120551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120534:120534 CertiOS.framework.proof.invariant_prop <> e var
R120537:120538 CertiOS.framework.proof.invariant_prop <> e0 var
R120541:120543 CertiOS.framework.proof.invariant_prop <> Mll var
R120546:120547 CertiOS.framework.proof.invariant_prop <> i0 var
R120550:120550 CertiOS.framework.proof.invariant_prop <> l var
R120505:120512 CertiOS.framework.auxlibs.Maps <> disjoint def
R120517:120519 CertiOS.framework.proof.invariant_prop <> Oll var
R120514:120515 CertiOS.framework.proof.invariant_prop <> Ol var
R120482:120489 CertiOS.framework.auxlibs.Maps <> disjoint def
R120494:120496 CertiOS.framework.proof.invariant_prop <> Mll var
R120491:120492 CertiOS.framework.proof.invariant_prop <> Ml var
R120762:120765 CertiOS.framework.logic.inferules <> satp def
R120884:120888 CertiOS.framework.auxlibs.Maps <> merge meth
R120884:120888 CertiOS.framework.auxlibs.Maps <> merge meth
R120920:120924 CertiOS.framework.auxlibs.Maps <> merge meth
R120920:120924 CertiOS.framework.auxlibs.Maps <> merge meth
R120970:120988 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R120970:120988 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R120970:120988 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R120970:120988 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121003:121007 CertiOS.framework.auxlibs.Maps <> merge meth
R121003:121007 CertiOS.framework.auxlibs.Maps <> merge meth
R121027:121045 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121027:121045 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121027:121045 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121027:121045 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121067:121094 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R121067:121094 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R121111:121122 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121111:121122 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121147:121158 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121147:121158 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121169:121180 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121169:121180 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121196:121204 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121196:121204 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121222:121247 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R121222:121247 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R121268:121286 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121268:121286 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121268:121286 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121268:121286 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121301:121305 CertiOS.framework.auxlibs.Maps <> merge meth
R121301:121305 CertiOS.framework.auxlibs.Maps <> merge meth
R121325:121343 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121325:121343 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121325:121343 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121325:121343 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> disjoint_merge_comm thm
R121365:121395 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R121365:121395 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R121412:121423 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121412:121423 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121448:121459 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121448:121459 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121470:121481 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121470:121481 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R121498:121506 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121498:121506 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121524:121552 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R121524:121552 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R121602:121610 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121619:121626 CertiOS.tactics.basetac.join_lib <> join_emp thm
R121602:121610 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121619:121626 CertiOS.tactics.basetac.join_lib <> join_emp thm
R121643:121651 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121660:121667 CertiOS.tactics.basetac.join_lib <> join_emp thm
R121643:121651 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121660:121667 CertiOS.tactics.basetac.join_lib <> join_emp thm
prf 121706:121726 <> curlinv_p_local_trans
R121813:121820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R121821:121827 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121830:121830 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121836:121836 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121839:121839 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121845:121845 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121848:121855 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R121871:121880 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R121856:121859 CertiOS.framework.auxlibs.Maps <> join meth
R121870:121870 CertiOS.framework.proof.invariant_prop <> M var
R121896:121905 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R121881:121884 CertiOS.framework.auxlibs.Maps <> join meth
R121895:121895 CertiOS.framework.proof.invariant_prop <> O var
R121906:121909 CertiOS.framework.logic.inferules <> satp def
R121943:121949 CertiOS.framework.logic.inferules <> p_local def
R121957:121957 CertiOS.framework.proof.invariant_prop <> t var
R121951:121955 CertiOS.framework.proof.invariant_prop <> lasrt var
R121911:121911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121914:121915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121918:121919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121925:121926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121929:121930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121934:121934 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121912:121913 CertiOS.framework.proof.invariant_prop <> ge var
R121916:121917 CertiOS.framework.proof.invariant_prop <> le var
R121927:121928 CertiOS.framework.proof.invariant_prop <> ir var
R121931:121933 CertiOS.framework.proof.invariant_prop <> aux var
R121768:121771 CertiOS.framework.logic.inferules <> satp def
R121797:121803 CertiOS.framework.logic.inferules <> CurLINV def
R121811:121811 CertiOS.framework.proof.invariant_prop <> t var
R121805:121809 CertiOS.framework.proof.invariant_prop <> lasrt var
R121794:121794 CertiOS.framework.proof.invariant_prop <> O var
R121773:121773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121776:121777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121780:121781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121783:121784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121787:121788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121792:121792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121774:121775 CertiOS.framework.proof.invariant_prop <> ge var
R121778:121779 CertiOS.framework.proof.invariant_prop <> le var
R121782:121782 CertiOS.framework.proof.invariant_prop <> M var
R121785:121786 CertiOS.framework.proof.invariant_prop <> ir var
R121789:121791 CertiOS.framework.proof.invariant_prop <> aux var
R121990:121993 CertiOS.framework.logic.inferules <> satp def
R122016:122021 CertiOS.framework.proof.invariant_prop <> absopx def
R122016:122021 CertiOS.framework.proof.invariant_prop <> absopx def
R122042:122048 CertiOS.framework.logic.inferules <> p_local def
R122060:122066 CertiOS.framework.logic.inferules <> CurLINV def
R122133:122136 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R122125:122130 CertiOS.framework.logic.inferules <> CurTid def
R122137:122140 CertiOS.framework.logic.inferules <> LINV def
R122133:122136 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R122125:122130 CertiOS.framework.logic.inferules <> CurTid def
R122137:122140 CertiOS.framework.logic.inferules <> LINV def
R122217:122220 CertiOS.framework.logic.inferules <> satp def
R122313:122319 CertiOS.framework.logic.assertion <> empabst syndef
R122313:122319 CertiOS.framework.logic.assertion <> empabst syndef
R122353:122360 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122353:122360 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122408:122415 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122408:122415 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122432:122439 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122432:122439 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122468:122476 CertiOS.framework.logic.assertion <> emposabst def
R122552:122560 CertiOS.tactics.basetac.join_lib <> join_comm thm
R122570:122577 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122552:122560 CertiOS.tactics.basetac.join_lib <> join_comm thm
R122570:122577 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122594:122602 CertiOS.tactics.basetac.join_lib <> join_comm thm
R122594:122602 CertiOS.tactics.basetac.join_lib <> join_comm thm
R122613:122620 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122613:122620 CertiOS.tactics.basetac.join_lib <> join_emp thm
R122638:122662 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R122638:122662 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
prf 122714:122739 <> inv_noisr_irrev_prop_enint
R122858:122866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R122961:122964 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R122897:122897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122900:122901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122905:122906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122908:122909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122926:122927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122943:122945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122950:122951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122955:122955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122898:122899 CertiOS.framework.proof.invariant_prop <> ge var
R122902:122904 CertiOS.framework.proof.invariant_prop <> le' var
R122907:122907 CertiOS.framework.proof.invariant_prop <> M var
R122910:122915 CertiOS.framework.model.language <> isrupd def
R122922:122925 Coq.Init.Datatypes <> true constr
R122920:122920 CertiOS.framework.proof.invariant_prop <> i var
R122917:122918 CertiOS.framework.proof.invariant_prop <> ir var
R122928:122928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122932:122932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122938:122938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122942:122942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122929:122931 CertiOS.framework.proof.invariant_prop <> ie' var
R122934:122935 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R122933:122933 CertiOS.framework.proof.invariant_prop <> i var
R122936:122937 CertiOS.framework.proof.invariant_prop <> is var
R122939:122941 CertiOS.framework.proof.invariant_prop <> cs' var
R122946:122949 CertiOS.framework.proof.invariant_prop <> abst var
R122952:122954 CertiOS.framework.proof.invariant_prop <> op' var
R122965:122977 CertiOS.framework.logic.assertion <> starinv_noisr def
R122985:122985 CertiOS.framework.proof.invariant_prop <> n var
R122981:122983 CertiOS.framework.proof.invariant_prop <> low var
R122979:122979 CertiOS.framework.proof.invariant_prop <> I var
R122833:122836 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R122796:122796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122799:122800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122803:122804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122806:122807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122810:122811 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122822:122823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122828:122829 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122832:122832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122797:122798 CertiOS.framework.proof.invariant_prop <> ge var
R122801:122802 CertiOS.framework.proof.invariant_prop <> le var
R122805:122805 CertiOS.framework.proof.invariant_prop <> M var
R122808:122809 CertiOS.framework.proof.invariant_prop <> ir var
R122812:122812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122815:122815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122818:122818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122821:122821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122813:122814 CertiOS.framework.proof.invariant_prop <> ie var
R122816:122817 CertiOS.framework.proof.invariant_prop <> is var
R122819:122820 CertiOS.framework.proof.invariant_prop <> cs var
R122824:122827 CertiOS.framework.proof.invariant_prop <> abst var
R122830:122831 CertiOS.framework.proof.invariant_prop <> op var
R122837:122849 CertiOS.framework.logic.assertion <> starinv_noisr def
R122857:122857 CertiOS.framework.proof.invariant_prop <> n var
R122853:122855 CertiOS.framework.proof.invariant_prop <> low var
R122851:122851 CertiOS.framework.proof.invariant_prop <> I var
R123137:123140 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R123094:123094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123097:123098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123102:123103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123105:123106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123109:123110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123125:123126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123131:123132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123136:123136 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123111:123111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123115:123116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123119:123120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123124:123124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123141:123146 CertiOS.framework.logic.assertion <> getinv proj
R123137:123140 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R123094:123094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123097:123098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123102:123103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123105:123106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123109:123110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123125:123126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123131:123132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123136:123136 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123111:123111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123115:123116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123119:123120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123124:123124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123141:123146 CertiOS.framework.logic.assertion <> getinv proj
R123168:123180 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R123168:123180 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R123193:123196 CertiOS.framework.logic.assertion <> invp proj
R123193:123196 CertiOS.framework.logic.assertion <> invp proj
R123229:123232 CertiOS.framework.logic.assertion <> prec proj
R123229:123232 CertiOS.framework.logic.assertion <> prec proj
R123270:123292 CertiOS.framework.logic.assertion <> inv_isr_prop def
R123348:123358 CertiOS.framework.logic.assertion <> set_isisr_s def
R123375:123383 CertiOS.framework.logic.assertion <> get_isr_s def
R123386:123393 CertiOS.framework.logic.assertion <> get_is_s def
R123496:123498 CertiOS.framework.logic.assertion <> sat def
R123513:123515 CertiOS.framework.logic.assertion <> sat def
R123513:123515 CertiOS.framework.logic.assertion <> sat def
R123807:123810 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R123765:123765 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123768:123769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123773:123774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123777:123778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123781:123782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123797:123798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123801:123802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123806:123806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123783:123783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123787:123788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123791:123792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123796:123796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123811:123816 CertiOS.framework.logic.assertion <> getinv proj
R123807:123810 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R123765:123765 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123768:123769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123773:123774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123777:123778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123781:123782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123797:123798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123801:123802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123806:123806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123783:123783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123787:123788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123791:123792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123796:123796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R123811:123816 CertiOS.framework.logic.assertion <> getinv proj
R123838:123850 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R123838:123850 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R123863:123866 CertiOS.framework.logic.assertion <> invp proj
R123863:123866 CertiOS.framework.logic.assertion <> invp proj
R123899:123902 CertiOS.framework.logic.assertion <> prec proj
R123899:123902 CertiOS.framework.logic.assertion <> prec proj
R123940:123962 CertiOS.framework.logic.assertion <> inv_isr_prop def
R124019:124029 CertiOS.framework.logic.assertion <> set_isisr_s def
R124047:124055 CertiOS.framework.logic.assertion <> get_isr_s def
R124058:124065 CertiOS.framework.logic.assertion <> get_is_s def
R124142:124150 CertiOS.framework.proof.step_prop <> <> lib
prf 124160:124181 <> starinvnoisr_prop1_rev
R124263:124295 CertiOS.framework.logic.assertion <> ::x_'==>'_x not
R124319:124319 CertiOS.framework.logic.assertion <> ::x_'==>'_x not
R124296:124308 CertiOS.framework.logic.assertion <> starinv_noisr def
R124315:124315 Coq.Init.Datatypes <> S constr
R124317:124317 CertiOS.framework.proof.invariant_prop <> j var
R124312:124312 CertiOS.framework.proof.invariant_prop <> i var
R124310:124310 CertiOS.framework.proof.invariant_prop <> I var
R124205:124205 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R124225:124229 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R124206:124218 CertiOS.framework.logic.assertion <> starinv_noisr def
R124224:124224 CertiOS.framework.proof.invariant_prop <> j var
R124222:124222 CertiOS.framework.proof.invariant_prop <> i var
R124220:124220 CertiOS.framework.proof.invariant_prop <> I var
R124231:124243 CertiOS.framework.logic.assertion <> starinv_noisr def
R124248:124248 Coq.Init.Datatypes <> S constr
R124252:124252 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124251:124251 CertiOS.framework.proof.invariant_prop <> i var
R124253:124253 CertiOS.framework.proof.invariant_prop <> j var
R124245:124245 CertiOS.framework.proof.invariant_prop <> I var
R124390:124392 Coq.Init.Logic <> :type_scope:x_'='_x not
R124387:124387 Coq.Init.Datatypes <> S constr
R124393:124393 Coq.Init.Datatypes <> S constr
R124397:124397 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124390:124392 Coq.Init.Logic <> :type_scope:x_'='_x not
R124387:124387 Coq.Init.Datatypes <> S constr
R124393:124393 Coq.Init.Datatypes <> S constr
R124397:124397 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124517:124519 Coq.Init.Logic <> :type_scope:x_'='_x not
R124506:124506 Coq.Init.Datatypes <> S constr
R124510:124512 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124513:124513 Coq.Init.Datatypes <> S constr
R124520:124520 Coq.Init.Datatypes <> S constr
R124526:124528 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124523:124523 Coq.Init.Datatypes <> S constr
R124517:124519 Coq.Init.Logic <> :type_scope:x_'='_x not
R124506:124506 Coq.Init.Datatypes <> S constr
R124510:124512 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124513:124513 Coq.Init.Datatypes <> S constr
R124520:124520 Coq.Init.Datatypes <> S constr
R124526:124528 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R124523:124523 Coq.Init.Datatypes <> S constr
prf 124605:124623 <> invisr_imply_noisr'
R124666:124667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124706:124715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124764:124772 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124800:124803 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R124773:124773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124776:124777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124780:124781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124783:124784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124787:124788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124792:124793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124795:124796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124799:124799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124774:124775 CertiOS.framework.proof.invariant_prop <> ge var
R124778:124779 CertiOS.framework.proof.invariant_prop <> le var
R124782:124782 CertiOS.framework.proof.invariant_prop <> M var
R124785:124786 CertiOS.framework.proof.invariant_prop <> ir var
R124789:124791 CertiOS.framework.proof.invariant_prop <> aux var
R124794:124794 CertiOS.framework.proof.invariant_prop <> O var
R124797:124798 CertiOS.framework.proof.invariant_prop <> ab var
R124804:124816 CertiOS.framework.logic.assertion <> starinv_noisr def
R124822:124822 CertiOS.framework.proof.invariant_prop <> j var
R124818:124818 CertiOS.framework.proof.invariant_prop <> I var
R124743:124746 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R124716:124716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124719:124720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124723:124724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124726:124727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124730:124731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124735:124736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124738:124739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124742:124742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124717:124718 CertiOS.framework.proof.invariant_prop <> ge var
R124721:124722 CertiOS.framework.proof.invariant_prop <> le var
R124725:124725 CertiOS.framework.proof.invariant_prop <> M var
R124728:124729 CertiOS.framework.proof.invariant_prop <> ir var
R124732:124734 CertiOS.framework.proof.invariant_prop <> aux var
R124737:124737 CertiOS.framework.proof.invariant_prop <> O var
R124740:124741 CertiOS.framework.proof.invariant_prop <> ab var
R124747:124757 CertiOS.framework.logic.assertion <> starinv_isr def
R124763:124763 CertiOS.framework.proof.invariant_prop <> j var
R124759:124759 CertiOS.framework.proof.invariant_prop <> I var
R124679:124681 CertiOS.framework.model.language <> hid def
R124690:124693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124698:124700 Coq.Init.Logic <> :type_scope:x_'='_x not
R124694:124695 CertiOS.framework.proof.invariant_prop <> ir var
R124697:124697 CertiOS.framework.proof.invariant_prop <> i var
R124701:124705 Coq.Init.Datatypes <> false constr
R124685:124688 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R124684:124684 CertiOS.framework.proof.invariant_prop <> i var
R124689:124689 CertiOS.framework.proof.invariant_prop <> j var
R124870:124882 CertiOS.framework.logic.assertion <> starinv_noisr def
R124894:124904 CertiOS.framework.logic.assertion <> starinv_isr def
R125066:125067 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125066:125067 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125239:125251 CertiOS.framework.proof.rulesoundlib <> starinv_prop1 thm
R125239:125251 CertiOS.framework.proof.rulesoundlib <> starinv_prop1 thm
R125416:125416 Coq.Init.Datatypes <> S constr
R125416:125416 Coq.Init.Datatypes <> S constr
R125445:125448 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125442:125442 Coq.Init.Datatypes <> S constr
R125449:125449 Coq.Init.Datatypes <> S constr
R125445:125448 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125442:125442 Coq.Init.Datatypes <> S constr
R125449:125449 Coq.Init.Datatypes <> S constr
R125607:125609 CertiOS.framework.model.language <> hid def
R125618:125621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R125626:125628 Coq.Init.Logic <> :type_scope:x_'='_x not
R125625:125625 CertiOS.framework.proof.invariant_prop <> i var
R125629:125633 Coq.Init.Datatypes <> false constr
R125613:125616 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125612:125612 CertiOS.framework.proof.invariant_prop <> i var
R125607:125609 CertiOS.framework.model.language <> hid def
R125618:125621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R125626:125628 Coq.Init.Logic <> :type_scope:x_'='_x not
R125625:125625 CertiOS.framework.proof.invariant_prop <> i var
R125629:125633 Coq.Init.Datatypes <> false constr
R125613:125616 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R125612:125612 CertiOS.framework.proof.invariant_prop <> i var
R125722:125743 CertiOS.framework.proof.invariant_prop <> starinvnoisr_prop1_rev thm
R125722:125743 CertiOS.framework.proof.invariant_prop <> starinvnoisr_prop1_rev thm
R125757:125757 Coq.Init.Datatypes <> S constr
R125761:125763 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R125774:125774 Coq.Init.Datatypes <> S constr
R125774:125774 Coq.Init.Datatypes <> S constr
R125757:125757 Coq.Init.Datatypes <> S constr
R125761:125763 Coq.Init.Peano <> :nat_scope:x_'+'_x not
prf 125831:125846 <> isr_false_inv_eq
R125907:125914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R125929:125937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R125986:125994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126049:126052 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R125995:125995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125998:125998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126001:126001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126003:126004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126021:126022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126038:126038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126040:126040 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126043:126043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125996:125997 CertiOS.framework.proof.invariant_prop <> ge var
R125999:126000 CertiOS.framework.proof.invariant_prop <> le var
R126002:126002 CertiOS.framework.proof.invariant_prop <> M var
R126005:126010 CertiOS.framework.model.language <> isrupd def
R126017:126020 Coq.Init.Datatypes <> true constr
R126015:126015 CertiOS.framework.proof.invariant_prop <> i var
R126012:126013 CertiOS.framework.proof.invariant_prop <> ir var
R126023:126023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126027:126027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126033:126033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126037:126037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126024:126026 CertiOS.framework.proof.invariant_prop <> ie' var
R126029:126030 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R126028:126028 CertiOS.framework.proof.invariant_prop <> i var
R126031:126032 CertiOS.framework.proof.invariant_prop <> is var
R126034:126036 CertiOS.framework.proof.invariant_prop <> cs' var
R126039:126039 CertiOS.framework.proof.invariant_prop <> O var
R126041:126042 CertiOS.framework.proof.invariant_prop <> ab var
R126053:126064 CertiOS.framework.logic.assertion <> invlth_noisr def
R126070:126070 CertiOS.framework.proof.invariant_prop <> i var
R126066:126066 CertiOS.framework.proof.invariant_prop <> I var
R125966:125969 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R125938:125938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125941:125941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125944:125944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125946:125946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125949:125949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125960:125960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125962:125962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125965:125965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125939:125940 CertiOS.framework.proof.invariant_prop <> ge var
R125942:125943 CertiOS.framework.proof.invariant_prop <> le var
R125945:125945 CertiOS.framework.proof.invariant_prop <> M var
R125947:125948 CertiOS.framework.proof.invariant_prop <> ir var
R125950:125950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125953:125953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125956:125956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125959:125959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125951:125952 CertiOS.framework.proof.invariant_prop <> ie var
R125954:125955 CertiOS.framework.proof.invariant_prop <> is var
R125957:125958 CertiOS.framework.proof.invariant_prop <> cs var
R125961:125961 CertiOS.framework.proof.invariant_prop <> O var
R125963:125964 CertiOS.framework.proof.invariant_prop <> ab var
R125970:125979 CertiOS.framework.logic.assertion <> invlth_isr def
R125985:125985 CertiOS.framework.proof.invariant_prop <> i var
R125981:125981 CertiOS.framework.proof.invariant_prop <> I var
R125915:125923 CertiOS.framework.model.language <> higherint def
R125928:125928 CertiOS.framework.proof.invariant_prop <> i var
R125925:125926 CertiOS.framework.proof.invariant_prop <> ir var
R125902:125902 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R125901:125901 CertiOS.framework.proof.invariant_prop <> i var
R125903:125906 CertiOS.framework.model.language <> INUM def
R126133:126144 CertiOS.framework.logic.assertion <> invlth_noisr def
R126161:126170 CertiOS.framework.logic.assertion <> invlth_isr def
R126190:126190 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R126190:126190 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R126227:126252 CertiOS.framework.proof.invariant_prop <> inv_noisr_irrev_prop_enint thm
R126264:126282 CertiOS.framework.proof.invariant_prop <> invisr_imply_noisr' thm
R126227:126252 CertiOS.framework.proof.invariant_prop <> inv_noisr_irrev_prop_enint thm
R126264:126282 CertiOS.framework.proof.invariant_prop <> invisr_imply_noisr' thm
prf 126305:126321 <> invlth_add_sinum'
R126384:126391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126405:126412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126426:126433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126486:126494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126539:126546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126572:126575 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R126547:126547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126550:126550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126553:126553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126557:126557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126560:126560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126564:126564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126568:126568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126571:126571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126548:126549 CertiOS.framework.proof.invariant_prop <> ge var
R126551:126552 CertiOS.framework.proof.invariant_prop <> le var
R126554:126556 CertiOS.framework.proof.invariant_prop <> M'' var
R126558:126559 CertiOS.framework.proof.invariant_prop <> ir var
R126561:126563 CertiOS.framework.proof.invariant_prop <> aux var
R126565:126567 CertiOS.framework.proof.invariant_prop <> O'' var
R126569:126570 CertiOS.framework.proof.invariant_prop <> ab var
R126601:126603 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R126576:126585 CertiOS.framework.logic.assertion <> invlth_isr def
R126597:126600 CertiOS.framework.model.language <> INUM def
R126590:126590 CertiOS.framework.proof.invariant_prop <> i var
R126587:126587 CertiOS.framework.proof.invariant_prop <> I var
R126604:126609 CertiOS.framework.logic.assertion <> getinv proj
R126612:126612 CertiOS.framework.proof.invariant_prop <> I var
R126615:126615 Coq.Init.Datatypes <> S constr
R126617:126620 CertiOS.framework.model.language <> INUM def
R126516:126519 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R126495:126495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126498:126498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126501:126501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126503:126503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126506:126506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126510:126510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126512:126512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126515:126515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126496:126497 CertiOS.framework.proof.invariant_prop <> ge var
R126499:126500 CertiOS.framework.proof.invariant_prop <> le var
R126502:126502 CertiOS.framework.proof.invariant_prop <> M var
R126504:126505 CertiOS.framework.proof.invariant_prop <> ir var
R126507:126509 CertiOS.framework.proof.invariant_prop <> aux var
R126511:126511 CertiOS.framework.proof.invariant_prop <> O var
R126513:126514 CertiOS.framework.proof.invariant_prop <> ab var
R126520:126525 CertiOS.framework.logic.assertion <> getinv proj
R126528:126528 CertiOS.framework.proof.invariant_prop <> I var
R126531:126531 Coq.Init.Datatypes <> S constr
R126533:126536 CertiOS.framework.model.language <> INUM def
R126457:126460 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R126434:126434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126437:126437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126440:126440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126443:126443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126446:126446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126450:126450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126453:126453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126456:126456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126435:126436 CertiOS.framework.proof.invariant_prop <> ge var
R126438:126439 CertiOS.framework.proof.invariant_prop <> le var
R126441:126442 CertiOS.framework.proof.invariant_prop <> M' var
R126444:126445 CertiOS.framework.proof.invariant_prop <> ir var
R126447:126449 CertiOS.framework.proof.invariant_prop <> aux var
R126451:126452 CertiOS.framework.proof.invariant_prop <> O' var
R126454:126455 CertiOS.framework.proof.invariant_prop <> ab var
R126461:126470 CertiOS.framework.logic.assertion <> invlth_isr def
R126482:126485 CertiOS.framework.model.language <> INUM def
R126475:126475 CertiOS.framework.proof.invariant_prop <> i var
R126472:126472 CertiOS.framework.proof.invariant_prop <> I var
R126413:126416 CertiOS.framework.auxlibs.Maps <> join meth
R126423:126425 CertiOS.framework.proof.invariant_prop <> O'' var
R126420:126421 CertiOS.framework.proof.invariant_prop <> O' var
R126418:126418 CertiOS.framework.proof.invariant_prop <> O var
R126392:126395 CertiOS.framework.auxlibs.Maps <> join meth
R126402:126404 CertiOS.framework.proof.invariant_prop <> M'' var
R126399:126400 CertiOS.framework.proof.invariant_prop <> M' var
R126397:126397 CertiOS.framework.proof.invariant_prop <> M var
R126377:126379 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R126376:126376 CertiOS.framework.proof.invariant_prop <> i var
R126380:126383 CertiOS.framework.model.language <> INUM def
R126721:126730 CertiOS.framework.logic.assertion <> invlth_isr def
prf 126835:126846 <> isr_false_eq
R126878:126882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R126885:126887 Coq.Init.Logic <> :type_scope:x_'='_x not
R126883:126884 CertiOS.framework.proof.invariant_prop <> ir var
R126888:126893 CertiOS.framework.model.language <> isrupd def
R126916:126920 Coq.Init.Datatypes <> false constr
R126914:126914 CertiOS.framework.proof.invariant_prop <> i var
R126896:126901 CertiOS.framework.model.language <> isrupd def
R126908:126911 Coq.Init.Datatypes <> true constr
R126906:126906 CertiOS.framework.proof.invariant_prop <> i var
R126903:126904 CertiOS.framework.proof.invariant_prop <> ir var
R126870:126872 Coq.Init.Logic <> :type_scope:x_'='_x not
R126866:126867 CertiOS.framework.proof.invariant_prop <> ir var
R126869:126869 CertiOS.framework.proof.invariant_prop <> i var
R126873:126877 Coq.Init.Datatypes <> false constr
R126949:126969 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R126949:126969 CertiOS.framework.auxlibs.Coqlib <> extensionality prfax
R126991:126996 CertiOS.framework.model.language <> isrupd def
R127011:127017 Coq.Arith.EqNat <> beq_nat syndef
R127011:127017 Coq.Arith.EqNat <> beq_nat syndef
R127054:127059 Coq.Init.Logic <> eq_sym thm
R127054:127059 Coq.Init.Logic <> eq_sym thm
R127079:127090 Coq.Arith.EqNat <> beq_nat_true thm
R127079:127090 Coq.Arith.EqNat <> beq_nat_true thm
prf 127137:127150 <> isr_false_sat1
R127200:127202 Coq.Init.Datatypes <> nat ind
R127229:127236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127303:127310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127341:127345 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R127311:127311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127314:127314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127317:127317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127319:127319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127322:127322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127335:127335 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127337:127337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127340:127340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127312:127313 CertiOS.framework.proof.invariant_prop <> ge var
R127315:127316 CertiOS.framework.proof.invariant_prop <> le var
R127318:127318 CertiOS.framework.proof.invariant_prop <> M var
R127320:127321 CertiOS.framework.proof.invariant_prop <> ir var
R127323:127323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127327:127327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127330:127330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127334:127334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127324:127326 CertiOS.framework.proof.invariant_prop <> ie' var
R127328:127329 CertiOS.framework.proof.invariant_prop <> is var
R127331:127333 CertiOS.framework.proof.invariant_prop <> cs' var
R127336:127336 CertiOS.framework.proof.invariant_prop <> O var
R127338:127339 CertiOS.framework.proof.invariant_prop <> ab var
R127346:127351 CertiOS.framework.logic.assertion <> getinv proj
R127354:127354 CertiOS.framework.proof.invariant_prop <> I var
R127356:127356 CertiOS.framework.proof.invariant_prop <> j var
R127287:127290 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R127237:127237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127240:127240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127243:127243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127245:127245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127262:127262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127276:127276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127278:127278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127281:127281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127238:127239 CertiOS.framework.proof.invariant_prop <> ge var
R127241:127242 CertiOS.framework.proof.invariant_prop <> le var
R127244:127244 CertiOS.framework.proof.invariant_prop <> M var
R127246:127251 CertiOS.framework.model.language <> isrupd def
R127258:127261 Coq.Init.Datatypes <> true constr
R127256:127256 CertiOS.framework.proof.invariant_prop <> i var
R127253:127254 CertiOS.framework.proof.invariant_prop <> ir var
R127263:127263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127266:127266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127272:127272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127275:127275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127264:127265 CertiOS.framework.proof.invariant_prop <> ie var
R127268:127269 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R127267:127267 CertiOS.framework.proof.invariant_prop <> i var
R127270:127271 CertiOS.framework.proof.invariant_prop <> is var
R127273:127274 CertiOS.framework.proof.invariant_prop <> cs var
R127277:127277 CertiOS.framework.proof.invariant_prop <> O var
R127279:127280 CertiOS.framework.proof.invariant_prop <> ab var
R127291:127296 CertiOS.framework.logic.assertion <> getinv proj
R127299:127299 CertiOS.framework.proof.invariant_prop <> I var
R127301:127301 CertiOS.framework.proof.invariant_prop <> j var
R127221:127223 Coq.Init.Logic <> :type_scope:x_'='_x not
R127217:127218 CertiOS.framework.proof.invariant_prop <> ir var
R127220:127220 CertiOS.framework.proof.invariant_prop <> i var
R127224:127228 Coq.Init.Datatypes <> false constr
R127399:127410 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
R127399:127410 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
R127427:127439 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R127427:127439 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R127450:127453 CertiOS.framework.logic.assertion <> invp proj
R127450:127453 CertiOS.framework.logic.assertion <> invp proj
R127471:127474 CertiOS.framework.logic.assertion <> prec proj
R127471:127474 CertiOS.framework.logic.assertion <> prec proj
R127651:127662 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
R127651:127662 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
R127651:127662 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
R127651:127662 CertiOS.framework.proof.invariant_prop <> isr_false_eq thm
prf 127718:127733 <> le_beq_nat_false
R127756:127759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R127771:127773 Coq.Init.Logic <> :type_scope:x_'='_x not
R127760:127766 Coq.Arith.EqNat <> beq_nat syndef
R127770:127770 CertiOS.framework.proof.invariant_prop <> j var
R127768:127768 CertiOS.framework.proof.invariant_prop <> i var
R127774:127778 Coq.Init.Datatypes <> false constr
R127752:127754 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R127751:127751 CertiOS.framework.proof.invariant_prop <> i var
R127755:127755 CertiOS.framework.proof.invariant_prop <> j var
prf 127919:127930 <> isr_true_aux
R128009:128016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128022:128030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128114:128122 Coq.Init.Logic <> :type_scope:x_'->'_x not
R128163:128166 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R128123:128123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128126:128127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128130:128131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128133:128134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128137:128139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128152:128153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128158:128159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128162:128162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128124:128125 CertiOS.framework.proof.invariant_prop <> ge var
R128128:128129 CertiOS.framework.proof.invariant_prop <> le var
R128132:128132 CertiOS.framework.proof.invariant_prop <> M var
R128135:128136 CertiOS.framework.proof.invariant_prop <> ir var
R128140:128140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128144:128144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128147:128147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128151:128151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128141:128143 CertiOS.framework.proof.invariant_prop <> ie' var
R128145:128146 CertiOS.framework.proof.invariant_prop <> is var
R128148:128150 CertiOS.framework.proof.invariant_prop <> cs' var
R128154:128157 CertiOS.framework.proof.invariant_prop <> abst var
R128160:128161 CertiOS.framework.proof.invariant_prop <> op var
R128167:128177 CertiOS.framework.logic.assertion <> starinv_isr def
R128183:128183 CertiOS.framework.proof.invariant_prop <> n var
R128181:128181 CertiOS.framework.proof.invariant_prop <> j var
R128179:128179 CertiOS.framework.proof.invariant_prop <> I var
R128093:128096 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R128031:128031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128034:128035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128038:128039 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128041:128044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128061:128063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128077:128078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128083:128084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128087:128087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128032:128033 CertiOS.framework.proof.invariant_prop <> ge var
R128036:128037 CertiOS.framework.proof.invariant_prop <> le var
R128040:128040 CertiOS.framework.proof.invariant_prop <> M var
R128045:128050 CertiOS.framework.model.language <> isrupd def
R128057:128060 Coq.Init.Datatypes <> true constr
R128055:128055 CertiOS.framework.proof.invariant_prop <> i var
R128052:128053 CertiOS.framework.proof.invariant_prop <> ir var
R128064:128064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128067:128067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128073:128073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128076:128076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R128065:128066 CertiOS.framework.proof.invariant_prop <> ie var
R128069:128070 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R128068:128068 CertiOS.framework.proof.invariant_prop <> i var
R128071:128072 CertiOS.framework.proof.invariant_prop <> is var
R128074:128075 CertiOS.framework.proof.invariant_prop <> cs var
R128079:128082 CertiOS.framework.proof.invariant_prop <> abst var
R128085:128086 CertiOS.framework.proof.invariant_prop <> op var
R128097:128107 CertiOS.framework.logic.assertion <> starinv_isr def
R128113:128113 CertiOS.framework.proof.invariant_prop <> n var
R128111:128111 CertiOS.framework.proof.invariant_prop <> j var
R128109:128109 CertiOS.framework.proof.invariant_prop <> I var
R128018:128020 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R128017:128017 CertiOS.framework.proof.invariant_prop <> i var
R128021:128021 CertiOS.framework.proof.invariant_prop <> j var
R128001:128003 Coq.Init.Logic <> :type_scope:x_'='_x not
R127997:127998 CertiOS.framework.proof.invariant_prop <> ir var
R128000:128000 CertiOS.framework.proof.invariant_prop <> i var
R128004:128008 Coq.Init.Datatypes <> false constr
R128387:128402 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128387:128402 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128387:128402 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128387:128402 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128563:128578 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128563:128578 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128563:128578 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128563:128578 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128603:128615 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R128603:128615 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R128626:128629 CertiOS.framework.logic.assertion <> invp proj
R128626:128629 CertiOS.framework.logic.assertion <> invp proj
R128641:128654 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R128641:128654 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R128859:128874 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128859:128874 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128859:128874 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128859:128874 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R128993:128998 CertiOS.framework.logic.assertion <> empmem syndef
R129004:129010 CertiOS.framework.logic.assertion <> empabst syndef
R128993:128998 CertiOS.framework.logic.assertion <> empmem syndef
R129004:129010 CertiOS.framework.logic.assertion <> empabst syndef
R129075:129090 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R129075:129090 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R129075:129090 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R129075:129090 CertiOS.framework.proof.invariant_prop <> le_beq_nat_false thm
R129115:129128 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R129115:129128 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R129197:129199 Coq.Init.Datatypes <> nil constr
R129197:129199 Coq.Init.Datatypes <> nil constr
R129210:129214 Coq.Init.Datatypes <> false constr
R129210:129214 Coq.Init.Datatypes <> false constr
prf 129229:129241 <> isr_true_S_i'
R129300:129306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129314:129321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129334:129341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129443:129449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129480:129483 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R129450:129450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129453:129453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129456:129456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129458:129458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129461:129461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129474:129474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129476:129476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129479:129479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129451:129452 CertiOS.framework.proof.invariant_prop <> ge var
R129454:129455 CertiOS.framework.proof.invariant_prop <> le var
R129457:129457 CertiOS.framework.proof.invariant_prop <> M var
R129459:129460 CertiOS.framework.proof.invariant_prop <> ir var
R129462:129462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129466:129466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129469:129469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129473:129473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129463:129465 CertiOS.framework.proof.invariant_prop <> ie' var
R129467:129468 CertiOS.framework.proof.invariant_prop <> is var
R129470:129472 CertiOS.framework.proof.invariant_prop <> cs' var
R129475:129475 CertiOS.framework.proof.invariant_prop <> O var
R129477:129478 CertiOS.framework.proof.invariant_prop <> ab var
R129508:129511 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R129484:129493 CertiOS.framework.logic.assertion <> invlth_isr def
R129507:129507 CertiOS.framework.proof.invariant_prop <> j var
R129499:129499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R129498:129498 CertiOS.framework.proof.invariant_prop <> i var
R129495:129495 CertiOS.framework.proof.invariant_prop <> I var
R129512:129517 CertiOS.framework.logic.assertion <> getinv proj
R129520:129520 CertiOS.framework.proof.invariant_prop <> I var
R129523:129523 Coq.Init.Datatypes <> S constr
R129525:129528 CertiOS.framework.model.language <> INUM def
R129392:129395 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R129342:129342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129345:129345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129348:129348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129350:129350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129367:129367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129381:129381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129383:129383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129386:129386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129343:129344 CertiOS.framework.proof.invariant_prop <> ge var
R129346:129347 CertiOS.framework.proof.invariant_prop <> le var
R129349:129349 CertiOS.framework.proof.invariant_prop <> M var
R129351:129356 CertiOS.framework.model.language <> isrupd def
R129363:129366 Coq.Init.Datatypes <> true constr
R129361:129361 CertiOS.framework.proof.invariant_prop <> i var
R129358:129359 CertiOS.framework.proof.invariant_prop <> ir var
R129368:129368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129371:129371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129377:129377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129380:129380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129369:129370 CertiOS.framework.proof.invariant_prop <> ie var
R129373:129374 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R129372:129372 CertiOS.framework.proof.invariant_prop <> i var
R129375:129376 CertiOS.framework.proof.invariant_prop <> is var
R129378:129379 CertiOS.framework.proof.invariant_prop <> cs var
R129382:129382 CertiOS.framework.proof.invariant_prop <> O var
R129384:129385 CertiOS.framework.proof.invariant_prop <> ab var
R129420:129423 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R129396:129405 CertiOS.framework.logic.assertion <> invlth_isr def
R129419:129419 CertiOS.framework.proof.invariant_prop <> j var
R129411:129411 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R129410:129410 CertiOS.framework.proof.invariant_prop <> i var
R129407:129407 CertiOS.framework.proof.invariant_prop <> I var
R129424:129429 CertiOS.framework.logic.assertion <> getinv proj
R129432:129432 CertiOS.framework.proof.invariant_prop <> I var
R129435:129435 Coq.Init.Datatypes <> S constr
R129437:129440 CertiOS.framework.model.language <> INUM def
R129326:129328 Coq.Init.Logic <> :type_scope:x_'='_x not
R129322:129323 CertiOS.framework.proof.invariant_prop <> ir var
R129325:129325 CertiOS.framework.proof.invariant_prop <> i var
R129329:129333 Coq.Init.Datatypes <> false constr
R129308:129309 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R129307:129307 CertiOS.framework.proof.invariant_prop <> j var
R129310:129313 CertiOS.framework.model.language <> INUM def
R129298:129298 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R129297:129297 CertiOS.framework.proof.invariant_prop <> i var
R129299:129299 CertiOS.framework.proof.invariant_prop <> j var
R129653:129666 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R129653:129666 CertiOS.framework.proof.invariant_prop <> isr_false_sat1 thm
R129686:129695 CertiOS.framework.logic.assertion <> invlth_isr def
R129712:129723 CertiOS.framework.proof.invariant_prop <> isr_true_aux thm
R129712:129723 CertiOS.framework.proof.invariant_prop <> isr_true_aux thm
prf 129752:129771 <> starinv_isr_ncare_ab
R129880:129887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R129918:129927 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R129888:129888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129891:129892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129896:129897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129899:129900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129904:129905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129909:129910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129912:129913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129917:129917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129889:129890 CertiOS.framework.proof.invariant_prop <> ge var
R129893:129895 CertiOS.framework.proof.invariant_prop <> le' var
R129898:129898 CertiOS.framework.proof.invariant_prop <> m var
R129901:129903 CertiOS.framework.proof.invariant_prop <> isr var
R129906:129908 CertiOS.framework.proof.invariant_prop <> aux var
R129911:129911 CertiOS.framework.proof.invariant_prop <> O var
R129914:129916 CertiOS.framework.proof.invariant_prop <> ab' var
R129928:129938 CertiOS.framework.logic.assertion <> starinv_isr def
R129944:129944 CertiOS.framework.proof.invariant_prop <> j var
R129942:129942 CertiOS.framework.proof.invariant_prop <> i var
R129940:129940 CertiOS.framework.proof.invariant_prop <> I var
R129853:129862 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R129824:129824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129827:129828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129831:129832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129834:129836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129840:129841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129845:129846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129848:129849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129852:129852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R129825:129826 CertiOS.framework.proof.invariant_prop <> ge var
R129829:129830 CertiOS.framework.proof.invariant_prop <> le var
R129833:129833 CertiOS.framework.proof.invariant_prop <> m var
R129837:129839 CertiOS.framework.proof.invariant_prop <> isr var
R129842:129844 CertiOS.framework.proof.invariant_prop <> aux var
R129847:129847 CertiOS.framework.proof.invariant_prop <> O var
R129850:129851 CertiOS.framework.proof.invariant_prop <> ab var
R129863:129873 CertiOS.framework.logic.assertion <> starinv_isr def
R129879:129879 CertiOS.framework.proof.invariant_prop <> j var
R129877:129877 CertiOS.framework.proof.invariant_prop <> i var
R129875:129875 CertiOS.framework.proof.invariant_prop <> I var
R129989:129999 CertiOS.framework.logic.assertion <> starinv_isr def
R130117:130122 CertiOS.framework.logic.assertion <> empmem syndef
R130128:130134 CertiOS.framework.logic.assertion <> empabst syndef
R130117:130122 CertiOS.framework.logic.assertion <> empmem syndef
R130128:130134 CertiOS.framework.logic.assertion <> empabst syndef
R130188:130200 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R130188:130200 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R130217:130220 CertiOS.framework.logic.assertion <> invp proj
R130217:130220 CertiOS.framework.logic.assertion <> invp proj
R130242:130252 CertiOS.framework.logic.assertion <> starinv_isr def
R130264:130274 CertiOS.framework.logic.assertion <> starinv_isr def
R130289:130299 CertiOS.framework.logic.assertion <> starinv_isr def
R130289:130299 CertiOS.framework.logic.assertion <> starinv_isr def
R130378:130383 CertiOS.framework.logic.assertion <> empmem syndef
R130389:130395 CertiOS.framework.logic.assertion <> empabst syndef
R130378:130383 CertiOS.framework.logic.assertion <> empmem syndef
R130389:130395 CertiOS.framework.logic.assertion <> empabst syndef
R130539:130544 CertiOS.framework.logic.assertion <> empmem syndef
R130550:130556 CertiOS.framework.logic.assertion <> empabst syndef
R130539:130544 CertiOS.framework.logic.assertion <> empmem syndef
R130550:130556 CertiOS.framework.logic.assertion <> empabst syndef
R130609:130621 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R130609:130621 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R130638:130641 CertiOS.framework.logic.assertion <> invp proj
R130638:130641 CertiOS.framework.logic.assertion <> invp proj
def 130681:130688 <> cjy_and1
R130693:130710 Coq.Init.Logic <> and ind
prf 130719:130737 <> precise_starinv_isr
R130763:130769 CertiOS.framework.logic.assertion <> precise def
R130772:130782 CertiOS.framework.logic.assertion <> starinv_isr def
R130790:130790 CertiOS.framework.proof.invariant_prop <> n var
R130786:130788 CertiOS.framework.proof.invariant_prop <> low var
R130784:130784 CertiOS.framework.proof.invariant_prop <> I var
R130868:130874 CertiOS.framework.logic.assertion <> precise def
R130894:130896 CertiOS.framework.logic.assertion <> sat def
R130913:130915 CertiOS.framework.logic.assertion <> sat def
R130932:130939 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R130913:130915 CertiOS.framework.logic.assertion <> sat def
R130932:130939 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R131034:131041 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R131131:131137 CertiOS.framework.logic.assertion <> substmo def
R131139:131139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131141:131142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131145:131146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131149:131150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131152:131153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131155:131156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131159:131160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131162:131162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131100:131100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131102:131103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131106:131107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131110:131111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131113:131114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131116:131117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131120:131121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131123:131123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131100:131100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131102:131103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131106:131107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131110:131111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131113:131114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131116:131117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131120:131121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131123:131123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131131:131137 CertiOS.framework.logic.assertion <> substmo def
R131139:131139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131141:131142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131145:131146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131149:131150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131152:131153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131155:131156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131159:131160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131162:131162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131219:131225 CertiOS.framework.logic.assertion <> substmo def
R131227:131227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131229:131230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131233:131234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131237:131238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131240:131241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131243:131244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131247:131248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131250:131250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131188:131188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131190:131191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131194:131195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131198:131199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131201:131202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131204:131205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131208:131209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131211:131211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131188:131188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131190:131191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131194:131195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131198:131199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131201:131202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131204:131205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131208:131209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131211:131211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131219:131225 CertiOS.framework.logic.assertion <> substmo def
R131227:131227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131229:131230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131233:131234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131237:131238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131240:131241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131243:131244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131247:131248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131250:131250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131276:131282 CertiOS.framework.logic.assertion <> precise def
R131285:131290 CertiOS.framework.logic.assertion <> getinv proj
R131311:131314 CertiOS.framework.logic.assertion <> prec proj
R131276:131282 CertiOS.framework.logic.assertion <> precise def
R131285:131290 CertiOS.framework.logic.assertion <> getinv proj
R131311:131314 CertiOS.framework.logic.assertion <> prec proj
R131359:131365 CertiOS.framework.logic.assertion <> precise def
R131390:131392 CertiOS.framework.logic.assertion <> sat def
R131409:131411 CertiOS.framework.logic.assertion <> sat def
R131428:131435 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R131409:131411 CertiOS.framework.logic.assertion <> sat def
R131428:131435 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R131531:131538 CertiOS.framework.proof.invariant_prop <> cjy_and1 def
R131583:131589 CertiOS.framework.logic.assertion <> substmo def
R131591:131591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131593:131594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131597:131598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131601:131602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131606:131607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131609:131610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131613:131614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131616:131616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131550:131550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131552:131553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131556:131557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131560:131561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131565:131566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131568:131569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131572:131573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131575:131575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131550:131550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131552:131553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131556:131557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131560:131561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131565:131566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131568:131569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131572:131573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131575:131575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131583:131589 CertiOS.framework.logic.assertion <> substmo def
R131591:131591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131593:131594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131597:131598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131601:131602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131606:131607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131609:131610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131613:131614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131616:131616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131675:131681 CertiOS.framework.logic.assertion <> substmo def
R131683:131683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131685:131686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131689:131690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131693:131694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131698:131699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131701:131702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131705:131706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131708:131708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131642:131642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131644:131645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131648:131649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131652:131653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131657:131658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131660:131661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131664:131665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131667:131667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131642:131642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131644:131645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131648:131649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131652:131653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131657:131658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131660:131661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131664:131665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131667:131667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131675:131681 CertiOS.framework.logic.assertion <> substmo def
R131683:131683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131685:131686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131689:131690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131693:131694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131698:131699 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131701:131702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131705:131706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131708:131708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131822:131828 CertiOS.framework.logic.assertion <> substmo def
R131830:131830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131832:131833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131836:131837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131840:131841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131845:131846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131848:131849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131852:131853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131855:131855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131789:131789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131791:131792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131795:131796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131799:131800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131804:131805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131807:131808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131811:131812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131814:131814 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131789:131789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131791:131792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131795:131796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131799:131800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131804:131805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131807:131808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131811:131812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131814:131814 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131822:131828 CertiOS.framework.logic.assertion <> substmo def
R131830:131830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131832:131833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131836:131837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131840:131841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131845:131846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131848:131849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131852:131853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131855:131855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131914:131920 CertiOS.framework.logic.assertion <> substmo def
R131922:131922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131924:131925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131928:131929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131932:131933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131937:131938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131940:131941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131944:131945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131947:131947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131881:131881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131883:131884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131887:131888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131891:131892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131896:131897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131899:131900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131903:131904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131906:131906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131881:131881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131883:131884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131887:131888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131891:131892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131896:131897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131899:131900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131903:131904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131906:131906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131914:131920 CertiOS.framework.logic.assertion <> substmo def
R131922:131922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131924:131925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131928:131929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131932:131933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131937:131938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131940:131941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131944:131945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131947:131947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132031:132037 CertiOS.framework.logic.assertion <> substmo def
R132039:132039 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132041:132042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132045:132046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132049:132050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132054:132055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132057:132058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132061:132062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132064:132064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131998:131998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132000:132001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132004:132005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132008:132009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132013:132014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132016:132017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132020:132021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132023:132023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131998:131998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132000:132001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132004:132005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132008:132009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132013:132014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132016:132017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132020:132021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132023:132023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132031:132037 CertiOS.framework.logic.assertion <> substmo def
R132039:132039 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132041:132042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132045:132046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132049:132050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132054:132055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132057:132058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132061:132062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132064:132064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132122:132128 CertiOS.framework.logic.assertion <> substmo def
R132130:132130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132132:132133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132136:132137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132140:132141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132145:132146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132148:132149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132152:132153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132155:132155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132090:132090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132092:132093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132096:132097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132099:132100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132104:132105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132107:132108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132111:132112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132114:132114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132090:132090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132092:132093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132096:132097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132099:132100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132104:132105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132107:132108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132111:132112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132114:132114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132122:132128 CertiOS.framework.logic.assertion <> substmo def
R132130:132130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132132:132133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132136:132137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132140:132141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132145:132146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132148:132149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132152:132153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132155:132155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132181:132187 CertiOS.framework.logic.assertion <> precise def
R132190:132195 CertiOS.framework.logic.assertion <> getinv proj
R132224:132227 CertiOS.framework.logic.assertion <> prec proj
R132181:132187 CertiOS.framework.logic.assertion <> precise def
R132190:132195 CertiOS.framework.logic.assertion <> getinv proj
R132224:132227 CertiOS.framework.logic.assertion <> prec proj
R132323:132336 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_r thm
R132323:132336 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_r thm
R132354:132367 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_r thm
R132354:132367 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_r thm
R132390:132398 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132425:132433 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132390:132398 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132425:132433 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132457:132470 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_l thm
R132457:132470 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_l thm
R132488:132501 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_l thm
R132488:132501 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_sub_l thm
R132526:132534 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132562:132570 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132526:132534 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132562:132570 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132600:132610 CertiOS.tactics.basetac.join_lib <> join_unique thm
R132600:132610 CertiOS.tactics.basetac.join_lib <> join_unique thm
R132633:132649 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_r thm
R132633:132649 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_r thm
R132667:132683 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_r thm
R132667:132683 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_r thm
R132707:132715 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132742:132750 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132707:132715 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132742:132750 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132774:132790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_l thm
R132774:132790 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_l thm
R132808:132824 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_l thm
R132808:132824 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_l thm
R132849:132857 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132885:132893 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132849:132857 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132885:132893 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R132923:132933 CertiOS.tactics.basetac.join_lib <> join_unique thm
R132923:132933 CertiOS.tactics.basetac.join_lib <> join_unique thm
prf 132955:132970 <> invlth_isr_minus
R133035:133038 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133049:133056 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133071:133074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133089:133100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133156:133164 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133230:133237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133261:133264 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133238:133238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133241:133241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133244:133244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133247:133247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133250:133250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133254:133254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133257:133257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133260:133260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133239:133240 CertiOS.framework.proof.invariant_prop <> ge var
R133242:133243 CertiOS.framework.proof.invariant_prop <> le var
R133245:133246 CertiOS.framework.proof.invariant_prop <> M1 var
R133248:133249 CertiOS.framework.proof.invariant_prop <> ir var
R133251:133253 CertiOS.framework.proof.invariant_prop <> aux var
R133255:133256 CertiOS.framework.proof.invariant_prop <> O1 var
R133258:133259 CertiOS.framework.proof.invariant_prop <> ab var
R133265:133274 CertiOS.framework.logic.assertion <> invlth_isr def
R133280:133280 CertiOS.framework.proof.invariant_prop <> i var
R133276:133276 CertiOS.framework.proof.invariant_prop <> I var
R133210:133213 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133165:133165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133168:133168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133171:133172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133184:133184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133187:133187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133191:133192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133204:133204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133209:133209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133166:133167 CertiOS.framework.proof.invariant_prop <> ge var
R133169:133170 CertiOS.framework.proof.invariant_prop <> le var
R133173:133177 CertiOS.framework.auxlibs.Maps <> merge meth
R133182:133183 CertiOS.framework.proof.invariant_prop <> M2 var
R133179:133180 CertiOS.framework.proof.invariant_prop <> M1 var
R133185:133186 CertiOS.framework.proof.invariant_prop <> ir var
R133188:133190 CertiOS.framework.proof.invariant_prop <> aux var
R133193:133197 CertiOS.framework.auxlibs.Maps <> merge meth
R133202:133203 CertiOS.framework.proof.invariant_prop <> O2 var
R133199:133200 CertiOS.framework.proof.invariant_prop <> O1 var
R133205:133208 CertiOS.framework.proof.invariant_prop <> ab'' var
R133214:133223 CertiOS.framework.logic.assertion <> invlth_isr def
R133229:133229 CertiOS.framework.proof.invariant_prop <> j var
R133225:133225 CertiOS.framework.proof.invariant_prop <> I var
R133126:133129 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133101:133101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133104:133104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133107:133108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133111:133111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133114:133114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133118:133118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133121:133121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133125:133125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133102:133103 CertiOS.framework.proof.invariant_prop <> ge var
R133105:133106 CertiOS.framework.proof.invariant_prop <> le var
R133109:133110 CertiOS.framework.proof.invariant_prop <> M2 var
R133112:133113 CertiOS.framework.proof.invariant_prop <> ir var
R133115:133117 CertiOS.framework.proof.invariant_prop <> aux var
R133119:133120 CertiOS.framework.proof.invariant_prop <> O2 var
R133122:133124 CertiOS.framework.proof.invariant_prop <> ab' var
R133130:133139 CertiOS.framework.logic.assertion <> invlth_isr def
R133155:133155 CertiOS.framework.proof.invariant_prop <> j var
R133146:133146 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R133145:133145 CertiOS.framework.proof.invariant_prop <> i var
R133141:133141 CertiOS.framework.proof.invariant_prop <> I var
R133075:133082 CertiOS.framework.auxlibs.Maps <> disjoint def
R133087:133088 CertiOS.framework.proof.invariant_prop <> O2 var
R133084:133085 CertiOS.framework.proof.invariant_prop <> O1 var
R133057:133064 CertiOS.framework.auxlibs.Maps <> disjoint def
R133069:133070 CertiOS.framework.proof.invariant_prop <> M2 var
R133066:133067 CertiOS.framework.proof.invariant_prop <> M1 var
R133040:133042 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R133039:133039 CertiOS.framework.proof.invariant_prop <> j var
R133043:133043 Coq.Init.Datatypes <> S constr
R133045:133048 CertiOS.framework.model.language <> INUM def
R133032:133033 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R133031:133031 CertiOS.framework.proof.invariant_prop <> i var
R133034:133034 CertiOS.framework.proof.invariant_prop <> j var
R133310:133319 CertiOS.framework.logic.assertion <> invlth_isr def
R133365:133367 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R133365:133367 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R133395:133406 CertiOS.framework.proof.rulesoundlib <> starinv_prop thm
R133395:133406 CertiOS.framework.proof.rulesoundlib <> starinv_prop thm
R133528:133532 Coq.Init.Logic <> :type_scope:x_'='_x not
R133542:133542 Coq.Init.Logic <> :type_scope:x_'='_x not
R133518:133521 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133527:133527 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133515:133515 Coq.Init.Datatypes <> S constr
R133523:133525 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R133536:133538 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133533:133533 Coq.Init.Datatypes <> S constr
R133539:133539 Coq.Init.Datatypes <> S constr
R133528:133532 Coq.Init.Logic <> :type_scope:x_'='_x not
R133542:133542 Coq.Init.Logic <> :type_scope:x_'='_x not
R133518:133521 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133527:133527 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133515:133515 Coq.Init.Datatypes <> S constr
R133523:133525 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R133536:133538 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133533:133533 Coq.Init.Datatypes <> S constr
R133539:133539 Coq.Init.Datatypes <> S constr
R133593:133593 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R133603:133603 Coq.Init.Datatypes <> S constr
R133603:133603 Coq.Init.Datatypes <> S constr
R133593:133593 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R133698:133701 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133634:133640 CertiOS.framework.logic.assertion <> substmo def
R133642:133642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133645:133646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133649:133651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133663:133665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133668:133669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133673:133674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133686:133687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133691:133691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133652:133656 CertiOS.framework.auxlibs.Maps <> merge meth
R133675:133679 CertiOS.framework.auxlibs.Maps <> merge meth
R133702:133712 CertiOS.framework.logic.assertion <> starinv_isr def
R133726:133728 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133723:133723 Coq.Init.Datatypes <> S constr
R133729:133729 Coq.Init.Datatypes <> S constr
R133717:133717 Coq.Init.Datatypes <> S constr
R133698:133701 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133634:133640 CertiOS.framework.logic.assertion <> substmo def
R133642:133642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133645:133646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133649:133651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133663:133665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133668:133669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133673:133674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133686:133687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133691:133691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133652:133656 CertiOS.framework.auxlibs.Maps <> merge meth
R133675:133679 CertiOS.framework.auxlibs.Maps <> merge meth
R133702:133712 CertiOS.framework.logic.assertion <> starinv_isr def
R133726:133728 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133723:133723 Coq.Init.Datatypes <> S constr
R133729:133729 Coq.Init.Datatypes <> S constr
R133717:133717 Coq.Init.Datatypes <> S constr
R133835:133838 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133771:133777 CertiOS.framework.logic.assertion <> substmo def
R133779:133779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133782:133783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133786:133788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133800:133802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133805:133806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133810:133811 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133823:133824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133828:133828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133789:133793 CertiOS.framework.auxlibs.Maps <> merge meth
R133812:133816 CertiOS.framework.auxlibs.Maps <> merge meth
R133839:133849 CertiOS.framework.logic.assertion <> starinv_isr def
R133863:133865 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133860:133860 Coq.Init.Datatypes <> S constr
R133866:133866 Coq.Init.Datatypes <> S constr
R133854:133854 Coq.Init.Datatypes <> S constr
R133899:133918 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_ab thm
R133835:133838 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R133771:133777 CertiOS.framework.logic.assertion <> substmo def
R133779:133779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133782:133783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133786:133788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133800:133802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133805:133806 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133810:133811 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133823:133824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133828:133828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R133789:133793 CertiOS.framework.auxlibs.Maps <> merge meth
R133812:133816 CertiOS.framework.auxlibs.Maps <> merge meth
R133839:133849 CertiOS.framework.logic.assertion <> starinv_isr def
R133863:133865 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R133860:133860 Coq.Init.Datatypes <> S constr
R133866:133866 Coq.Init.Datatypes <> S constr
R133854:133854 Coq.Init.Datatypes <> S constr
R133899:133918 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_ab thm
R133943:133961 CertiOS.framework.proof.invariant_prop <> precise_starinv_isr thm
R133943:133961 CertiOS.framework.proof.invariant_prop <> precise_starinv_isr thm
R133981:133988 CertiOS.framework.auxlibs.Maps <> sub def
R133994:133998 CertiOS.framework.auxlibs.Maps <> merge meth
R133981:133988 CertiOS.framework.auxlibs.Maps <> sub def
R133994:133998 CertiOS.framework.auxlibs.Maps <> merge meth
R134020:134039 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R134020:134039 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R134058:134065 CertiOS.framework.auxlibs.Maps <> sub def
R134072:134076 CertiOS.framework.auxlibs.Maps <> merge meth
R134058:134065 CertiOS.framework.auxlibs.Maps <> sub def
R134072:134076 CertiOS.framework.auxlibs.Maps <> merge meth
R134097:134106 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R134097:134106 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R134125:134132 CertiOS.framework.auxlibs.Maps <> sub def
R134138:134142 CertiOS.framework.auxlibs.Maps <> merge meth
R134125:134132 CertiOS.framework.auxlibs.Maps <> sub def
R134138:134142 CertiOS.framework.auxlibs.Maps <> merge meth
R134164:134183 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R134164:134183 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R134202:134209 CertiOS.framework.auxlibs.Maps <> sub def
R134215:134219 CertiOS.framework.auxlibs.Maps <> merge meth
R134202:134209 CertiOS.framework.auxlibs.Maps <> sub def
R134215:134219 CertiOS.framework.auxlibs.Maps <> merge meth
R134240:134249 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R134240:134249 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R134346:134360 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R134346:134360 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R134377:134385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134377:134385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134402:134410 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134402:134410 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134433:134445 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R134433:134445 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R134471:134485 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R134471:134485 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R134502:134510 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134502:134510 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134527:134535 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134527:134535 CertiOS.tactics.basetac.join_lib <> join_comm thm
R134558:134570 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R134558:134570 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R134600:134600 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R134600:134600 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R134630:134649 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_ab thm
R134630:134649 CertiOS.framework.proof.invariant_prop <> starinv_isr_ncare_ab thm
prf 134673:134689 <> invlth_isr_minus'
R134754:134757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134768:134775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134790:134793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134808:134819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134896:134904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R134992:134998 Coq.Init.Logic <> :type_scope:x_'->'_x not
R135022:135025 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R134999:134999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135002:135002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135005:135005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135008:135008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135011:135011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135015:135015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135018:135018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135021:135021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135000:135001 CertiOS.framework.proof.invariant_prop <> ge var
R135003:135004 CertiOS.framework.proof.invariant_prop <> le var
R135006:135007 CertiOS.framework.proof.invariant_prop <> M1 var
R135009:135010 CertiOS.framework.proof.invariant_prop <> ir var
R135012:135014 CertiOS.framework.proof.invariant_prop <> aux var
R135016:135017 CertiOS.framework.proof.invariant_prop <> O1 var
R135019:135020 CertiOS.framework.proof.invariant_prop <> ab var
R135026:135035 CertiOS.framework.logic.assertion <> invlth_isr def
R135041:135041 CertiOS.framework.proof.invariant_prop <> i var
R135037:135037 CertiOS.framework.proof.invariant_prop <> I var
R134949:134952 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R134905:134905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134908:134908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134911:134911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134923:134923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134926:134926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134930:134931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134943:134943 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134948:134948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134906:134907 CertiOS.framework.proof.invariant_prop <> ge var
R134909:134910 CertiOS.framework.proof.invariant_prop <> le var
R134912:134916 CertiOS.framework.auxlibs.Maps <> merge meth
R134921:134922 CertiOS.framework.proof.invariant_prop <> M2 var
R134918:134919 CertiOS.framework.proof.invariant_prop <> M1 var
R134924:134925 CertiOS.framework.proof.invariant_prop <> ir var
R134927:134929 CertiOS.framework.proof.invariant_prop <> aux var
R134932:134936 CertiOS.framework.auxlibs.Maps <> merge meth
R134941:134942 CertiOS.framework.proof.invariant_prop <> O2 var
R134938:134939 CertiOS.framework.proof.invariant_prop <> O1 var
R134944:134947 CertiOS.framework.proof.invariant_prop <> ab'' var
R134969:134972 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R134953:134962 CertiOS.framework.logic.assertion <> invlth_isr def
R134968:134968 CertiOS.framework.proof.invariant_prop <> j var
R134964:134964 CertiOS.framework.proof.invariant_prop <> I var
R134973:134978 CertiOS.framework.logic.assertion <> getinv proj
R134981:134981 CertiOS.framework.proof.invariant_prop <> I var
R134984:134984 Coq.Init.Datatypes <> S constr
R134986:134989 CertiOS.framework.model.language <> INUM def
R134845:134848 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R134820:134820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134823:134823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134826:134827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134830:134830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134833:134833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134837:134837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134840:134840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134844:134844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R134821:134822 CertiOS.framework.proof.invariant_prop <> ge var
R134824:134825 CertiOS.framework.proof.invariant_prop <> le var
R134828:134829 CertiOS.framework.proof.invariant_prop <> M2 var
R134831:134832 CertiOS.framework.proof.invariant_prop <> ir var
R134834:134836 CertiOS.framework.proof.invariant_prop <> aux var
R134838:134839 CertiOS.framework.proof.invariant_prop <> O2 var
R134841:134843 CertiOS.framework.proof.invariant_prop <> ab' var
R134875:134876 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R134849:134858 CertiOS.framework.logic.assertion <> invlth_isr def
R134874:134874 CertiOS.framework.proof.invariant_prop <> j var
R134865:134865 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R134864:134864 CertiOS.framework.proof.invariant_prop <> i var
R134860:134860 CertiOS.framework.proof.invariant_prop <> I var
R134877:134882 CertiOS.framework.logic.assertion <> getinv proj
R134885:134885 CertiOS.framework.proof.invariant_prop <> I var
R134888:134888 Coq.Init.Datatypes <> S constr
R134890:134893 CertiOS.framework.model.language <> INUM def
R134794:134801 CertiOS.framework.auxlibs.Maps <> disjoint def
R134806:134807 CertiOS.framework.proof.invariant_prop <> O2 var
R134803:134804 CertiOS.framework.proof.invariant_prop <> O1 var
R134776:134783 CertiOS.framework.auxlibs.Maps <> disjoint def
R134788:134789 CertiOS.framework.proof.invariant_prop <> M2 var
R134785:134786 CertiOS.framework.proof.invariant_prop <> M1 var
R134759:134761 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R134758:134758 CertiOS.framework.proof.invariant_prop <> j var
R134762:134762 Coq.Init.Datatypes <> S constr
R134764:134767 CertiOS.framework.model.language <> INUM def
R134751:134752 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R134750:134750 CertiOS.framework.proof.invariant_prop <> i var
R134753:134753 CertiOS.framework.proof.invariant_prop <> j var
R135274:135291 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R135210:135216 CertiOS.framework.logic.assertion <> substmo def
R135218:135218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135221:135222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135225:135227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135239:135241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135244:135245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135249:135250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135262:135263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135267:135267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135228:135232 CertiOS.framework.auxlibs.Maps <> merge meth
R135251:135255 CertiOS.framework.auxlibs.Maps <> merge meth
R135292:135297 CertiOS.framework.logic.assertion <> getinv proj
R135303:135303 Coq.Init.Datatypes <> S constr
R135305:135308 CertiOS.framework.model.language <> INUM def
R135274:135291 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R135210:135216 CertiOS.framework.logic.assertion <> substmo def
R135218:135218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135221:135222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135225:135227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135239:135241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135244:135245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135249:135250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135262:135263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135267:135267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135228:135232 CertiOS.framework.auxlibs.Maps <> merge meth
R135251:135255 CertiOS.framework.auxlibs.Maps <> merge meth
R135292:135297 CertiOS.framework.logic.assertion <> getinv proj
R135303:135303 Coq.Init.Datatypes <> S constr
R135305:135308 CertiOS.framework.model.language <> INUM def
R135413:135416 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R135349:135355 CertiOS.framework.logic.assertion <> substmo def
R135357:135357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135360:135361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135364:135366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135378:135380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135383:135384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135388:135389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135401:135402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135406:135406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135367:135371 CertiOS.framework.auxlibs.Maps <> merge meth
R135390:135394 CertiOS.framework.auxlibs.Maps <> merge meth
R135417:135422 CertiOS.framework.logic.assertion <> getinv proj
R135428:135428 Coq.Init.Datatypes <> S constr
R135430:135433 CertiOS.framework.model.language <> INUM def
R135413:135416 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R135349:135355 CertiOS.framework.logic.assertion <> substmo def
R135357:135357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135360:135361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135364:135366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135378:135380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135383:135384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135388:135389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135401:135402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135406:135406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R135367:135371 CertiOS.framework.auxlibs.Maps <> merge meth
R135390:135394 CertiOS.framework.auxlibs.Maps <> merge meth
R135417:135422 CertiOS.framework.logic.assertion <> getinv proj
R135428:135428 Coq.Init.Datatypes <> S constr
R135430:135433 CertiOS.framework.model.language <> INUM def
R135483:135495 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R135483:135495 CertiOS.framework.proof.rulesoundlib <> good_inv_prop thm
R135514:135517 CertiOS.framework.logic.assertion <> invp proj
R135514:135517 CertiOS.framework.logic.assertion <> invp proj
R135532:135535 CertiOS.framework.logic.assertion <> prec proj
R135542:135542 Coq.Init.Datatypes <> S constr
R135544:135547 CertiOS.framework.model.language <> INUM def
R135532:135535 CertiOS.framework.logic.assertion <> prec proj
R135542:135542 Coq.Init.Datatypes <> S constr
R135544:135547 CertiOS.framework.model.language <> INUM def
R135621:135628 CertiOS.framework.auxlibs.Maps <> sub def
R135634:135638 CertiOS.framework.auxlibs.Maps <> merge meth
R135621:135628 CertiOS.framework.auxlibs.Maps <> sub def
R135634:135638 CertiOS.framework.auxlibs.Maps <> merge meth
R135658:135667 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135658:135667 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135687:135694 CertiOS.framework.auxlibs.Maps <> sub def
R135700:135704 CertiOS.framework.auxlibs.Maps <> merge meth
R135687:135694 CertiOS.framework.auxlibs.Maps <> sub def
R135700:135704 CertiOS.framework.auxlibs.Maps <> merge meth
R135725:135732 CertiOS.framework.auxlibs.Maps <> sub def
R135725:135732 CertiOS.framework.auxlibs.Maps <> sub def
R135751:135760 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135751:135760 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135780:135787 CertiOS.framework.auxlibs.Maps <> sub def
R135793:135797 CertiOS.framework.auxlibs.Maps <> merge meth
R135780:135787 CertiOS.framework.auxlibs.Maps <> sub def
R135793:135797 CertiOS.framework.auxlibs.Maps <> merge meth
R135818:135837 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R135818:135837 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R135856:135864 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R135856:135864 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R135884:135891 CertiOS.framework.auxlibs.Maps <> sub def
R135897:135901 CertiOS.framework.auxlibs.Maps <> merge meth
R135884:135891 CertiOS.framework.auxlibs.Maps <> sub def
R135897:135901 CertiOS.framework.auxlibs.Maps <> merge meth
R135921:135930 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135921:135930 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R135951:135958 CertiOS.framework.auxlibs.Maps <> sub def
R135964:135968 CertiOS.framework.auxlibs.Maps <> merge meth
R135951:135958 CertiOS.framework.auxlibs.Maps <> sub def
R135964:135968 CertiOS.framework.auxlibs.Maps <> merge meth
R135989:135996 CertiOS.framework.auxlibs.Maps <> sub def
R135989:135996 CertiOS.framework.auxlibs.Maps <> sub def
R136015:136024 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R136015:136024 CertiOS.tactics.basetac.join_lib <> join_sub_r thm
R136044:136051 CertiOS.framework.auxlibs.Maps <> sub def
R136057:136061 CertiOS.framework.auxlibs.Maps <> merge meth
R136044:136051 CertiOS.framework.auxlibs.Maps <> sub def
R136057:136061 CertiOS.framework.auxlibs.Maps <> merge meth
R136081:136100 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R136081:136100 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> disjoint_sub_merge_r thm
R136118:136126 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R136118:136126 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R136226:136251 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> Mem_disjoint_join_disjoint thm
R136226:136251 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> Mem_disjoint_join_disjoint thm
R136294:136322 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> OSAbst_disjoint_join_disjoint thm
R136294:136322 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> OSAbst_disjoint_join_disjoint thm
R136385:136400 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus thm
R136385:136400 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus thm
prf 136458:136471 <> eq_dom_env_emp
R136477:136486 CertiOS.framework.logic.assertion <> eq_dom_env def
R136495:136497 Coq.Init.Datatypes <> nil constr
R136488:136493 CertiOS.framework.logic.assertion <> empenv syndef
R136582:136587 CertiOS.framework.auxlibs.Maps <> emp meth
R136616:136618 CertiOS.framework.auxlibs.Maps <> get meth
R136648:136661 CertiOS.framework.model.memory EnvMod emp_sem thm
R136648:136661 CertiOS.framework.model.memory EnvMod emp_sem thm
R136648:136661 CertiOS.framework.model.memory EnvMod emp_sem thm
prf 136692:136701 <> en_int_inv
R136728:136730 CertiOS.framework.model.language <> isr def
R136740:136750 CertiOS.framework.model.language <> is def
R136774:136778 CertiOS.framework.logic.assertion <> absop def
R136786:136788 CertiOS.framework.logic.assertion <> Inv def
R136808:136810 CertiOS.framework.model.memory <> env def
R136864:136871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136889:136896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136911:136917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136932:136938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136953:136960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136975:136982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R136983:136983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137073:137081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137082:137082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137201:137209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137307:137314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R137456:137459 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R137412:137421 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R137315:137315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137317:137318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137325:137327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137342:137344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137361:137362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137390:137392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137407:137409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137411:137411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137316:137316 CertiOS.framework.proof.invariant_prop <> G var
R137319:137324 CertiOS.framework.logic.assertion <> empenv syndef
R137328:137332 CertiOS.framework.auxlibs.Maps <> merge meth
R137337:137341 CertiOS.framework.proof.invariant_prop <> Mlinv var
R137334:137335 CertiOS.framework.proof.invariant_prop <> Mi var
R137345:137350 CertiOS.framework.model.language <> isrupd def
R137357:137360 Coq.Init.Datatypes <> true constr
R137355:137355 CertiOS.framework.proof.invariant_prop <> i var
R137352:137353 CertiOS.framework.proof.invariant_prop <> ir var
R137363:137363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137369:137370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137379:137380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137384:137384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137364:137368 Coq.Init.Datatypes <> false constr
R137372:137375 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R137371:137371 CertiOS.framework.proof.invariant_prop <> i var
R137376:137378 CertiOS.framework.proof.invariant_prop <> is0 var
R137381:137383 Coq.Init.Datatypes <> nil constr
R137393:137397 CertiOS.framework.auxlibs.Maps <> merge meth
R137402:137406 CertiOS.framework.proof.invariant_prop <> Olinv var
R137399:137400 CertiOS.framework.proof.invariant_prop <> Oi var
R137410:137410 CertiOS.framework.proof.invariant_prop <> x var
R137422:137429 CertiOS.framework.proof.auxdef <> ipreasrt def
R137454:137455 CertiOS.framework.proof.invariant_prop <> lg var
R137452:137452 CertiOS.framework.proof.invariant_prop <> t var
R137446:137450 CertiOS.framework.proof.invariant_prop <> lasrt var
R137444:137444 CertiOS.framework.proof.invariant_prop <> G var
R137442:137442 CertiOS.framework.proof.invariant_prop <> I var
R137440:137440 CertiOS.framework.proof.invariant_prop <> x var
R137436:137438 CertiOS.framework.proof.invariant_prop <> is0 var
R137433:137434 CertiOS.framework.proof.invariant_prop <> ir var
R137431:137431 CertiOS.framework.proof.invariant_prop <> i var
R137460:137463 CertiOS.framework.logic.inferules <> satp def
R137558:137564 CertiOS.framework.logic.inferules <> CurLINV def
R137572:137572 CertiOS.framework.proof.invariant_prop <> t var
R137566:137570 CertiOS.framework.proof.invariant_prop <> lasrt var
R137541:137545 CertiOS.framework.auxlibs.Maps <> merge meth
R137550:137554 CertiOS.framework.proof.invariant_prop <> Olinv var
R137547:137548 CertiOS.framework.proof.invariant_prop <> Oi var
R137465:137465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137467:137468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137475:137476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137491:137492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137509:137510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137538:137538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137466:137466 CertiOS.framework.proof.invariant_prop <> G var
R137469:137474 CertiOS.framework.logic.assertion <> empenv syndef
R137477:137481 CertiOS.framework.auxlibs.Maps <> merge meth
R137486:137490 CertiOS.framework.proof.invariant_prop <> Mlinv var
R137483:137484 CertiOS.framework.proof.invariant_prop <> Mi var
R137493:137498 CertiOS.framework.model.language <> isrupd def
R137505:137508 Coq.Init.Datatypes <> true constr
R137503:137503 CertiOS.framework.proof.invariant_prop <> i var
R137500:137501 CertiOS.framework.proof.invariant_prop <> ir var
R137511:137511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137517:137518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137527:137528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137532:137532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137512:137516 Coq.Init.Datatypes <> false constr
R137520:137523 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R137519:137519 CertiOS.framework.proof.invariant_prop <> i var
R137524:137526 CertiOS.framework.proof.invariant_prop <> is0 var
R137529:137531 Coq.Init.Datatypes <> nil constr
R137210:137213 CertiOS.framework.logic.inferules <> satp def
R137288:137294 CertiOS.framework.logic.inferules <> p_local def
R137304:137305 CertiOS.framework.proof.invariant_prop <> lg var
R137302:137302 CertiOS.framework.proof.invariant_prop <> t var
R137296:137300 CertiOS.framework.proof.invariant_prop <> lasrt var
R137281:137285 CertiOS.framework.proof.invariant_prop <> Olinv var
R137215:137215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137217:137218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137225:137226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137232:137233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137250:137251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137279:137279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137216:137216 CertiOS.framework.proof.invariant_prop <> G var
R137219:137224 CertiOS.framework.logic.assertion <> empenv syndef
R137227:137231 CertiOS.framework.proof.invariant_prop <> Mlinv var
R137234:137239 CertiOS.framework.model.language <> isrupd def
R137246:137249 Coq.Init.Datatypes <> true constr
R137244:137244 CertiOS.framework.proof.invariant_prop <> i var
R137241:137242 CertiOS.framework.proof.invariant_prop <> ir var
R137252:137252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137258:137259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137268:137269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137273:137273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137253:137257 Coq.Init.Datatypes <> false constr
R137261:137264 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R137260:137260 CertiOS.framework.proof.invariant_prop <> i var
R137265:137267 CertiOS.framework.proof.invariant_prop <> is0 var
R137270:137272 Coq.Init.Datatypes <> nil constr
R137095:137099 CertiOS.framework.logic.assertion <> absop def
R137182:137195 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R137110:137110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137112:137113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137120:137121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137125:137126 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137143:137144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137172:137173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137177:137178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137181:137181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137111:137111 CertiOS.framework.proof.invariant_prop <> G var
R137114:137119 CertiOS.framework.logic.assertion <> empenv syndef
R137122:137124 CertiOS.framework.proof.invariant_prop <> Ms' var
R137127:137132 CertiOS.framework.model.language <> isrupd def
R137139:137142 Coq.Init.Datatypes <> true constr
R137137:137137 CertiOS.framework.proof.invariant_prop <> i var
R137134:137135 CertiOS.framework.proof.invariant_prop <> ir var
R137145:137145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137151:137152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137161:137162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137166:137166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137146:137150 Coq.Init.Datatypes <> false constr
R137154:137157 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R137153:137153 CertiOS.framework.proof.invariant_prop <> i var
R137158:137160 CertiOS.framework.proof.invariant_prop <> is0 var
R137163:137165 Coq.Init.Datatypes <> nil constr
R137174:137176 CertiOS.framework.proof.invariant_prop <> Os' var
R137179:137180 CertiOS.framework.proof.invariant_prop <> ab var
R137196:137198 CertiOS.framework.logic.assertion <> INV def
R137200:137200 CertiOS.framework.proof.invariant_prop <> I var
R136996:137000 CertiOS.framework.logic.assertion <> absop def
R137064:137067 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R137010:137010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137012:137013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137020:137021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137024:137025 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137028:137029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137046:137056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137059:137060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137063:137063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137011:137011 CertiOS.framework.proof.invariant_prop <> G var
R137014:137019 CertiOS.framework.logic.assertion <> empenv syndef
R137022:137023 CertiOS.framework.proof.invariant_prop <> Ms var
R137026:137027 CertiOS.framework.proof.invariant_prop <> ir var
R137030:137030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137035:137036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137040:137041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137045:137045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137031:137034 Coq.Init.Datatypes <> true constr
R137037:137039 CertiOS.framework.proof.invariant_prop <> is0 var
R137042:137044 Coq.Init.Datatypes <> nil constr
R137057:137058 CertiOS.framework.proof.invariant_prop <> Os var
R137061:137062 CertiOS.framework.proof.invariant_prop <> ab var
R137068:137070 CertiOS.framework.logic.assertion <> INV def
R137072:137072 CertiOS.framework.proof.invariant_prop <> I var
R136963:136965 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R136962:136962 CertiOS.framework.proof.invariant_prop <> i var
R136966:136969 CertiOS.framework.model.language <> INUM def
R136939:136947 CertiOS.framework.model.language <> higherint def
R136952:136952 CertiOS.framework.proof.invariant_prop <> i var
R136949:136950 CertiOS.framework.proof.invariant_prop <> ir var
R136918:136921 CertiOS.framework.auxlibs.Maps <> join meth
R136930:136931 CertiOS.framework.proof.invariant_prop <> Os var
R136926:136928 CertiOS.framework.proof.invariant_prop <> Os' var
R136923:136924 CertiOS.framework.proof.invariant_prop <> Oi var
R136897:136900 CertiOS.framework.auxlibs.Maps <> join meth
R136909:136910 CertiOS.framework.proof.invariant_prop <> Ms var
R136905:136907 CertiOS.framework.proof.invariant_prop <> Ms' var
R136902:136903 CertiOS.framework.proof.invariant_prop <> Mi var
R136872:136879 CertiOS.framework.auxlibs.Maps <> disjoint def
R136887:136888 CertiOS.framework.proof.invariant_prop <> Os var
R136881:136885 CertiOS.framework.proof.invariant_prop <> Olinv var
R136847:136854 CertiOS.framework.auxlibs.Maps <> disjoint def
R136862:136863 CertiOS.framework.proof.invariant_prop <> Ms var
R136856:136860 CertiOS.framework.proof.invariant_prop <> Mlinv var
R137611:137618 CertiOS.framework.proof.auxdef <> ipreasrt def
R137667:137676 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137667:137676 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137721:137728 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137721:137728 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137746:137753 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137746:137753 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137778:137786 CertiOS.framework.logic.assertion <> emposabst def
R137804:137813 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137804:137813 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137858:137865 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137858:137865 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137883:137890 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137883:137890 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137915:137923 CertiOS.framework.logic.assertion <> emposabst def
R137943:137952 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137943:137952 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R137997:138004 CertiOS.tactics.basetac.join_lib <> join_emp thm
R137997:138004 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138022:138029 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138022:138029 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138054:138062 CertiOS.framework.logic.assertion <> emposabst def
R138080:138089 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138080:138089 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138134:138141 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138134:138141 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138159:138166 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138159:138166 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138191:138199 CertiOS.framework.logic.assertion <> emposabst def
R138217:138226 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138217:138226 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138271:138278 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138271:138278 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138296:138303 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138296:138303 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138328:138336 CertiOS.framework.logic.assertion <> emposabst def
R138354:138363 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138354:138363 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138408:138415 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138408:138415 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138433:138440 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138433:138440 CertiOS.tactics.basetac.join_lib <> join_emp thm
R138458:138464 CertiOS.framework.logic.assertion <> isr_inv def
R138477:138482 CertiOS.framework.model.language <> isrupd def
R138489:138492 Coq.Init.Datatypes <> true constr
R138477:138482 CertiOS.framework.model.language <> isrupd def
R138489:138492 Coq.Init.Datatypes <> true constr
R138521:138529 CertiOS.framework.logic.assertion <> emposabst def
R138575:138583 CertiOS.framework.logic.assertion <> emposabst def
R138608:138616 CertiOS.framework.logic.assertion <> emposabst def
R138707:138710 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R138707:138710 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R138763:138768 CertiOS.framework.model.language <> isrupd def
R138792:138794 Coq.Init.Logic <> :type_scope:x_'='_x not
R138781:138787 Coq.Arith.PeanoNat Nat eqb def
R138795:138799 Coq.Init.Datatypes <> false constr
R138792:138794 Coq.Init.Logic <> :type_scope:x_'='_x not
R138781:138787 Coq.Arith.PeanoNat Nat eqb def
R138795:138799 Coq.Init.Datatypes <> false constr
R138814:138817 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R138814:138817 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R138839:138849 Coq.Arith.PeanoNat Nat eqb_neq thm
R138839:138849 Coq.Arith.PeanoNat Nat eqb_neq thm
R138892:138901 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138892:138901 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R138950:138964 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R138950:138964 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R138975:138986 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R138975:138986 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R139003:139028 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R139003:139028 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R139046:139060 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R139046:139060 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R139071:139082 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R139071:139082 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R139100:139128 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R139100:139128 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R139169:139172 Coq.Init.Datatypes <> true constr
R139174:139176 Coq.Init.Datatypes <> nil constr
R139147:139162 CertiOS.framework.proof.invariant_prop <> isr_false_inv_eq thm
R139169:139172 Coq.Init.Datatypes <> true constr
R139174:139176 Coq.Init.Datatypes <> nil constr
R139147:139162 CertiOS.framework.proof.invariant_prop <> isr_false_inv_eq thm
R139206:139211 CertiOS.framework.proof.invariant_prop <> absopx def
R139206:139211 CertiOS.framework.proof.invariant_prop <> absopx def
R139243:139248 CertiOS.framework.proof.invariant_prop <> absopx def
R139243:139248 CertiOS.framework.proof.invariant_prop <> absopx def
R139270:139272 CertiOS.framework.logic.assertion <> INV def
R139288:139296 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139288:139296 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139342:139349 CertiOS.framework.logic.assertion <> inv_ieon def
R139399:139407 CertiOS.framework.logic.assertion <> inv_ieoff def
R139424:139432 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139424:139432 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139472:139480 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139472:139480 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139581:139597 CertiOS.framework.proof.invariant_prop <> invlth_add_sinum' thm
R139581:139597 CertiOS.framework.proof.invariant_prop <> invlth_add_sinum' thm
R139631:139639 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139631:139639 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139685:139692 CertiOS.framework.logic.assertion <> inv_ieon def
R139710:139718 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139710:139718 CertiOS.framework.proof.invariant_prop <> sat_split thm
R139770:139786 CertiOS.framework.proof.invariant_prop <> invlth_add_sinum' thm
R139770:139786 CertiOS.framework.proof.invariant_prop <> invlth_add_sinum' thm
R139822:139830 CertiOS.framework.model.language <> higherint def
R139872:139875 Coq.Init.Datatypes <> true constr
R139884:139886 Coq.Init.Datatypes <> nil constr
R139847:139859 CertiOS.framework.proof.invariant_prop <> isr_true_S_i' thm
R139872:139875 Coq.Init.Datatypes <> true constr
R139884:139886 Coq.Init.Datatypes <> nil constr
R139847:139859 CertiOS.framework.proof.invariant_prop <> isr_true_S_i' thm
R139912:139928 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus' thm
R139912:139928 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus' thm
R139943:139945 Coq.Init.Logic <> :type_scope:x_'='_x not
R139946:139950 CertiOS.framework.auxlibs.Maps <> merge meth
R139943:139945 Coq.Init.Logic <> :type_scope:x_'='_x not
R139946:139950 CertiOS.framework.auxlibs.Maps <> merge meth
R139970:139984 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R139970:139984 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R140005:140007 Coq.Init.Logic <> :type_scope:x_'='_x not
R140008:140012 CertiOS.framework.auxlibs.Maps <> merge meth
R140005:140007 Coq.Init.Logic <> :type_scope:x_'='_x not
R140008:140012 CertiOS.framework.auxlibs.Maps <> merge meth
R140032:140046 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R140032:140046 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R140074:140090 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus' thm
R140074:140090 CertiOS.framework.proof.invariant_prop <> invlth_isr_minus' thm
R140108:140119 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R140108:140119 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R140138:140149 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R140138:140149 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R140169:140177 CertiOS.framework.logic.assertion <> inv_ieoff def
R140336:140345 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R140336:140345 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R140389:140396 CertiOS.tactics.basetac.join_lib <> join_emp thm
R140389:140396 CertiOS.tactics.basetac.join_lib <> join_emp thm
R140413:140420 CertiOS.tactics.basetac.join_lib <> join_emp thm
R140413:140420 CertiOS.tactics.basetac.join_lib <> join_emp thm
R140447:140455 CertiOS.framework.logic.assertion <> emposabst def
R140480:140493 CertiOS.framework.proof.invariant_prop <> eq_dom_env_emp thm
R140480:140493 CertiOS.framework.proof.invariant_prop <> eq_dom_env_emp thm
R140505:140511 CertiOS.framework.logic.inferules <> CurLINV def
R140523:140529 CertiOS.framework.logic.inferules <> p_local def
R140547:140550 CertiOS.framework.logic.inferules <> satp def
R140647:140655 CertiOS.framework.proof.invariant_prop <> sat_split thm
R140647:140655 CertiOS.framework.proof.invariant_prop <> sat_split thm
R140679:140688 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R140679:140688 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R140703:140707 CertiOS.framework.auxlibs.Maps <> merge meth
R140703:140707 CertiOS.framework.auxlibs.Maps <> merge meth
R140730:140734 CertiOS.framework.auxlibs.Maps <> merge meth
R140730:140734 CertiOS.framework.auxlibs.Maps <> merge meth
R140770:140777 CertiOS.framework.auxlibs.Maps <> disjoint def
R140770:140777 CertiOS.framework.auxlibs.Maps <> disjoint def
R140799:140824 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R140799:140824 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R140842:140853 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R140842:140853 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R140886:140888 Coq.Init.Logic <> :type_scope:x_'='_x not
R140872:140876 CertiOS.framework.auxlibs.Maps <> merge meth
R140889:140893 CertiOS.framework.auxlibs.Maps <> merge meth
R140886:140888 Coq.Init.Logic <> :type_scope:x_'='_x not
R140872:140876 CertiOS.framework.auxlibs.Maps <> merge meth
R140889:140893 CertiOS.framework.auxlibs.Maps <> merge meth
R140915:140932 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R140915:140932 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R140974:141001 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R140974:141001 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R141018:141029 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141018:141029 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141048:141055 CertiOS.framework.auxlibs.Maps <> disjoint def
R141048:141055 CertiOS.framework.auxlibs.Maps <> disjoint def
R141077:141105 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R141077:141105 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R141123:141134 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141123:141134 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141167:141169 Coq.Init.Logic <> :type_scope:x_'='_x not
R141153:141157 CertiOS.framework.auxlibs.Maps <> merge meth
R141170:141174 CertiOS.framework.auxlibs.Maps <> merge meth
R141167:141169 Coq.Init.Logic <> :type_scope:x_'='_x not
R141153:141157 CertiOS.framework.auxlibs.Maps <> merge meth
R141170:141174 CertiOS.framework.auxlibs.Maps <> merge meth
R141196:141213 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R141196:141213 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R141255:141285 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R141255:141285 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> osabst_join_disjoint_join_merge thm
R141302:141313 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141302:141313 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141331:141340 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R141331:141340 CertiOS.framework.proof.invariant_prop <> sat_split' thm
R141390:141404 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R141390:141404 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R141415:141423 CertiOS.tactics.basetac.join_lib <> join_comm thm
R141415:141423 CertiOS.tactics.basetac.join_lib <> join_comm thm
R141442:141449 CertiOS.framework.auxlibs.Maps <> disjoint def
R141442:141449 CertiOS.framework.auxlibs.Maps <> disjoint def
R141468:141493 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R141468:141493 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R141511:141522 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141511:141522 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141539:141550 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141539:141550 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141562:141587 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R141562:141587 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R141606:141620 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R141606:141620 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R141631:141639 CertiOS.tactics.basetac.join_lib <> join_comm thm
R141631:141639 CertiOS.tactics.basetac.join_lib <> join_comm thm
R141658:141665 CertiOS.framework.auxlibs.Maps <> disjoint def
R141658:141665 CertiOS.framework.auxlibs.Maps <> disjoint def
R141684:141712 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R141684:141712 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R141730:141741 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141730:141741 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141758:141769 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141758:141769 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R141781:141809 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
R141781:141809 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_disjoint_disjoint thm
prf 141847:141864 <> inv_substask_emple
R141888:141890 CertiOS.framework.model.memory <> env def
R141899:141901 CertiOS.framework.model.memory <> mem def
R141910:141912 CertiOS.framework.model.language <> isr def
R141932:141938 CertiOS.framework.model.language <> localst def
R141947:141949 CertiOS.framework.model.memory <> mem def
R141958:141963 CertiOS.framework.model.language <> osabst def
R141971:141973 CertiOS.framework.logic.assertion <> Inv def
R142037:142044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142045:142048 CertiOS.framework.logic.inferules <> satp def
R142101:142103 CertiOS.framework.logic.assertion <> INV def
R142105:142105 CertiOS.framework.proof.invariant_prop <> I var
R142097:142098 CertiOS.framework.proof.invariant_prop <> Os var
R142051:142060 CertiOS.framework.logic.assertion <> substaskst def
R142093:142094 CertiOS.framework.proof.invariant_prop <> Ms var
R142062:142062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142067:142069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142077:142079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142082:142083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142086:142087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142091:142091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142063:142066 CertiOS.framework.proof.invariant_prop <> genv var
R142074:142076 CertiOS.framework.model.memory <> env def
R142070:142072 CertiOS.framework.auxlibs.Maps <> emp meth
R142080:142081 CertiOS.framework.proof.invariant_prop <> M1 var
R142084:142085 CertiOS.framework.proof.invariant_prop <> ir var
R142088:142090 CertiOS.framework.proof.invariant_prop <> aux var
R141981:141984 CertiOS.framework.logic.inferules <> satp def
R142031:142033 CertiOS.framework.logic.assertion <> INV def
R142035:142035 CertiOS.framework.proof.invariant_prop <> I var
R142028:142029 CertiOS.framework.proof.invariant_prop <> Os var
R141987:141996 CertiOS.framework.logic.assertion <> substaskst def
R142024:142025 CertiOS.framework.proof.invariant_prop <> Ms var
R141998:141998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142003:142004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142009:142010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142013:142014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142017:142018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142022:142022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141999:142002 CertiOS.framework.proof.invariant_prop <> genv var
R142005:142008 CertiOS.framework.proof.invariant_prop <> lenv var
R142011:142012 CertiOS.framework.proof.invariant_prop <> M1 var
R142015:142016 CertiOS.framework.proof.invariant_prop <> ir var
R142019:142021 CertiOS.framework.proof.invariant_prop <> aux var
R142135:142138 CertiOS.framework.logic.inferules <> satp def
R142155:142164 CertiOS.framework.logic.assertion <> substaskst def
R142211:142224 CertiOS.framework.proof.invariant_prop <> INV_irrev_prop thm
R142211:142224 CertiOS.framework.proof.invariant_prop <> INV_irrev_prop thm
prf 142246:142251 <> bp_bpa
R142271:142278 CertiOS.framework.model.language <> progunit def
R142287:142293 CertiOS.framework.model.language <> intunit def
R142301:142306 CertiOS.framework.model.language <> osspec def
R142324:142329 CertiOS.framework.model.language <> taskst def
R142337:142342 CertiOS.framework.model.language <> osabst def
R142354:142361 CertiOS.framework.model.memory <> decllist ind
R142379:142383 CertiOS.framework.model.language <> stmts ind
R142392:142398 CertiOS.framework.model.memory <> vallist def
R142407:142410 CertiOS.framework.logic.assertion <> asrt ind
R142418:142421 CertiOS.framework.model.memory <> type ind
R142440:142443 Coq.Init.Datatypes <> list ind
R142445:142448 CertiOS.framework.model.memory <> type ind
R142456:142458 CertiOS.framework.model.language <> fid def
R142467:142470 CertiOS.framework.logic.assertion <> asrt ind
R142479:142486 CertiOS.framework.model.language <> api_code def
R142504:142506 CertiOS.framework.model.memory <> env def
R142546:142553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142580:142587 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142626:142633 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142699:142706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142743:142750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142751:142751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142938:142946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142972:142975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143001:143004 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R142995:142998 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R142976:142976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142978:142979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142981:142982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142994:142994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142977:142977 CertiOS.framework.proof.invariant_prop <> o var
R142980:142980 CertiOS.framework.proof.invariant_prop <> O var
R142983:142984 CertiOS.framework.proof.invariant_prop <> ab var
R142987:142989 Coq.Lists.List <> rev def
R142991:142992 CertiOS.framework.proof.invariant_prop <> vl var
R142999:143000 CertiOS.framework.proof.invariant_prop <> pf var
R143005:143008 CertiOS.framework.logic.inferules <> satp def
R143015:143021 CertiOS.framework.logic.inferules <> CurLINV def
R143029:143031 CertiOS.framework.proof.invariant_prop <> tid var
R143023:143027 CertiOS.framework.proof.invariant_prop <> lasrt var
R143012:143012 CertiOS.framework.proof.invariant_prop <> O var
R143010:143010 CertiOS.framework.proof.invariant_prop <> o var
R142968:142970 Coq.Init.Logic <> :type_scope:x_'='_x not
R142947:142954 CertiOS.framework.model.opsem <> get_genv def
R142957:142964 CertiOS.framework.model.language <> get_smem def
R142966:142966 CertiOS.framework.proof.invariant_prop <> o var
R142971:142971 CertiOS.framework.proof.invariant_prop <> G var
R142765:142769 CertiOS.framework.logic.assertion <> absop def
R142790:142802 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R142779:142779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142781:142782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142784:142785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142789:142789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142780:142780 CertiOS.framework.proof.invariant_prop <> o var
R142783:142783 CertiOS.framework.proof.invariant_prop <> O var
R142786:142788 CertiOS.framework.proof.invariant_prop <> ab0 var
R142803:142803 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142884:142897 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142806:142809 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142804:142805 CertiOS.framework.proof.invariant_prop <> p' var
R142835:142838 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142810:142816 CertiOS.framework.logic.inferules <> p_local def
R142828:142834 CertiOS.framework.logic.inferules <> init_lg def
R142824:142826 CertiOS.framework.proof.invariant_prop <> tid var
R142818:142822 CertiOS.framework.proof.invariant_prop <> lasrt var
R142847:142850 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142839:142841 CertiOS.framework.logic.assertion <> Aie constr
R142843:142846 Coq.Init.Datatypes <> true constr
R142858:142861 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142851:142853 CertiOS.framework.logic.assertion <> Ais constr
R142855:142857 Coq.Init.Datatypes <> nil constr
R142869:142872 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R142862:142864 CertiOS.framework.logic.assertion <> Acs constr
R142866:142868 Coq.Init.Datatypes <> nil constr
R142873:142876 CertiOS.framework.logic.assertion <> Aisr constr
R142878:142883 CertiOS.framework.model.language <> empisr def
R142898:142907 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R142910:142919 CertiOS.framework.logic.inferules <> getlenvdom def
R142922:142929 CertiOS.framework.model.opsem <> revlcons def
R142934:142935 CertiOS.framework.proof.invariant_prop <> d2 var
R142931:142932 CertiOS.framework.proof.invariant_prop <> d1 var
R142733:142735 Coq.Init.Logic <> :type_scope:x_'='_x not
R142707:142712 CertiOS.framework.logic.inferules <> buildp def
R142731:142732 CertiOS.framework.proof.invariant_prop <> vl var
R142715:142722 CertiOS.framework.model.opsem <> revlcons def
R142727:142728 CertiOS.framework.proof.invariant_prop <> d2 var
R142724:142725 CertiOS.framework.proof.invariant_prop <> d1 var
R142736:142739 Coq.Init.Datatypes <> Some constr
R142741:142742 CertiOS.framework.proof.invariant_prop <> p' var
R142641:142643 Coq.Init.Logic <> :type_scope:x_'='_x not
R142634:142637 Coq.Init.Datatypes <> Some constr
R142639:142640 CertiOS.framework.proof.invariant_prop <> pf var
R142644:142652 CertiOS.framework.proof.auxdef <> BuildPreA def
R142692:142698 CertiOS.framework.logic.inferules <> init_lg def
R142688:142690 CertiOS.framework.proof.invariant_prop <> tid var
R142682:142686 CertiOS.framework.proof.invariant_prop <> lasrt var
R142680:142680 CertiOS.framework.proof.invariant_prop <> G var
R142677:142678 CertiOS.framework.proof.invariant_prop <> vl var
R142659:142659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142662:142663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142675:142675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142660:142661 CertiOS.framework.proof.invariant_prop <> ab var
R142664:142664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142666:142667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142674:142674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142665:142665 CertiOS.framework.proof.invariant_prop <> t var
R142668:142670 Coq.Lists.List <> rev def
R142672:142673 CertiOS.framework.proof.invariant_prop <> tl var
R142657:142657 CertiOS.framework.proof.invariant_prop <> f var
R142654:142655 CertiOS.framework.proof.invariant_prop <> po var
R142601:142603 Coq.Init.Logic <> :type_scope:x_'='_x not
R142588:142590 Coq.Init.Datatypes <> fst def
R142600:142600 CertiOS.framework.proof.invariant_prop <> f var
R142593:142595 Coq.Init.Datatypes <> fst def
R142597:142597 CertiOS.framework.proof.invariant_prop <> A var
R142604:142607 Coq.Init.Datatypes <> Some constr
R142609:142609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142612:142613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142625:142625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142610:142611 CertiOS.framework.proof.invariant_prop <> ab var
R142614:142614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142616:142617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142624:142624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142615:142615 CertiOS.framework.proof.invariant_prop <> t var
R142618:142620 Coq.Lists.List <> rev def
R142622:142623 CertiOS.framework.proof.invariant_prop <> tl var
R142558:142560 Coq.Init.Logic <> :type_scope:x_'='_x not
R142554:142555 CertiOS.framework.proof.invariant_prop <> po var
R142557:142557 CertiOS.framework.proof.invariant_prop <> f var
R142561:142564 Coq.Init.Datatypes <> Some constr
R142566:142566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142568:142569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142572:142573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142576:142577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142579:142579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142567:142567 CertiOS.framework.proof.invariant_prop <> t var
R142570:142571 CertiOS.framework.proof.invariant_prop <> d1 var
R142574:142575 CertiOS.framework.proof.invariant_prop <> d2 var
R142578:142578 CertiOS.framework.proof.invariant_prop <> s var
R142524:142530 CertiOS.framework.proof.auxdef <> eqdomOS def
R142545:142545 CertiOS.framework.proof.invariant_prop <> A var
R142532:142532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142535:142536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142539:142540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142543:142543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142533:142534 CertiOS.framework.proof.invariant_prop <> po var
R142537:142538 CertiOS.framework.proof.invariant_prop <> pi var
R142541:142542 CertiOS.framework.proof.invariant_prop <> ip var
R143075:143083 CertiOS.framework.proof.auxdef <> BuildPreA def
R143144:143154 CertiOS.framework.logic.inferules <> dl_vl_match def
R143160:143162 Coq.Lists.List <> rev def
R143144:143154 CertiOS.framework.logic.inferules <> dl_vl_match def
R143160:143162 Coq.Lists.List <> rev def
R143249:143251 Coq.Lists.List <> rev def
R143249:143251 Coq.Lists.List <> rev def
R143291:143294 CertiOS.framework.logic.inferules <> satp def
R143344:143350 CertiOS.framework.logic.inferules <> CurLINV def
R143362:143368 CertiOS.framework.logic.inferules <> p_local def
R143386:143392 CertiOS.framework.logic.inferules <> init_lg def
R143386:143392 CertiOS.framework.logic.inferules <> init_lg def
prf 143440:143453 <> build_api_asrt
R143475:143482 CertiOS.framework.model.language <> progunit def
R143491:143497 CertiOS.framework.model.language <> intunit def
R143505:143510 CertiOS.framework.model.language <> osspec def
R143531:143538 CertiOS.framework.model.memory <> decllist ind
R143547:143550 Coq.Init.Datatypes <> list ind
R143552:143554 CertiOS.framework.model.memory <> val ind
R143563:143566 CertiOS.framework.logic.assertion <> asrt ind
R143584:143587 CertiOS.framework.model.memory <> type ind
R143595:143599 CertiOS.framework.model.language <> stmts ind
R143607:143609 CertiOS.framework.model.language <> fid def
R143617:143619 CertiOS.framework.model.memory <> env def
R143667:143674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143697:143704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143731:143738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143775:143782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R143783:143789 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R143791:143791 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R143793:143793 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R143796:143796 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R143799:143806 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R143836:143845 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R143820:143822 Coq.Init.Logic <> :type_scope:x_'='_x not
R143807:143809 Coq.Init.Datatypes <> fst def
R143819:143819 CertiOS.framework.proof.invariant_prop <> f var
R143812:143814 Coq.Init.Datatypes <> fst def
R143816:143816 CertiOS.framework.proof.invariant_prop <> A var
R143823:143826 Coq.Init.Datatypes <> Some constr
R143828:143828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143831:143832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143835:143835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143901:143910 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R143852:143854 Coq.Init.Logic <> :type_scope:x_'='_x not
R143846:143849 Coq.Init.Datatypes <> Some constr
R143855:143863 CertiOS.framework.proof.auxdef <> BuildPreA def
R143894:143900 CertiOS.framework.logic.inferules <> init_lg def
R143890:143892 CertiOS.framework.proof.invariant_prop <> tid var
R143884:143888 CertiOS.framework.proof.invariant_prop <> lasrt var
R143882:143882 CertiOS.framework.proof.invariant_prop <> G var
R143879:143880 CertiOS.framework.proof.invariant_prop <> vl var
R143870:143870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143873:143874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143877:143877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143868:143868 CertiOS.framework.proof.invariant_prop <> f var
R143865:143866 CertiOS.framework.proof.invariant_prop <> po var
R143917:143919 Coq.Init.Logic <> :type_scope:x_'='_x not
R143911:143914 Coq.Init.Datatypes <> Some constr
R143920:143928 CertiOS.framework.proof.auxdef <> BuildRetA def
R143959:143965 CertiOS.framework.logic.inferules <> init_lg def
R143955:143957 CertiOS.framework.proof.invariant_prop <> tid var
R143949:143953 CertiOS.framework.proof.invariant_prop <> lasrt var
R143947:143947 CertiOS.framework.proof.invariant_prop <> G var
R143944:143945 CertiOS.framework.proof.invariant_prop <> vl var
R143935:143935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143938:143939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143942:143942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143933:143933 CertiOS.framework.proof.invariant_prop <> f var
R143930:143931 CertiOS.framework.proof.invariant_prop <> po var
R143765:143767 Coq.Init.Logic <> :type_scope:x_'='_x not
R143739:143744 CertiOS.framework.logic.inferules <> buildp def
R143763:143764 CertiOS.framework.proof.invariant_prop <> vl var
R143747:143754 CertiOS.framework.model.opsem <> revlcons def
R143759:143760 CertiOS.framework.proof.invariant_prop <> d2 var
R143756:143757 CertiOS.framework.proof.invariant_prop <> d1 var
R143768:143771 Coq.Init.Datatypes <> Some constr
R143773:143774 CertiOS.framework.proof.invariant_prop <> p' var
R143709:143711 Coq.Init.Logic <> :type_scope:x_'='_x not
R143705:143706 CertiOS.framework.proof.invariant_prop <> po var
R143708:143708 CertiOS.framework.proof.invariant_prop <> f var
R143712:143715 Coq.Init.Datatypes <> Some constr
R143717:143717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143719:143720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143723:143724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143727:143728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143730:143730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143718:143718 CertiOS.framework.proof.invariant_prop <> t var
R143721:143722 CertiOS.framework.proof.invariant_prop <> d1 var
R143725:143726 CertiOS.framework.proof.invariant_prop <> d2 var
R143729:143729 CertiOS.framework.proof.invariant_prop <> s var
R143675:143681 CertiOS.framework.proof.auxdef <> eqdomOS def
R143696:143696 CertiOS.framework.proof.invariant_prop <> A var
R143683:143683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143686:143687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143690:143691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143694:143694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R143684:143685 CertiOS.framework.proof.invariant_prop <> po var
R143688:143689 CertiOS.framework.proof.invariant_prop <> pi var
R143692:143693 CertiOS.framework.proof.invariant_prop <> ip var
R143660:143662 Coq.Init.Logic <> :type_scope:x_'='_x not
R143637:143647 CertiOS.framework.logic.inferules <> dl_vl_match def
R143653:143655 Coq.Lists.List <> rev def
R143657:143658 CertiOS.framework.proof.invariant_prop <> vl var
R143649:143650 CertiOS.framework.proof.invariant_prop <> d1 var
R143663:143666 Coq.Init.Datatypes <> true constr
R144008:144014 CertiOS.framework.proof.auxdef <> eqdomOS def
R144053:144059 CertiOS.framework.proof.rulesoundlib <> cjy_and def
R144053:144059 CertiOS.framework.proof.rulesoundlib <> cjy_and def
R144117:144123 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144128:144129 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144134:144136 Coq.Init.Logic <> :type_scope:x_'='_x not
R144137:144140 Coq.Init.Datatypes <> Some constr
R144117:144123 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144128:144129 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144134:144136 Coq.Init.Logic <> :type_scope:x_'='_x not
R144137:144140 Coq.Init.Datatypes <> Some constr
R144287:144295 CertiOS.framework.proof.auxdef <> BuildPreA def
R144298:144306 CertiOS.framework.proof.auxdef <> BuildRetA def
R144362:144368 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144370:144371 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144395:144397 Coq.Init.Logic <> :type_scope:x_'='_x not
R144372:144377 CertiOS.framework.logic.inferules <> buildq def
R144380:144387 CertiOS.framework.model.opsem <> revlcons def
R144398:144401 Coq.Init.Datatypes <> Some constr
R144362:144368 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144370:144371 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R144395:144397 Coq.Init.Logic <> :type_scope:x_'='_x not
R144372:144377 CertiOS.framework.logic.inferules <> buildq def
R144380:144387 CertiOS.framework.model.opsem <> revlcons def
R144398:144401 Coq.Init.Datatypes <> Some constr
R144459:144466 CertiOS.framework.model.opsem <> revlcons def
R144459:144466 CertiOS.framework.model.opsem <> revlcons def
R144539:144542 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R144517:144520 Coq.Init.Datatypes <> negb def
R144523:144533 CertiOS.framework.logic.inferules <> in_decllist def
R144543:144555 CertiOS.framework.logic.inferules <> good_decllist def
R144539:144542 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R144517:144520 Coq.Init.Datatypes <> negb def
R144523:144533 CertiOS.framework.logic.inferules <> in_decllist def
R144543:144555 CertiOS.framework.logic.inferules <> good_decllist def
R144608:144613 CertiOS.framework.logic.inferules <> buildp def
R144617:144619 Coq.Init.Datatypes <> nil constr
R144608:144613 CertiOS.framework.logic.inferules <> buildp def
R144617:144619 Coq.Init.Datatypes <> nil constr
R144743:144748 CertiOS.framework.logic.inferules <> buildp def
R144743:144748 CertiOS.framework.logic.inferules <> buildp def
R144897:144903 CertiOS.framework.proof.rulesoundlib <> cjy_and def
prf 144967:144976 <> retv_spec1
R144994:144999 CertiOS.framework.model.language <> taskst def
R145007:145012 CertiOS.framework.model.language <> osabst def
R145021:145025 CertiOS.framework.model.language <> osapi def
R145045:145049 CertiOS.framework.logic.assertion <> absop def
R145057:145063 CertiOS.framework.logic.assertion <> retasrt def
R145072:145078 CertiOS.framework.model.memory <> vallist def
R145097:145104 CertiOS.framework.model.language <> progunit def
R145112:145114 CertiOS.framework.model.memory <> val ind
R145122:145124 CertiOS.framework.model.language <> fid def
R145132:145134 CertiOS.framework.model.memory <> env def
R145197:145204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R145230:145237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R145238:145244 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R145246:145253 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R145254:145259 CertiOS.framework.proof.rulesoundlib <> freels ind
R145297:145303 CertiOS.framework.model.opsem <> get_mem def
R145306:145313 CertiOS.framework.model.language <> get_smem def
R145315:145315 CertiOS.framework.proof.invariant_prop <> o var
R145262:145268 CertiOS.framework.model.opsem <> getaddr def
R145271:145273 Coq.Init.Datatypes <> snd def
R145276:145278 Coq.Init.Datatypes <> fst def
R145281:145288 CertiOS.framework.model.language <> get_smem def
R145290:145290 CertiOS.framework.proof.invariant_prop <> o var
R145216:145219 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145205:145205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145207:145208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145210:145211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145215:145215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145206:145206 CertiOS.framework.proof.invariant_prop <> o var
R145209:145209 CertiOS.framework.proof.invariant_prop <> O var
R145212:145214 CertiOS.framework.proof.invariant_prop <> abs var
R145220:145220 CertiOS.framework.proof.invariant_prop <> R var
R145223:145226 Coq.Init.Datatypes <> Some constr
R145228:145228 CertiOS.framework.proof.invariant_prop <> v var
R145156:145158 Coq.Init.Logic <> :type_scope:x_'='_x not
R145150:145153 Coq.Init.Datatypes <> Some constr
R145155:145155 CertiOS.framework.proof.invariant_prop <> R var
R145159:145167 CertiOS.framework.proof.auxdef <> BuildRetA def
R145190:145196 CertiOS.framework.logic.inferules <> init_lg def
R145188:145188 CertiOS.framework.proof.invariant_prop <> t var
R145182:145186 CertiOS.framework.proof.invariant_prop <> lasrt var
R145180:145180 CertiOS.framework.proof.invariant_prop <> G var
R145177:145178 CertiOS.framework.proof.invariant_prop <> vl var
R145174:145175 CertiOS.framework.proof.invariant_prop <> ab var
R145172:145172 CertiOS.framework.proof.invariant_prop <> f var
R145169:145170 CertiOS.framework.proof.invariant_prop <> po var
R145431:145436 CertiOS.framework.logic.inferules <> buildq def
R145439:145446 CertiOS.framework.model.opsem <> revlcons def
R145431:145436 CertiOS.framework.logic.inferules <> buildq def
R145439:145446 CertiOS.framework.model.opsem <> revlcons def
R145623:145624 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R145625:145627 Coq.Init.Datatypes <> nil constr
R145623:145624 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R145625:145627 Coq.Init.Datatypes <> nil constr
R145705:145706 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R145707:145709 Coq.Init.Datatypes <> nil constr
R145705:145706 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R145707:145709 Coq.Init.Datatypes <> nil constr
R145776:145785 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R145776:145785 CertiOS.framework.proof.rulesoundlib <> free_intro thm
prf 145843:145858 <> os_env_aop_irrev
R145987:145994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R146021:146030 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145995:145995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145997:145998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146002:146003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146005:146006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146008:146009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146011:146012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146014:146015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146020:146020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145996:145996 CertiOS.framework.proof.invariant_prop <> e var
R145999:146001 CertiOS.framework.proof.invariant_prop <> e0' var
R146004:146004 CertiOS.framework.proof.invariant_prop <> m var
R146007:146007 CertiOS.framework.proof.invariant_prop <> i var
R146010:146010 CertiOS.framework.proof.invariant_prop <> l var
R146013:146013 CertiOS.framework.proof.invariant_prop <> O var
R146016:146019 CertiOS.framework.proof.invariant_prop <> aop' var
R146037:146040 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R146031:146033 CertiOS.framework.logic.assertion <> Aie constr
R146035:146036 CertiOS.framework.proof.invariant_prop <> ie var
R146047:146050 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R146041:146043 CertiOS.framework.logic.assertion <> Ais constr
R146045:146046 CertiOS.framework.proof.invariant_prop <> is var
R146057:146060 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R146051:146053 CertiOS.framework.logic.assertion <> Acs constr
R146055:146056 CertiOS.framework.proof.invariant_prop <> cs var
R146061:146064 CertiOS.framework.logic.assertion <> Aisr constr
R146066:146068 CertiOS.framework.proof.invariant_prop <> isr var
R145939:145948 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145915:145915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145917:145918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145921:145922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145924:145925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145927:145928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145930:145931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145933:145934 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145938:145938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145916:145916 CertiOS.framework.proof.invariant_prop <> e var
R145919:145920 CertiOS.framework.proof.invariant_prop <> e0 var
R145923:145923 CertiOS.framework.proof.invariant_prop <> m var
R145926:145926 CertiOS.framework.proof.invariant_prop <> i var
R145929:145929 CertiOS.framework.proof.invariant_prop <> l var
R145932:145932 CertiOS.framework.proof.invariant_prop <> O var
R145935:145937 CertiOS.framework.proof.invariant_prop <> aop var
R145955:145958 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R145949:145951 CertiOS.framework.logic.assertion <> Aie constr
R145953:145954 CertiOS.framework.proof.invariant_prop <> ie var
R145965:145968 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R145959:145961 CertiOS.framework.logic.assertion <> Ais constr
R145963:145964 CertiOS.framework.proof.invariant_prop <> is var
R145975:145978 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R145969:145971 CertiOS.framework.logic.assertion <> Acs constr
R145973:145974 CertiOS.framework.proof.invariant_prop <> cs var
R145979:145982 CertiOS.framework.logic.assertion <> Aisr constr
R145984:145986 CertiOS.framework.proof.invariant_prop <> isr var
R146176:146183 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146176:146183 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146200:146207 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146200:146207 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146225:146233 CertiOS.framework.logic.assertion <> emposabst def
R146290:146297 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146290:146297 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146314:146321 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146314:146321 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146339:146347 CertiOS.framework.logic.assertion <> emposabst def
R146406:146413 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146406:146413 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146430:146437 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146430:146437 CertiOS.tactics.basetac.join_lib <> join_emp thm
R146455:146463 CertiOS.framework.logic.assertion <> emposabst def
prf 146510:146518 <> retv_spec
R146536:146541 CertiOS.framework.model.language <> taskst def
R146549:146554 CertiOS.framework.model.language <> osabst def
R146563:146567 CertiOS.framework.model.language <> osapi def
R146587:146591 CertiOS.framework.logic.assertion <> absop def
R146599:146605 CertiOS.framework.logic.assertion <> retasrt def
R146614:146620 CertiOS.framework.model.memory <> vallist def
R146639:146646 CertiOS.framework.model.language <> progunit def
R146654:146656 CertiOS.framework.model.memory <> val ind
R146664:146666 CertiOS.framework.model.language <> fid def
R146674:146676 CertiOS.framework.model.memory <> env def
R146739:146746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R146772:146779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R146780:146786 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146788:146795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146875:146878 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R146796:146801 CertiOS.framework.proof.rulesoundlib <> freels ind
R146839:146845 CertiOS.framework.model.opsem <> get_mem def
R146848:146855 CertiOS.framework.model.language <> get_smem def
R146857:146857 CertiOS.framework.proof.invariant_prop <> o var
R146804:146810 CertiOS.framework.model.opsem <> getaddr def
R146813:146815 Coq.Init.Datatypes <> snd def
R146818:146820 Coq.Init.Datatypes <> fst def
R146823:146830 CertiOS.framework.model.language <> get_smem def
R146832:146832 CertiOS.framework.proof.invariant_prop <> o var
R146879:146888 CertiOS.framework.proof.auxdef <> InitTaskSt def
R146898:146898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146925:146926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146928:146928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146899:146907 CertiOS.framework.proof.auxdef <> emple_tst def
R146910:146919 CertiOS.framework.logic.assertion <> substaskst def
R146921:146921 CertiOS.framework.proof.invariant_prop <> o var
R146927:146927 CertiOS.framework.proof.invariant_prop <> O var
R146896:146896 CertiOS.framework.proof.invariant_prop <> t var
R146890:146894 CertiOS.framework.proof.invariant_prop <> lasrt var
R146758:146761 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R146747:146747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146749:146750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146752:146753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146757:146757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146748:146748 CertiOS.framework.proof.invariant_prop <> o var
R146751:146751 CertiOS.framework.proof.invariant_prop <> O var
R146754:146756 CertiOS.framework.proof.invariant_prop <> abs var
R146762:146762 CertiOS.framework.proof.invariant_prop <> R var
R146765:146768 Coq.Init.Datatypes <> Some constr
R146770:146770 CertiOS.framework.proof.invariant_prop <> v var
R146698:146700 Coq.Init.Logic <> :type_scope:x_'='_x not
R146692:146695 Coq.Init.Datatypes <> Some constr
R146697:146697 CertiOS.framework.proof.invariant_prop <> R var
R146701:146709 CertiOS.framework.proof.auxdef <> BuildRetA def
R146732:146738 CertiOS.framework.logic.inferules <> init_lg def
R146730:146730 CertiOS.framework.proof.invariant_prop <> t var
R146724:146728 CertiOS.framework.proof.invariant_prop <> lasrt var
R146722:146722 CertiOS.framework.proof.invariant_prop <> G var
R146719:146720 CertiOS.framework.proof.invariant_prop <> vl var
R146716:146717 CertiOS.framework.proof.invariant_prop <> ab var
R146714:146714 CertiOS.framework.proof.invariant_prop <> f var
R146711:146712 CertiOS.framework.proof.invariant_prop <> po var
R147026:147031 CertiOS.framework.logic.inferules <> buildq def
R147034:147041 CertiOS.framework.model.opsem <> revlcons def
R147026:147031 CertiOS.framework.logic.inferules <> buildq def
R147034:147041 CertiOS.framework.model.opsem <> revlcons def
R147218:147219 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147220:147222 Coq.Init.Datatypes <> nil constr
R147218:147219 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147220:147222 Coq.Init.Datatypes <> nil constr
R147300:147301 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147302:147304 Coq.Init.Datatypes <> nil constr
R147300:147301 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147302:147304 Coq.Init.Datatypes <> nil constr
R147371:147380 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R147371:147380 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R147478:147481 CertiOS.framework.logic.inferules <> satp def
R147500:147506 CertiOS.framework.logic.inferules <> p_local def
R147552:147553 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147554:147556 Coq.Init.Datatypes <> nil constr
R147552:147553 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147554:147556 Coq.Init.Datatypes <> nil constr
R147610:147611 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147612:147614 Coq.Init.Datatypes <> nil constr
R147610:147611 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147612:147614 Coq.Init.Datatypes <> nil constr
R147646:147647 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147648:147650 Coq.Init.Datatypes <> nil constr
R147646:147647 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147648:147650 Coq.Init.Datatypes <> nil constr
R147668:147670 CertiOS.framework.logic.assertion <> sat def
R147678:147680 CertiOS.framework.logic.assertion <> sat def
R147678:147680 CertiOS.framework.logic.assertion <> sat def
R147762:147769 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147762:147769 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147828:147835 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147828:147835 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147852:147859 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147852:147859 CertiOS.tactics.basetac.join_lib <> join_emp thm
R147945:147946 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147948:147949 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147951:147952 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147954:147955 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147956:147958 Coq.Init.Datatypes <> nil constr
R147945:147946 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147948:147949 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147951:147952 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147954:147955 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147956:147958 Coq.Init.Datatypes <> nil constr
R147988:147989 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147991:147992 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147994:147995 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147997:147998 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147999:148001 Coq.Init.Datatypes <> nil constr
R147988:147989 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147991:147992 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147994:147995 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147997:147998 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R147999:148001 Coq.Init.Datatypes <> nil constr
R148089:148092 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148081:148083 CertiOS.framework.logic.assertion <> Aie constr
R148085:148088 Coq.Init.Datatypes <> true constr
R148100:148103 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148093:148095 CertiOS.framework.logic.assertion <> Ais constr
R148097:148099 Coq.Init.Datatypes <> nil constr
R148111:148114 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148104:148106 CertiOS.framework.logic.assertion <> Acs constr
R148108:148110 Coq.Init.Datatypes <> nil constr
R148115:148118 CertiOS.framework.logic.assertion <> Aisr constr
R148120:148125 CertiOS.framework.model.language <> empisr def
R148089:148092 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148081:148083 CertiOS.framework.logic.assertion <> Aie constr
R148085:148088 Coq.Init.Datatypes <> true constr
R148100:148103 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148093:148095 CertiOS.framework.logic.assertion <> Ais constr
R148097:148099 Coq.Init.Datatypes <> nil constr
R148111:148114 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R148104:148106 CertiOS.framework.logic.assertion <> Acs constr
R148108:148110 Coq.Init.Datatypes <> nil constr
R148115:148118 CertiOS.framework.logic.assertion <> Aisr constr
R148120:148125 CertiOS.framework.model.language <> empisr def
R148233:148241 CertiOS.tactics.basetac.join_lib <> join_comm thm
R148233:148241 CertiOS.tactics.basetac.join_lib <> join_comm thm
R148252:148259 CertiOS.tactics.basetac.join_lib <> join_emp thm
R148252:148259 CertiOS.tactics.basetac.join_lib <> join_emp thm
R148276:148284 CertiOS.tactics.basetac.join_lib <> join_comm thm
R148276:148284 CertiOS.tactics.basetac.join_lib <> join_comm thm
R148295:148302 CertiOS.tactics.basetac.join_lib <> join_emp thm
R148295:148302 CertiOS.tactics.basetac.join_lib <> join_emp thm
R148320:148341 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R148320:148341 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 148394:148401 <> ret_spec
R148419:148424 CertiOS.framework.model.language <> taskst def
R148432:148437 CertiOS.framework.model.language <> osabst def
R148446:148450 CertiOS.framework.model.language <> osapi def
R148470:148474 CertiOS.framework.logic.assertion <> absop def
R148482:148488 CertiOS.framework.logic.assertion <> retasrt def
R148497:148503 CertiOS.framework.model.memory <> vallist def
R148522:148529 CertiOS.framework.model.language <> progunit def
R148537:148539 CertiOS.framework.model.language <> fid def
R148547:148549 CertiOS.framework.model.memory <> env def
R148612:148618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R148640:148647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R148648:148654 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R148656:148663 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R148743:148746 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R148664:148669 CertiOS.framework.proof.rulesoundlib <> freels ind
R148707:148713 CertiOS.framework.model.opsem <> get_mem def
R148716:148723 CertiOS.framework.model.language <> get_smem def
R148725:148725 CertiOS.framework.proof.invariant_prop <> o var
R148672:148678 CertiOS.framework.model.opsem <> getaddr def
R148681:148683 Coq.Init.Datatypes <> snd def
R148686:148688 Coq.Init.Datatypes <> fst def
R148691:148698 CertiOS.framework.model.language <> get_smem def
R148700:148700 CertiOS.framework.proof.invariant_prop <> o var
R148747:148756 CertiOS.framework.proof.auxdef <> InitTaskSt def
R148766:148766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148793:148794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148796:148796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148767:148775 CertiOS.framework.proof.auxdef <> emple_tst def
R148778:148787 CertiOS.framework.logic.assertion <> substaskst def
R148789:148789 CertiOS.framework.proof.invariant_prop <> o var
R148795:148795 CertiOS.framework.proof.invariant_prop <> O var
R148764:148764 CertiOS.framework.proof.invariant_prop <> t var
R148758:148762 CertiOS.framework.proof.invariant_prop <> lasrt var
R148630:148633 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R148619:148619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148621:148622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148624:148625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148629:148629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R148620:148620 CertiOS.framework.proof.invariant_prop <> o var
R148623:148623 CertiOS.framework.proof.invariant_prop <> O var
R148626:148628 CertiOS.framework.proof.invariant_prop <> abs var
R148634:148634 CertiOS.framework.proof.invariant_prop <> R var
R148636:148639 Coq.Init.Datatypes <> None constr
R148571:148573 Coq.Init.Logic <> :type_scope:x_'='_x not
R148565:148568 Coq.Init.Datatypes <> Some constr
R148570:148570 CertiOS.framework.proof.invariant_prop <> R var
R148574:148582 CertiOS.framework.proof.auxdef <> BuildRetA def
R148605:148611 CertiOS.framework.logic.inferules <> init_lg def
R148603:148603 CertiOS.framework.proof.invariant_prop <> t var
R148597:148601 CertiOS.framework.proof.invariant_prop <> lasrt var
R148595:148595 CertiOS.framework.proof.invariant_prop <> G var
R148592:148593 CertiOS.framework.proof.invariant_prop <> vl var
R148589:148590 CertiOS.framework.proof.invariant_prop <> ab var
R148587:148587 CertiOS.framework.proof.invariant_prop <> f var
R148584:148585 CertiOS.framework.proof.invariant_prop <> po var
R148894:148899 CertiOS.framework.logic.inferules <> buildq def
R148902:148909 CertiOS.framework.model.opsem <> revlcons def
R148894:148899 CertiOS.framework.logic.inferules <> buildq def
R148902:148909 CertiOS.framework.model.opsem <> revlcons def
R149086:149087 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149088:149090 Coq.Init.Datatypes <> nil constr
R149086:149087 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149088:149090 Coq.Init.Datatypes <> nil constr
R149168:149169 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149170:149172 Coq.Init.Datatypes <> nil constr
R149168:149169 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149170:149172 Coq.Init.Datatypes <> nil constr
R149239:149248 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R149239:149248 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R149346:149349 CertiOS.framework.logic.inferules <> satp def
R149368:149374 CertiOS.framework.logic.inferules <> p_local def
R149420:149421 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149422:149424 Coq.Init.Datatypes <> nil constr
R149420:149421 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149422:149424 Coq.Init.Datatypes <> nil constr
R149478:149479 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149480:149482 Coq.Init.Datatypes <> nil constr
R149478:149479 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149480:149482 Coq.Init.Datatypes <> nil constr
R149514:149515 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149516:149518 Coq.Init.Datatypes <> nil constr
R149514:149515 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149516:149518 Coq.Init.Datatypes <> nil constr
R149536:149538 CertiOS.framework.logic.assertion <> sat def
R149546:149548 CertiOS.framework.logic.assertion <> sat def
R149546:149548 CertiOS.framework.logic.assertion <> sat def
R149630:149637 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149630:149637 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149696:149703 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149696:149703 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149720:149727 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149720:149727 CertiOS.tactics.basetac.join_lib <> join_emp thm
R149813:149814 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149816:149817 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149819:149820 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149822:149823 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149824:149826 Coq.Init.Datatypes <> nil constr
R149813:149814 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149816:149817 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149819:149820 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149822:149823 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149824:149826 Coq.Init.Datatypes <> nil constr
R149856:149857 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149859:149860 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149862:149863 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149865:149866 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149867:149869 Coq.Init.Datatypes <> nil constr
R149856:149857 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149859:149860 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149862:149863 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149865:149866 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R149867:149869 Coq.Init.Datatypes <> nil constr
R149957:149960 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149949:149951 CertiOS.framework.logic.assertion <> Aie constr
R149953:149956 Coq.Init.Datatypes <> true constr
R149968:149971 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149961:149963 CertiOS.framework.logic.assertion <> Ais constr
R149965:149967 Coq.Init.Datatypes <> nil constr
R149979:149982 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149972:149974 CertiOS.framework.logic.assertion <> Acs constr
R149976:149978 Coq.Init.Datatypes <> nil constr
R149983:149986 CertiOS.framework.logic.assertion <> Aisr constr
R149988:149993 CertiOS.framework.model.language <> empisr def
R149957:149960 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149949:149951 CertiOS.framework.logic.assertion <> Aie constr
R149953:149956 Coq.Init.Datatypes <> true constr
R149968:149971 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149961:149963 CertiOS.framework.logic.assertion <> Ais constr
R149965:149967 Coq.Init.Datatypes <> nil constr
R149979:149982 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R149972:149974 CertiOS.framework.logic.assertion <> Acs constr
R149976:149978 Coq.Init.Datatypes <> nil constr
R149983:149986 CertiOS.framework.logic.assertion <> Aisr constr
R149988:149993 CertiOS.framework.model.language <> empisr def
R150101:150109 CertiOS.tactics.basetac.join_lib <> join_comm thm
R150101:150109 CertiOS.tactics.basetac.join_lib <> join_comm thm
R150120:150127 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150120:150127 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150144:150152 CertiOS.tactics.basetac.join_lib <> join_comm thm
R150144:150152 CertiOS.tactics.basetac.join_lib <> join_comm thm
R150163:150170 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150163:150170 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150188:150209 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R150188:150209 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 150261:150272 <> curtid_irrel
R150358:150365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R150392:150395 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R150366:150366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150368:150369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150373:150374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150376:150377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150379:150380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150382:150383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150385:150386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150391:150391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150367:150367 CertiOS.framework.proof.invariant_prop <> e var
R150370:150372 CertiOS.framework.proof.invariant_prop <> e0' var
R150375:150375 CertiOS.framework.proof.invariant_prop <> M var
R150378:150378 CertiOS.framework.proof.invariant_prop <> i var
R150381:150381 CertiOS.framework.proof.invariant_prop <> l var
R150384:150384 CertiOS.framework.proof.invariant_prop <> O var
R150387:150390 CertiOS.framework.proof.invariant_prop <> aop' var
R150396:150401 CertiOS.framework.logic.inferules <> CurTid def
R150403:150405 CertiOS.framework.proof.invariant_prop <> tid var
R150344:150347 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R150320:150320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150322:150323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150326:150327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150329:150330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150332:150333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150335:150336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150338:150339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150343:150343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150321:150321 CertiOS.framework.proof.invariant_prop <> e var
R150324:150325 CertiOS.framework.proof.invariant_prop <> e0 var
R150328:150328 CertiOS.framework.proof.invariant_prop <> M var
R150331:150331 CertiOS.framework.proof.invariant_prop <> i var
R150334:150334 CertiOS.framework.proof.invariant_prop <> l var
R150337:150337 CertiOS.framework.proof.invariant_prop <> O var
R150340:150342 CertiOS.framework.proof.invariant_prop <> aop var
R150348:150353 CertiOS.framework.logic.inferules <> CurTid def
R150355:150357 CertiOS.framework.proof.invariant_prop <> tid var
R150494:150501 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150494:150501 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150518:150525 CertiOS.tactics.basetac.join_lib <> join_emp thm
R150518:150525 CertiOS.tactics.basetac.join_lib <> join_emp thm
prf 150609:150626 <> free_curlinv_still
R150700:150707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R150761:150768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R150769:150772 CertiOS.framework.logic.inferules <> satp def
R150780:150786 CertiOS.framework.logic.inferules <> CurLINV def
R150794:150796 CertiOS.framework.proof.invariant_prop <> tid var
R150788:150792 CertiOS.framework.proof.invariant_prop <> lasrt var
R150777:150777 CertiOS.framework.proof.invariant_prop <> O var
R150774:150775 CertiOS.framework.proof.invariant_prop <> o' var
R150708:150717 CertiOS.framework.proof.auxdef <> InitTaskSt def
R150729:150729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150757:150758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150760:150760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R150730:150738 CertiOS.framework.proof.auxdef <> emple_tst def
R150741:150750 CertiOS.framework.logic.assertion <> substaskst def
R150755:150755 CertiOS.framework.proof.invariant_prop <> M var
R150752:150753 CertiOS.framework.proof.invariant_prop <> o' var
R150759:150759 CertiOS.framework.proof.invariant_prop <> O var
R150725:150727 CertiOS.framework.proof.invariant_prop <> tid var
R150719:150723 CertiOS.framework.proof.invariant_prop <> lasrt var
R150664:150669 CertiOS.framework.proof.rulesoundlib <> freels ind
R150699:150699 CertiOS.framework.proof.invariant_prop <> M var
R150676:150682 CertiOS.framework.model.opsem <> get_mem def
R150685:150692 CertiOS.framework.model.language <> get_smem def
R150694:150695 CertiOS.framework.proof.invariant_prop <> o' var
R150671:150673 CertiOS.framework.proof.invariant_prop <> al' var
R150899:150902 CertiOS.framework.logic.inferules <> satp def
R150970:150976 CertiOS.framework.logic.inferules <> CurLINV def
R150988:150994 CertiOS.framework.logic.inferules <> init_lg def
R150988:150994 CertiOS.framework.logic.inferules <> init_lg def
R151005:151015 CertiOS.framework.proof.rulesoundlib <> freels_join thm
R151005:151015 CertiOS.framework.proof.rulesoundlib <> freels_join thm
R151076:151087 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R151052:151052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151054:151055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151058:151059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151061:151062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151064:151065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151067:151068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151070:151071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151075:151075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151098:151101 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R151088:151093 CertiOS.framework.logic.inferules <> CurTid def
R151124:151127 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R151102:151105 CertiOS.framework.logic.inferules <> LINV def
R151117:151123 CertiOS.framework.logic.inferules <> init_lg def
R151128:151131 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151138:151139 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151144:151145 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151149:151150 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151154:151154 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151132:151137 CertiOS.framework.model.language <> empisr def
R151140:151143 Coq.Init.Datatypes <> true constr
R151146:151148 Coq.Init.Datatypes <> nil constr
R151151:151153 Coq.Init.Datatypes <> nil constr
R151076:151087 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R151052:151052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151054:151055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151058:151059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151061:151062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151064:151065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151067:151068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151070:151071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151075:151075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151098:151101 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R151088:151093 CertiOS.framework.logic.inferules <> CurTid def
R151124:151127 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R151102:151105 CertiOS.framework.logic.inferules <> LINV def
R151117:151123 CertiOS.framework.logic.inferules <> init_lg def
R151128:151131 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151138:151139 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151144:151145 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151149:151150 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151154:151154 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151132:151137 CertiOS.framework.model.language <> empisr def
R151140:151143 Coq.Init.Datatypes <> true constr
R151146:151148 Coq.Init.Datatypes <> nil constr
R151151:151153 Coq.Init.Datatypes <> nil constr
R151184:151187 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151194:151195 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151200:151201 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151205:151206 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151210:151210 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151188:151193 CertiOS.framework.model.language <> empisr def
R151196:151199 Coq.Init.Datatypes <> true constr
R151202:151204 Coq.Init.Datatypes <> nil constr
R151207:151209 Coq.Init.Datatypes <> nil constr
R151184:151187 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151194:151195 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151200:151201 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151205:151206 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151210:151210 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151188:151193 CertiOS.framework.model.language <> empisr def
R151196:151199 Coq.Init.Datatypes <> true constr
R151202:151204 Coq.Init.Datatypes <> nil constr
R151207:151209 Coq.Init.Datatypes <> nil constr
R151232:151233 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151234:151236 Coq.Init.Datatypes <> nil constr
R151232:151233 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151234:151236 Coq.Init.Datatypes <> nil constr
R151268:151269 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151270:151272 Coq.Init.Datatypes <> nil constr
R151268:151269 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151270:151272 Coq.Init.Datatypes <> nil constr
R151370:151377 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151370:151377 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151425:151432 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151425:151432 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151449:151456 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151449:151456 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151539:151542 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151549:151550 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151555:151556 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151560:151561 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151565:151565 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151543:151548 CertiOS.framework.model.language <> empisr def
R151551:151554 Coq.Init.Datatypes <> true constr
R151557:151559 Coq.Init.Datatypes <> nil constr
R151562:151564 Coq.Init.Datatypes <> nil constr
R151539:151542 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151549:151550 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151555:151556 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151560:151561 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151565:151565 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R151543:151548 CertiOS.framework.model.language <> empisr def
R151551:151554 Coq.Init.Datatypes <> true constr
R151557:151559 Coq.Init.Datatypes <> nil constr
R151562:151564 Coq.Init.Datatypes <> nil constr
R151672:151680 CertiOS.tactics.basetac.join_lib <> join_comm thm
R151689:151696 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151672:151680 CertiOS.tactics.basetac.join_lib <> join_comm thm
R151689:151696 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151713:151721 CertiOS.tactics.basetac.join_lib <> join_comm thm
R151730:151737 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151713:151721 CertiOS.tactics.basetac.join_lib <> join_comm thm
R151730:151737 CertiOS.tactics.basetac.join_lib <> join_emp thm
R151755:151776 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R151755:151776 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R151846:151847 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151848:151850 Coq.Init.Datatypes <> nil constr
R151846:151847 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151848:151850 Coq.Init.Datatypes <> nil constr
R151897:151898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151899:151901 Coq.Init.Datatypes <> nil constr
R151897:151898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R151899:151901 Coq.Init.Datatypes <> nil constr
R151941:151945 CertiOS.framework.auxlibs.Maps <> merge meth
R151941:151945 CertiOS.framework.auxlibs.Maps <> merge meth
R151996:152021 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R151996:152021 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R152040:152047 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152040:152047 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152095:152102 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152095:152102 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152119:152126 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152119:152126 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152209:152212 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152219:152220 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152225:152226 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152230:152231 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152235:152235 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152213:152218 CertiOS.framework.model.language <> empisr def
R152221:152224 Coq.Init.Datatypes <> true constr
R152227:152229 Coq.Init.Datatypes <> nil constr
R152232:152234 Coq.Init.Datatypes <> nil constr
R152209:152212 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152219:152220 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152225:152226 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152230:152231 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152235:152235 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R152213:152218 CertiOS.framework.model.language <> empisr def
R152221:152224 Coq.Init.Datatypes <> true constr
R152227:152229 Coq.Init.Datatypes <> nil constr
R152232:152234 Coq.Init.Datatypes <> nil constr
R152295:152299 CertiOS.framework.auxlibs.Maps <> merge meth
R152295:152299 CertiOS.framework.auxlibs.Maps <> merge meth
R152348:152375 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R152348:152375 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R152393:152414 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R152393:152414 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R152432:152440 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152432:152440 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152489:152497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152506:152513 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152489:152497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152506:152513 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152530:152538 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152547:152554 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152530:152538 CertiOS.tactics.basetac.join_lib <> join_comm thm
R152547:152554 CertiOS.tactics.basetac.join_lib <> join_emp thm
R152572:152593 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
R152572:152593 CertiOS.framework.proof.rulesoundlib <> GoodLocalInvAsrt_irrel thm
prf 152646:152672 <> tmspecmod_remove_emp_eq_emp
R152724:152726 Coq.Init.Logic <> :type_scope:x_'='_x not
R152692:152707 CertiOS.framework.proof.auxdef TMSpecMod remove def
R152723:152723 CertiOS.framework.proof.invariant_prop <> t var
R152709:152721 CertiOS.framework.proof.auxdef TMSpecMod emp def
R152727:152739 CertiOS.framework.proof.auxdef TMSpecMod emp def
R152767:152790 CertiOS.framework.proof.auxdef TMSpecMod extensionality prfax
R152767:152790 CertiOS.framework.proof.auxdef TMSpecMod extensionality prfax
R152810:152822 CertiOS.framework.proof.auxdef TMSpecMod emp def
R152834:152849 CertiOS.framework.proof.auxdef TMSpecMod remove def
R152864:152878 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R152864:152878 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
prf 152904:152930 <> tospecmod_remove_emp_eq_emp
R152982:152984 Coq.Init.Logic <> :type_scope:x_'='_x not
R152950:152965 CertiOS.framework.proof.auxdef TOSpecMod remove def
R152981:152981 CertiOS.framework.proof.invariant_prop <> t var
R152967:152979 CertiOS.framework.proof.auxdef TOSpecMod emp def
R152985:152997 CertiOS.framework.proof.auxdef TOSpecMod emp def
R153025:153048 CertiOS.framework.proof.auxdef TOSpecMod extensionality prfax
R153025:153048 CertiOS.framework.proof.auxdef TOSpecMod extensionality prfax
R153068:153080 CertiOS.framework.proof.auxdef TOSpecMod emp def
R153092:153107 CertiOS.framework.proof.auxdef TOSpecMod remove def
R153122:153136 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R153122:153136 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
def 153168:153178 <> absop_irrel
R153183:153186 CertiOS.framework.logic.assertion <> asrt ind
R153269:153276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R153307:153310 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R153277:153277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153279:153280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153282:153283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153285:153286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153290:153291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153295:153296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153298:153299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153306:153306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153278:153278 CertiOS.framework.proof.invariant_prop <> G var
R153281:153281 CertiOS.framework.proof.invariant_prop <> E var
R153284:153284 CertiOS.framework.proof.invariant_prop <> m var
R153287:153289 CertiOS.framework.proof.invariant_prop <> isr var
R153292:153294 CertiOS.framework.proof.invariant_prop <> aux var
R153297:153297 CertiOS.framework.proof.invariant_prop <> o var
R153300:153305 CertiOS.framework.proof.invariant_prop <> absop' var
R153311:153311 CertiOS.framework.proof.invariant_prop <> P var
R153264:153267 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R153235:153235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153237:153238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153240:153241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153243:153244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153248:153249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153253:153254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153256:153257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153263:153263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153236:153236 CertiOS.framework.proof.invariant_prop <> G var
R153239:153239 CertiOS.framework.proof.invariant_prop <> E var
R153242:153242 CertiOS.framework.proof.invariant_prop <> m var
R153245:153247 CertiOS.framework.proof.invariant_prop <> isr var
R153250:153252 CertiOS.framework.proof.invariant_prop <> aux var
R153255:153255 CertiOS.framework.proof.invariant_prop <> o var
R153258:153262 CertiOS.framework.proof.invariant_prop <> absop var
R153268:153268 CertiOS.framework.proof.invariant_prop <> P var
prf 153321:153335 <> absop_irrel_sat
R153370:153377 Coq.Init.Logic <> :type_scope:x_'->'_x not
R153391:153398 Coq.Init.Logic <> :type_scope:x_'->'_x not
R153399:153409 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R153413:153416 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R153412:153412 CertiOS.framework.proof.invariant_prop <> P var
R153417:153417 CertiOS.framework.proof.invariant_prop <> Q var
R153378:153388 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R153390:153390 CertiOS.framework.proof.invariant_prop <> Q var
R153357:153367 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R153369:153369 CertiOS.framework.proof.invariant_prop <> P var
R153447:153457 CertiOS.framework.proof.invariant_prop <> absop_irrel def
prf 153549:153568 <> ostcbcur_absop_irrel
R153588:153598 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R153601:153603 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R153613:153614 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R153609:153612 CertiOS.framework.model.memory <> type ind
R153615:153617 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R153626:153628 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R153636:153642 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R153618:153625 CertiOS.framework.model.opsem <> OSTCBCur def
R153629:153632 CertiOS.framework.model.memory <> Tptr constr
R153634:153635 CertiOS.framework.proof.invariant_prop <> tp var
R153643:153646 CertiOS.framework.model.memory <> Vptr constr
R153648:153648 CertiOS.framework.proof.invariant_prop <> t var
R153668:153678 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R153786:153793 CertiOS.tactics.basetac.join_lib <> join_emp thm
R153786:153793 CertiOS.tactics.basetac.join_lib <> join_emp thm
R153810:153817 CertiOS.tactics.basetac.join_lib <> join_emp thm
R153810:153817 CertiOS.tactics.basetac.join_lib <> join_emp thm
def 153906:153914 <> subevntls
R153934:153946 CertiOS.framework.model.language CltEnvMod map def
R153956:153965 CertiOS.framework.model.language TcbMod map def
R153986:153988 CertiOS.framework.auxlibs.Modules <> tid def
R154003:154006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R154007:154011 CertiOS.framework.auxlibs.Maps <> indom def
R154017:154017 CertiOS.framework.proof.invariant_prop <> t var
R154013:154015 CertiOS.framework.proof.invariant_prop <> tls var
R153991:153995 CertiOS.framework.auxlibs.Maps <> indom def
R154002:154002 CertiOS.framework.proof.invariant_prop <> t var
R153997:154000 CertiOS.framework.proof.invariant_prop <> env0 var
def 154032:154040 <> subisttls
R154059:154068 CertiOS.framework.model.language <> ltaskstset def
R154078:154087 CertiOS.framework.model.language TcbMod map def
R154108:154110 CertiOS.framework.auxlibs.Modules <> tid def
R154124:154127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R154128:154132 CertiOS.framework.auxlibs.Maps <> indom def
R154138:154138 CertiOS.framework.proof.invariant_prop <> t var
R154134:154136 CertiOS.framework.proof.invariant_prop <> tls var
R154113:154117 CertiOS.framework.auxlibs.Maps <> indom def
R154123:154123 CertiOS.framework.proof.invariant_prop <> t var
R154119:154121 CertiOS.framework.proof.invariant_prop <> lst var
def 154153:154160 <> subdomSO
R154177:154183 CertiOS.framework.model.language <> osstate def
R154191:154196 CertiOS.framework.model.language <> osabst def
R154222:154222 CertiOS.framework.proof.invariant_prop <> S var
R154245:154245 CertiOS.framework.proof.invariant_prop <> p var
R154269:154269 CertiOS.framework.proof.invariant_prop <> c var
R154293:154294 CertiOS.framework.proof.invariant_prop <> p0 var
R154309:154311 CertiOS.framework.auxlibs.Maps <> get meth
R154315:154323 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R154313:154313 CertiOS.framework.proof.invariant_prop <> O var
R154338:154341 Coq.Init.Datatypes <> Some constr
R154344:154353 CertiOS.framework.model.language <> abstcblist constr
R154379:154382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R154363:154371 CertiOS.framework.proof.invariant_prop <> subevntls def
R154373:154374 CertiOS.framework.proof.invariant_prop <> pi var
R154383:154391 CertiOS.framework.proof.invariant_prop <> subisttls def
R154393:154395 CertiOS.framework.proof.invariant_prop <> lst var
R154409:154412 Coq.Init.Datatypes <> Some constr
R154415:154424 CertiOS.framework.model.language <> absecblist constr
R154432:154436 Coq.Init.Logic <> False ind
R154446:154449 Coq.Init.Datatypes <> Some constr
R154452:154455 CertiOS.framework.model.language <> ostm constr
R154463:154467 Coq.Init.Logic <> False ind
R154477:154480 Coq.Init.Datatypes <> Some constr
R154483:154488 CertiOS.framework.model.language <> oscurt constr
R154496:154500 Coq.Init.Logic <> False ind
R154510:154513 Coq.Init.Datatypes <> None constr
R154518:154522 Coq.Init.Logic <> False ind
prf 154540:154560 <> eqdomSO_impl_subdomSO
R154587:154590 Coq.Init.Logic <> :type_scope:x_'->'_x not
R154591:154598 CertiOS.framework.proof.invariant_prop <> subdomSO def
R154602:154602 CertiOS.framework.proof.invariant_prop <> O var
R154600:154600 CertiOS.framework.proof.invariant_prop <> S var
R154576:154582 CertiOS.framework.logic.inferules <> eqdomSO def
R154586:154586 CertiOS.framework.proof.invariant_prop <> O var
R154584:154584 CertiOS.framework.proof.invariant_prop <> S var
R154713:154715 CertiOS.framework.auxlibs.Maps <> get meth
R154719:154727 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R154713:154715 CertiOS.framework.auxlibs.Maps <> get meth
R154719:154727 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
def 154916:154930 <> side_condition'
R154945:154947 CertiOS.framework.logic.assertion <> Inv def
R154956:154963 CertiOS.framework.logic.inferules <> LocalInv def
R154981:154987 CertiOS.framework.model.language <> ossched def
R155009:155012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155019:155022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155013:155018 CertiOS.framework.model.language <> osabst def
R155002:155008 CertiOS.framework.model.language <> osstate def
R155035:155038 Coq.Init.Datatypes <> list ind
R155040:155047 CertiOS.framework.logic.assertion <> logicvar ind
R155077:155083 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R155170:155170 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R155055:155059 CertiOS.framework.logic.inferules <> GoodI def
R155075:155076 CertiOS.framework.proof.invariant_prop <> pa var
R155063:155073 CertiOS.framework.proof.invariant_prop <> schedmethod var
R155061:155061 CertiOS.framework.proof.invariant_prop <> I var
R155096:155102 CertiOS.framework.model.language <> osstate def
R155110:155115 CertiOS.framework.model.language <> osabst def
R155132:155135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155154:155157 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R155136:155141 CertiOS.framework.logic.inferules <> initst ind
R155152:155153 CertiOS.framework.proof.invariant_prop <> lg var
R155149:155150 CertiOS.framework.proof.invariant_prop <> pa var
R155147:155147 CertiOS.framework.proof.invariant_prop <> I var
R155145:155145 CertiOS.framework.proof.invariant_prop <> O var
R155143:155143 CertiOS.framework.proof.invariant_prop <> S var
R155158:155165 CertiOS.framework.proof.invariant_prop <> subdomSO def
R155169:155169 CertiOS.framework.proof.invariant_prop <> O var
R155167:155167 CertiOS.framework.proof.invariant_prop <> S var
R155124:155127 CertiOS.framework.proof.invariant_prop <> init var
R155131:155131 CertiOS.framework.proof.invariant_prop <> O var
R155129:155129 CertiOS.framework.proof.invariant_prop <> S var
def 155186:155192 <> indomSt
R155208:155214 CertiOS.framework.model.language <> osstate def
R155242:155242 CertiOS.framework.proof.invariant_prop <> S var
R155265:155265 CertiOS.framework.proof.invariant_prop <> p var
R155289:155289 CertiOS.framework.proof.invariant_prop <> c var
R155313:155314 CertiOS.framework.proof.invariant_prop <> p0 var
R155323:155327 CertiOS.framework.auxlibs.Maps <> indom def
R155332:155332 CertiOS.framework.proof.invariant_prop <> t var
R155329:155330 CertiOS.framework.proof.invariant_prop <> pi var
prf 155342:155361 <> absop_irrel_init_rdy
R155387:155397 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R155400:155407 CertiOS.framework.logic.inferules <> init_rdy def
R155414:155415 CertiOS.framework.proof.invariant_prop <> vl var
R155412:155412 CertiOS.framework.proof.invariant_prop <> t var
R155409:155410 CertiOS.framework.proof.invariant_prop <> pa var
R155445:155455 CertiOS.framework.proof.invariant_prop <> absop_irrel def
R155475:155482 CertiOS.framework.logic.inferules <> init_rdy def
R155536:155557 CertiOS.framework.proof.rulesoundlib <> good_linvasrt_aop_irev thm
R155536:155557 CertiOS.framework.proof.rulesoundlib <> good_linvasrt_aop_irev thm
prf 155579:155594 <> subdomSO_joinsig
R155678:155685 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155712:155719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155753:155760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155761:155768 CertiOS.framework.proof.invariant_prop <> subdomSO def
R155796:155796 CertiOS.framework.proof.invariant_prop <> O var
R155770:155770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155772:155773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155779:155780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155783:155784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155788:155789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155794:155794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155771:155771 CertiOS.framework.proof.invariant_prop <> G var
R155774:155778 CertiOS.framework.proof.invariant_prop <> envs' var
R155781:155782 CertiOS.framework.proof.invariant_prop <> M' var
R155785:155787 CertiOS.framework.proof.invariant_prop <> isr var
R155790:155793 CertiOS.framework.proof.invariant_prop <> lst' var
R155720:155727 CertiOS.framework.proof.invariant_prop <> subdomSO def
R155752:155752 CertiOS.framework.proof.invariant_prop <> O var
R155729:155729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155731:155732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155737:155738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155740:155741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155745:155746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155750:155750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155730:155730 CertiOS.framework.proof.invariant_prop <> G var
R155733:155736 CertiOS.framework.proof.invariant_prop <> envs var
R155739:155739 CertiOS.framework.proof.invariant_prop <> M var
R155742:155744 CertiOS.framework.proof.invariant_prop <> isr var
R155747:155749 CertiOS.framework.proof.invariant_prop <> lst var
R155686:155689 CertiOS.framework.auxlibs.Maps <> join meth
R155709:155711 CertiOS.framework.proof.invariant_prop <> lst var
R155704:155707 CertiOS.framework.proof.invariant_prop <> lst' var
R155692:155694 CertiOS.framework.auxlibs.Maps <> sig meth
R155698:155701 CertiOS.framework.proof.invariant_prop <> auxs var
R155696:155696 CertiOS.framework.proof.invariant_prop <> t var
R155653:155656 CertiOS.framework.auxlibs.Maps <> join meth
R155674:155677 CertiOS.framework.proof.invariant_prop <> envs var
R155668:155672 CertiOS.framework.proof.invariant_prop <> envs' var
R155659:155661 CertiOS.framework.auxlibs.Maps <> sig meth
R155665:155665 CertiOS.framework.proof.invariant_prop <> E var
R155663:155663 CertiOS.framework.proof.invariant_prop <> t var
R155825:155832 CertiOS.framework.proof.invariant_prop <> subdomSO def
R155852:155854 CertiOS.framework.auxlibs.Maps <> get meth
R155858:155866 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R155852:155854 CertiOS.framework.auxlibs.Maps <> get meth
R155858:155866 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R155949:155957 CertiOS.framework.proof.invariant_prop <> subevntls def
R156048:156057 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R156048:156057 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R156088:156096 CertiOS.framework.proof.invariant_prop <> subisttls def
R156136:156140 CertiOS.framework.auxlibs.Maps <> indom def
R156184:156193 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R156184:156193 CertiOS.tactics.basetac.join_lib <> join_get_r thm
prf 156214:156231 <> partm_disjoint_put
R156249:156251 CertiOS.framework.model.memory <> mem def
R156259:156263 CertiOS.framework.model.language <> tasks def
R156272:156284 CertiOS.framework.proof.auxdef TMSpecMod Map def
R156292:156302 CertiOS.framework.proof.auxdef TMSpecMod A def
R156321:156323 CertiOS.framework.model.memory <> mem def
R156344:156351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R156364:156367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R156368:156372 CertiOS.framework.proof.auxdef <> partM ind
R156390:156402 CertiOS.framework.proof.auxdef TMSpecMod put def
R156409:156410 CertiOS.framework.proof.invariant_prop <> Mn var
R156407:156407 CertiOS.framework.proof.invariant_prop <> t var
R156404:156405 CertiOS.framework.proof.invariant_prop <> Tm var
R156387:156387 CertiOS.framework.proof.invariant_prop <> T var
R156375:156379 CertiOS.framework.auxlibs.Maps <> merge meth
R156383:156384 CertiOS.framework.proof.invariant_prop <> Mn var
R156381:156381 CertiOS.framework.proof.invariant_prop <> M var
R156352:156356 CertiOS.framework.proof.auxdef <> partM ind
R156362:156363 CertiOS.framework.proof.invariant_prop <> Tm var
R156360:156360 CertiOS.framework.proof.invariant_prop <> T var
R156358:156358 CertiOS.framework.proof.invariant_prop <> M var
R156331:156338 CertiOS.framework.auxlibs.Maps <> disjoint def
R156342:156343 CertiOS.framework.proof.invariant_prop <> Mn var
R156340:156340 CertiOS.framework.proof.invariant_prop <> M var
R156477:156483 CertiOS.framework.proof.auxdef <> partm_S constr
R156477:156483 CertiOS.framework.proof.auxdef <> partm_S constr
R156495:156514 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R156495:156514 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R156532:156540 CertiOS.tactics.basetac.join_lib <> join_comm thm
R156532:156540 CertiOS.tactics.basetac.join_lib <> join_comm thm
R156551:156565 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R156551:156565 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R156583:156589 CertiOS.framework.proof.auxdef <> partm_O constr
R156583:156589 CertiOS.framework.proof.auxdef <> partm_O constr
R156612:156638 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156612:156638 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156612:156638 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156669:156696 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R156669:156696 CertiOS.framework.proof.auxdef TMSpecMod remove_shrinks_dom thm
R156724:156727 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R156720:156722 Coq.Init.Logic <> :type_scope:x_'='_x not
R156730:156733 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R156724:156727 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R156720:156722 Coq.Init.Logic <> :type_scope:x_'='_x not
R156730:156733 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R156803:156805 Coq.Init.Logic <> :type_scope:x_'='_x not
R156782:156797 CertiOS.framework.proof.auxdef TMSpecMod remove def
R156806:156821 CertiOS.framework.proof.auxdef TMSpecMod remove def
R156824:156836 CertiOS.framework.proof.auxdef TMSpecMod put def
R156803:156805 Coq.Init.Logic <> :type_scope:x_'='_x not
R156782:156797 CertiOS.framework.proof.auxdef TMSpecMod remove def
R156806:156821 CertiOS.framework.proof.auxdef TMSpecMod remove def
R156824:156836 CertiOS.framework.proof.auxdef TMSpecMod put def
R156861:156887 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156861:156887 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156861:156887 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R156906:156910 CertiOS.framework.proof.auxdef <> partM ind
R156931:156943 CertiOS.framework.proof.auxdef TMSpecMod put def
R156913:156917 CertiOS.framework.auxlibs.Maps <> merge meth
R156906:156910 CertiOS.framework.proof.auxdef <> partM ind
R156931:156943 CertiOS.framework.proof.auxdef TMSpecMod put def
R156913:156917 CertiOS.framework.auxlibs.Maps <> merge meth
R156985:156991 CertiOS.framework.proof.auxdef <> partm_S constr
R156985:156991 CertiOS.framework.proof.auxdef <> partm_S constr
R157011:157030 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R157011:157030 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R157041:157049 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157041:157049 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157061:157075 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R157061:157075 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R157087:157112 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R157087:157112 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R157130:157138 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157130:157138 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157170:157172 Coq.Init.Logic <> :type_scope:x_'='_x not
R157159:157163 CertiOS.framework.auxlibs.Maps <> merge meth
R157173:157177 CertiOS.framework.auxlibs.Maps <> minus meth
R157180:157184 CertiOS.framework.auxlibs.Maps <> merge meth
R157170:157172 Coq.Init.Logic <> :type_scope:x_'='_x not
R157159:157163 CertiOS.framework.auxlibs.Maps <> merge meth
R157173:157177 CertiOS.framework.auxlibs.Maps <> minus meth
R157180:157184 CertiOS.framework.auxlibs.Maps <> merge meth
R157208:157245 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_disjoint_merge_minus_merge_eq thm
R157208:157245 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> mem_join_disjoint_merge_minus_merge_eq thm
R157284:157300 CertiOS.framework.proof.invariant_prop <> partm_minus_partm thm
R157284:157300 CertiOS.framework.proof.invariant_prop <> partm_minus_partm thm
R157321:157328 CertiOS.framework.auxlibs.Maps <> disjoint def
R157321:157328 CertiOS.framework.auxlibs.Maps <> disjoint def
R157347:157372 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R157347:157372 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_disjoint_disjoint thm
R157390:157398 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157390:157398 CertiOS.tactics.basetac.join_lib <> join_comm thm
R157501:157503 Coq.Init.Logic <> :type_scope:x_'='_x not
R157458:157473 CertiOS.framework.proof.auxdef TMSpecMod remove def
R157476:157488 CertiOS.framework.proof.auxdef TMSpecMod put def
R157504:157516 CertiOS.framework.proof.auxdef TMSpecMod put def
R157519:157534 CertiOS.framework.proof.auxdef TMSpecMod remove def
R157501:157503 Coq.Init.Logic <> :type_scope:x_'='_x not
R157458:157473 CertiOS.framework.proof.auxdef TMSpecMod remove def
R157476:157488 CertiOS.framework.proof.auxdef TMSpecMod put def
R157504:157516 CertiOS.framework.proof.auxdef TMSpecMod put def
R157519:157534 CertiOS.framework.proof.auxdef TMSpecMod remove def
R157560:157590 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R157560:157590 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R157560:157590 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R157560:157590 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R157641:157647 CertiOS.framework.proof.auxdef <> partm_S constr
R157641:157647 CertiOS.framework.proof.auxdef <> partm_S constr
R157667:157692 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R157667:157692 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R157667:157692 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R157667:157692 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R157711:157738 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
R157711:157738 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_disjoint_join_merge thm
prf 157797:157809 <> parto_put_emp
R157853:157860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R157861:157865 CertiOS.framework.proof.auxdef <> partO ind
R157874:157886 CertiOS.framework.proof.auxdef TOSpecMod put def
R157893:157898 CertiOS.framework.logic.assertion <> empenv syndef
R157891:157891 CertiOS.framework.proof.invariant_prop <> t var
R157888:157889 CertiOS.framework.proof.invariant_prop <> To var
R157870:157871 CertiOS.framework.proof.invariant_prop <> T' var
R157867:157868 CertiOS.framework.proof.invariant_prop <> Ol var
R157840:157844 CertiOS.framework.proof.auxdef <> partO ind
R157851:157852 CertiOS.framework.proof.invariant_prop <> To var
R157849:157849 CertiOS.framework.proof.invariant_prop <> T var
R157846:157847 CertiOS.framework.proof.invariant_prop <> Ol var
R157964:157970 CertiOS.framework.proof.auxdef <> parto_S constr
R157964:157970 CertiOS.framework.proof.auxdef <> parto_S constr
R157982:158001 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R157982:158001 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R158012:158019 CertiOS.tactics.basetac.join_lib <> join_emp thm
R158012:158019 CertiOS.tactics.basetac.join_lib <> join_emp thm
R158038:158044 CertiOS.framework.proof.auxdef <> parto_O constr
R158038:158044 CertiOS.framework.proof.auxdef <> parto_O constr
R158065:158091 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158065:158091 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158065:158091 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158122:158149 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R158122:158149 CertiOS.framework.proof.auxdef TOSpecMod remove_shrinks_dom thm
R158177:158180 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R158173:158175 Coq.Init.Logic <> :type_scope:x_'='_x not
R158183:158186 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R158177:158180 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R158173:158175 Coq.Init.Logic <> :type_scope:x_'='_x not
R158183:158186 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R158254:158256 Coq.Init.Logic <> :type_scope:x_'='_x not
R158233:158248 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158257:158272 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158275:158287 CertiOS.framework.proof.auxdef TOSpecMod put def
R158294:158299 CertiOS.framework.logic.assertion <> empenv syndef
R158254:158256 Coq.Init.Logic <> :type_scope:x_'='_x not
R158233:158248 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158257:158272 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158275:158287 CertiOS.framework.proof.auxdef TOSpecMod put def
R158294:158299 CertiOS.framework.logic.assertion <> empenv syndef
R158316:158342 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158316:158342 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158316:158342 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R158381:158385 CertiOS.framework.proof.auxdef <> partO ind
R158394:158406 CertiOS.framework.proof.auxdef TOSpecMod put def
R158413:158418 CertiOS.framework.logic.assertion <> empenv syndef
R158381:158385 CertiOS.framework.proof.auxdef <> partO ind
R158394:158406 CertiOS.framework.proof.auxdef TOSpecMod put def
R158413:158418 CertiOS.framework.logic.assertion <> empenv syndef
R158432:158438 CertiOS.framework.proof.auxdef <> parto_S constr
R158432:158438 CertiOS.framework.proof.auxdef <> parto_S constr
R158458:158477 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R158458:158477 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R158489:158496 CertiOS.tactics.basetac.join_lib <> join_emp thm
R158489:158496 CertiOS.tactics.basetac.join_lib <> join_emp thm
R158526:158528 Coq.Init.Logic <> :type_scope:x_'='_x not
R158529:158533 CertiOS.framework.auxlibs.Maps <> minus meth
R158526:158528 Coq.Init.Logic <> :type_scope:x_'='_x not
R158529:158533 CertiOS.framework.auxlibs.Maps <> minus meth
R158562:158581 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus_eq thm
R158562:158581 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> osabst_join_minus_eq thm
R158619:158635 CertiOS.framework.proof.invariant_prop <> parto_minus_parto thm
R158619:158635 CertiOS.framework.proof.invariant_prop <> parto_minus_parto thm
R158731:158743 Coq.Init.Logic <> :type_scope:x_'='_x not
R158684:158696 CertiOS.framework.proof.auxdef TOSpecMod put def
R158725:158730 CertiOS.framework.logic.assertion <> empenv syndef
R158699:158714 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158744:158759 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158762:158774 CertiOS.framework.proof.auxdef TOSpecMod put def
R158782:158787 CertiOS.framework.logic.assertion <> empenv syndef
R158731:158743 Coq.Init.Logic <> :type_scope:x_'='_x not
R158684:158696 CertiOS.framework.proof.auxdef TOSpecMod put def
R158725:158730 CertiOS.framework.logic.assertion <> empenv syndef
R158699:158714 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158744:158759 CertiOS.framework.proof.auxdef TOSpecMod remove def
R158762:158774 CertiOS.framework.proof.auxdef TOSpecMod put def
R158782:158787 CertiOS.framework.logic.assertion <> empenv syndef
R158804:158834 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R158804:158834 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R158804:158834 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R158804:158834 CertiOS.framework.proof.auxdef TOSpecMod remove_ext_ext_remove thm
R158872:158878 CertiOS.framework.proof.auxdef <> parto_S constr
R158872:158878 CertiOS.framework.proof.auxdef <> parto_S constr
R158898:158923 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R158898:158923 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R158898:158923 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R158898:158923 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
prf 158982:158997 <> indomSt_preserve
R159094:159101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159109:159116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159142:159149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159150:159156 CertiOS.framework.proof.invariant_prop <> indomSt def
R159186:159187 CertiOS.framework.proof.invariant_prop <> t0 var
R159158:159158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159161:159162 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159168:159169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159172:159173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159178:159179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159184:159184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159159:159160 CertiOS.framework.proof.invariant_prop <> G' var
R159163:159167 CertiOS.framework.proof.invariant_prop <> envs' var
R159170:159171 CertiOS.framework.proof.invariant_prop <> M' var
R159174:159177 CertiOS.framework.proof.invariant_prop <> isr' var
R159180:159183 CertiOS.framework.proof.invariant_prop <> lst' var
R159117:159120 CertiOS.framework.auxlibs.Maps <> join meth
R159138:159141 CertiOS.framework.proof.invariant_prop <> envs var
R159132:159136 CertiOS.framework.proof.invariant_prop <> envs' var
R159123:159125 CertiOS.framework.auxlibs.Maps <> sig meth
R159129:159129 CertiOS.framework.proof.invariant_prop <> E var
R159127:159127 CertiOS.framework.proof.invariant_prop <> t var
R159104:159107 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R159102:159103 CertiOS.framework.proof.invariant_prop <> t0 var
R159108:159108 CertiOS.framework.proof.invariant_prop <> t var
R159061:159067 CertiOS.framework.proof.invariant_prop <> indomSt def
R159092:159093 CertiOS.framework.proof.invariant_prop <> t0 var
R159069:159069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159071:159072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159077:159078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159080:159081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159085:159086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159090:159090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159070:159070 CertiOS.framework.proof.invariant_prop <> G var
R159073:159076 CertiOS.framework.proof.invariant_prop <> envs var
R159079:159079 CertiOS.framework.proof.invariant_prop <> M var
R159082:159084 CertiOS.framework.proof.invariant_prop <> isr var
R159087:159089 CertiOS.framework.proof.invariant_prop <> lst var
R159216:159222 CertiOS.framework.proof.invariant_prop <> indomSt def
R159239:159243 CertiOS.framework.auxlibs.Maps <> indom def
R159286:159299 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_sig_get_r thm
R159286:159299 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_sig_get_r thm
prf 159321:159332 <> init_partmo'
R159405:159412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159424:159431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159440:159447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159487:159494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159495:159501 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159504:159504 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159507:159507 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159510:159510 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159513:159513 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159516:159516 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159519:159526 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R159557:159566 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159527:159530 CertiOS.framework.auxlibs.Maps <> join meth
R159539:159541 Coq.Init.Datatypes <> snd def
R159544:159546 Coq.Init.Datatypes <> fst def
R159549:159551 Coq.Init.Datatypes <> fst def
R159553:159553 CertiOS.framework.proof.invariant_prop <> S var
R159579:159588 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159567:159570 CertiOS.framework.auxlibs.Maps <> join meth
R159578:159578 CertiOS.framework.proof.invariant_prop <> O var
R159602:159605 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159589:159593 CertiOS.framework.proof.auxdef <> partM ind
R159598:159598 CertiOS.framework.proof.invariant_prop <> T var
R159619:159628 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159606:159610 CertiOS.framework.proof.auxdef <> partO ind
R159615:159615 CertiOS.framework.proof.invariant_prop <> T var
R159629:159638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159932:159959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R160263:160270 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159639:159645 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R159648:159648 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R159651:159651 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R159654:159665 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R159681:159684 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159671:159673 Coq.Init.Logic <> :type_scope:x_'='_x not
R159669:159670 CertiOS.framework.proof.invariant_prop <> tc var
R159674:159677 Coq.Init.Datatypes <> Some constr
R159700:159713 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159690:159692 Coq.Init.Logic <> :type_scope:x_'='_x not
R159688:159689 CertiOS.framework.proof.invariant_prop <> tc var
R159693:159696 Coq.Init.Datatypes <> Some constr
R159734:159747 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159724:159726 Coq.Init.Logic <> :type_scope:x_'='_x not
R159714:159718 CertiOS.framework.model.opsem <> projS def
R159722:159723 CertiOS.framework.proof.invariant_prop <> tc var
R159720:159720 CertiOS.framework.proof.invariant_prop <> S var
R159727:159730 Coq.Init.Datatypes <> Some constr
R159782:159795 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159748:159751 CertiOS.framework.logic.inferules <> satp def
R159776:159778 CertiOS.framework.logic.assertion <> INV def
R159780:159780 CertiOS.framework.proof.invariant_prop <> I var
R159754:159763 CertiOS.framework.logic.assertion <> substaskst def
R159887:159900 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R159796:159799 CertiOS.framework.logic.inferules <> satp def
R159833:159836 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R159824:159829 CertiOS.framework.logic.inferules <> CurTid def
R159831:159832 CertiOS.framework.proof.invariant_prop <> tc var
R159858:159861 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R159837:159840 CertiOS.framework.logic.inferules <> LINV def
R159851:159857 CertiOS.framework.logic.inferules <> init_lg def
R159848:159849 CertiOS.framework.proof.invariant_prop <> tc var
R159842:159846 CertiOS.framework.proof.invariant_prop <> lasrt var
R159862:159865 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R159872:159872 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R159877:159877 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R159881:159881 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R159885:159885 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R159866:159871 CertiOS.framework.model.language <> empisr def
R159873:159876 Coq.Init.Datatypes <> true constr
R159878:159880 Coq.Init.Datatypes <> nil constr
R159882:159884 Coq.Init.Datatypes <> nil constr
R159802:159811 CertiOS.framework.logic.assertion <> substaskst def
R159923:159925 Coq.Init.Logic <> :type_scope:x_'='_x not
R159901:159908 CertiOS.framework.model.opsem <> get_lenv def
R159911:159918 CertiOS.framework.model.language <> get_smem def
R159926:159931 CertiOS.framework.logic.assertion <> empenv syndef
R159991:160004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R160012:160025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R160026:160032 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R160035:160035 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R160038:160038 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R160041:160054 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R160069:160072 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R160059:160061 Coq.Init.Logic <> :type_scope:x_'='_x not
R160058:160058 CertiOS.framework.proof.invariant_prop <> t var
R160062:160065 Coq.Init.Datatypes <> Some constr
R160087:160102 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R160077:160079 Coq.Init.Logic <> :type_scope:x_'='_x not
R160076:160076 CertiOS.framework.proof.invariant_prop <> t var
R160080:160083 Coq.Init.Datatypes <> Some constr
R160122:160137 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R160112:160114 Coq.Init.Logic <> :type_scope:x_'='_x not
R160103:160107 CertiOS.framework.model.opsem <> projS def
R160111:160111 CertiOS.framework.proof.invariant_prop <> t var
R160109:160109 CertiOS.framework.proof.invariant_prop <> S var
R160115:160118 Coq.Init.Datatypes <> Some constr
R160216:160231 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R160138:160141 CertiOS.framework.logic.inferules <> satp def
R160187:160190 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R160167:160170 CertiOS.framework.logic.inferules <> LINV def
R160180:160186 CertiOS.framework.logic.inferules <> init_lg def
R160178:160178 CertiOS.framework.proof.invariant_prop <> t var
R160172:160176 CertiOS.framework.proof.invariant_prop <> lasrt var
R160191:160194 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R160201:160201 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R160206:160206 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R160210:160210 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R160214:160214 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R160195:160200 CertiOS.framework.model.language <> empisr def
R160202:160205 Coq.Init.Datatypes <> true constr
R160207:160209 Coq.Init.Datatypes <> nil constr
R160211:160213 Coq.Init.Datatypes <> nil constr
R160144:160153 CertiOS.framework.logic.assertion <> substaskst def
R160254:160256 Coq.Init.Logic <> :type_scope:x_'='_x not
R160232:160239 CertiOS.framework.model.opsem <> get_lenv def
R160242:160249 CertiOS.framework.model.language <> get_smem def
R160257:160262 CertiOS.framework.logic.assertion <> empenv syndef
R160006:160009 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R160005:160005 CertiOS.framework.proof.invariant_prop <> t var
R160010:160011 CertiOS.framework.proof.invariant_prop <> tc var
R159980:159986 CertiOS.framework.proof.invariant_prop <> indomSt def
R159990:159990 CertiOS.framework.proof.invariant_prop <> t var
R159988:159988 CertiOS.framework.proof.invariant_prop <> S var
R159448:159462 CertiOS.framework.proof.invariant_prop <> side_condition' def
R159480:159486 CertiOS.framework.logic.inferules <> init_lg def
R159475:159478 CertiOS.framework.proof.invariant_prop <> init var
R159472:159473 CertiOS.framework.proof.invariant_prop <> sd var
R159466:159470 CertiOS.framework.proof.invariant_prop <> lasrt var
R159464:159464 CertiOS.framework.proof.invariant_prop <> I var
R159432:159435 CertiOS.framework.proof.invariant_prop <> init var
R159439:159439 CertiOS.framework.proof.invariant_prop <> O var
R159437:159437 CertiOS.framework.proof.invariant_prop <> S var
R159413:159419 CertiOS.framework.proof.oscorrectness <> eqdomto def
R159423:159423 CertiOS.framework.proof.invariant_prop <> O var
R159421:159421 CertiOS.framework.proof.invariant_prop <> T var
R159386:159388 Coq.Init.Logic <> :type_scope:x_'='_x not
R159374:159376 CertiOS.framework.auxlibs.Maps <> get meth
R159380:159385 CertiOS.framework.model.language <> curtid constr
R159378:159378 CertiOS.framework.proof.invariant_prop <> O var
R159389:159392 Coq.Init.Datatypes <> Some constr
R159395:159400 CertiOS.framework.model.language <> oscurt constr
R159402:159403 CertiOS.framework.proof.invariant_prop <> tc var
R160461:160468 CertiOS.framework.logic.inferules <> init_cur def
R160493:160498 CertiOS.framework.proof.invariant_prop <> absopx def
R160493:160498 CertiOS.framework.proof.invariant_prop <> absopx def
R160520:160528 CertiOS.framework.proof.invariant_prop <> sat_split thm
R160520:160528 CertiOS.framework.proof.invariant_prop <> sat_split thm
R160554:160566 CertiOS.framework.proof.auxdef TMSpecMod put def
R160568:160580 CertiOS.framework.proof.auxdef TMSpecMod emp def
R160590:160602 CertiOS.framework.proof.auxdef TOSpecMod put def
R160604:160616 CertiOS.framework.proof.auxdef TOSpecMod emp def
R160554:160566 CertiOS.framework.proof.auxdef TMSpecMod put def
R160568:160580 CertiOS.framework.proof.auxdef TMSpecMod emp def
R160590:160602 CertiOS.framework.proof.auxdef TOSpecMod put def
R160604:160616 CertiOS.framework.proof.auxdef TOSpecMod emp def
R160671:160679 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160671:160679 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160696:160704 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160696:160704 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160723:160729 CertiOS.framework.proof.auxdef <> partm_S constr
R160723:160729 CertiOS.framework.proof.auxdef <> partm_S constr
R160742:160761 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R160742:160761 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R160742:160761 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R160779:160787 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160796:160803 CertiOS.tactics.basetac.join_lib <> join_emp thm
R160779:160787 CertiOS.tactics.basetac.join_lib <> join_comm thm
R160796:160803 CertiOS.tactics.basetac.join_lib <> join_emp thm
R160822:160848 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R160822:160848 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R160822:160848 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R160861:160867 CertiOS.framework.proof.auxdef <> partm_O constr
R160861:160867 CertiOS.framework.proof.auxdef <> partm_O constr
R160888:160914 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_emp_eq_emp thm
R160888:160914 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_emp_eq_emp thm
R160888:160914 CertiOS.framework.proof.invariant_prop <> tmspecmod_remove_emp_eq_emp thm
R160944:160950 CertiOS.framework.proof.auxdef <> parto_S constr
R160944:160950 CertiOS.framework.proof.auxdef <> parto_S constr
R160963:160982 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R160963:160982 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R160963:160982 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R161000:161008 CertiOS.tactics.basetac.join_lib <> join_comm thm
R161017:161024 CertiOS.tactics.basetac.join_lib <> join_emp thm
R161000:161008 CertiOS.tactics.basetac.join_lib <> join_comm thm
R161017:161024 CertiOS.tactics.basetac.join_lib <> join_emp thm
R161043:161069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R161043:161069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R161043:161069 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R161081:161087 CertiOS.framework.proof.auxdef <> parto_O constr
R161081:161087 CertiOS.framework.proof.auxdef <> parto_O constr
R161108:161134 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_emp_eq_emp thm
R161108:161134 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_emp_eq_emp thm
R161108:161134 CertiOS.framework.proof.invariant_prop <> tospecmod_remove_emp_eq_emp thm
R161191:161210 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R161191:161210 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R161191:161210 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R161230:161249 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R161230:161249 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R161230:161249 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R161308:161319 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161308:161319 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161308:161319 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161332:161343 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161332:161343 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161332:161343 CertiOS.tactics.basetac.join_lib <> get_sig_some thm
R161383:161409 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R161383:161409 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R161445:161450 CertiOS.framework.logic.inferules <> CurTid def
R161501:161512 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R161471:161471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161473:161474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161476:161477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161480:161481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161485:161486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161491:161492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161495:161496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161500:161500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161513:161513 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R161562:161574 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R161514:161516 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R161526:161527 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R161522:161525 CertiOS.framework.model.memory <> type ind
R161528:161530 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161539:161541 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161549:161555 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161531:161538 CertiOS.framework.model.opsem <> OSTCBCur def
R161542:161545 CertiOS.framework.model.memory <> Tptr constr
R161547:161548 CertiOS.framework.proof.invariant_prop <> tp var
R161556:161559 CertiOS.framework.model.memory <> Vptr constr
R161575:161582 CertiOS.framework.logic.inferules <> init_rdy def
R161621:161624 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R161590:161598 CertiOS.framework.logic.assertion <> logic_val constr
R161601:161606 CertiOS.framework.model.memory <> Vint32 constr
R161609:161616 CertiOS.framework.auxlibs.Integers Int repr def
R161625:161627 Coq.Init.Datatypes <> nil constr
R161501:161512 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R161471:161471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161473:161474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161476:161477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161480:161481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161485:161486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161491:161492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161495:161496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161500:161500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161513:161513 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R161562:161574 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R161514:161516 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R161526:161527 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R161522:161525 CertiOS.framework.model.memory <> type ind
R161528:161530 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161539:161541 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161549:161555 CertiOS.framework.logic.assertion <> ::'GV'_x_'@'_x_'|-r->'_x not
R161531:161538 CertiOS.framework.model.opsem <> OSTCBCur def
R161542:161545 CertiOS.framework.model.memory <> Tptr constr
R161547:161548 CertiOS.framework.proof.invariant_prop <> tp var
R161556:161559 CertiOS.framework.model.memory <> Vptr constr
R161575:161582 CertiOS.framework.logic.inferules <> init_rdy def
R161621:161624 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R161590:161598 CertiOS.framework.logic.assertion <> logic_val constr
R161601:161606 CertiOS.framework.model.memory <> Vint32 constr
R161609:161616 CertiOS.framework.auxlibs.Integers Int repr def
R161625:161627 Coq.Init.Datatypes <> nil constr
R161651:161665 CertiOS.framework.proof.invariant_prop <> absop_irrel_sat thm
R161651:161665 CertiOS.framework.proof.invariant_prop <> absop_irrel_sat thm
R161677:161696 CertiOS.framework.proof.invariant_prop <> ostcbcur_absop_irrel thm
R161677:161696 CertiOS.framework.proof.invariant_prop <> ostcbcur_absop_irrel thm
R161718:161737 CertiOS.framework.proof.invariant_prop <> absop_irrel_init_rdy thm
R161718:161737 CertiOS.framework.proof.invariant_prop <> absop_irrel_init_rdy thm
R161800:161807 CertiOS.framework.logic.inferules <> init_rdy def
R161825:161828 CertiOS.framework.logic.inferules <> LINV def
R161852:161859 CertiOS.framework.logic.inferules <> init_rdy def
R161918:161919 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R161920:161922 Coq.Init.Datatypes <> nil constr
R161918:161919 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R161920:161922 Coq.Init.Datatypes <> nil constr
R161977:161993 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R161977:161993 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R162100:162104 CertiOS.framework.auxlibs.Maps <> indom def
R162145:162148 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162140:162142 Coq.Init.Logic <> :type_scope:x_'='_x not
R162151:162154 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R162145:162148 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162140:162142 Coq.Init.Logic <> :type_scope:x_'='_x not
R162151:162154 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R162206:162217 CertiOS.tactics.basetac.join_lib <> get_sig_none thm
R162206:162217 CertiOS.tactics.basetac.join_lib <> get_sig_none thm
R162206:162217 CertiOS.tactics.basetac.join_lib <> get_sig_none thm
R162206:162217 CertiOS.tactics.basetac.join_lib <> get_sig_none thm
R162257:162265 Coq.Logic.JMeq <> JMeq ind
R162293:162293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162295:162296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162302:162303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162306:162307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162311:162312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162317:162317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162267:162267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162269:162270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162276:162277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162280:162281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162285:162286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162291:162291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162257:162265 Coq.Logic.JMeq <> JMeq ind
R162293:162293 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162295:162296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162302:162303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162306:162307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162311:162312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162317:162317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162267:162267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162269:162270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162276:162277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162280:162281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162285:162286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162291:162291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162384:162386 Coq.Init.Logic <> :type_scope:x_'='_x not
R162371:162374 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R162340:162348 CertiOS.framework.logic.assertion <> logic_val constr
R162351:162356 CertiOS.framework.model.memory <> Vint32 constr
R162359:162366 CertiOS.framework.auxlibs.Integers Int repr def
R162375:162377 Coq.Init.Datatypes <> nil constr
R162387:162393 CertiOS.framework.logic.inferules <> init_lg def
R162384:162386 Coq.Init.Logic <> :type_scope:x_'='_x not
R162371:162374 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R162340:162348 CertiOS.framework.logic.assertion <> logic_val constr
R162351:162356 CertiOS.framework.model.memory <> Vint32 constr
R162359:162366 CertiOS.framework.auxlibs.Integers Int repr def
R162375:162377 Coq.Init.Datatypes <> nil constr
R162387:162393 CertiOS.framework.logic.inferules <> init_lg def
R162406:162412 CertiOS.framework.logic.inferules <> init_lg def
R162478:162485 CertiOS.framework.proof.invariant_prop <> subdomSO def
R162487:162487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162489:162490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162496:162497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162500:162501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162505:162506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162511:162511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162478:162485 CertiOS.framework.proof.invariant_prop <> subdomSO def
R162487:162487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162489:162490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162496:162497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162500:162501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162505:162506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162511:162511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162527:162542 CertiOS.framework.proof.invariant_prop <> subdomSO_joinsig thm
R162527:162542 CertiOS.framework.proof.invariant_prop <> subdomSO_joinsig thm
R162671:162671 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162696:162700 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162672:162678 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R162681:162682 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R162686:162688 Coq.Init.Logic <> :type_scope:x_'='_x not
R162689:162692 Coq.Init.Datatypes <> Some constr
R162704:162706 Coq.Init.Logic <> :type_scope:x_'='_x not
R162707:162710 Coq.Init.Datatypes <> None constr
R162671:162671 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162696:162700 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162672:162678 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R162681:162682 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R162686:162688 Coq.Init.Logic <> :type_scope:x_'='_x not
R162689:162692 Coq.Init.Datatypes <> Some constr
R162704:162706 Coq.Init.Logic <> :type_scope:x_'='_x not
R162707:162710 Coq.Init.Datatypes <> None constr
R162892:162904 CertiOS.framework.proof.auxdef TMSpecMod put def
R162915:162927 CertiOS.framework.proof.auxdef TOSpecMod put def
R162934:162940 CertiOS.framework.logic.assertion <> empabst syndef
R162892:162904 CertiOS.framework.proof.auxdef TMSpecMod put def
R162915:162927 CertiOS.framework.proof.auxdef TOSpecMod put def
R162934:162940 CertiOS.framework.logic.assertion <> empabst syndef
R162954:162958 CertiOS.framework.auxlibs.Maps <> merge meth
R162954:162958 CertiOS.framework.auxlibs.Maps <> merge meth
R163002:163017 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_merge1 thm
R163002:163017 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_join_merge1 thm
R163036:163049 CertiOS.framework.proof.invariant_prop <> partm_tl_irrel thm
R163036:163049 CertiOS.framework.proof.invariant_prop <> partm_tl_irrel thm
R163062:163079 CertiOS.framework.proof.invariant_prop <> partm_disjoint_put thm
R163062:163079 CertiOS.framework.proof.invariant_prop <> partm_disjoint_put thm
R163136:163148 CertiOS.framework.proof.invariant_prop <> parto_put_emp thm
R163136:163148 CertiOS.framework.proof.invariant_prop <> parto_put_emp thm
R163203:163212 CertiOS.framework.logic.assertion <> substaskst def
R163203:163212 CertiOS.framework.logic.assertion <> substaskst def
R163246:163271 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R163246:163271 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R163246:163271 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R163246:163271 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R163289:163314 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R163289:163314 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R163289:163314 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R163289:163314 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R163355:163359 CertiOS.framework.model.opsem <> projS def
R163376:163380 CertiOS.framework.model.opsem <> projD def
R163413:163415 CertiOS.framework.auxlibs.Maps <> get meth
R163413:163415 CertiOS.framework.auxlibs.Maps <> get meth
R163476:163485 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R163476:163485 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R163530:163532 CertiOS.framework.auxlibs.Maps <> get meth
R163530:163532 CertiOS.framework.auxlibs.Maps <> get meth
R163592:163601 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R163592:163601 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R163910:163913 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R163906:163908 Coq.Init.Logic <> :type_scope:x_'='_x not
R163916:163919 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R163910:163913 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R163906:163908 Coq.Init.Logic <> :type_scope:x_'='_x not
R163916:163919 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R164044:164050 CertiOS.framework.logic.assertion <> empabst syndef
R164052:164052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164054:164055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164057:164058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164060:164061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164065:164066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164071:164071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164044:164050 CertiOS.framework.logic.assertion <> empabst syndef
R164052:164052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164054:164055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164057:164058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164060:164061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164065:164066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164071:164071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164100:164119 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R164100:164119 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R164100:164119 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R164139:164158 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R164139:164158 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R164139:164158 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R164204:164208 CertiOS.framework.model.opsem <> projD def
R164236:164238 Coq.Init.Logic <> :type_scope:x_'='_x not
R164221:164223 CertiOS.framework.auxlibs.Maps <> get meth
R164226:164228 CertiOS.framework.auxlibs.Maps <> sig meth
R164239:164242 Coq.Init.Datatypes <> Some constr
R164236:164238 Coq.Init.Logic <> :type_scope:x_'='_x not
R164221:164223 CertiOS.framework.auxlibs.Maps <> get meth
R164226:164228 CertiOS.framework.auxlibs.Maps <> sig meth
R164239:164242 Coq.Init.Datatypes <> Some constr
R164256:164266 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R164256:164266 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R164278:164287 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164278:164287 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164344:164346 Coq.Init.Logic <> :type_scope:x_'='_x not
R164326:164328 CertiOS.framework.auxlibs.Maps <> get meth
R164331:164333 CertiOS.framework.auxlibs.Maps <> sig meth
R164347:164350 Coq.Init.Datatypes <> Some constr
R164344:164346 Coq.Init.Logic <> :type_scope:x_'='_x not
R164326:164328 CertiOS.framework.auxlibs.Maps <> get meth
R164331:164333 CertiOS.framework.auxlibs.Maps <> sig meth
R164347:164350 Coq.Init.Datatypes <> Some constr
R164367:164377 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R164367:164377 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R164389:164398 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164389:164398 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164480:164487 CertiOS.framework.logic.inferules <> init_rdy def
R164504:164507 CertiOS.framework.logic.inferules <> LINV def
R164519:164522 CertiOS.framework.logic.inferules <> satp def
R164597:164602 CertiOS.framework.proof.invariant_prop <> absopx def
R164597:164602 CertiOS.framework.proof.invariant_prop <> absopx def
R164632:164633 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R164634:164636 Coq.Init.Datatypes <> nil constr
R164632:164633 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R164634:164636 Coq.Init.Datatypes <> nil constr
R164689:164705 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R164689:164705 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R164776:164782 CertiOS.framework.proof.invariant_prop <> indomSt def
R164784:164784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164786:164787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164793:164794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164797:164798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164802:164803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164808:164808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164776:164782 CertiOS.framework.proof.invariant_prop <> indomSt def
R164784:164784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164786:164787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164793:164794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164797:164798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164802:164803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164808:164808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164849:164864 CertiOS.framework.proof.invariant_prop <> indomSt_preserve thm
R164849:164864 CertiOS.framework.proof.invariant_prop <> indomSt_preserve thm
R164939:164948 CertiOS.framework.logic.assertion <> substaskst def
R164939:164948 CertiOS.framework.logic.assertion <> substaskst def
R164984:165009 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R164984:165009 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R164984:165009 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R164984:165009 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R165028:165053 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165028:165053 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165028:165053 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165028:165053 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165097:165101 CertiOS.framework.model.opsem <> projS def
R165118:165122 CertiOS.framework.model.opsem <> projD def
R165142:165144 CertiOS.framework.auxlibs.Maps <> get meth
R165142:165144 CertiOS.framework.auxlibs.Maps <> get meth
R165189:165191 CertiOS.framework.auxlibs.Maps <> get meth
R165189:165191 CertiOS.framework.auxlibs.Maps <> get meth
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165234:165243 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165264:165273 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R165472:165484 CertiOS.framework.proof.auxdef TMSpecMod put def
R165495:165507 CertiOS.framework.proof.auxdef TOSpecMod put def
R165514:165519 CertiOS.framework.logic.assertion <> empenv syndef
R165472:165484 CertiOS.framework.proof.auxdef TMSpecMod put def
R165495:165507 CertiOS.framework.proof.auxdef TOSpecMod put def
R165514:165519 CertiOS.framework.logic.assertion <> empenv syndef
R165533:165537 CertiOS.framework.auxlibs.Maps <> merge meth
R165533:165537 CertiOS.framework.auxlibs.Maps <> merge meth
R165598:165623 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge13_join thm
R165598:165623 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge13_join thm
R165641:165649 CertiOS.tactics.basetac.join_lib <> join_comm thm
R165641:165649 CertiOS.tactics.basetac.join_lib <> join_comm thm
R165692:165709 CertiOS.framework.proof.invariant_prop <> partm_disjoint_put thm
R165692:165709 CertiOS.framework.proof.invariant_prop <> partm_disjoint_put thm
R165728:165749 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R165728:165749 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_disjoint thm
R165767:165775 CertiOS.tactics.basetac.join_lib <> join_comm thm
R165767:165775 CertiOS.tactics.basetac.join_lib <> join_comm thm
R165794:165806 CertiOS.framework.proof.invariant_prop <> parto_put_emp thm
R165794:165806 CertiOS.framework.proof.invariant_prop <> parto_put_emp thm
R165833:165842 CertiOS.framework.logic.assertion <> substaskst def
R165833:165842 CertiOS.framework.logic.assertion <> substaskst def
R165877:165902 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R165877:165902 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R165877:165902 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R165877:165902 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R165921:165946 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165921:165946 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165921:165946 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165921:165946 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R165988:165992 CertiOS.framework.model.opsem <> projS def
R166009:166013 CertiOS.framework.model.opsem <> projD def
R166057:166059 CertiOS.framework.auxlibs.Maps <> get meth
R166095:166107 CertiOS.framework.model.language CltEnvMod get def
R166095:166107 CertiOS.framework.model.language CltEnvMod get def
R166152:166165 CertiOS.framework.model.language TaskLStMod get def
R166152:166165 CertiOS.framework.model.language TaskLStMod get def
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166223:166232 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166253:166262 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R166496:166499 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R166492:166494 Coq.Init.Logic <> :type_scope:x_'='_x not
R166502:166505 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R166496:166499 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R166492:166494 Coq.Init.Logic <> :type_scope:x_'='_x not
R166502:166505 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R166630:166636 CertiOS.framework.logic.assertion <> empabst syndef
R166638:166638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166640:166641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166643:166644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166646:166647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166651:166652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166657:166657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166630:166636 CertiOS.framework.logic.assertion <> empabst syndef
R166638:166638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166640:166641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166643:166644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166646:166647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166651:166652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166657:166657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166686:166705 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R166686:166705 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R166686:166705 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R166725:166744 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R166725:166744 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R166725:166744 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R166790:166794 CertiOS.framework.model.opsem <> projD def
R166822:166824 Coq.Init.Logic <> :type_scope:x_'='_x not
R166807:166809 CertiOS.framework.auxlibs.Maps <> get meth
R166812:166814 CertiOS.framework.auxlibs.Maps <> sig meth
R166825:166828 Coq.Init.Datatypes <> Some constr
R166822:166824 Coq.Init.Logic <> :type_scope:x_'='_x not
R166807:166809 CertiOS.framework.auxlibs.Maps <> get meth
R166812:166814 CertiOS.framework.auxlibs.Maps <> sig meth
R166825:166828 Coq.Init.Datatypes <> Some constr
R166842:166852 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R166842:166852 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R166864:166873 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R166864:166873 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R166930:166932 Coq.Init.Logic <> :type_scope:x_'='_x not
R166912:166914 CertiOS.framework.auxlibs.Maps <> get meth
R166917:166919 CertiOS.framework.auxlibs.Maps <> sig meth
R166933:166936 Coq.Init.Datatypes <> Some constr
R166930:166932 Coq.Init.Logic <> :type_scope:x_'='_x not
R166912:166914 CertiOS.framework.auxlibs.Maps <> get meth
R166917:166919 CertiOS.framework.auxlibs.Maps <> sig meth
R166933:166936 Coq.Init.Datatypes <> Some constr
R166953:166963 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R166953:166963 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R166975:166984 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R166975:166984 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R167066:167073 CertiOS.framework.logic.inferules <> init_rdy def
R167090:167093 CertiOS.framework.logic.inferules <> LINV def
R167105:167108 CertiOS.framework.logic.inferules <> satp def
R167183:167188 CertiOS.framework.proof.invariant_prop <> absopx def
R167183:167188 CertiOS.framework.proof.invariant_prop <> absopx def
R167218:167219 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R167220:167222 Coq.Init.Datatypes <> nil constr
R167218:167219 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R167220:167222 Coq.Init.Datatypes <> nil constr
R167275:167291 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R167275:167291 CertiOS.framework.proof.rulesoundlib <> eqdomenv_nil_enil thm
R167362:167368 CertiOS.framework.proof.invariant_prop <> indomSt def
R167370:167370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167372:167373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167379:167380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167383:167384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167388:167389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167394:167394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167362:167368 CertiOS.framework.proof.invariant_prop <> indomSt def
R167370:167370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167372:167373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167379:167380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167383:167384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167388:167389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167394:167394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R167435:167450 CertiOS.framework.proof.invariant_prop <> indomSt_preserve thm
R167435:167450 CertiOS.framework.proof.invariant_prop <> indomSt_preserve thm
R167524:167533 CertiOS.framework.logic.assertion <> substaskst def
R167524:167533 CertiOS.framework.logic.assertion <> substaskst def
R167569:167594 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R167569:167594 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R167569:167594 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R167569:167594 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R167613:167638 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R167613:167638 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R167613:167638 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R167613:167638 CertiOS.framework.proof.auxdef TOSpecMod put_noninterfere thm
R167682:167686 CertiOS.framework.model.opsem <> projS def
R167703:167707 CertiOS.framework.model.opsem <> projD def
R167727:167729 CertiOS.framework.auxlibs.Maps <> get meth
R167727:167729 CertiOS.framework.auxlibs.Maps <> get meth
R167774:167776 CertiOS.framework.auxlibs.Maps <> get meth
R167774:167776 CertiOS.framework.auxlibs.Maps <> get meth
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167819:167828 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R167849:167858 CertiOS.tactics.basetac.join_lib <> join_get_r thm
prf 168104:168114 <> init_partmo
R168188:168195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168207:168214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168223:168230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168269:168276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168277:168283 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168286:168286 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168289:168289 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168292:168292 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168295:168295 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168298:168298 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168301:168308 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R168339:168348 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168309:168312 CertiOS.framework.auxlibs.Maps <> join meth
R168321:168323 Coq.Init.Datatypes <> snd def
R168326:168328 Coq.Init.Datatypes <> fst def
R168331:168333 Coq.Init.Datatypes <> fst def
R168335:168335 CertiOS.framework.proof.invariant_prop <> S var
R168361:168370 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168349:168352 CertiOS.framework.auxlibs.Maps <> join meth
R168360:168360 CertiOS.framework.proof.invariant_prop <> O var
R168384:168387 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168371:168375 CertiOS.framework.proof.auxdef <> partM ind
R168380:168380 CertiOS.framework.proof.invariant_prop <> T var
R168401:168410 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168388:168392 CertiOS.framework.proof.auxdef <> partO ind
R168397:168397 CertiOS.framework.proof.invariant_prop <> T var
R168411:168420 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168714:168741 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R169043:169050 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168421:168427 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168430:168430 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168433:168433 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168436:168447 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168463:168466 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168453:168455 Coq.Init.Logic <> :type_scope:x_'='_x not
R168451:168452 CertiOS.framework.proof.invariant_prop <> tc var
R168456:168459 Coq.Init.Datatypes <> Some constr
R168482:168495 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168472:168474 Coq.Init.Logic <> :type_scope:x_'='_x not
R168470:168471 CertiOS.framework.proof.invariant_prop <> tc var
R168475:168478 Coq.Init.Datatypes <> Some constr
R168516:168529 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168506:168508 Coq.Init.Logic <> :type_scope:x_'='_x not
R168496:168500 CertiOS.framework.model.opsem <> projS def
R168504:168505 CertiOS.framework.proof.invariant_prop <> tc var
R168502:168502 CertiOS.framework.proof.invariant_prop <> S var
R168509:168512 Coq.Init.Datatypes <> Some constr
R168564:168577 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168530:168533 CertiOS.framework.logic.inferules <> satp def
R168558:168560 CertiOS.framework.logic.assertion <> INV def
R168562:168562 CertiOS.framework.proof.invariant_prop <> I var
R168536:168545 CertiOS.framework.logic.assertion <> substaskst def
R168669:168682 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168578:168581 CertiOS.framework.logic.inferules <> satp def
R168615:168618 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R168606:168611 CertiOS.framework.logic.inferules <> CurTid def
R168613:168614 CertiOS.framework.proof.invariant_prop <> tc var
R168640:168643 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R168619:168622 CertiOS.framework.logic.inferules <> LINV def
R168633:168639 CertiOS.framework.logic.inferules <> init_lg def
R168630:168631 CertiOS.framework.proof.invariant_prop <> tc var
R168624:168628 CertiOS.framework.proof.invariant_prop <> lasrt var
R168644:168647 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168654:168654 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168659:168659 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168663:168663 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168667:168667 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168648:168653 CertiOS.framework.model.language <> empisr def
R168655:168658 Coq.Init.Datatypes <> true constr
R168660:168662 Coq.Init.Datatypes <> nil constr
R168664:168666 Coq.Init.Datatypes <> nil constr
R168584:168593 CertiOS.framework.logic.assertion <> substaskst def
R168705:168707 Coq.Init.Logic <> :type_scope:x_'='_x not
R168683:168690 CertiOS.framework.model.opsem <> get_lenv def
R168693:168700 CertiOS.framework.model.language <> get_smem def
R168708:168713 CertiOS.framework.logic.assertion <> empenv syndef
R168771:168784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168792:168805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R168806:168812 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168815:168815 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168818:168818 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168821:168834 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R168849:168852 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168839:168841 Coq.Init.Logic <> :type_scope:x_'='_x not
R168838:168838 CertiOS.framework.proof.invariant_prop <> t var
R168842:168845 Coq.Init.Datatypes <> Some constr
R168867:168882 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168857:168859 Coq.Init.Logic <> :type_scope:x_'='_x not
R168856:168856 CertiOS.framework.proof.invariant_prop <> t var
R168860:168863 Coq.Init.Datatypes <> Some constr
R168902:168917 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168892:168894 Coq.Init.Logic <> :type_scope:x_'='_x not
R168883:168887 CertiOS.framework.model.opsem <> projS def
R168891:168891 CertiOS.framework.proof.invariant_prop <> t var
R168889:168889 CertiOS.framework.proof.invariant_prop <> S var
R168895:168898 Coq.Init.Datatypes <> Some constr
R168996:169011 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R168918:168921 CertiOS.framework.logic.inferules <> satp def
R168967:168970 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R168947:168950 CertiOS.framework.logic.inferules <> LINV def
R168960:168966 CertiOS.framework.logic.inferules <> init_lg def
R168958:168958 CertiOS.framework.proof.invariant_prop <> t var
R168952:168956 CertiOS.framework.proof.invariant_prop <> lasrt var
R168971:168974 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168981:168981 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168986:168986 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168990:168990 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168994:168994 CertiOS.framework.logic.assertion <> ::'OS'_'['_x_','_x_','_x_','_x_']' not
R168975:168980 CertiOS.framework.model.language <> empisr def
R168982:168985 Coq.Init.Datatypes <> true constr
R168987:168989 Coq.Init.Datatypes <> nil constr
R168991:168993 Coq.Init.Datatypes <> nil constr
R168924:168933 CertiOS.framework.logic.assertion <> substaskst def
R169034:169036 Coq.Init.Logic <> :type_scope:x_'='_x not
R169012:169019 CertiOS.framework.model.opsem <> get_lenv def
R169022:169029 CertiOS.framework.model.language <> get_smem def
R169037:169042 CertiOS.framework.logic.assertion <> empenv syndef
R168786:168789 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R168785:168785 CertiOS.framework.proof.invariant_prop <> t var
R168790:168791 CertiOS.framework.proof.invariant_prop <> tc var
R168762:168766 CertiOS.framework.auxlibs.Maps <> indom def
R168770:168770 CertiOS.framework.proof.invariant_prop <> t var
R168768:168768 CertiOS.framework.proof.invariant_prop <> T var
R168231:168244 CertiOS.framework.logic.inferules <> side_condition def
R168262:168268 CertiOS.framework.logic.inferules <> init_lg def
R168257:168260 CertiOS.framework.proof.invariant_prop <> init var
R168254:168255 CertiOS.framework.proof.invariant_prop <> sd var
R168248:168252 CertiOS.framework.proof.invariant_prop <> lasrt var
R168246:168246 CertiOS.framework.proof.invariant_prop <> I var
R168215:168218 CertiOS.framework.proof.invariant_prop <> init var
R168222:168222 CertiOS.framework.proof.invariant_prop <> O var
R168220:168220 CertiOS.framework.proof.invariant_prop <> S var
R168196:168202 CertiOS.framework.proof.oscorrectness <> eqdomto def
R168206:168206 CertiOS.framework.proof.invariant_prop <> O var
R168204:168204 CertiOS.framework.proof.invariant_prop <> T var
R168169:168171 Coq.Init.Logic <> :type_scope:x_'='_x not
R168157:168159 CertiOS.framework.auxlibs.Maps <> get meth
R168163:168168 CertiOS.framework.model.language <> curtid constr
R168161:168161 CertiOS.framework.proof.invariant_prop <> O var
R168172:168175 Coq.Init.Datatypes <> Some constr
R168178:168183 CertiOS.framework.model.language <> oscurt constr
R168185:168186 CertiOS.framework.proof.invariant_prop <> tc var
R169080:169094 CertiOS.framework.proof.invariant_prop <> side_condition' def
R169112:169118 CertiOS.framework.logic.inferules <> init_lg def
R169080:169094 CertiOS.framework.proof.invariant_prop <> side_condition' def
R169112:169118 CertiOS.framework.logic.inferules <> init_lg def
R169131:169144 CertiOS.framework.logic.inferules <> side_condition def
R169169:169183 CertiOS.framework.proof.invariant_prop <> side_condition' def
R169267:169287 CertiOS.framework.proof.invariant_prop <> eqdomSO_impl_subdomSO thm
R169267:169287 CertiOS.framework.proof.invariant_prop <> eqdomSO_impl_subdomSO thm
R169308:169319 CertiOS.framework.proof.invariant_prop <> init_partmo' thm
R169308:169319 CertiOS.framework.proof.invariant_prop <> init_partmo' thm
R169419:169425 CertiOS.framework.proof.invariant_prop <> indomSt def
R169419:169425 CertiOS.framework.proof.invariant_prop <> indomSt def
R169442:169455 CertiOS.framework.logic.inferules <> side_condition def
prf 169752:169760 <> joinm2_eq
R169810:169817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R169836:169843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R169846:169848 Coq.Init.Logic <> :type_scope:x_'='_x not
R169844:169845 CertiOS.framework.proof.invariant_prop <> m1 var
R169849:169851 CertiOS.framework.proof.invariant_prop <> m1' var
R169818:169823 CertiOS.framework.proof.simulation <> joinm2 def
R169835:169835 CertiOS.framework.proof.invariant_prop <> m var
R169832:169833 CertiOS.framework.proof.invariant_prop <> Mf var
R169829:169830 CertiOS.framework.proof.invariant_prop <> Ms var
R169825:169827 CertiOS.framework.proof.invariant_prop <> m1' var
R169793:169798 CertiOS.framework.proof.simulation <> joinm2 def
R169809:169809 CertiOS.framework.proof.invariant_prop <> m var
R169806:169807 CertiOS.framework.proof.invariant_prop <> Mf var
R169803:169804 CertiOS.framework.proof.invariant_prop <> Ms var
R169800:169801 CertiOS.framework.proof.invariant_prop <> m1 var
R169880:169885 CertiOS.framework.proof.simulation <> joinm2 def
R169909:169915 CertiOS.framework.logic.assertion <> joinmem def
R169943:169945 Coq.Init.Logic <> :type_scope:x_'='_x not
R169943:169945 Coq.Init.Logic <> :type_scope:x_'='_x not
R169963:169965 Coq.Init.Logic <> :type_scope:x_'='_x not
R169963:169965 Coq.Init.Logic <> :type_scope:x_'='_x not
R169980:169988 CertiOS.tactics.basetac.join_lib <> join_comm thm
R169980:169988 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170005:170013 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170005:170013 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170033:170045 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R170033:170045 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R170078:170086 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170078:170086 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170104:170112 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170104:170112 CertiOS.tactics.basetac.join_lib <> join_comm thm
R170132:170144 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
R170132:170144 CertiOS.tactics.basetac.join_lib <> join_unique_r thm
prf 170188:170205 <> alloc_curlinv_hold
R170297:170304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R170324:170331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R170438:170445 Coq.Init.Logic <> :type_scope:x_'->'_x not
R170474:170481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R170482:170485 CertiOS.framework.logic.inferules <> satp def
R170493:170499 CertiOS.framework.logic.inferules <> CurLINV def
R170507:170509 CertiOS.framework.proof.invariant_prop <> tid var
R170501:170505 CertiOS.framework.proof.invariant_prop <> lasrt var
R170490:170490 CertiOS.framework.proof.invariant_prop <> O var
R170487:170488 CertiOS.framework.proof.invariant_prop <> o' var
R170446:170449 CertiOS.framework.logic.inferules <> satp def
R170456:170462 CertiOS.framework.logic.inferules <> CurLINV def
R170470:170472 CertiOS.framework.proof.invariant_prop <> tid var
R170464:170468 CertiOS.framework.proof.invariant_prop <> lasrt var
R170453:170453 CertiOS.framework.proof.invariant_prop <> O var
R170451:170451 CertiOS.framework.proof.invariant_prop <> o var
R170332:170337 CertiOS.framework.model.opsem <> ltstep ind
R170435:170437 CertiOS.framework.proof.invariant_prop <> o'' var
R170419:170422 CertiOS.framework.proof.invariant_prop <> cst' var
R170415:170417 CertiOS.framework.proof.invariant_prop <> Cl' var
R170412:170413 CertiOS.framework.proof.invariant_prop <> o2 var
R170408:170410 CertiOS.framework.proof.invariant_prop <> cst var
R170356:170356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170376:170377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170406:170406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170357:170360 CertiOS.framework.model.language <> curs constr
R170363:170368 CertiOS.framework.model.language <> salloc constr
R170373:170374 CertiOS.framework.proof.invariant_prop <> dl var
R170370:170371 CertiOS.framework.proof.invariant_prop <> vl var
R170378:170378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170384:170385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170405:170405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R170379:170383 CertiOS.framework.model.language <> kenil constr
R170386:170390 CertiOS.framework.model.language <> kcall constr
R170403:170404 CertiOS.framework.proof.invariant_prop <> ks var
R170396:170401 CertiOS.framework.logic.assertion <> empenv syndef
R170394:170394 CertiOS.framework.proof.invariant_prop <> s var
R170392:170392 CertiOS.framework.proof.invariant_prop <> f var
R170341:170343 CertiOS.framework.proof.invariant_prop <> tid var
R170339:170339 CertiOS.framework.proof.invariant_prop <> p var
R170305:170310 CertiOS.framework.proof.simulation <> joinm2 def
R170321:170323 CertiOS.framework.proof.invariant_prop <> o'' var
R170318:170319 CertiOS.framework.proof.invariant_prop <> Mf var
R170315:170316 CertiOS.framework.proof.invariant_prop <> Ms var
R170312:170313 CertiOS.framework.proof.invariant_prop <> o' var
R170280:170285 CertiOS.framework.proof.simulation <> joinm2 def
R170295:170296 CertiOS.framework.proof.invariant_prop <> o2 var
R170292:170293 CertiOS.framework.proof.invariant_prop <> Mf var
R170289:170290 CertiOS.framework.proof.invariant_prop <> Ms var
R170287:170287 CertiOS.framework.proof.invariant_prop <> o var
R170658:170660 Coq.Init.Logic <> :type_scope:x_'='_x not
R170658:170660 Coq.Init.Logic <> :type_scope:x_'='_x not
R170675:170683 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R170675:170683 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R170759:170761 Coq.Init.Logic <> :type_scope:x_'='_x not
R170759:170761 Coq.Init.Logic <> :type_scope:x_'='_x not
R170776:170784 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R170776:170784 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R170836:170838 Coq.Init.Logic <> :type_scope:x_'='_x not
R170836:170838 Coq.Init.Logic <> :type_scope:x_'='_x not
R170853:170861 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R170853:170861 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R171016:171040 CertiOS.framework.proof.rulesoundlib <> alloc_store_exist_mem_env thm
R171016:171040 CertiOS.framework.proof.rulesoundlib <> alloc_store_exist_mem_env thm
R171070:171083 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171070:171083 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171100:171113 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171100:171113 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171131:171137 CertiOS.framework.logic.assertion <> joinmem def
R171163:171173 CertiOS.tactics.basetac.join_lib <> join_unique thm
R171163:171173 CertiOS.tactics.basetac.join_lib <> join_unique thm
R171199:171202 CertiOS.framework.logic.inferules <> satp def
R171231:171237 CertiOS.framework.logic.inferules <> CurLINV def
R171204:171204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171207:171208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171211:171212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171216:171217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171221:171222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171226:171226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171199:171202 CertiOS.framework.logic.inferules <> satp def
R171231:171237 CertiOS.framework.logic.inferules <> CurLINV def
R171204:171204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171207:171208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171211:171212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171216:171217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171221:171222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171226:171226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171261:171276 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R171261:171276 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R171308:171326 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R171308:171326 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R171433:171449 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_eq_trans thm
R171433:171449 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_eq_trans thm
R171467:171475 CertiOS.tactics.basetac.join_lib <> join_comm thm
R171484:171491 CertiOS.tactics.basetac.join_lib <> join_emp thm
R171467:171475 CertiOS.tactics.basetac.join_lib <> join_comm thm
R171484:171491 CertiOS.tactics.basetac.join_lib <> join_emp thm
R171526:171544 CertiOS.framework.proof.rulesoundlib <> alloc_exist_mem_env thm
R171526:171544 CertiOS.framework.proof.rulesoundlib <> alloc_exist_mem_env thm
R171568:171581 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171568:171581 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171598:171611 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171598:171611 CertiOS.framework.proof.rulesoundlib <> joinm2_ex_join thm
R171629:171635 CertiOS.framework.logic.assertion <> joinmem def
R171661:171671 CertiOS.tactics.basetac.join_lib <> join_unique thm
R171661:171671 CertiOS.tactics.basetac.join_lib <> join_unique thm
R171697:171700 CertiOS.framework.logic.inferules <> satp def
R171730:171736 CertiOS.framework.logic.inferules <> CurLINV def
R171702:171702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171706:171707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171710:171711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171715:171716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171720:171721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171725:171725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171697:171700 CertiOS.framework.logic.inferules <> satp def
R171730:171736 CertiOS.framework.logic.inferules <> CurLINV def
R171702:171702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171706:171707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171710:171711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171715:171716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171720:171721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171725:171725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171760:171775 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R171760:171775 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R171807:171825 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R171807:171825 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R171928:171944 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_eq_trans thm
R171928:171944 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_eq_trans thm
R171962:171970 CertiOS.tactics.basetac.join_lib <> join_comm thm
R171979:171986 CertiOS.tactics.basetac.join_lib <> join_emp thm
R171962:171970 CertiOS.tactics.basetac.join_lib <> join_comm thm
R171979:171986 CertiOS.tactics.basetac.join_lib <> join_emp thm
R172021:172029 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
R172021:172029 CertiOS.framework.proof.invariant_prop <> joinm2_eq thm
prf 172065:172078 <> partm_neq_disj
R172122:172129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172144:172151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172177:172184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172211:172218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172219:172226 CertiOS.framework.auxlibs.Maps <> disjoint def
R172231:172232 CertiOS.framework.proof.invariant_prop <> Md var
R172228:172229 CertiOS.framework.proof.invariant_prop <> Mc var
R172185:172201 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R172209:172210 CertiOS.framework.proof.invariant_prop <> Md var
R172206:172207 CertiOS.framework.proof.invariant_prop <> t' var
R172203:172204 CertiOS.framework.proof.invariant_prop <> Tm var
R172152:172168 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R172175:172176 CertiOS.framework.proof.invariant_prop <> Mc var
R172173:172173 CertiOS.framework.proof.invariant_prop <> t var
R172170:172171 CertiOS.framework.proof.invariant_prop <> Tm var
R172130:172134 CertiOS.framework.proof.auxdef <> partM ind
R172142:172143 CertiOS.framework.proof.invariant_prop <> Tm var
R172139:172140 CertiOS.framework.proof.invariant_prop <> Tl var
R172136:172137 CertiOS.framework.proof.invariant_prop <> Ml var
R172117:172120 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R172115:172116 CertiOS.framework.proof.invariant_prop <> t' var
R172121:172121 CertiOS.framework.proof.invariant_prop <> t var
R172261:172274 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
R172261:172274 CertiOS.framework.proof.invariant_prop <> partm_disjoint thm
prf 172296:172307 <> partM_normal
R172406:172413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172426:172433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172448:172455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172482:172489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R172490:172494 CertiOS.framework.proof.auxdef <> partM ind
R172514:172526 CertiOS.framework.proof.auxdef TMSpecMod put def
R172535:172541 CertiOS.framework.model.opsem <> get_mem def
R172544:172551 CertiOS.framework.model.language <> get_smem def
R172553:172554 CertiOS.framework.proof.invariant_prop <> o' var
R172531:172532 CertiOS.framework.proof.invariant_prop <> t' var
R172528:172529 CertiOS.framework.proof.invariant_prop <> Tm var
R172510:172511 CertiOS.framework.proof.invariant_prop <> Tl var
R172497:172501 CertiOS.framework.auxlibs.Maps <> minus meth
R172505:172507 CertiOS.framework.proof.invariant_prop <> Ms' var
R172503:172503 CertiOS.framework.proof.invariant_prop <> m var
R172456:172472 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R172480:172481 CertiOS.framework.proof.invariant_prop <> Mc var
R172477:172478 CertiOS.framework.proof.invariant_prop <> t' var
R172474:172475 CertiOS.framework.proof.invariant_prop <> Tm var
R172434:172438 CertiOS.framework.proof.auxdef <> partM ind
R172446:172447 CertiOS.framework.proof.invariant_prop <> Tm var
R172443:172444 CertiOS.framework.proof.invariant_prop <> Tl var
R172440:172441 CertiOS.framework.proof.invariant_prop <> Ml var
R172414:172417 CertiOS.framework.auxlibs.Maps <> join meth
R172425:172425 CertiOS.framework.proof.invariant_prop <> M var
R172422:172423 CertiOS.framework.proof.invariant_prop <> Ms var
R172419:172420 CertiOS.framework.proof.invariant_prop <> Ml var
R172362:172367 CertiOS.framework.proof.simulation <> joinm2 def
R172390:172390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172392:172393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172396:172397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172399:172400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172402:172403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172405:172405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172391:172391 CertiOS.framework.proof.invariant_prop <> e var
R172394:172395 CertiOS.framework.proof.invariant_prop <> e0 var
R172398:172398 CertiOS.framework.proof.invariant_prop <> m var
R172401:172401 CertiOS.framework.proof.invariant_prop <> i var
R172404:172404 CertiOS.framework.proof.invariant_prop <> l var
R172377:172381 CertiOS.framework.auxlibs.Maps <> minus meth
R172386:172387 CertiOS.framework.proof.invariant_prop <> Mc var
R172383:172384 CertiOS.framework.proof.invariant_prop <> Ml var
R172372:172374 CertiOS.framework.proof.invariant_prop <> Ms' var
R172369:172370 CertiOS.framework.proof.invariant_prop <> o' var
R172586:172591 CertiOS.framework.proof.simulation <> joinm2 def
R172615:172621 CertiOS.framework.logic.assertion <> joinmem def
R172656:172660 CertiOS.framework.proof.auxdef <> partM ind
R172669:172681 CertiOS.framework.proof.auxdef TMSpecMod put def
R172656:172660 CertiOS.framework.proof.auxdef <> partM ind
R172669:172681 CertiOS.framework.proof.auxdef TMSpecMod put def
R172706:172723 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R172706:172723 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R172815:172817 Coq.Init.Logic <> :type_scope:x_'='_x not
R172771:172786 CertiOS.framework.proof.auxdef TMSpecMod remove def
R172789:172801 CertiOS.framework.proof.auxdef TMSpecMod put def
R172818:172833 CertiOS.framework.proof.auxdef TMSpecMod remove def
R172815:172817 Coq.Init.Logic <> :type_scope:x_'='_x not
R172771:172786 CertiOS.framework.proof.auxdef TMSpecMod remove def
R172789:172801 CertiOS.framework.proof.auxdef TMSpecMod put def
R172818:172833 CertiOS.framework.proof.auxdef TMSpecMod remove def
R172853:172879 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R172853:172879 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R172853:172879 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R172919:172925 CertiOS.framework.proof.auxdef <> partm_S constr
R172919:172925 CertiOS.framework.proof.auxdef <> partm_S constr
R172945:172964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R172945:172964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R172945:172964 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R172984:173000 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R173003:173015 CertiOS.framework.proof.auxdef TMSpecMod put def
R172984:173000 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R173003:173015 CertiOS.framework.proof.auxdef TMSpecMod put def
R173056:173075 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173056:173075 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173056:173075 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173094:173098 CertiOS.framework.proof.auxdef <> partM ind
R173118:173133 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173101:173105 CertiOS.framework.auxlibs.Maps <> minus meth
R173094:173098 CertiOS.framework.proof.auxdef <> partM ind
R173118:173133 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173101:173105 CertiOS.framework.auxlibs.Maps <> minus meth
R173155:173172 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R173155:173172 CertiOS.framework.proof.invariant_prop <> partm_minus_remove thm
R173219:173245 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173219:173245 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173219:173245 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173292:173294 Coq.Init.Logic <> :type_scope:x_'='_x not
R173270:173285 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173295:173310 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173313:173325 CertiOS.framework.proof.auxdef TMSpecMod put def
R173292:173294 Coq.Init.Logic <> :type_scope:x_'='_x not
R173270:173285 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173295:173310 CertiOS.framework.proof.auxdef TMSpecMod remove def
R173313:173325 CertiOS.framework.proof.auxdef TMSpecMod put def
R173352:173378 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173352:173378 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173352:173378 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R173426:173432 CertiOS.framework.proof.auxdef <> partm_S constr
R173426:173432 CertiOS.framework.proof.auxdef <> partm_S constr
R173452:173471 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173452:173471 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173452:173471 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R173490:173518 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_sub_join_minus_minus thm
R173490:173518 CertiOS.tactics.basetac.perm_map_lemmas_part3 <> mem_join_sub_join_minus_minus thm
R173536:173545 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R173536:173545 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 173568:173579 <> partO_normal
R173595:173600 CertiOS.framework.model.language <> osabst def
R173653:173660 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173685:173691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173704:173711 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173726:173733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173760:173767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173768:173772 CertiOS.framework.proof.auxdef <> partO ind
R173792:173804 CertiOS.framework.proof.auxdef TOSpecMod put def
R173812:173813 CertiOS.framework.proof.invariant_prop <> O' var
R173809:173810 CertiOS.framework.proof.invariant_prop <> t' var
R173806:173807 CertiOS.framework.proof.invariant_prop <> To var
R173788:173789 CertiOS.framework.proof.invariant_prop <> Tl var
R173775:173779 CertiOS.framework.auxlibs.Maps <> minus meth
R173783:173785 CertiOS.framework.proof.invariant_prop <> Os' var
R173781:173781 CertiOS.framework.proof.invariant_prop <> x var
R173734:173750 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R173758:173759 CertiOS.framework.proof.invariant_prop <> Oc var
R173755:173756 CertiOS.framework.proof.invariant_prop <> t' var
R173752:173753 CertiOS.framework.proof.invariant_prop <> To var
R173712:173716 CertiOS.framework.proof.auxdef <> partO ind
R173724:173725 CertiOS.framework.proof.invariant_prop <> To var
R173721:173722 CertiOS.framework.proof.invariant_prop <> Tl var
R173718:173719 CertiOS.framework.proof.invariant_prop <> Ol var
R173692:173695 CertiOS.framework.auxlibs.Maps <> join meth
R173703:173703 CertiOS.framework.proof.invariant_prop <> O var
R173700:173701 CertiOS.framework.proof.invariant_prop <> Os var
R173697:173698 CertiOS.framework.proof.invariant_prop <> Ol var
R173661:173664 CertiOS.framework.auxlibs.Maps <> join meth
R173684:173684 CertiOS.framework.proof.invariant_prop <> x var
R173671:173675 CertiOS.framework.auxlibs.Maps <> minus meth
R173680:173681 CertiOS.framework.proof.invariant_prop <> Oc var
R173677:173678 CertiOS.framework.proof.invariant_prop <> Ol var
R173666:173668 CertiOS.framework.proof.invariant_prop <> OO' var
R173638:173641 CertiOS.framework.auxlibs.Maps <> join meth
R173650:173652 CertiOS.framework.proof.invariant_prop <> OO' var
R173646:173648 CertiOS.framework.proof.invariant_prop <> Os' var
R173643:173644 CertiOS.framework.proof.invariant_prop <> O' var
R173844:173848 CertiOS.framework.proof.auxdef <> partO ind
R173856:173868 CertiOS.framework.proof.auxdef TOSpecMod put def
R173844:173848 CertiOS.framework.proof.auxdef <> partO ind
R173856:173868 CertiOS.framework.proof.auxdef TOSpecMod put def
R173894:173911 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R173894:173911 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R174004:174006 Coq.Init.Logic <> :type_scope:x_'='_x not
R173959:173974 CertiOS.framework.proof.auxdef TOSpecMod remove def
R173977:173989 CertiOS.framework.proof.auxdef TOSpecMod put def
R174007:174022 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174004:174006 Coq.Init.Logic <> :type_scope:x_'='_x not
R173959:173974 CertiOS.framework.proof.auxdef TOSpecMod remove def
R173977:173989 CertiOS.framework.proof.auxdef TOSpecMod put def
R174007:174022 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174042:174068 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174042:174068 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174042:174068 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174109:174115 CertiOS.framework.proof.auxdef <> parto_S constr
R174109:174115 CertiOS.framework.proof.auxdef <> parto_S constr
R174135:174154 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174135:174154 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174135:174154 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174174:174190 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R174193:174205 CertiOS.framework.proof.auxdef TOSpecMod put def
R174174:174190 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R174193:174205 CertiOS.framework.proof.auxdef TOSpecMod put def
R174248:174267 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174248:174267 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174248:174267 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174286:174290 CertiOS.framework.proof.auxdef <> partO ind
R174310:174325 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174293:174297 CertiOS.framework.auxlibs.Maps <> minus meth
R174286:174290 CertiOS.framework.proof.auxdef <> partO ind
R174310:174325 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174293:174297 CertiOS.framework.auxlibs.Maps <> minus meth
R174347:174364 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R174347:174364 CertiOS.framework.proof.invariant_prop <> parto_minus_remove thm
R174412:174438 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174412:174438 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174412:174438 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174485:174487 Coq.Init.Logic <> :type_scope:x_'='_x not
R174463:174478 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174488:174503 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174506:174518 CertiOS.framework.proof.auxdef TOSpecMod put def
R174485:174487 Coq.Init.Logic <> :type_scope:x_'='_x not
R174463:174478 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174488:174503 CertiOS.framework.proof.auxdef TOSpecMod remove def
R174506:174518 CertiOS.framework.proof.auxdef TOSpecMod put def
R174545:174571 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174545:174571 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174545:174571 CertiOS.framework.proof.auxdef TOSpecMod remove_cancel_put thm
R174619:174625 CertiOS.framework.proof.auxdef <> parto_S constr
R174619:174625 CertiOS.framework.proof.auxdef <> parto_S constr
R174645:174664 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174645:174664 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174645:174664 CertiOS.framework.proof.auxdef TOSpecMod put_get_eq thm
R174684:174715 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_join_minus_minus thm
R174684:174715 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> osabst_join_sub_join_minus_minus thm
R174733:174742 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
R174733:174742 CertiOS.tactics.basetac.join_lib <> join_sub_l thm
prf 174765:174779 <> swi_rdy_inv''''
R174796:174801 CertiOS.framework.model.language <> taskst def
R174813:174818 CertiOS.framework.model.language <> osabst def
R174830:174832 CertiOS.framework.model.memory <> mem def
R174850:174852 CertiOS.framework.logic.assertion <> Inv def
R174863:174865 CertiOS.framework.auxlibs.Modules <> tid def
R174873:174879 CertiOS.framework.model.language <> osstate def
R174924:174926 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R174918:174920 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R174912:174914 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R174900:174902 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R174897:174899 CertiOS.framework.model.memory <> env def
R174903:174911 CertiOS.framework.model.language EnvSpec B def
R174915:174917 CertiOS.framework.model.memory <> mem def
R174921:174923 CertiOS.framework.model.language <> isr def
R174927:174939 CertiOS.framework.model.language LocalStSpec B def
R174957:174961 CertiOS.framework.auxlibs.Modules <> block def
R174970:174973 CertiOS.framework.model.memory <> type ind
R174983:174985 CertiOS.framework.model.memory <> mem def
R174994:175000 CertiOS.framework.model.language <> ossched def
R175019:175024 CertiOS.framework.model.language <> osabst def
R175033:175040 CertiOS.framework.logic.inferules <> LocalInv def
R175061:175068 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175082:175089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175103:175110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175125:175132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175133:175133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175187:175195 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175196:175196 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175255:175263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175264:175264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175334:175342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175343:175343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175410:175418 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175437:175444 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175465:175472 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175536:175543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175592:175599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R175600:175606 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175610:175610 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175614:175614 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175618:175618 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175622:175622 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175626:175633 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R175650:175659 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175634:175641 CertiOS.framework.auxlibs.Maps <> disjoint def
R175688:175697 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175673:175675 Coq.Init.Logic <> :type_scope:x_'='_x not
R175660:175664 CertiOS.framework.auxlibs.Maps <> merge meth
R175676:175680 CertiOS.framework.auxlibs.Maps <> merge meth
R175686:175687 CertiOS.framework.proof.invariant_prop <> Ms var
R175682:175684 CertiOS.framework.proof.invariant_prop <> Mcc var
R175714:175723 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175698:175701 CertiOS.framework.auxlibs.Maps <> join meth
R175755:175764 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175727:175729 Coq.Init.Logic <> :type_scope:x_'='_x not
R175730:175732 CertiOS.framework.auxlibs.Maps <> set meth
R175745:175750 CertiOS.framework.model.language <> oscurt constr
R175752:175753 CertiOS.framework.proof.invariant_prop <> t' var
R175737:175742 CertiOS.framework.model.language <> curtid constr
R175734:175735 CertiOS.framework.proof.invariant_prop <> OO var
R175765:175765 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175822:175833 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175905:175905 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R175778:175782 CertiOS.framework.logic.assertion <> absop def
R175813:175816 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175785:175785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175803:175804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175808:175809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175812:175812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175786:175795 CertiOS.framework.logic.assertion <> substaskst def
R175797:175798 CertiOS.framework.proof.invariant_prop <> o' var
R175810:175811 CertiOS.framework.proof.invariant_prop <> ab var
R175817:175819 CertiOS.framework.logic.assertion <> INV def
R175821:175821 CertiOS.framework.proof.invariant_prop <> I var
R175846:175850 CertiOS.framework.logic.assertion <> absop def
R175890:175893 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175862:175862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175880:175881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175885:175886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175889:175889 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175863:175872 CertiOS.framework.logic.assertion <> substaskst def
R175874:175875 CertiOS.framework.proof.invariant_prop <> o' var
R175887:175888 CertiOS.framework.proof.invariant_prop <> ab var
R175894:175899 CertiOS.framework.logic.assertion <> RDYINV def
R175903:175904 CertiOS.framework.proof.invariant_prop <> t' var
R175901:175901 CertiOS.framework.proof.invariant_prop <> I var
R175581:175583 Coq.Init.Logic <> :type_scope:x_'='_x not
R175544:175548 CertiOS.framework.model.memory <> store def
R175573:175576 CertiOS.framework.model.memory <> Vptr constr
R175578:175579 CertiOS.framework.proof.invariant_prop <> t' var
R175563:175563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175565:175566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175570:175570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175564:175564 CertiOS.framework.proof.invariant_prop <> b var
R175560:175561 CertiOS.framework.proof.invariant_prop <> Mc var
R175551:175554 CertiOS.framework.model.memory <> Tptr constr
R175556:175557 CertiOS.framework.proof.invariant_prop <> tp var
R175584:175587 Coq.Init.Datatypes <> Some constr
R175589:175591 CertiOS.framework.proof.invariant_prop <> Mcc var
R175516:175518 Coq.Init.Logic <> :type_scope:x_'='_x not
R175473:175482 CertiOS.framework.model.memory EnvMod get def
R175508:175515 CertiOS.framework.model.opsem <> OSTCBCur def
R175485:175492 CertiOS.framework.model.opsem <> get_genv def
R175495:175502 CertiOS.framework.model.language <> get_smem def
R175504:175504 CertiOS.framework.proof.invariant_prop <> o var
R175519:175522 Coq.Init.Datatypes <> Some constr
R175524:175524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175526:175527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175535:175535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175525:175525 CertiOS.framework.proof.invariant_prop <> b var
R175528:175531 CertiOS.framework.model.memory <> Tptr constr
R175533:175534 CertiOS.framework.proof.invariant_prop <> tp var
R175455:175457 Coq.Init.Logic <> :type_scope:x_'='_x not
R175445:175449 CertiOS.framework.model.opsem <> projS def
R175453:175454 CertiOS.framework.proof.invariant_prop <> t' var
R175451:175451 CertiOS.framework.proof.invariant_prop <> S var
R175458:175461 Coq.Init.Datatypes <> Some constr
R175463:175464 CertiOS.framework.proof.invariant_prop <> o' var
R175428:175430 Coq.Init.Logic <> :type_scope:x_'='_x not
R175419:175423 CertiOS.framework.model.opsem <> projS def
R175427:175427 CertiOS.framework.proof.invariant_prop <> t var
R175425:175425 CertiOS.framework.proof.invariant_prop <> S var
R175431:175434 Coq.Init.Datatypes <> Some constr
R175436:175436 CertiOS.framework.proof.invariant_prop <> o var
R175356:175360 CertiOS.framework.logic.assertion <> absop def
R175388:175391 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175363:175363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175379:175380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175383:175384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175387:175387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175364:175373 CertiOS.framework.logic.assertion <> substaskst def
R175377:175378 CertiOS.framework.proof.invariant_prop <> Mc var
R175375:175375 CertiOS.framework.proof.invariant_prop <> o var
R175381:175382 CertiOS.framework.proof.invariant_prop <> Ol var
R175385:175386 CertiOS.framework.proof.invariant_prop <> ab var
R175392:175402 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R175409:175409 CertiOS.framework.proof.invariant_prop <> t var
R175407:175407 CertiOS.framework.proof.invariant_prop <> x var
R175404:175405 CertiOS.framework.proof.invariant_prop <> sc var
R175277:175281 CertiOS.framework.logic.assertion <> absop def
R175309:175312 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175284:175284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175300:175301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175304:175305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175308:175308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175285:175294 CertiOS.framework.logic.assertion <> substaskst def
R175298:175299 CertiOS.framework.proof.invariant_prop <> Mc var
R175296:175296 CertiOS.framework.proof.invariant_prop <> o var
R175302:175303 CertiOS.framework.proof.invariant_prop <> Ol var
R175306:175307 CertiOS.framework.proof.invariant_prop <> ab var
R175325:175328 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R175313:175318 CertiOS.framework.logic.assertion <> AHprio constr
R175323:175324 CertiOS.framework.proof.invariant_prop <> t' var
R175320:175321 CertiOS.framework.proof.invariant_prop <> sc var
R175329:175333 CertiOS.framework.logic.assertion <> Atrue constr
R175209:175213 CertiOS.framework.logic.assertion <> absop def
R175241:175244 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175216:175216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175232:175233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175236:175237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175240:175240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175217:175226 CertiOS.framework.logic.assertion <> substaskst def
R175230:175231 CertiOS.framework.proof.invariant_prop <> Mc var
R175228:175228 CertiOS.framework.proof.invariant_prop <> o var
R175234:175235 CertiOS.framework.proof.invariant_prop <> Ol var
R175238:175239 CertiOS.framework.proof.invariant_prop <> ab var
R175245:175250 CertiOS.framework.logic.assertion <> SWINVt def
R175254:175254 CertiOS.framework.proof.invariant_prop <> t var
R175252:175252 CertiOS.framework.proof.invariant_prop <> I var
R175146:175150 CertiOS.framework.logic.assertion <> absop def
R175178:175181 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R175153:175153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175169:175170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175173:175174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175177:175177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175154:175163 CertiOS.framework.logic.assertion <> substaskst def
R175167:175168 CertiOS.framework.proof.invariant_prop <> Ms var
R175165:175165 CertiOS.framework.proof.invariant_prop <> o var
R175171:175172 CertiOS.framework.proof.invariant_prop <> Os var
R175175:175176 CertiOS.framework.proof.invariant_prop <> ab var
R175182:175184 CertiOS.framework.logic.assertion <> INV def
R175186:175186 CertiOS.framework.proof.invariant_prop <> I var
R175111:175118 CertiOS.framework.auxlibs.Maps <> disjoint def
R175123:175124 CertiOS.framework.proof.invariant_prop <> Ms var
R175120:175121 CertiOS.framework.proof.invariant_prop <> Mc var
R175090:175093 CertiOS.framework.auxlibs.Maps <> join meth
R175101:175102 CertiOS.framework.proof.invariant_prop <> OO var
R175098:175099 CertiOS.framework.proof.invariant_prop <> Os var
R175095:175096 CertiOS.framework.proof.invariant_prop <> Ol var
R175069:175073 CertiOS.framework.logic.inferules <> GoodI def
R175080:175081 CertiOS.framework.proof.invariant_prop <> li var
R175077:175078 CertiOS.framework.proof.invariant_prop <> sc var
R175075:175075 CertiOS.framework.proof.invariant_prop <> I var
R175050:175058 CertiOS.framework.proof.auxdef <> good_is_S def
R175060:175060 CertiOS.framework.proof.invariant_prop <> S var
R175935:175942 CertiOS.framework.auxlibs.Maps <> disjoint def
R175935:175942 CertiOS.framework.auxlibs.Maps <> disjoint def
R175961:175972 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R175961:175972 CertiOS.tactics.basetac.join_lib <> my_join_disj thm
R175993:176007 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv'''1 thm
R175993:176007 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv'''1 thm
R176113:176115 Coq.Init.Logic <> :type_scope:x_'='_x not
R176116:176120 CertiOS.framework.auxlibs.Maps <> merge meth
R176113:176115 Coq.Init.Logic <> :type_scope:x_'='_x not
R176116:176120 CertiOS.framework.auxlibs.Maps <> merge meth
R176139:176148 CertiOS.tactics.basetac.join_lib <> join_merge thm
R176139:176148 CertiOS.tactics.basetac.join_lib <> join_merge thm
R176231:176245 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R176231:176245 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
prf 177723:177738 <> swi_rdy_inv_dead
R177756:177761 CertiOS.framework.model.language <> taskst def
R177773:177778 CertiOS.framework.model.language <> osabst def
R177790:177792 CertiOS.framework.model.memory <> mem def
R177810:177812 CertiOS.framework.logic.assertion <> Inv def
R177823:177825 CertiOS.framework.auxlibs.Modules <> tid def
R177833:177839 CertiOS.framework.model.language <> osstate def
R177884:177886 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R177878:177880 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R177872:177874 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R177860:177862 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R177857:177859 CertiOS.framework.model.memory <> env def
R177863:177871 CertiOS.framework.model.language EnvSpec B def
R177875:177877 CertiOS.framework.model.memory <> mem def
R177881:177883 CertiOS.framework.model.language <> isr def
R177887:177899 CertiOS.framework.model.language LocalStSpec B def
R177917:177921 CertiOS.framework.auxlibs.Modules <> block def
R177930:177933 CertiOS.framework.model.memory <> type ind
R177943:177945 CertiOS.framework.model.memory <> mem def
R177954:177960 CertiOS.framework.model.language <> ossched def
R177979:177984 CertiOS.framework.model.language <> osabst def
R177993:178000 CertiOS.framework.logic.inferules <> LocalInv def
R178008:178010 CertiOS.framework.model.memory <> var def
R178056:178063 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178077:178084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178099:178106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178121:178128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178144:178151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178184:178191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178207:178214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178229:178236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178253:178260 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178261:178261 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178315:178323 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178324:178324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178383:178391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178392:178392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178462:178470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178471:178471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178537:178545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178596:178603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178622:178629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178650:178657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178721:178728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178777:178784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R178785:178791 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178795:178795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178799:178799 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178803:178803 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178807:178807 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178811:178811 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178816:178823 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R178840:178849 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R178824:178831 CertiOS.framework.auxlibs.Maps <> disjoint def
R178898:178907 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R178863:178865 Coq.Init.Logic <> :type_scope:x_'='_x not
R178850:178854 CertiOS.framework.auxlibs.Maps <> merge meth
R178866:178870 CertiOS.framework.auxlibs.Maps <> merge meth
R178896:178897 CertiOS.framework.proof.invariant_prop <> Ms var
R178873:178877 CertiOS.framework.auxlibs.Maps <> merge meth
R178884:178889 CertiOS.framework.proof.simulation <> getmem def
R178891:178892 CertiOS.framework.proof.invariant_prop <> o1 var
R178879:178881 CertiOS.framework.proof.invariant_prop <> Mcc var
R178925:178934 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R178908:178911 CertiOS.framework.auxlibs.Maps <> join meth
R178951:178961 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R178935:178938 CertiOS.framework.auxlibs.Maps <> join meth
R178944:178945 CertiOS.framework.proof.invariant_prop <> O2 var
R178993:179002 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R178965:178967 Coq.Init.Logic <> :type_scope:x_'='_x not
R178968:178970 CertiOS.framework.auxlibs.Maps <> set meth
R178983:178988 CertiOS.framework.model.language <> oscurt constr
R178990:178991 CertiOS.framework.proof.invariant_prop <> t' var
R178975:178980 CertiOS.framework.model.language <> curtid constr
R178972:178973 CertiOS.framework.proof.invariant_prop <> OO var
R179003:179003 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R179060:179071 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R179134:179134 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R179016:179020 CertiOS.framework.logic.assertion <> absop def
R179051:179054 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R179023:179023 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179041:179042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179046:179047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179050:179050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179024:179033 CertiOS.framework.logic.assertion <> substaskst def
R179035:179036 CertiOS.framework.proof.invariant_prop <> o' var
R179048:179049 CertiOS.framework.proof.invariant_prop <> ab var
R179055:179057 CertiOS.framework.logic.assertion <> INV def
R179059:179059 CertiOS.framework.proof.invariant_prop <> I var
R179084:179088 CertiOS.framework.logic.assertion <> absop def
R179119:179122 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R179091:179091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179109:179110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179114:179115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179118:179118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179092:179101 CertiOS.framework.logic.assertion <> substaskst def
R179103:179104 CertiOS.framework.proof.invariant_prop <> o' var
R179116:179117 CertiOS.framework.proof.invariant_prop <> ab var
R179123:179128 CertiOS.framework.logic.assertion <> RDYINV def
R179132:179133 CertiOS.framework.proof.invariant_prop <> t' var
R179130:179130 CertiOS.framework.proof.invariant_prop <> I var
R178766:178768 Coq.Init.Logic <> :type_scope:x_'='_x not
R178729:178733 CertiOS.framework.model.memory <> store def
R178758:178761 CertiOS.framework.model.memory <> Vptr constr
R178763:178764 CertiOS.framework.proof.invariant_prop <> t' var
R178748:178748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178750:178751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178755:178755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178749:178749 CertiOS.framework.proof.invariant_prop <> b var
R178745:178746 CertiOS.framework.proof.invariant_prop <> Mc var
R178736:178739 CertiOS.framework.model.memory <> Tptr constr
R178741:178742 CertiOS.framework.proof.invariant_prop <> tp var
R178769:178772 Coq.Init.Datatypes <> Some constr
R178774:178776 CertiOS.framework.proof.invariant_prop <> Mcc var
R178701:178703 Coq.Init.Logic <> :type_scope:x_'='_x not
R178658:178667 CertiOS.framework.model.memory EnvMod get def
R178693:178700 CertiOS.framework.model.opsem <> OSTCBCur def
R178670:178677 CertiOS.framework.model.opsem <> get_genv def
R178680:178687 CertiOS.framework.model.language <> get_smem def
R178689:178689 CertiOS.framework.proof.invariant_prop <> o var
R178704:178707 Coq.Init.Datatypes <> Some constr
R178709:178709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178711:178712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178720:178720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178710:178710 CertiOS.framework.proof.invariant_prop <> b var
R178713:178716 CertiOS.framework.model.memory <> Tptr constr
R178718:178719 CertiOS.framework.proof.invariant_prop <> tp var
R178640:178642 Coq.Init.Logic <> :type_scope:x_'='_x not
R178630:178634 CertiOS.framework.model.opsem <> projS def
R178638:178639 CertiOS.framework.proof.invariant_prop <> t' var
R178636:178636 CertiOS.framework.proof.invariant_prop <> S var
R178643:178646 Coq.Init.Datatypes <> Some constr
R178648:178649 CertiOS.framework.proof.invariant_prop <> o' var
R178613:178615 Coq.Init.Logic <> :type_scope:x_'='_x not
R178604:178608 CertiOS.framework.model.opsem <> projS def
R178612:178612 CertiOS.framework.proof.invariant_prop <> t var
R178610:178610 CertiOS.framework.proof.invariant_prop <> S var
R178616:178619 Coq.Init.Datatypes <> Some constr
R178621:178621 CertiOS.framework.proof.invariant_prop <> o var
R178546:178549 CertiOS.framework.logic.inferules <> satp def
R178558:178560 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R178580:178581 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R178567:178570 Coq.Init.Datatypes <> list ind
R178572:178579 CertiOS.framework.logic.assertion <> logicvar ind
R178582:178585 CertiOS.framework.logic.inferules <> LINV def
R178592:178594 CertiOS.framework.proof.invariant_prop <> lg' var
R178590:178590 CertiOS.framework.proof.invariant_prop <> t var
R178587:178588 CertiOS.framework.proof.invariant_prop <> li var
R178554:178555 CertiOS.framework.proof.invariant_prop <> O1 var
R178551:178552 CertiOS.framework.proof.invariant_prop <> o1 var
R178484:178488 CertiOS.framework.logic.assertion <> absop def
R178516:178519 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R178491:178491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178507:178508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178511:178512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178515:178515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178492:178501 CertiOS.framework.logic.assertion <> substaskst def
R178505:178506 CertiOS.framework.proof.invariant_prop <> Mc var
R178503:178503 CertiOS.framework.proof.invariant_prop <> o var
R178509:178510 CertiOS.framework.proof.invariant_prop <> Ol var
R178513:178514 CertiOS.framework.proof.invariant_prop <> ab var
R178520:178529 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R178536:178536 CertiOS.framework.proof.invariant_prop <> t var
R178534:178534 CertiOS.framework.proof.invariant_prop <> x var
R178531:178532 CertiOS.framework.proof.invariant_prop <> sc var
R178405:178409 CertiOS.framework.logic.assertion <> absop def
R178437:178440 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R178412:178412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178428:178429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178432:178433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178436:178436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178413:178422 CertiOS.framework.logic.assertion <> substaskst def
R178426:178427 CertiOS.framework.proof.invariant_prop <> Mc var
R178424:178424 CertiOS.framework.proof.invariant_prop <> o var
R178430:178431 CertiOS.framework.proof.invariant_prop <> Ol var
R178434:178435 CertiOS.framework.proof.invariant_prop <> ab var
R178453:178456 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R178441:178446 CertiOS.framework.logic.assertion <> AHprio constr
R178451:178452 CertiOS.framework.proof.invariant_prop <> t' var
R178448:178449 CertiOS.framework.proof.invariant_prop <> sc var
R178457:178461 CertiOS.framework.logic.assertion <> Atrue constr
R178337:178341 CertiOS.framework.logic.assertion <> absop def
R178369:178372 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R178344:178344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178360:178361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178364:178365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178368:178368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178345:178354 CertiOS.framework.logic.assertion <> substaskst def
R178358:178359 CertiOS.framework.proof.invariant_prop <> Mc var
R178356:178356 CertiOS.framework.proof.invariant_prop <> o var
R178362:178363 CertiOS.framework.proof.invariant_prop <> Ol var
R178366:178367 CertiOS.framework.proof.invariant_prop <> ab var
R178373:178378 CertiOS.framework.logic.assertion <> SWINVt def
R178382:178382 CertiOS.framework.proof.invariant_prop <> t var
R178380:178380 CertiOS.framework.proof.invariant_prop <> I var
R178274:178278 CertiOS.framework.logic.assertion <> absop def
R178306:178309 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R178281:178281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178297:178298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178301:178302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178305:178305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R178282:178291 CertiOS.framework.logic.assertion <> substaskst def
R178295:178296 CertiOS.framework.proof.invariant_prop <> Ms var
R178293:178293 CertiOS.framework.proof.invariant_prop <> o var
R178299:178300 CertiOS.framework.proof.invariant_prop <> Os var
R178303:178304 CertiOS.framework.proof.invariant_prop <> ab var
R178310:178312 CertiOS.framework.logic.assertion <> INV def
R178314:178314 CertiOS.framework.proof.invariant_prop <> I var
R178237:178243 CertiOS.framework.logic.assertion <> joinmem def
R178251:178252 CertiOS.framework.proof.invariant_prop <> ol var
R178248:178249 CertiOS.framework.proof.invariant_prop <> M2 var
R178245:178246 CertiOS.framework.proof.invariant_prop <> o1 var
R178215:178218 CertiOS.framework.auxlibs.Maps <> join meth
R178226:178228 CertiOS.framework.proof.invariant_prop <> Olc var
R178223:178224 CertiOS.framework.proof.invariant_prop <> O2 var
R178220:178221 CertiOS.framework.proof.invariant_prop <> O1 var
R178192:178195 CertiOS.framework.auxlibs.Maps <> join meth
R178204:178206 CertiOS.framework.proof.invariant_prop <> OOO var
R178201:178202 CertiOS.framework.proof.invariant_prop <> Ol var
R178197:178199 CertiOS.framework.proof.invariant_prop <> Olc var
R178152:178158 CertiOS.framework.logic.assertion <> joinmem def
R178167:178176 CertiOS.framework.logic.assertion <> substaskst def
R178180:178182 CertiOS.framework.proof.invariant_prop <> MMM var
R178178:178178 CertiOS.framework.proof.invariant_prop <> o var
R178163:178164 CertiOS.framework.proof.invariant_prop <> Mc var
R178160:178161 CertiOS.framework.proof.invariant_prop <> ol var
R178129:178136 CertiOS.framework.auxlibs.Maps <> disjoint def
R178141:178143 CertiOS.framework.proof.invariant_prop <> MMM var
R178138:178139 CertiOS.framework.proof.invariant_prop <> Ms var
R178107:178114 CertiOS.framework.auxlibs.Maps <> disjoint def
R178119:178120 CertiOS.framework.proof.invariant_prop <> Ms var
R178116:178117 CertiOS.framework.proof.invariant_prop <> Mc var
R178085:178088 CertiOS.framework.auxlibs.Maps <> join meth
R178097:178098 CertiOS.framework.proof.invariant_prop <> OO var
R178094:178095 CertiOS.framework.proof.invariant_prop <> Os var
R178090:178092 CertiOS.framework.proof.invariant_prop <> OOO var
R178064:178068 CertiOS.framework.logic.inferules <> GoodI def
R178075:178076 CertiOS.framework.proof.invariant_prop <> li var
R178072:178073 CertiOS.framework.proof.invariant_prop <> sc var
R178070:178070 CertiOS.framework.proof.invariant_prop <> I var
R178045:178053 CertiOS.framework.proof.auxdef <> good_is_S def
R178055:178055 CertiOS.framework.proof.invariant_prop <> S var
R179295:179301 CertiOS.framework.logic.assertion <> joinmem def
R179346:179351 CertiOS.framework.proof.simulation <> getmem def
R179379:179383 CertiOS.framework.logic.inferules <> GoodI def
R179456:179461 CertiOS.framework.proof.invariant_prop <> absopx def
R179456:179461 CertiOS.framework.proof.invariant_prop <> absopx def
R179481:179486 CertiOS.framework.proof.invariant_prop <> absopx def
R179481:179486 CertiOS.framework.proof.invariant_prop <> absopx def
R179648:179653 CertiOS.framework.proof.invariant_prop <> absopx def
R179648:179653 CertiOS.framework.proof.invariant_prop <> absopx def
R179665:179674 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R179765:179767 Coq.Init.Logic <> :type_scope:x_'='_x not
R179749:179751 CertiOS.framework.auxlibs.Maps <> get meth
R179756:179764 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R179768:179771 Coq.Init.Datatypes <> Some constr
R179774:179783 CertiOS.framework.model.language <> abstcblist constr
R179765:179767 Coq.Init.Logic <> :type_scope:x_'='_x not
R179749:179751 CertiOS.framework.auxlibs.Maps <> get meth
R179756:179764 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R179768:179771 Coq.Init.Datatypes <> Some constr
R179774:179783 CertiOS.framework.model.language <> abstcblist constr
R179815:179824 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R179815:179824 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R179956:179959 CertiOS.framework.logic.inferules <> satp def
R179988:179990 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R180009:180010 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R179996:179999 Coq.Init.Datatypes <> list ind
R180001:180008 CertiOS.framework.logic.assertion <> logicvar ind
R180016:180017 CertiOS.framework.proof.invariant_prop <> lg var
R179961:179961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179964:179965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179968:179969 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179972:179973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179977:179978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179982:179982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179956:179959 CertiOS.framework.logic.inferules <> satp def
R179988:179990 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R180009:180010 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R179996:179999 Coq.Init.Datatypes <> list ind
R180001:180008 CertiOS.framework.logic.assertion <> logicvar ind
R180016:180017 CertiOS.framework.proof.invariant_prop <> lg var
R179961:179961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179964:179965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179968:179969 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179972:179973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179977:179978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R179982:179982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180031:180034 CertiOS.framework.logic.inferules <> satp def
R180089:180092 CertiOS.framework.logic.inferules <> LINV def
R180153:180156 CertiOS.framework.auxlibs.Maps <> join meth
R180166:180170 CertiOS.framework.auxlibs.Maps <> merge meth
R180153:180156 CertiOS.framework.auxlibs.Maps <> join meth
R180166:180170 CertiOS.framework.auxlibs.Maps <> merge meth
R180215:180222 CertiOS.framework.auxlibs.Maps <> disjoint def
R180215:180222 CertiOS.framework.auxlibs.Maps <> disjoint def
R180240:180251 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R180240:180251 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R180263:180280 CertiOS.tactics.basetac.join_lib <> join_join_disjoint thm
R180263:180280 CertiOS.tactics.basetac.join_lib <> join_join_disjoint thm
R180301:180315 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R180301:180315 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R180333:180347 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R180333:180347 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R180369:180372 CertiOS.framework.auxlibs.Maps <> join meth
R180381:180385 CertiOS.framework.auxlibs.Maps <> merge meth
R180369:180372 CertiOS.framework.auxlibs.Maps <> join meth
R180381:180385 CertiOS.framework.auxlibs.Maps <> merge meth
R180423:180430 CertiOS.framework.auxlibs.Maps <> disjoint def
R180423:180430 CertiOS.framework.auxlibs.Maps <> disjoint def
R180448:180459 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R180448:180459 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R180471:180500 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> osabst_join_join_disjoint_auto thm
R180471:180500 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> osabst_join_join_disjoint_auto thm
R180519:180533 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R180519:180533 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R180581:180588 CertiOS.framework.auxlibs.Maps <> disjoint def
R180591:180593 CertiOS.framework.auxlibs.Maps <> set meth
R180617:180622 CertiOS.framework.model.language <> oscurt constr
R180609:180614 CertiOS.framework.model.language <> curtid constr
R180596:180600 CertiOS.framework.auxlibs.Maps <> merge meth
R180581:180588 CertiOS.framework.auxlibs.Maps <> disjoint def
R180591:180593 CertiOS.framework.auxlibs.Maps <> set meth
R180617:180622 CertiOS.framework.model.language <> oscurt constr
R180609:180614 CertiOS.framework.model.language <> curtid constr
R180596:180600 CertiOS.framework.auxlibs.Maps <> merge meth
R180650:180655 CertiOS.framework.proof.invariant_prop <> absopx def
R180650:180655 CertiOS.framework.proof.invariant_prop <> absopx def
R180734:180739 CertiOS.framework.model.language <> oscurt constr
R180734:180739 CertiOS.framework.model.language <> oscurt constr
R180762:180767 CertiOS.framework.model.language <> oscurt constr
R180762:180767 CertiOS.framework.model.language <> oscurt constr
R180791:180796 CertiOS.framework.model.language <> curtid constr
R180791:180796 CertiOS.framework.model.language <> curtid constr
R180848:180872 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_disjoint_set_merge thm
R180848:180872 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_disjoint_set_merge thm
R180896:180903 CertiOS.framework.auxlibs.Maps <> disjoint def
R180906:180910 CertiOS.framework.auxlibs.Maps <> merge meth
R180896:180903 CertiOS.framework.auxlibs.Maps <> disjoint def
R180906:180910 CertiOS.framework.auxlibs.Maps <> merge meth
R180961:180967 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R180971:180972 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R180988:180991 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R180973:180976 CertiOS.framework.auxlibs.Maps <> join meth
R181027:181029 Coq.Init.Logic <> :type_scope:x_'='_x not
R180992:180996 CertiOS.framework.model.memory <> store def
R181019:181022 CertiOS.framework.model.memory <> Vptr constr
R181011:181011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181013:181014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181016:181016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180999:181002 CertiOS.framework.model.memory <> Tptr constr
R181030:181033 Coq.Init.Datatypes <> Some constr
R180961:180967 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R180971:180972 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R180988:180991 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R180973:180976 CertiOS.framework.auxlibs.Maps <> join meth
R181027:181029 Coq.Init.Logic <> :type_scope:x_'='_x not
R180992:180996 CertiOS.framework.model.memory <> store def
R181019:181022 CertiOS.framework.model.memory <> Vptr constr
R181011:181011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181013:181014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R181016:181016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R180999:181002 CertiOS.framework.model.memory <> Tptr constr
R181030:181033 Coq.Init.Datatypes <> Some constr
R181049:181057 CertiOS.tactics.basetac.join_lib <> join_comm thm
R181049:181057 CertiOS.tactics.basetac.join_lib <> join_comm thm
R181078:181096 CertiOS.framework.proof.lmachLib <> store_mono thm
R181078:181096 CertiOS.framework.proof.lmachLib <> store_mono thm
R181131:181140 CertiOS.framework.proof.memory_prop <> join_store thm
R181131:181140 CertiOS.framework.proof.memory_prop <> join_store thm
R181161:181169 CertiOS.tactics.basetac.join_lib <> join_comm thm
R181161:181169 CertiOS.tactics.basetac.join_lib <> join_comm thm
R181209:181220 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R181209:181220 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R181240:181254 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R181240:181254 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R181292:181319 CertiOS.framework.proof.invariant_prop_lemmas <> mem_join_join_disjoint_merge thm
R181292:181319 CertiOS.framework.proof.invariant_prop_lemmas <> mem_join_join_disjoint_merge thm
R181341:181352 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv' thm
R181341:181352 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv' thm
R181473:181486 CertiOS.framework.proof.rulesoundlib <> swinv_aop_irev thm
R181473:181486 CertiOS.framework.proof.rulesoundlib <> swinv_aop_irev thm
R181606:181610 CertiOS.framework.auxlibs.Maps <> minus meth
R181613:181617 CertiOS.framework.auxlibs.Maps <> merge meth
R181620:181624 CertiOS.framework.auxlibs.Maps <> merge meth
R181606:181610 CertiOS.framework.auxlibs.Maps <> minus meth
R181613:181617 CertiOS.framework.auxlibs.Maps <> merge meth
R181620:181624 CertiOS.framework.auxlibs.Maps <> merge meth
R181675:181680 CertiOS.framework.proof.invariant_prop <> absopx def
R181675:181680 CertiOS.framework.proof.invariant_prop <> absopx def
R181766:181771 CertiOS.framework.model.language <> curtid constr
R181766:181771 CertiOS.framework.model.language <> curtid constr
R181791:181796 CertiOS.framework.model.language <> oscurt constr
R181791:181796 CertiOS.framework.model.language <> oscurt constr
R181819:181824 CertiOS.framework.model.language <> oscurt constr
R181819:181824 CertiOS.framework.model.language <> oscurt constr
R181871:181903 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_minus_merge_merge_set thm
R181871:181903 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_minus_merge_merge_set thm
R181930:181935 CertiOS.framework.proof.invariant_prop <> absopx def
R181930:181935 CertiOS.framework.proof.invariant_prop <> absopx def
R182021:182026 CertiOS.framework.model.language <> curtid constr
R182021:182026 CertiOS.framework.model.language <> curtid constr
R182046:182051 CertiOS.framework.model.language <> oscurt constr
R182046:182051 CertiOS.framework.model.language <> oscurt constr
R182074:182079 CertiOS.framework.model.language <> oscurt constr
R182074:182079 CertiOS.framework.model.language <> oscurt constr
R182131:182159 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_minus_merge_merge thm
R182131:182159 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_minus_merge_merge thm
prf 182221:182234 <> linv_aop_irev'
R182297:182304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R182315:182318 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182305:182305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182307:182307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182309:182309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182314:182314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182306:182306 CertiOS.framework.proof.invariant_prop <> o var
R182308:182308 CertiOS.framework.proof.invariant_prop <> O var
R182310:182313 CertiOS.framework.proof.invariant_prop <> aop' var
R182319:182322 CertiOS.framework.logic.inferules <> LINV def
R182329:182330 CertiOS.framework.proof.invariant_prop <> lg var
R182327:182327 CertiOS.framework.proof.invariant_prop <> t var
R182324:182325 CertiOS.framework.proof.invariant_prop <> li var
R182281:182284 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182272:182272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182274:182274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182276:182276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182280:182280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182273:182273 CertiOS.framework.proof.invariant_prop <> o var
R182275:182275 CertiOS.framework.proof.invariant_prop <> O var
R182277:182279 CertiOS.framework.proof.invariant_prop <> aop var
R182285:182288 CertiOS.framework.logic.inferules <> LINV def
R182295:182296 CertiOS.framework.proof.invariant_prop <> lg var
R182293:182293 CertiOS.framework.proof.invariant_prop <> t var
R182290:182291 CertiOS.framework.proof.invariant_prop <> li var
R182450:182474 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R182450:182474 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
prf 182546:182554 <> aux_atrue
R182649:182656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R182657:182663 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182666:182666 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182669:182669 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182672:182672 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182675:182682 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182699:182702 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182683:182689 CertiOS.framework.logic.assertion <> joinmem def
R182697:182698 CertiOS.framework.proof.invariant_prop <> ol var
R182717:182726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182703:182706 CertiOS.framework.auxlibs.Maps <> join meth
R182714:182716 CertiOS.framework.proof.invariant_prop <> Olc var
R182727:182730 CertiOS.framework.logic.inferules <> satp def
R182739:182741 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182761:182762 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182748:182751 Coq.Init.Datatypes <> list ind
R182753:182760 CertiOS.framework.logic.assertion <> logicvar ind
R182763:182766 CertiOS.framework.logic.inferules <> LINV def
R182776:182778 CertiOS.framework.proof.invariant_prop <> lg' var
R182774:182774 CertiOS.framework.proof.invariant_prop <> t var
R182768:182772 CertiOS.framework.proof.invariant_prop <> lasrt var
R182586:182589 CertiOS.framework.logic.inferules <> satp def
R182599:182601 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182621:182622 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182608:182611 Coq.Init.Datatypes <> list ind
R182613:182620 CertiOS.framework.logic.assertion <> logicvar ind
R182639:182642 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R182623:182626 CertiOS.framework.logic.inferules <> LINV def
R182636:182638 CertiOS.framework.proof.invariant_prop <> lg' var
R182634:182634 CertiOS.framework.proof.invariant_prop <> t var
R182628:182632 CertiOS.framework.proof.invariant_prop <> lasrt var
R182643:182647 CertiOS.framework.logic.assertion <> Atrue constr
R182594:182596 CertiOS.framework.proof.invariant_prop <> Olc var
R182591:182592 CertiOS.framework.proof.invariant_prop <> ol var
R182821:182827 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182830:182830 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182833:182833 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182836:182836 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182839:182852 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182869:182872 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182853:182859 CertiOS.framework.logic.assertion <> joinmem def
R182887:182902 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182873:182876 CertiOS.framework.auxlibs.Maps <> join meth
R182917:182921 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182962:182962 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182903:182904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182907:182908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182911:182912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182916:182916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182913:182915 CertiOS.framework.proof.invariant_prop <> aop var
R182922:182924 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182944:182945 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182931:182934 Coq.Init.Datatypes <> list ind
R182936:182943 CertiOS.framework.logic.assertion <> logicvar ind
R182946:182949 CertiOS.framework.logic.inferules <> LINV def
R182959:182961 CertiOS.framework.proof.invariant_prop <> lg' var
R182821:182827 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182830:182830 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182833:182833 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182836:182836 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182839:182852 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R182869:182872 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182853:182859 CertiOS.framework.logic.assertion <> joinmem def
R182887:182902 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R182873:182876 CertiOS.framework.auxlibs.Maps <> join meth
R182917:182921 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182962:182962 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R182903:182904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182907:182908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182911:182912 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182916:182916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R182913:182915 CertiOS.framework.proof.invariant_prop <> aop var
R182922:182924 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182944:182945 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R182931:182934 Coq.Init.Datatypes <> list ind
R182936:182943 CertiOS.framework.logic.assertion <> logicvar ind
R182946:182949 CertiOS.framework.logic.inferules <> LINV def
R182959:182961 CertiOS.framework.proof.invariant_prop <> lg' var
R183020:183023 CertiOS.framework.logic.inferules <> LINV def
R183020:183023 CertiOS.framework.logic.inferules <> LINV def
R183113:183122 CertiOS.framework.logic.assertion <> substaskst def
R183287:183295 CertiOS.framework.model.language <> spec_done constr
R183297:183300 Coq.Init.Datatypes <> None constr
R183287:183295 CertiOS.framework.model.language <> spec_done constr
R183297:183300 Coq.Init.Datatypes <> None constr
R183395:183408 CertiOS.framework.proof.invariant_prop <> linv_aop_irev' thm
R183395:183408 CertiOS.framework.proof.invariant_prop <> linv_aop_irev' thm
prf 183430:183462 <> mem_join_merge_minus_join_store'f
R183511:183513 CertiOS.framework.model.memory <> mem def
R183529:183531 CertiOS.framework.model.memory <> val ind
R183549:183552 CertiOS.framework.model.memory <> addr def
R183561:183564 CertiOS.framework.model.memory <> type ind
R183599:183606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183631:183638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183655:183662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183695:183702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183720:183727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183777:183784 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183799:183806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183819:183826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R183827:183830 CertiOS.framework.auxlibs.Maps <> join meth
R183874:183875 CertiOS.framework.proof.invariant_prop <> m' var
R183870:183872 CertiOS.framework.proof.invariant_prop <> Ms' var
R183833:183837 CertiOS.framework.auxlibs.Maps <> merge meth
R183864:183867 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R183840:183844 CertiOS.framework.auxlibs.Maps <> merge meth
R183860:183861 CertiOS.framework.proof.invariant_prop <> M2 var
R183847:183851 CertiOS.framework.auxlibs.Maps <> minus meth
R183856:183857 CertiOS.framework.proof.invariant_prop <> Mc var
R183853:183854 CertiOS.framework.proof.invariant_prop <> Ml var
R183807:183810 CertiOS.framework.auxlibs.Maps <> join meth
R183818:183818 CertiOS.framework.proof.invariant_prop <> m var
R183815:183816 CertiOS.framework.proof.invariant_prop <> Ms var
R183812:183813 CertiOS.framework.proof.invariant_prop <> Ml var
R183785:183792 CertiOS.framework.auxlibs.Maps <> sub def
R183797:183798 CertiOS.framework.proof.invariant_prop <> Ml var
R183794:183795 CertiOS.framework.proof.invariant_prop <> Mc var
R183742:183744 Coq.Init.Logic <> :type_scope:x_'='_x not
R183728:183732 CertiOS.framework.auxlibs.Maps <> merge meth
R183739:183741 CertiOS.framework.proof.invariant_prop <> Ms' var
R183734:183737 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R183745:183749 CertiOS.framework.auxlibs.Maps <> merge meth
R183775:183776 CertiOS.framework.proof.invariant_prop <> Ms var
R183752:183756 CertiOS.framework.auxlibs.Maps <> merge meth
R183763:183768 CertiOS.framework.proof.simulation <> getmem def
R183770:183771 CertiOS.framework.proof.invariant_prop <> o1 var
R183758:183760 CertiOS.framework.proof.invariant_prop <> Mcc var
R183703:183710 CertiOS.framework.auxlibs.Maps <> disjoint def
R183717:183719 CertiOS.framework.proof.invariant_prop <> Ms' var
R183712:183715 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R183663:183669 CertiOS.framework.logic.assertion <> joinmem def
R183679:183688 CertiOS.framework.logic.assertion <> substaskst def
R183692:183693 CertiOS.framework.proof.invariant_prop <> Mc var
R183690:183690 CertiOS.framework.proof.invariant_prop <> o var
R183674:183676 CertiOS.framework.proof.invariant_prop <> Mc' var
R183671:183672 CertiOS.framework.proof.invariant_prop <> ol var
R183639:183645 CertiOS.framework.logic.assertion <> joinmem def
R183653:183654 CertiOS.framework.proof.invariant_prop <> ol var
R183650:183651 CertiOS.framework.proof.invariant_prop <> M2 var
R183647:183648 CertiOS.framework.proof.invariant_prop <> o1 var
R183621:183623 Coq.Init.Logic <> :type_scope:x_'='_x not
R183607:183611 CertiOS.framework.model.memory <> store def
R183620:183620 CertiOS.framework.proof.invariant_prop <> v var
R183618:183618 CertiOS.framework.proof.invariant_prop <> l var
R183616:183616 CertiOS.framework.proof.invariant_prop <> m var
R183613:183614 CertiOS.framework.proof.invariant_prop <> tp var
R183624:183627 Coq.Init.Datatypes <> Some constr
R183629:183630 CertiOS.framework.proof.invariant_prop <> m' var
R183588:183590 Coq.Init.Logic <> :type_scope:x_'='_x not
R183572:183576 CertiOS.framework.model.memory <> store def
R183587:183587 CertiOS.framework.proof.invariant_prop <> v var
R183585:183585 CertiOS.framework.proof.invariant_prop <> l var
R183581:183583 CertiOS.framework.proof.invariant_prop <> Mc' var
R183578:183579 CertiOS.framework.proof.invariant_prop <> tp var
R183591:183594 Coq.Init.Datatypes <> Some constr
R183596:183598 CertiOS.framework.proof.invariant_prop <> Mcc var
R183957:183962 CertiOS.framework.proof.simulation <> getmem def
R183978:183984 CertiOS.framework.logic.assertion <> joinmem def
R184077:184080 CertiOS.framework.auxlibs.Maps <> join meth
R184086:184090 CertiOS.framework.auxlibs.Maps <> minus meth
R184077:184080 CertiOS.framework.auxlibs.Maps <> join meth
R184086:184090 CertiOS.framework.auxlibs.Maps <> minus meth
R184113:184126 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R184113:184126 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R184146:184152 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184156:184157 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184173:184176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184158:184161 CertiOS.framework.auxlibs.Maps <> join meth
R184192:184194 Coq.Init.Logic <> :type_scope:x_'='_x not
R184177:184181 CertiOS.framework.model.memory <> store def
R184195:184198 Coq.Init.Datatypes <> Some constr
R184146:184152 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184156:184157 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184173:184176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184158:184161 CertiOS.framework.auxlibs.Maps <> join meth
R184192:184194 Coq.Init.Logic <> :type_scope:x_'='_x not
R184177:184181 CertiOS.framework.model.memory <> store def
R184195:184198 Coq.Init.Datatypes <> Some constr
R184214:184222 CertiOS.tactics.basetac.join_lib <> join_comm thm
R184214:184222 CertiOS.tactics.basetac.join_lib <> join_comm thm
R184242:184260 CertiOS.framework.proof.lmachLib <> store_mono thm
R184242:184260 CertiOS.framework.proof.lmachLib <> store_mono thm
R184292:184301 CertiOS.framework.proof.memory_prop <> join_store thm
R184292:184301 CertiOS.framework.proof.memory_prop <> join_store thm
R184320:184328 CertiOS.tactics.basetac.join_lib <> join_comm thm
R184320:184328 CertiOS.tactics.basetac.join_lib <> join_comm thm
R184407:184413 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184417:184418 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184445:184448 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184419:184422 CertiOS.framework.auxlibs.Maps <> join meth
R184429:184433 CertiOS.framework.auxlibs.Maps <> minus meth
R184464:184466 Coq.Init.Logic <> :type_scope:x_'='_x not
R184449:184453 CertiOS.framework.model.memory <> store def
R184467:184470 Coq.Init.Datatypes <> Some constr
R184407:184413 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184417:184418 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184445:184448 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184419:184422 CertiOS.framework.auxlibs.Maps <> join meth
R184429:184433 CertiOS.framework.auxlibs.Maps <> minus meth
R184464:184466 Coq.Init.Logic <> :type_scope:x_'='_x not
R184449:184453 CertiOS.framework.model.memory <> store def
R184467:184470 Coq.Init.Datatypes <> Some constr
R184489:184507 CertiOS.framework.proof.lmachLib <> store_mono thm
R184489:184507 CertiOS.framework.proof.lmachLib <> store_mono thm
R184540:184549 CertiOS.framework.proof.memory_prop <> join_store thm
R184540:184549 CertiOS.framework.proof.memory_prop <> join_store thm
R184622:184628 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184631:184632 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184647:184650 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184633:184636 CertiOS.framework.auxlibs.Maps <> join meth
R184665:184667 Coq.Init.Logic <> :type_scope:x_'='_x not
R184651:184655 CertiOS.framework.model.memory <> store def
R184668:184671 Coq.Init.Datatypes <> Some constr
R184622:184628 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184631:184632 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R184647:184650 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R184633:184636 CertiOS.framework.auxlibs.Maps <> join meth
R184665:184667 Coq.Init.Logic <> :type_scope:x_'='_x not
R184651:184655 CertiOS.framework.model.memory <> store def
R184668:184671 Coq.Init.Datatypes <> Some constr
R184689:184707 CertiOS.framework.proof.lmachLib <> store_mono thm
R184689:184707 CertiOS.framework.proof.lmachLib <> store_mono thm
R184741:184750 CertiOS.framework.proof.memory_prop <> join_store thm
R184741:184750 CertiOS.framework.proof.memory_prop <> join_store thm
R184895:184899 CertiOS.framework.auxlibs.Maps <> minus meth
R184895:184899 CertiOS.framework.auxlibs.Maps <> minus meth
R184939:184978 CertiOS.framework.proof.invariant_prop_lemmas <> mem_4join_merge135_disjoint_join_merge24 thm
R184939:184978 CertiOS.framework.proof.invariant_prop_lemmas <> mem_4join_merge135_disjoint_join_merge24 thm
prf 185002:185007 <> disj'f
R185053:185055 CertiOS.framework.model.memory <> mem def
R185071:185073 CertiOS.framework.model.memory <> val ind
R185091:185094 CertiOS.framework.model.memory <> addr def
R185103:185106 CertiOS.framework.model.memory <> type ind
R185141:185148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185165:185172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185205:185212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185230:185237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185287:185294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185309:185316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185329:185336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R185337:185344 CertiOS.framework.auxlibs.Maps <> disjoint def
R185371:185374 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R185347:185351 CertiOS.framework.auxlibs.Maps <> merge meth
R185367:185368 CertiOS.framework.proof.invariant_prop <> M2 var
R185354:185358 CertiOS.framework.auxlibs.Maps <> minus meth
R185363:185364 CertiOS.framework.proof.invariant_prop <> Mc var
R185360:185361 CertiOS.framework.proof.invariant_prop <> Ml var
R185317:185320 CertiOS.framework.auxlibs.Maps <> join meth
R185328:185328 CertiOS.framework.proof.invariant_prop <> m var
R185325:185326 CertiOS.framework.proof.invariant_prop <> Ms var
R185322:185323 CertiOS.framework.proof.invariant_prop <> Ml var
R185295:185302 CertiOS.framework.auxlibs.Maps <> sub def
R185307:185308 CertiOS.framework.proof.invariant_prop <> Ml var
R185304:185305 CertiOS.framework.proof.invariant_prop <> Mc var
R185252:185254 Coq.Init.Logic <> :type_scope:x_'='_x not
R185238:185242 CertiOS.framework.auxlibs.Maps <> merge meth
R185249:185251 CertiOS.framework.proof.invariant_prop <> Ms' var
R185244:185247 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R185255:185259 CertiOS.framework.auxlibs.Maps <> merge meth
R185285:185286 CertiOS.framework.proof.invariant_prop <> Ms var
R185262:185266 CertiOS.framework.auxlibs.Maps <> merge meth
R185273:185278 CertiOS.framework.proof.simulation <> getmem def
R185280:185281 CertiOS.framework.proof.invariant_prop <> o1 var
R185268:185270 CertiOS.framework.proof.invariant_prop <> Mcc var
R185213:185220 CertiOS.framework.auxlibs.Maps <> disjoint def
R185227:185229 CertiOS.framework.proof.invariant_prop <> Ms' var
R185222:185225 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R185173:185179 CertiOS.framework.logic.assertion <> joinmem def
R185189:185198 CertiOS.framework.logic.assertion <> substaskst def
R185202:185203 CertiOS.framework.proof.invariant_prop <> Mc var
R185200:185200 CertiOS.framework.proof.invariant_prop <> o var
R185184:185186 CertiOS.framework.proof.invariant_prop <> Mc' var
R185181:185182 CertiOS.framework.proof.invariant_prop <> ol var
R185149:185155 CertiOS.framework.logic.assertion <> joinmem def
R185163:185164 CertiOS.framework.proof.invariant_prop <> ol var
R185160:185161 CertiOS.framework.proof.invariant_prop <> M2 var
R185157:185158 CertiOS.framework.proof.invariant_prop <> o1 var
R185130:185132 Coq.Init.Logic <> :type_scope:x_'='_x not
R185114:185118 CertiOS.framework.model.memory <> store def
R185129:185129 CertiOS.framework.proof.invariant_prop <> v var
R185127:185127 CertiOS.framework.proof.invariant_prop <> l var
R185123:185125 CertiOS.framework.proof.invariant_prop <> Mc' var
R185120:185121 CertiOS.framework.proof.invariant_prop <> tp var
R185133:185136 Coq.Init.Datatypes <> Some constr
R185138:185140 CertiOS.framework.proof.invariant_prop <> Mcc var
R185456:185461 CertiOS.framework.proof.simulation <> getmem def
R185478:185484 CertiOS.framework.logic.assertion <> joinmem def
R185543:185546 CertiOS.framework.auxlibs.Maps <> join meth
R185552:185556 CertiOS.framework.auxlibs.Maps <> minus meth
R185543:185546 CertiOS.framework.auxlibs.Maps <> join meth
R185552:185556 CertiOS.framework.auxlibs.Maps <> minus meth
R185579:185592 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R185579:185592 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R185666:185672 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185676:185677 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185693:185696 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R185678:185681 CertiOS.framework.auxlibs.Maps <> join meth
R185712:185714 Coq.Init.Logic <> :type_scope:x_'='_x not
R185697:185701 CertiOS.framework.model.memory <> store def
R185715:185718 Coq.Init.Datatypes <> Some constr
R185666:185672 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185676:185677 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185693:185696 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R185678:185681 CertiOS.framework.auxlibs.Maps <> join meth
R185712:185714 Coq.Init.Logic <> :type_scope:x_'='_x not
R185697:185701 CertiOS.framework.model.memory <> store def
R185715:185718 Coq.Init.Datatypes <> Some constr
R185734:185742 CertiOS.tactics.basetac.join_lib <> join_comm thm
R185734:185742 CertiOS.tactics.basetac.join_lib <> join_comm thm
R185762:185780 CertiOS.framework.proof.lmachLib <> store_mono thm
R185762:185780 CertiOS.framework.proof.lmachLib <> store_mono thm
R185812:185821 CertiOS.framework.proof.memory_prop <> join_store thm
R185812:185821 CertiOS.framework.proof.memory_prop <> join_store thm
R185840:185848 CertiOS.tactics.basetac.join_lib <> join_comm thm
R185840:185848 CertiOS.tactics.basetac.join_lib <> join_comm thm
R185917:185923 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185927:185928 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185955:185958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R185929:185932 CertiOS.framework.auxlibs.Maps <> join meth
R185939:185943 CertiOS.framework.auxlibs.Maps <> minus meth
R185974:185976 Coq.Init.Logic <> :type_scope:x_'='_x not
R185959:185963 CertiOS.framework.model.memory <> store def
R185977:185980 Coq.Init.Datatypes <> Some constr
R185917:185923 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185927:185928 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R185955:185958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R185929:185932 CertiOS.framework.auxlibs.Maps <> join meth
R185939:185943 CertiOS.framework.auxlibs.Maps <> minus meth
R185974:185976 Coq.Init.Logic <> :type_scope:x_'='_x not
R185959:185963 CertiOS.framework.model.memory <> store def
R185977:185980 Coq.Init.Datatypes <> Some constr
R185999:186017 CertiOS.framework.proof.lmachLib <> store_mono thm
R185999:186017 CertiOS.framework.proof.lmachLib <> store_mono thm
R186050:186059 CertiOS.framework.proof.memory_prop <> join_store thm
R186050:186059 CertiOS.framework.proof.memory_prop <> join_store thm
R186132:186138 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R186141:186142 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R186157:186160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R186143:186146 CertiOS.framework.auxlibs.Maps <> join meth
R186175:186177 Coq.Init.Logic <> :type_scope:x_'='_x not
R186161:186165 CertiOS.framework.model.memory <> store def
R186178:186181 Coq.Init.Datatypes <> Some constr
R186132:186138 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R186141:186142 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R186157:186160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R186143:186146 CertiOS.framework.auxlibs.Maps <> join meth
R186175:186177 Coq.Init.Logic <> :type_scope:x_'='_x not
R186161:186165 CertiOS.framework.model.memory <> store def
R186178:186181 Coq.Init.Datatypes <> Some constr
R186199:186217 CertiOS.framework.proof.lmachLib <> store_mono thm
R186199:186217 CertiOS.framework.proof.lmachLib <> store_mono thm
R186251:186260 CertiOS.framework.proof.memory_prop <> join_store thm
R186251:186260 CertiOS.framework.proof.memory_prop <> join_store thm
R186371:186375 CertiOS.framework.auxlibs.Maps <> minus meth
R186371:186375 CertiOS.framework.auxlibs.Maps <> minus meth
R186415:186458 CertiOS.framework.proof.invariant_prop_lemmas <> mem_4join_merge135_disjoint_disjoint_merge24 thm
R186415:186458 CertiOS.framework.proof.invariant_prop_lemmas <> mem_4join_merge135_disjoint_disjoint_merge24 thm
prf 186482:186497 <> partm_minus_subf
R186521:186523 CertiOS.framework.model.memory <> mem def
R186531:186535 CertiOS.framework.model.language <> tasks def
R186544:186556 CertiOS.framework.proof.auxdef TMSpecMod Map def
R186573:186583 CertiOS.framework.proof.auxdef TMSpecMod A def
R186605:186612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R186638:186645 Coq.Init.Logic <> :type_scope:x_'->'_x not
R186658:186665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R186666:186670 CertiOS.framework.proof.auxdef <> partM ind
R186699:186711 CertiOS.framework.proof.auxdef TMSpecMod put def
R186718:186719 CertiOS.framework.proof.invariant_prop <> Mm var
R186716:186716 CertiOS.framework.proof.invariant_prop <> t var
R186713:186714 CertiOS.framework.proof.invariant_prop <> Tm var
R186696:186696 CertiOS.framework.proof.invariant_prop <> T var
R186673:186677 CertiOS.framework.auxlibs.Maps <> merge meth
R186692:186693 CertiOS.framework.proof.invariant_prop <> Mm var
R186680:186684 CertiOS.framework.auxlibs.Maps <> minus meth
R186688:186689 CertiOS.framework.proof.invariant_prop <> Mc var
R186686:186686 CertiOS.framework.proof.invariant_prop <> M var
R186646:186650 CertiOS.framework.proof.auxdef <> partM ind
R186656:186657 CertiOS.framework.proof.invariant_prop <> Tm var
R186654:186654 CertiOS.framework.proof.invariant_prop <> T var
R186652:186652 CertiOS.framework.proof.invariant_prop <> M var
R186613:186629 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R186636:186637 CertiOS.framework.proof.invariant_prop <> Mc var
R186634:186634 CertiOS.framework.proof.invariant_prop <> t var
R186631:186632 CertiOS.framework.proof.invariant_prop <> Tm var
R186591:186598 CertiOS.framework.auxlibs.Maps <> sub def
R186603:186604 CertiOS.framework.proof.invariant_prop <> Mc var
R186600:186601 CertiOS.framework.proof.invariant_prop <> Mm var
R186801:186804 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R186796:186798 Coq.Init.Logic <> :type_scope:x_'='_x not
R186806:186809 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R186801:186804 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R186796:186798 Coq.Init.Logic <> :type_scope:x_'='_x not
R186806:186809 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R186930:186932 Coq.Init.Logic <> :type_scope:x_'='_x not
R186908:186923 CertiOS.framework.proof.auxdef TMSpecMod remove def
R186933:186948 CertiOS.framework.proof.auxdef TMSpecMod remove def
R186951:186963 CertiOS.framework.proof.auxdef TMSpecMod put def
R186930:186932 Coq.Init.Logic <> :type_scope:x_'='_x not
R186908:186923 CertiOS.framework.proof.auxdef TMSpecMod remove def
R186933:186948 CertiOS.framework.proof.auxdef TMSpecMod remove def
R186951:186963 CertiOS.framework.proof.auxdef TMSpecMod put def
R186990:187016 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R186990:187016 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R186990:187016 CertiOS.framework.proof.auxdef TMSpecMod remove_cancel_put thm
R187054:187060 CertiOS.framework.proof.auxdef <> partm_S constr
R187054:187060 CertiOS.framework.proof.auxdef <> partm_S constr
R187080:187099 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R187080:187099 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R187080:187099 CertiOS.framework.proof.auxdef TMSpecMod put_get_eq thm
R187121:187123 Coq.Init.Logic <> :type_scope:x_'='_x not
R187124:187128 CertiOS.framework.auxlibs.Maps <> minus meth
R187121:187123 Coq.Init.Logic <> :type_scope:x_'='_x not
R187124:187128 CertiOS.framework.auxlibs.Maps <> minus meth
R187145:187153 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187168:187180 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R187145:187153 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187168:187180 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> join_eq_minus thm
R187216:187223 CertiOS.framework.auxlibs.Maps <> disjoint def
R187216:187223 CertiOS.framework.auxlibs.Maps <> disjoint def
R187241:187249 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187241:187249 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187266:187277 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R187266:187277 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R187289:187309 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R187289:187309 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R187327:187335 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187327:187335 CertiOS.tactics.basetac.join_lib <> join_comm thm
R187346:187357 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R187346:187357 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R187375:187389 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R187375:187389 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R187409:187425 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R187428:187443 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187409:187425 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R187428:187443 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187468:187492 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R187468:187492 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R187577:187589 Coq.Init.Logic <> :type_scope:x_'='_x not
R187534:187546 CertiOS.framework.proof.auxdef TMSpecMod put def
R187549:187564 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187590:187605 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187608:187620 CertiOS.framework.proof.auxdef TMSpecMod put def
R187577:187589 Coq.Init.Logic <> :type_scope:x_'='_x not
R187534:187546 CertiOS.framework.proof.auxdef TMSpecMod put def
R187549:187564 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187590:187605 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187608:187620 CertiOS.framework.proof.auxdef TMSpecMod put def
R187646:187676 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R187646:187676 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R187646:187676 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R187646:187676 CertiOS.framework.proof.auxdef TMSpecMod remove_ext_ext_remove thm
R187714:187720 CertiOS.framework.proof.auxdef <> partm_S constr
R187714:187720 CertiOS.framework.proof.auxdef <> partm_S constr
R187740:187765 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R187740:187765 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R187740:187765 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R187740:187765 CertiOS.framework.proof.auxdef TMSpecMod put_noninterfere thm
R187785:187792 CertiOS.framework.auxlibs.Maps <> sub def
R187785:187792 CertiOS.framework.auxlibs.Maps <> sub def
R187812:187828 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R187831:187846 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187812:187828 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R187831:187846 CertiOS.framework.proof.auxdef TMSpecMod remove def
R187871:187895 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R187871:187895 CertiOS.framework.proof.auxdef TMSpecMod removeX_presv_Y thm
R187915:187922 CertiOS.framework.proof.invariant_prop <> part_sub thm
R187915:187922 CertiOS.framework.proof.invariant_prop <> part_sub thm
R187965:187997 CertiOS.framework.proof.invariant_prop_lemmas <> mem_sub_sub_join_join_merge_minus thm
R187965:187997 CertiOS.framework.proof.invariant_prop_lemmas <> mem_sub_sub_join_join_merge_minus thm
prf 188036:188048 <> join_complexf
R188071:188076 CertiOS.framework.model.language <> osabst def
R188112:188117 CertiOS.framework.model.language <> osabst def
R188125:188133 CertiOS.framework.model.language <> absdataid ind
R188153:188159 CertiOS.framework.model.language <> absdata ind
R188180:188185 CertiOS.framework.model.language <> osabst def
R188230:188237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188255:188262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188279:188286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188301:188309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188328:188335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188367:188374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188394:188401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188419:188426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188427:188430 CertiOS.framework.auxlibs.Maps <> join meth
R188476:188478 CertiOS.framework.auxlibs.Maps <> set meth
R188485:188486 CertiOS.framework.proof.invariant_prop <> b' var
R188483:188483 CertiOS.framework.proof.invariant_prop <> a var
R188480:188481 CertiOS.framework.proof.invariant_prop <> x0 var
R188470:188473 CertiOS.framework.proof.invariant_prop <> Os'' var
R188433:188437 CertiOS.framework.auxlibs.Maps <> merge meth
R188456:188460 CertiOS.framework.auxlibs.Maps <> minus meth
R188465:188466 CertiOS.framework.proof.invariant_prop <> Oc var
R188462:188463 CertiOS.framework.proof.invariant_prop <> Ol var
R188440:188444 CertiOS.framework.auxlibs.Maps <> merge meth
R188451:188452 CertiOS.framework.proof.invariant_prop <> O2 var
R188446:188449 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R188402:188405 CertiOS.framework.auxlibs.Maps <> join meth
R188415:188418 CertiOS.framework.proof.invariant_prop <> Olx' var
R188412:188413 CertiOS.framework.proof.invariant_prop <> O2 var
R188407:188410 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R188375:188378 CertiOS.framework.auxlibs.Maps <> join meth
R188390:188393 CertiOS.framework.proof.invariant_prop <> OO'' var
R188385:188388 CertiOS.framework.proof.invariant_prop <> Os'' var
R188380:188383 CertiOS.framework.proof.invariant_prop <> Olx' var
R188340:188342 Coq.Init.Logic <> :type_scope:x_'='_x not
R188336:188339 CertiOS.framework.proof.invariant_prop <> OO'' var
R188343:188345 CertiOS.framework.auxlibs.Maps <> set meth
R188365:188366 CertiOS.framework.proof.invariant_prop <> b' var
R188363:188363 CertiOS.framework.proof.invariant_prop <> a var
R188348:188352 CertiOS.framework.auxlibs.Maps <> merge meth
R188358:188360 CertiOS.framework.proof.invariant_prop <> Os' var
R188354:188356 CertiOS.framework.proof.invariant_prop <> O'0 var
R188319:188321 Coq.Init.Logic <> :type_scope:x_'='_x not
R188310:188312 CertiOS.framework.auxlibs.Maps <> get meth
R188318:188318 CertiOS.framework.proof.invariant_prop <> a var
R188314:188316 CertiOS.framework.proof.invariant_prop <> Occ var
R188322:188325 Coq.Init.Datatypes <> Some constr
R188327:188327 CertiOS.framework.proof.invariant_prop <> b var
R188287:188290 CertiOS.framework.auxlibs.Maps <> join meth
R188298:188300 CertiOS.framework.proof.invariant_prop <> Olc var
R188295:188296 CertiOS.framework.proof.invariant_prop <> O2 var
R188292:188293 CertiOS.framework.proof.invariant_prop <> O1 var
R188263:188266 CertiOS.framework.auxlibs.Maps <> join meth
R188276:188278 CertiOS.framework.proof.invariant_prop <> O'0 var
R188272:188274 CertiOS.framework.proof.invariant_prop <> Occ var
R188268:188270 CertiOS.framework.proof.invariant_prop <> Olc var
R188238:188241 CertiOS.framework.auxlibs.Maps <> join meth
R188251:188254 CertiOS.framework.proof.invariant_prop <> OO'0 var
R188247:188249 CertiOS.framework.proof.invariant_prop <> Os' var
R188243:188245 CertiOS.framework.proof.invariant_prop <> O'0 var
R188204:188207 CertiOS.framework.auxlibs.Maps <> join meth
R188228:188229 CertiOS.framework.proof.invariant_prop <> x0 var
R188215:188219 CertiOS.framework.auxlibs.Maps <> minus meth
R188224:188225 CertiOS.framework.proof.invariant_prop <> Oc var
R188221:188222 CertiOS.framework.proof.invariant_prop <> Ol var
R188209:188212 CertiOS.framework.proof.invariant_prop <> OO'0 var
R188506:188518 CertiOS.framework.proof.invariant_prop_lemmas <> join_complexf thm
R188506:188518 CertiOS.framework.proof.invariant_prop_lemmas <> join_complexf thm
prf 188549:188562 <> disj_complex'f
R188616:188621 CertiOS.framework.model.language <> osabst def
R188638:188646 CertiOS.framework.model.language <> absdataid ind
R188657:188663 CertiOS.framework.model.language <> absdata ind
R188701:188708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188726:188733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188764:188771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188786:188793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188809:188816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188832:188839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188854:188857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188876:188879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R188880:188887 CertiOS.framework.auxlibs.Maps <> disjoint def
R188905:188906 CertiOS.framework.proof.invariant_prop <> Ox var
R188890:188894 CertiOS.framework.auxlibs.Maps <> merge meth
R188901:188902 CertiOS.framework.proof.invariant_prop <> O2 var
R188896:188899 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R188867:188869 Coq.Init.Logic <> :type_scope:x_'='_x not
R188858:188860 CertiOS.framework.auxlibs.Maps <> get meth
R188866:188866 CertiOS.framework.proof.invariant_prop <> a var
R188862:188864 CertiOS.framework.proof.invariant_prop <> Occ var
R188870:188873 Coq.Init.Datatypes <> Some constr
R188875:188875 CertiOS.framework.proof.invariant_prop <> b var
R188840:188843 CertiOS.framework.auxlibs.Maps <> join meth
R188852:188853 CertiOS.framework.proof.invariant_prop <> x0 var
R188849:188850 CertiOS.framework.proof.invariant_prop <> Ox var
R188845:188847 CertiOS.framework.proof.invariant_prop <> OO' var
R188817:188820 CertiOS.framework.auxlibs.Maps <> join meth
R188829:188831 CertiOS.framework.proof.invariant_prop <> OO' var
R188825:188827 CertiOS.framework.proof.invariant_prop <> Os' var
R188822:188823 CertiOS.framework.proof.invariant_prop <> O' var
R188794:188797 CertiOS.framework.auxlibs.Maps <> join meth
R188807:188808 CertiOS.framework.proof.invariant_prop <> O' var
R188803:188805 CertiOS.framework.proof.invariant_prop <> Occ var
R188799:188801 CertiOS.framework.proof.invariant_prop <> Olc var
R188772:188775 CertiOS.framework.auxlibs.Maps <> join meth
R188783:188785 CertiOS.framework.proof.invariant_prop <> Olc var
R188780:188781 CertiOS.framework.proof.invariant_prop <> O2 var
R188777:188778 CertiOS.framework.proof.invariant_prop <> O1 var
R188738:188740 Coq.Init.Logic <> :type_scope:x_'='_x not
R188734:188737 CertiOS.framework.proof.invariant_prop <> OO'' var
R188741:188743 CertiOS.framework.auxlibs.Maps <> set meth
R188762:188763 CertiOS.framework.proof.invariant_prop <> b' var
R188760:188760 CertiOS.framework.proof.invariant_prop <> a var
R188746:188750 CertiOS.framework.auxlibs.Maps <> merge meth
R188755:188757 CertiOS.framework.proof.invariant_prop <> Os' var
R188752:188753 CertiOS.framework.proof.invariant_prop <> O' var
R188709:188712 CertiOS.framework.auxlibs.Maps <> join meth
R188722:188725 CertiOS.framework.proof.invariant_prop <> Olx' var
R188719:188720 CertiOS.framework.proof.invariant_prop <> O2 var
R188714:188717 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R188682:188685 CertiOS.framework.auxlibs.Maps <> join meth
R188697:188700 CertiOS.framework.proof.invariant_prop <> OO'' var
R188692:188695 CertiOS.framework.proof.invariant_prop <> Os'' var
R188687:188690 CertiOS.framework.proof.invariant_prop <> Olx' var
R188925:188938 CertiOS.framework.proof.invariant_prop_lemmas <> disj_complex'f thm
R188925:188938 CertiOS.framework.proof.invariant_prop_lemmas <> disj_complex'f thm
prf 188954:188968 <> disj_complex''f
R188996:188998 CertiOS.framework.model.memory <> mem def
R189007:189010 CertiOS.framework.model.memory <> type ind
R189020:189022 CertiOS.framework.model.memory <> mem def
R189040:189044 CertiOS.framework.auxlibs.Modules <> block def
R189053:189059 CertiOS.framework.auxlibs.Modules <> addrval def
R189072:189074 CertiOS.framework.model.memory <> mem def
R189093:189097 CertiOS.framework.model.language <> tasks def
R189106:189110 CertiOS.framework.proof.auxdef <> TMMap def
R189119:189129 CertiOS.framework.proof.auxdef TMSpecMod B def
R189150:189152 CertiOS.framework.model.memory <> mem def
R189161:189171 CertiOS.framework.proof.auxdef TMSpecMod B def
R189179:189189 CertiOS.framework.proof.auxdef TMSpecMod A def
R189240:189247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189297:189304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189320:189327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189342:189349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189376:189383 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189409:189416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189431:189438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189446:189449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189462:189465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189480:189483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R189484:189491 CertiOS.framework.auxlibs.Maps <> disjoint def
R189498:189499 CertiOS.framework.proof.invariant_prop <> Mn var
R189493:189496 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R189466:189469 CertiOS.framework.auxlibs.Maps <> join meth
R189478:189479 CertiOS.framework.proof.invariant_prop <> Mc var
R189474:189476 CertiOS.framework.proof.invariant_prop <> Mc' var
R189471:189472 CertiOS.framework.proof.invariant_prop <> ml var
R189450:189453 CertiOS.framework.auxlibs.Maps <> join meth
R189461:189461 CertiOS.framework.proof.invariant_prop <> m var
R189458:189459 CertiOS.framework.proof.invariant_prop <> Ms var
R189455:189456 CertiOS.framework.proof.invariant_prop <> Ml var
R189440:189443 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R189439:189439 CertiOS.framework.proof.invariant_prop <> t var
R189444:189445 CertiOS.framework.proof.invariant_prop <> t' var
R189417:189424 CertiOS.framework.auxlibs.Maps <> sub def
R189429:189430 CertiOS.framework.proof.invariant_prop <> ml var
R189426:189427 CertiOS.framework.proof.invariant_prop <> Mx var
R189384:189400 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R189407:189408 CertiOS.framework.proof.invariant_prop <> Mc var
R189405:189405 CertiOS.framework.proof.invariant_prop <> t var
R189402:189403 CertiOS.framework.proof.invariant_prop <> Tm var
R189350:189366 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R189374:189375 CertiOS.framework.proof.invariant_prop <> Mn var
R189371:189372 CertiOS.framework.proof.invariant_prop <> t' var
R189368:189369 CertiOS.framework.proof.invariant_prop <> Tm var
R189328:189332 CertiOS.framework.proof.auxdef <> partM ind
R189340:189341 CertiOS.framework.proof.invariant_prop <> Tm var
R189337:189338 CertiOS.framework.proof.invariant_prop <> Tl var
R189334:189335 CertiOS.framework.proof.invariant_prop <> Ml var
R189305:189312 CertiOS.framework.auxlibs.Maps <> sub def
R189318:189319 CertiOS.framework.proof.invariant_prop <> Ml var
R189314:189316 CertiOS.framework.proof.invariant_prop <> Mc' var
R189286:189288 Coq.Init.Logic <> :type_scope:x_'='_x not
R189248:189252 CertiOS.framework.model.memory <> store def
R189278:189281 CertiOS.framework.model.memory <> Vptr constr
R189283:189284 CertiOS.framework.proof.invariant_prop <> t' var
R189268:189268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189270:189271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189275:189275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189269:189269 CertiOS.framework.proof.invariant_prop <> b var
R189264:189266 CertiOS.framework.proof.invariant_prop <> Mc' var
R189255:189258 CertiOS.framework.model.memory <> Tptr constr
R189260:189261 CertiOS.framework.proof.invariant_prop <> tp var
R189289:189292 Coq.Init.Datatypes <> Some constr
R189294:189296 CertiOS.framework.proof.invariant_prop <> Mcc var
R189214:189216 Coq.Init.Logic <> :type_scope:x_'='_x not
R189200:189204 CertiOS.framework.auxlibs.Maps <> merge meth
R189211:189213 CertiOS.framework.proof.invariant_prop <> Ms' var
R189206:189209 CertiOS.framework.proof.invariant_prop <> Mc'0 var
R189217:189221 CertiOS.framework.auxlibs.Maps <> merge meth
R189238:189239 CertiOS.framework.proof.invariant_prop <> Ms var
R189224:189228 CertiOS.framework.auxlibs.Maps <> merge meth
R189234:189235 CertiOS.framework.proof.invariant_prop <> Mx var
R189230:189232 CertiOS.framework.proof.invariant_prop <> Mcc var
R189530:189536 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189539:189540 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189541:189544 CertiOS.framework.auxlibs.Maps <> join meth
R189530:189536 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189539:189540 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189541:189544 CertiOS.framework.auxlibs.Maps <> join meth
R189567:189571 CertiOS.framework.auxlibs.Maps <> minus meth
R189567:189571 CertiOS.framework.auxlibs.Maps <> minus meth
R189590:189603 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R189590:189603 CertiOS.tactics.basetac.join_lib <> join_sub_minus thm
R189658:189664 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189668:189669 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189685:189688 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R189670:189673 CertiOS.framework.auxlibs.Maps <> join meth
R189726:189728 Coq.Init.Logic <> :type_scope:x_'='_x not
R189689:189693 CertiOS.framework.model.memory <> store def
R189718:189721 CertiOS.framework.model.memory <> Vptr constr
R189708:189708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189710:189711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189715:189715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189696:189699 CertiOS.framework.model.memory <> Tptr constr
R189729:189732 Coq.Init.Datatypes <> Some constr
R189658:189664 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189668:189669 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R189685:189688 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R189670:189673 CertiOS.framework.auxlibs.Maps <> join meth
R189726:189728 Coq.Init.Logic <> :type_scope:x_'='_x not
R189689:189693 CertiOS.framework.model.memory <> store def
R189718:189721 CertiOS.framework.model.memory <> Vptr constr
R189708:189708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189710:189711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189715:189715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R189696:189699 CertiOS.framework.model.memory <> Tptr constr
R189729:189732 Coq.Init.Datatypes <> Some constr
R189748:189756 CertiOS.tactics.basetac.join_lib <> join_comm thm
R189748:189756 CertiOS.tactics.basetac.join_lib <> join_comm thm
R189776:189794 CertiOS.framework.proof.lmachLib <> store_mono thm
R189776:189794 CertiOS.framework.proof.lmachLib <> store_mono thm
R189827:189836 CertiOS.framework.proof.memory_prop <> join_store thm
R189827:189836 CertiOS.framework.proof.memory_prop <> join_store thm
R189857:189865 CertiOS.tactics.basetac.join_lib <> join_comm thm
R189857:189865 CertiOS.tactics.basetac.join_lib <> join_comm thm
R189937:189950 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R189937:189950 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R189977:189991 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R189977:189991 CertiOS.framework.proof.invariant_prop <> partm_merge_sub thm
R190016:190023 CertiOS.framework.auxlibs.Maps <> disjoint def
R190026:190030 CertiOS.framework.auxlibs.Maps <> merge meth
R190016:190023 CertiOS.framework.auxlibs.Maps <> disjoint def
R190026:190030 CertiOS.framework.auxlibs.Maps <> merge meth
R190052:190063 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190052:190063 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190074:190082 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190074:190082 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190100:190120 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190100:190120 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190138:190149 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190138:190149 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190171:190186 CertiOS.framework.proof.memory_prop <> store_disj_merge thm
R190171:190186 CertiOS.framework.proof.memory_prop <> store_disj_merge thm
R190208:190215 CertiOS.framework.auxlibs.Maps <> disjoint def
R190208:190215 CertiOS.framework.auxlibs.Maps <> disjoint def
R190234:190245 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190234:190245 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190266:190280 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R190266:190280 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R190307:190314 CertiOS.framework.auxlibs.Maps <> disjoint def
R190307:190314 CertiOS.framework.auxlibs.Maps <> disjoint def
R190336:190343 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190336:190343 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190360:190371 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190360:190371 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190382:190390 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190382:190390 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190408:190428 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190408:190428 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190449:190456 CertiOS.framework.auxlibs.Maps <> disjoint def
R190449:190456 CertiOS.framework.auxlibs.Maps <> disjoint def
R190477:190484 CertiOS.framework.auxlibs.Maps <> disjoint def
R190477:190484 CertiOS.framework.auxlibs.Maps <> disjoint def
R190506:190513 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190506:190513 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190530:190541 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190530:190541 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190552:190560 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190552:190560 CertiOS.tactics.basetac.join_lib <> join_comm thm
R190578:190598 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190578:190598 CertiOS.tactics.basetac.perm_map_lemmas_part2 <> mem_join_sub_disjoint thm
R190617:190631 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R190617:190631 CertiOS.framework.proof.memory_prop <> disj_store_disj thm
R190649:190660 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190649:190660 CertiOS.tactics.basetac.join_lib <> disjoint_sym thm
R190718:190741 CertiOS.framework.proof.invariant_prop_lemmas <> join_join_merge_disjoint thm
R190718:190741 CertiOS.framework.proof.invariant_prop_lemmas <> join_join_merge_disjoint thm
prf 190796:190811 <> disj_complex'''f
R190834:190839 CertiOS.framework.model.language <> osabst def
R190889:190894 CertiOS.framework.model.language <> osabst def
R190912:190922 CertiOS.framework.proof.auxdef TOSpecMod B def
R190933:190943 CertiOS.framework.proof.auxdef TOSpecMod A def
R190951:190959 CertiOS.framework.model.language <> absdataid ind
R190979:190985 CertiOS.framework.model.language <> absdata ind
R190994:190998 CertiOS.framework.proof.auxdef <> TOMap def
R191007:191011 CertiOS.framework.model.language <> tasks def
R191048:191055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191073:191080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191100:191107 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191138:191145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191161:191168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191183:191190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191206:191213 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191239:191246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191261:191268 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191294:191301 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191328:191331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191339:191342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191343:191350 CertiOS.framework.auxlibs.Maps <> disjoint def
R191357:191358 CertiOS.framework.proof.invariant_prop <> On var
R191352:191355 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R191333:191336 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R191332:191332 CertiOS.framework.proof.invariant_prop <> t var
R191337:191338 CertiOS.framework.proof.invariant_prop <> t' var
R191302:191318 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R191326:191327 CertiOS.framework.proof.invariant_prop <> On var
R191323:191324 CertiOS.framework.proof.invariant_prop <> t' var
R191320:191321 CertiOS.framework.proof.invariant_prop <> To var
R191269:191285 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R191292:191293 CertiOS.framework.proof.invariant_prop <> Oc var
R191290:191290 CertiOS.framework.proof.invariant_prop <> t var
R191287:191288 CertiOS.framework.proof.invariant_prop <> To var
R191247:191251 CertiOS.framework.proof.auxdef <> partO ind
R191259:191260 CertiOS.framework.proof.invariant_prop <> To var
R191256:191257 CertiOS.framework.proof.invariant_prop <> Tl var
R191253:191254 CertiOS.framework.proof.invariant_prop <> Ol var
R191214:191217 CertiOS.framework.auxlibs.Maps <> join meth
R191237:191238 CertiOS.framework.proof.invariant_prop <> x0 var
R191224:191228 CertiOS.framework.auxlibs.Maps <> minus meth
R191233:191234 CertiOS.framework.proof.invariant_prop <> Oc var
R191230:191231 CertiOS.framework.proof.invariant_prop <> Ol var
R191219:191221 CertiOS.framework.proof.invariant_prop <> OO' var
R191191:191194 CertiOS.framework.auxlibs.Maps <> join meth
R191203:191205 CertiOS.framework.proof.invariant_prop <> OO' var
R191199:191201 CertiOS.framework.proof.invariant_prop <> Os' var
R191196:191197 CertiOS.framework.proof.invariant_prop <> O' var
R191169:191172 CertiOS.framework.auxlibs.Maps <> join meth
R191180:191182 CertiOS.framework.proof.invariant_prop <> Olc var
R191177:191178 CertiOS.framework.proof.invariant_prop <> O2 var
R191174:191175 CertiOS.framework.proof.invariant_prop <> O1 var
R191146:191149 CertiOS.framework.auxlibs.Maps <> join meth
R191159:191160 CertiOS.framework.proof.invariant_prop <> O' var
R191155:191157 CertiOS.framework.proof.invariant_prop <> Occ var
R191151:191153 CertiOS.framework.proof.invariant_prop <> Olc var
R191112:191114 Coq.Init.Logic <> :type_scope:x_'='_x not
R191108:191111 CertiOS.framework.proof.invariant_prop <> OO'' var
R191115:191117 CertiOS.framework.auxlibs.Maps <> set meth
R191136:191137 CertiOS.framework.proof.invariant_prop <> b' var
R191134:191134 CertiOS.framework.proof.invariant_prop <> a var
R191120:191124 CertiOS.framework.auxlibs.Maps <> merge meth
R191129:191131 CertiOS.framework.proof.invariant_prop <> Os' var
R191126:191127 CertiOS.framework.proof.invariant_prop <> O' var
R191081:191084 CertiOS.framework.auxlibs.Maps <> join meth
R191096:191099 CertiOS.framework.proof.invariant_prop <> OO'' var
R191091:191094 CertiOS.framework.proof.invariant_prop <> Os'' var
R191086:191089 CertiOS.framework.proof.invariant_prop <> Olx' var
R191056:191059 CertiOS.framework.auxlibs.Maps <> join meth
R191069:191072 CertiOS.framework.proof.invariant_prop <> Olx' var
R191066:191067 CertiOS.framework.proof.invariant_prop <> O2 var
R191061:191064 CertiOS.framework.proof.invariant_prop <> Oc'0 var
R191039:191041 Coq.Init.Logic <> :type_scope:x_'='_x not
R191030:191032 CertiOS.framework.auxlibs.Maps <> get meth
R191038:191038 CertiOS.framework.proof.invariant_prop <> a var
R191034:191036 CertiOS.framework.proof.invariant_prop <> Occ var
R191042:191045 Coq.Init.Datatypes <> Some constr
R191047:191047 CertiOS.framework.proof.invariant_prop <> b var
R191388:191394 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R191398:191399 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R191400:191403 CertiOS.framework.auxlibs.Maps <> join meth
R191411:191415 CertiOS.framework.auxlibs.Maps <> minus meth
R191388:191394 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R191398:191399 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R191400:191403 CertiOS.framework.auxlibs.Maps <> join meth
R191411:191415 CertiOS.framework.auxlibs.Maps <> minus meth
R191448:191450 Coq.Init.Logic <> :type_scope:x_'='_x not
R191440:191442 CertiOS.framework.auxlibs.Maps <> get meth
R191451:191454 Coq.Init.Datatypes <> Some constr
R191448:191450 Coq.Init.Logic <> :type_scope:x_'='_x not
R191440:191442 CertiOS.framework.auxlibs.Maps <> get meth
R191451:191454 Coq.Init.Datatypes <> Some constr
R191466:191475 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R191487:191496 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R191487:191496 CertiOS.tactics.basetac.join_lib <> join_get_r thm
R191536:191538 Coq.Init.Logic <> :type_scope:x_'='_x not
R191516:191518 CertiOS.framework.auxlibs.Maps <> get meth
R191521:191525 CertiOS.framework.auxlibs.Maps <> merge meth
R191539:191542 Coq.Init.Datatypes <> Some constr
R191536:191538 Coq.Init.Logic <> :type_scope:x_'='_x not
R191516:191518 CertiOS.framework.auxlibs.Maps <> get meth
R191521:191525 CertiOS.framework.auxlibs.Maps <> merge meth
R191539:191542 Coq.Init.Datatypes <> Some constr
R191558:191570 CertiOS.framework.auxlibs.Maps <> map_merge_sem meth
R191558:191570 CertiOS.framework.auxlibs.Maps <> map_merge_sem meth
R191558:191570 CertiOS.framework.auxlibs.Maps <> map_merge_sem meth
R191558:191570 CertiOS.framework.auxlibs.Maps <> map_merge_sem meth
R191600:191602 CertiOS.framework.auxlibs.Maps <> get meth
R191600:191602 CertiOS.framework.auxlibs.Maps <> get meth
R191639:191641 Coq.Init.Logic <> :type_scope:x_'='_x not
R191642:191646 CertiOS.framework.auxlibs.Maps <> merge meth
R191639:191641 Coq.Init.Logic <> :type_scope:x_'='_x not
R191642:191646 CertiOS.framework.auxlibs.Maps <> merge meth
R191666:191680 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R191666:191680 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R191709:191711 CertiOS.framework.auxlibs.Maps <> set meth
R191709:191711 CertiOS.framework.auxlibs.Maps <> set meth
R191732:191743 CertiOS.tactics.basetac.join_lib <> join_set_set thm
R191732:191743 CertiOS.tactics.basetac.join_lib <> join_set_set thm
R191781:191814 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_join_sub_join_disjoint thm
R191781:191814 CertiOS.framework.proof.invariant_prop_lemmas <> osabst_join_join_sub_join_disjoint thm
R191835:191839 CertiOS.framework.auxlibs.Maps <> minus meth
R191835:191839 CertiOS.framework.auxlibs.Maps <> minus meth
R191865:191872 CertiOS.framework.auxlibs.Maps <> disjoint def
R191865:191872 CertiOS.framework.auxlibs.Maps <> disjoint def
R191891:191904 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R191891:191904 CertiOS.framework.proof.invariant_prop <> parto_disjoint thm
R191985:191995 CertiOS.framework.proof.auxdef TOSpecMod A def
R192004:192007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R192009:192012 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R192008:192008 CertiOS.framework.proof.invariant_prop <> b var
R192013:192013 CertiOS.framework.proof.invariant_prop <> a var
R191999:192002 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R191998:191998 CertiOS.framework.proof.invariant_prop <> a var
R192003:192003 CertiOS.framework.proof.invariant_prop <> b var
R191985:191995 CertiOS.framework.proof.auxdef TOSpecMod A def
R192004:192007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R192009:192012 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R192008:192008 CertiOS.framework.proof.invariant_prop <> b var
R192013:192013 CertiOS.framework.proof.invariant_prop <> a var
R191999:192002 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R191998:191998 CertiOS.framework.proof.invariant_prop <> a var
R192003:192003 CertiOS.framework.proof.invariant_prop <> b var
R192072:192079 CertiOS.framework.auxlibs.Maps <> sub def
R192072:192079 CertiOS.framework.auxlibs.Maps <> sub def
R192098:192106 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R192098:192106 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R192140:192148 CertiOS.tactics.basetac.join_lib <> minus_sub thm
R192140:192148 CertiOS.tactics.basetac.join_lib <> minus_sub thm
