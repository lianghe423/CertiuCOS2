DIGEST d099d1e4141248f165d27f616b6d5b6c
FCertiOS.framework.proof.simulation
R196:206 CertiOS.framework.include_frm <> <> lib
ind 223:229 <> ProgSim
constr 321:328 <> prog_sim
R240:243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R249:252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R260:264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R270:273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R279:282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R289:292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R301:304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R308:311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R305:307 CertiOS.framework.auxlibs.Modules <> tid def
R293:300 CertiOS.framework.model.language <> clientst def
R283:288 CertiOS.framework.model.language <> osabst def
R274:278 CertiOS.framework.model.language <> tasks def
R265:269 CertiOS.framework.model.language <> hprog def
R253:259 CertiOS.framework.model.language <> osstate def
R244:248 CertiOS.framework.model.language <> tasks def
R235:239 CertiOS.framework.model.language <> lprog def
R346:350 CertiOS.framework.model.language <> lprog def
R357:361 CertiOS.framework.model.language <> hprog def
R371:375 CertiOS.framework.model.language <> tasks def
R381:387 CertiOS.framework.model.language <> osstate def
R393:398 CertiOS.framework.model.language <> osabst def
R406:413 CertiOS.framework.model.language <> clientst def
R455:464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R465:474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R672:689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R690:699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R912:928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R929:938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R990:1008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1009:1015 CertiOS.framework.proof.simulation <> ProgSim ind
R1037:1037 CertiOS.framework.proof.simulation <> t var
R1033:1035 CertiOS.framework.proof.simulation <> cst var
R1031:1031 CertiOS.framework.proof.simulation <> O var
R1028:1029 CertiOS.framework.proof.simulation <> Th var
R1025:1026 CertiOS.framework.proof.simulation <> ph var
R1023:1023 CertiOS.framework.proof.simulation <> S var
R1020:1021 CertiOS.framework.proof.simulation <> Tl var
R1017:1018 CertiOS.framework.proof.simulation <> pl var
R962:964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R965:977 CertiOS.framework.model.opsem <> hpstepabtstar ind
R989:989 CertiOS.framework.proof.simulation <> O var
R985:987 CertiOS.framework.proof.simulation <> cst var
R982:983 CertiOS.framework.proof.simulation <> Th var
R979:980 CertiOS.framework.proof.simulation <> ph var
R939:947 CertiOS.framework.model.opsem <> lpstepabt ind
R961:961 CertiOS.framework.proof.simulation <> t var
R959:959 CertiOS.framework.proof.simulation <> S var
R955:957 CertiOS.framework.proof.simulation <> cst var
R952:953 CertiOS.framework.proof.simulation <> Tl var
R949:950 CertiOS.framework.proof.simulation <> pl var
R777:790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R791:797 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R801:801 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R804:805 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R845:874 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R910:911 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R806:817 CertiOS.framework.model.opsem <> hpstepevstar ind
R843:844 CertiOS.framework.proof.simulation <> ev var
R835:838 CertiOS.framework.proof.simulation <> cst' var
R829:829 CertiOS.framework.proof.simulation <> O var
R825:827 CertiOS.framework.proof.simulation <> cst var
R822:823 CertiOS.framework.proof.simulation <> Th var
R819:820 CertiOS.framework.proof.simulation <> ph var
R875:881 CertiOS.framework.proof.simulation <> ProgSim ind
R908:909 CertiOS.framework.proof.simulation <> t' var
R903:906 CertiOS.framework.proof.simulation <> cst' var
R893:894 CertiOS.framework.proof.simulation <> ph var
R890:891 CertiOS.framework.proof.simulation <> S' var
R886:888 CertiOS.framework.proof.simulation <> Tl' var
R883:884 CertiOS.framework.proof.simulation <> pl var
R737:744 CertiOS.framework.model.opsem <> lpstepev ind
R775:776 CertiOS.framework.proof.simulation <> ev var
R772:773 CertiOS.framework.proof.simulation <> t' var
R769:770 CertiOS.framework.proof.simulation <> S' var
R764:767 CertiOS.framework.proof.simulation <> cst' var
R760:762 CertiOS.framework.proof.simulation <> Tl' var
R758:758 CertiOS.framework.proof.simulation <> t var
R756:756 CertiOS.framework.proof.simulation <> S var
R752:754 CertiOS.framework.proof.simulation <> cst var
R749:750 CertiOS.framework.proof.simulation <> Tl var
R746:747 CertiOS.framework.proof.simulation <> pl var
R544:556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R557:563 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R567:567 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R570:571 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R606:635 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R671:671 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R572:581 CertiOS.framework.model.opsem <> hpstepstar ind
R599:602 CertiOS.framework.proof.simulation <> cst' var
R593:593 CertiOS.framework.proof.simulation <> O var
R589:591 CertiOS.framework.proof.simulation <> cst var
R586:587 CertiOS.framework.proof.simulation <> Th var
R583:584 CertiOS.framework.proof.simulation <> ph var
R636:642 CertiOS.framework.proof.simulation <> ProgSim ind
R669:670 CertiOS.framework.proof.simulation <> t' var
R664:667 CertiOS.framework.proof.simulation <> cst' var
R654:655 CertiOS.framework.proof.simulation <> ph var
R651:652 CertiOS.framework.proof.simulation <> S' var
R647:649 CertiOS.framework.proof.simulation <> Tl' var
R644:645 CertiOS.framework.proof.simulation <> pl var
R509:514 CertiOS.framework.model.opsem <> lpstep ind
R542:543 CertiOS.framework.proof.simulation <> t' var
R539:540 CertiOS.framework.proof.simulation <> S' var
R534:537 CertiOS.framework.proof.simulation <> cst' var
R530:532 CertiOS.framework.proof.simulation <> Tl' var
R528:528 CertiOS.framework.proof.simulation <> t var
R526:526 CertiOS.framework.proof.simulation <> S var
R522:524 CertiOS.framework.proof.simulation <> cst var
R519:520 CertiOS.framework.proof.simulation <> Tl var
R516:517 CertiOS.framework.proof.simulation <> pl var
R437:439 Coq.Init.Logic <> :type_scope:x_'='_x not
R425:427 CertiOS.framework.auxlibs.Maps <> get meth
R431:436 CertiOS.framework.model.language <> curtid constr
R429:429 CertiOS.framework.proof.simulation <> O var
R440:443 Coq.Init.Datatypes <> Some constr
R446:451 CertiOS.framework.model.language <> oscurt constr
R453:453 CertiOS.framework.proof.simulation <> t var
def 1052:1062 <> reltaskpred
R1085:1088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1067:1070 Coq.Init.Datatypes <> prod ind
R1079:1084 CertiOS.framework.model.language <> osabst def
R1072:1077 CertiOS.framework.model.language <> taskst def
def 1199:1204 <> getmem
R1209:1214 CertiOS.framework.model.language <> taskst def
R1221:1227 CertiOS.framework.model.opsem <> get_mem def
R1230:1237 CertiOS.framework.model.language <> get_smem def
R1239:1239 CertiOS.framework.proof.simulation <> o var
def 1255:1260 <> getapi
R1268:1272 CertiOS.framework.model.language <> lprog def
R1279:1281 Coq.Init.Datatypes <> fst def
R1284:1286 Coq.Init.Datatypes <> fst def
R1289:1291 Coq.Init.Datatypes <> snd def
R1293:1294 CertiOS.framework.proof.simulation <> pl var
def 1312:1318 <> getifun
R1326:1330 CertiOS.framework.model.language <> lprog def
R1337:1339 Coq.Init.Datatypes <> snd def
R1342:1344 Coq.Init.Datatypes <> fst def
R1347:1349 Coq.Init.Datatypes <> snd def
R1351:1352 CertiOS.framework.proof.simulation <> pl var
def 1370:1377 <> getsched
R1384:1388 CertiOS.framework.model.language <> hprog def
R1395:1397 Coq.Init.Datatypes <> snd def
R1400:1402 Coq.Init.Datatypes <> snd def
R1404:1405 CertiOS.framework.proof.simulation <> ph var
def 1423:1428 <> joinm2
R1447:1453 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R1456:1458 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R1475:1479 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1459:1465 CertiOS.framework.logic.assertion <> joinmem def
R1469:1470 CertiOS.framework.proof.simulation <> M1 var
R1467:1467 CertiOS.framework.proof.simulation <> o var
R1480:1486 CertiOS.framework.logic.assertion <> joinmem def
R1494:1495 CertiOS.framework.proof.simulation <> o' var
R1491:1492 CertiOS.framework.proof.simulation <> M2 var
ind 1512:1518 <> TaskSim
constr 1632:1639 <> task_sim
R1529:1532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1537:1540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1547:1550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1556:1559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1564:1567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1574:1580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1589:1592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1596:1599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1611:1614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1618:1621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1615:1617 CertiOS.framework.auxlibs.Modules <> tid def
R1600:1610 CertiOS.framework.proof.simulation <> reltaskpred def
R1593:1595 CertiOS.framework.logic.assertion <> Inv def
R1581:1588 CertiOS.framework.logic.inferules <> LocalInv def
R1568:1573 CertiOS.framework.model.language <> osabst def
R1560:1563 CertiOS.framework.model.language <> code def
R1551:1555 CertiOS.framework.model.language <> hprog def
R1541:1546 CertiOS.framework.model.language <> taskst def
R1533:1536 CertiOS.framework.model.language <> code def
R1524:1528 CertiOS.framework.model.language <> lprog def
R1658:1662 CertiOS.framework.model.language <> lprog def
R1669:1673 CertiOS.framework.model.language <> hprog def
R1683:1686 CertiOS.framework.model.language <> code def
R1692:1697 CertiOS.framework.model.language <> taskst def
R1703:1708 CertiOS.framework.model.language <> osabst def
R1725:1727 CertiOS.framework.auxlibs.Modules <> tid def
R1739:1741 CertiOS.framework.logic.assertion <> Inv def
R1747:1757 CertiOS.framework.proof.simulation <> reltaskpred def
R1767:1776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2326:2342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2343:2352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2915:2933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2934:2943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4316:5170 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5171:5180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5642:5658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5659:5668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6025:6041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6042:6051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7148:7951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7952:7961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9406:9429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9430:9436 CertiOS.framework.proof.simulation <> TaskSim ind
R9465:9465 CertiOS.framework.proof.simulation <> t var
R9463:9463 CertiOS.framework.proof.simulation <> P var
R9461:9461 CertiOS.framework.proof.simulation <> I var
R9455:9459 CertiOS.framework.proof.simulation <> lasrt var
R9452:9452 CertiOS.framework.proof.simulation <> O var
R9449:9450 CertiOS.framework.proof.simulation <> Ch var
R9446:9447 CertiOS.framework.proof.simulation <> ph var
R9444:9444 CertiOS.framework.proof.simulation <> o var
R9441:9442 CertiOS.framework.proof.simulation <> Cl var
R9438:9439 CertiOS.framework.proof.simulation <> pl var
R8039:8051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8086:8099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8122:8136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8150:8176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9394:9405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8177:8183 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8187:8187 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8189:8189 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8191:8191 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8193:8193 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8196:8196 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8200:8200 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8205:8206 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8209:8209 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8213:8229 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R8291:8308 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8233:8235 Coq.Init.Logic <> :type_scope:x_'='_x not
R8236:8236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8288:8288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8290:8290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8237:8240 CertiOS.framework.model.language <> curs constr
R8243:8251 CertiOS.framework.model.language <> hapi_code constr
R8254:8261 CertiOS.framework.model.language <> spec_seq constr
R8264:8271 CertiOS.framework.model.language <> spec_del constr
R8274:8279 CertiOS.framework.model.memory <> Vint32 constr
R8348:8367 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8331:8333 Coq.Init.Logic <> :type_scope:x_'='_x not
R8309:8315 CertiOS.framework.model.opsem <> evalval def
R8320:8327 CertiOS.framework.model.language <> get_smem def
R8329:8329 CertiOS.framework.proof.simulation <> o var
R8317:8317 CertiOS.framework.proof.simulation <> e var
R8334:8337 Coq.Init.Datatypes <> Some constr
R8340:8343 CertiOS.framework.model.memory <> Vptr constr
R8368:8368 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8418:8454 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9378:9393 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8381:8390 CertiOS.framework.model.opsem <> htstepstar ind
R8411:8413 CertiOS.framework.proof.simulation <> cst var
R8404:8405 CertiOS.framework.proof.simulation <> OO var
R8400:8402 CertiOS.framework.proof.simulation <> cst var
R8397:8398 CertiOS.framework.proof.simulation <> Ch var
R8395:8395 CertiOS.framework.proof.simulation <> t var
R8392:8393 CertiOS.framework.proof.simulation <> ph var
R8455:8474 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8749:8822 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9360:9377 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8507:8528 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8475:8490 CertiOS.framework.model.opsem <> abs_delself_step def
R8501:8501 CertiOS.framework.proof.simulation <> t var
R8545:8567 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8529:8532 CertiOS.framework.auxlibs.Maps <> join meth
R8602:8623 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8568:8571 CertiOS.framework.logic.inferules <> satp def
R8596:8598 CertiOS.framework.logic.assertion <> INV def
R8600:8600 CertiOS.framework.proof.simulation <> I var
R8574:8583 CertiOS.framework.logic.assertion <> substaskst def
R8587:8588 CertiOS.framework.proof.simulation <> Ms var
R8585:8585 CertiOS.framework.proof.simulation <> o var
R8651:8672 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8624:8627 CertiOS.framework.logic.inferules <> satp def
R8635:8641 CertiOS.framework.logic.inferules <> CurLINV def
R8649:8649 CertiOS.framework.proof.simulation <> t var
R8643:8647 CertiOS.framework.proof.simulation <> lasrt var
R8629:8629 CertiOS.framework.proof.simulation <> o var
R8673:8679 CertiOS.framework.proof.simulation <> TaskSim ind
R8748:8748 CertiOS.framework.proof.simulation <> t var
R8746:8746 CertiOS.framework.proof.simulation <> P var
R8744:8744 CertiOS.framework.proof.simulation <> I var
R8738:8742 CertiOS.framework.proof.simulation <> lasrt var
R8710:8710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8729:8729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8731:8731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8711:8714 CertiOS.framework.model.language <> curs constr
R8717:8725 CertiOS.framework.model.language <> hapi_code constr
R8706:8707 CertiOS.framework.proof.simulation <> ph var
R8704:8704 CertiOS.framework.proof.simulation <> o var
R8684:8684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8689:8690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8701:8701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8685:8688 CertiOS.framework.model.language <> ::'SKIP' not
R8691:8691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8697:8697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8700:8700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8692:8696 CertiOS.framework.model.language <> kenil constr
R8698:8699 CertiOS.framework.proof.simulation <> ks var
R8681:8682 CertiOS.framework.proof.simulation <> pl var
R8856:8877 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8823:8839 CertiOS.framework.model.opsem <> abs_delother_step def
R8850:8850 CertiOS.framework.proof.simulation <> t var
R8894:8916 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8878:8881 CertiOS.framework.auxlibs.Maps <> join meth
R8951:8972 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8917:8920 CertiOS.framework.logic.inferules <> satp def
R8945:8947 CertiOS.framework.logic.assertion <> INV def
R8949:8949 CertiOS.framework.proof.simulation <> I var
R8923:8932 CertiOS.framework.logic.assertion <> substaskst def
R8936:8937 CertiOS.framework.proof.simulation <> Ms var
R8934:8934 CertiOS.framework.proof.simulation <> o var
R9000:9021 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8973:8976 CertiOS.framework.logic.inferules <> satp def
R8984:8990 CertiOS.framework.logic.inferules <> CurLINV def
R8998:8998 CertiOS.framework.proof.simulation <> t var
R8992:8996 CertiOS.framework.proof.simulation <> lasrt var
R8978:8978 CertiOS.framework.proof.simulation <> o var
R9147:9173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9191:9216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9233:9258 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9259:9265 CertiOS.framework.proof.simulation <> TaskSim ind
R9337:9337 CertiOS.framework.proof.simulation <> t var
R9335:9335 CertiOS.framework.proof.simulation <> P var
R9333:9333 CertiOS.framework.proof.simulation <> I var
R9327:9331 CertiOS.framework.proof.simulation <> lasrt var
R9322:9324 CertiOS.framework.proof.simulation <> O'' var
R9298:9298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9317:9317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9319:9319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9299:9302 CertiOS.framework.model.language <> curs constr
R9305:9313 CertiOS.framework.model.language <> hapi_code constr
R9294:9295 CertiOS.framework.proof.simulation <> ph var
R9291:9292 CertiOS.framework.proof.simulation <> o' var
R9271:9271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9276:9277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9288:9288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9272:9275 CertiOS.framework.model.language <> ::'SKIP' not
R9278:9278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9284:9284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9287:9287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9279:9283 CertiOS.framework.model.language <> kenil constr
R9285:9286 CertiOS.framework.proof.simulation <> ks var
R9267:9268 CertiOS.framework.proof.simulation <> pl var
R9217:9220 CertiOS.framework.auxlibs.Maps <> join meth
R9230:9232 CertiOS.framework.proof.simulation <> O'' var
R9225:9228 CertiOS.framework.proof.simulation <> Odel var
R9174:9180 CertiOS.framework.logic.assertion <> joinmem def
R9189:9190 CertiOS.framework.proof.simulation <> o' var
R9184:9187 CertiOS.framework.proof.simulation <> Mdel var
R9182:9182 CertiOS.framework.proof.simulation <> o var
R9091:9094 CertiOS.framework.logic.inferules <> satp def
R9123:9125 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R9128:9129 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R9130:9133 CertiOS.framework.logic.inferules <> LINV def
R9144:9145 CertiOS.framework.proof.simulation <> lg var
R9135:9139 CertiOS.framework.proof.simulation <> lasrt var
R9116:9119 CertiOS.framework.proof.simulation <> Odel var
R9097:9106 CertiOS.framework.logic.assertion <> substaskst def
R9110:9113 CertiOS.framework.proof.simulation <> Mdel var
R9108:9108 CertiOS.framework.proof.simulation <> o var
R8137:8140 CertiOS.framework.auxlibs.Maps <> join meth
R8148:8149 CertiOS.framework.proof.simulation <> OO var
R8144:8145 CertiOS.framework.proof.simulation <> Os var
R8142:8142 CertiOS.framework.proof.simulation <> O var
R8100:8107 CertiOS.framework.auxlibs.Maps <> disjoint def
R8120:8121 CertiOS.framework.proof.simulation <> Ms var
R8110:8115 CertiOS.framework.proof.simulation <> getmem def
R8117:8117 CertiOS.framework.proof.simulation <> o var
R8052:8055 CertiOS.framework.logic.inferules <> satp def
R8080:8082 CertiOS.framework.logic.assertion <> INV def
R8084:8084 CertiOS.framework.proof.simulation <> I var
R8075:8076 CertiOS.framework.proof.simulation <> Os var
R8058:8067 CertiOS.framework.logic.assertion <> substaskst def
R8071:8072 CertiOS.framework.proof.simulation <> Ms var
R8069:8069 CertiOS.framework.proof.simulation <> o var
R7999:8001 Coq.Init.Logic <> :type_scope:x_'='_x not
R7997:7998 CertiOS.framework.proof.simulation <> Cl var
R8002:8002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8027:8027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8038:8038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8003:8006 CertiOS.framework.model.language <> curs constr
R8009:8013 CertiOS.framework.model.language <> sprim constr
R8016:8022 CertiOS.framework.model.language <> stkfree constr
R8024:8024 CertiOS.framework.proof.simulation <> e var
R8028:8028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8034:8034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8037:8037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8029:8033 CertiOS.framework.model.language <> kenil constr
R8035:8036 CertiOS.framework.proof.simulation <> ks var
R6142:6154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6188:6201 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6224:6237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6250:6277 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7136:7147 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6278:6284 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6288:6289 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6292:6292 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6295:6296 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6299:6299 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6301:6301 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6303:6303 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6305:6307 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6311:6311 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6316:6333 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R6334:6340 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6343:6343 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6348:6348 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6351:6351 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6355:6355 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6358:6358 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6363:6381 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R6450:6469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6385:6387 Coq.Init.Logic <> :type_scope:x_'='_x not
R6388:6388 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6446:6447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6449:6449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6389:6392 CertiOS.framework.model.language <> curs constr
R6395:6403 CertiOS.framework.model.language <> hapi_code constr
R6406:6413 CertiOS.framework.model.language <> spec_seq constr
R6416:6423 CertiOS.framework.model.language <> spec_crt constr
R6432:6437 CertiOS.framework.model.memory <> Vint32 constr
R6503:6523 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6493:6495 Coq.Init.Logic <> :type_scope:x_'='_x not
R6470:6476 CertiOS.framework.model.opsem <> evalval def
R6482:6489 CertiOS.framework.model.language <> get_smem def
R6491:6491 CertiOS.framework.proof.simulation <> o var
R6478:6479 CertiOS.framework.proof.simulation <> e1 var
R6496:6499 Coq.Init.Datatypes <> Some constr
R6557:6577 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6547:6549 Coq.Init.Logic <> :type_scope:x_'='_x not
R6524:6530 CertiOS.framework.model.opsem <> evalval def
R6536:6543 CertiOS.framework.model.language <> get_smem def
R6545:6545 CertiOS.framework.proof.simulation <> o var
R6532:6533 CertiOS.framework.proof.simulation <> e2 var
R6550:6553 Coq.Init.Datatypes <> Some constr
R6618:6637 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6601:6603 Coq.Init.Logic <> :type_scope:x_'='_x not
R6578:6584 CertiOS.framework.model.opsem <> evalval def
R6590:6597 CertiOS.framework.model.language <> get_smem def
R6599:6599 CertiOS.framework.proof.simulation <> o var
R6586:6587 CertiOS.framework.proof.simulation <> e3 var
R6604:6607 Coq.Init.Datatypes <> Some constr
R6610:6613 CertiOS.framework.model.memory <> Vptr constr
R6638:6638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6688:6709 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6651:6660 CertiOS.framework.model.opsem <> htstepstar ind
R6681:6683 CertiOS.framework.proof.simulation <> cst var
R6674:6675 CertiOS.framework.proof.simulation <> OO var
R6670:6672 CertiOS.framework.proof.simulation <> cst var
R6667:6668 CertiOS.framework.proof.simulation <> Ch var
R6665:6665 CertiOS.framework.proof.simulation <> t var
R6662:6663 CertiOS.framework.proof.simulation <> ph var
R6738:6757 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6710:6721 CertiOS.framework.model.opsem <> abs_crt_step def
R6732:6732 CertiOS.framework.proof.simulation <> t var
R6775:6794 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6758:6764 CertiOS.framework.logic.assertion <> joinmem def
R6774:6774 CertiOS.framework.proof.simulation <> o var
R6811:6830 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6795:6798 CertiOS.framework.auxlibs.Maps <> join meth
R6846:6865 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6831:6834 CertiOS.framework.auxlibs.Maps <> join meth
R6900:6919 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6866:6869 CertiOS.framework.logic.inferules <> satp def
R6894:6896 CertiOS.framework.logic.assertion <> INV def
R6898:6898 CertiOS.framework.proof.simulation <> I var
R6872:6881 CertiOS.framework.logic.assertion <> substaskst def
R6885:6886 CertiOS.framework.proof.simulation <> Ms var
R6883:6883 CertiOS.framework.proof.simulation <> o var
R6948:6967 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6920:6923 CertiOS.framework.logic.inferules <> satp def
R6932:6938 CertiOS.framework.logic.inferules <> CurLINV def
R6946:6946 CertiOS.framework.proof.simulation <> t var
R6940:6944 CertiOS.framework.proof.simulation <> lasrt var
R7040:7059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6968:6971 CertiOS.framework.logic.inferules <> satp def
R7015:7016 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R6999:7003 CertiOS.framework.proof.simulation <> lasrt var
R7008:7014 CertiOS.framework.logic.inferules <> init_lg def
R7017:7018 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R7037:7038 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R7019:7030 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R7032:7036 CertiOS.framework.proof.simulation <> lasrt var
R6974:6983 CertiOS.framework.logic.assertion <> substaskst def
R6985:6985 CertiOS.framework.proof.simulation <> o var
R7060:7066 CertiOS.framework.proof.simulation <> TaskSim ind
R7135:7135 CertiOS.framework.proof.simulation <> t var
R7133:7133 CertiOS.framework.proof.simulation <> P var
R7131:7131 CertiOS.framework.proof.simulation <> I var
R7125:7129 CertiOS.framework.proof.simulation <> lasrt var
R7098:7098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7117:7117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7119:7119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7099:7102 CertiOS.framework.model.language <> curs constr
R7105:7113 CertiOS.framework.model.language <> hapi_code constr
R7094:7095 CertiOS.framework.proof.simulation <> ph var
R7072:7072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7077:7077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7088:7088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7073:7076 CertiOS.framework.model.language <> ::'SKIP' not
R7078:7078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7084:7084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7087:7087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7079:7083 CertiOS.framework.model.language <> kenil constr
R7085:7086 CertiOS.framework.proof.simulation <> ks var
R7068:7069 CertiOS.framework.proof.simulation <> pl var
R6238:6241 CertiOS.framework.auxlibs.Maps <> join meth
R6248:6249 CertiOS.framework.proof.simulation <> OO var
R6245:6246 CertiOS.framework.proof.simulation <> Os var
R6243:6243 CertiOS.framework.proof.simulation <> O var
R6202:6209 CertiOS.framework.auxlibs.Maps <> disjoint def
R6222:6223 CertiOS.framework.proof.simulation <> Ms var
R6212:6217 CertiOS.framework.proof.simulation <> getmem def
R6219:6219 CertiOS.framework.proof.simulation <> o var
R6155:6158 CertiOS.framework.logic.inferules <> satp def
R6182:6184 CertiOS.framework.logic.assertion <> INV def
R6186:6186 CertiOS.framework.proof.simulation <> I var
R6178:6179 CertiOS.framework.proof.simulation <> Os var
R6161:6170 CertiOS.framework.logic.assertion <> substaskst def
R6174:6175 CertiOS.framework.proof.simulation <> Ms var
R6172:6172 CertiOS.framework.proof.simulation <> o var
R6095:6097 Coq.Init.Logic <> :type_scope:x_'='_x not
R6093:6094 CertiOS.framework.proof.simulation <> Cl var
R6098:6098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6130:6130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6141:6141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6099:6102 CertiOS.framework.model.language <> curs constr
R6105:6109 CertiOS.framework.model.language <> sprim constr
R6112:6118 CertiOS.framework.model.language <> stkinit constr
R6126:6127 CertiOS.framework.proof.simulation <> e3 var
R6123:6124 CertiOS.framework.proof.simulation <> e2 var
R6120:6121 CertiOS.framework.proof.simulation <> e1 var
R6131:6131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6137:6137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6140:6140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6132:6136 CertiOS.framework.model.language <> kenil constr
R6138:6139 CertiOS.framework.proof.simulation <> ks var
R5724:5737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5752:5765 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5781:5793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5809:5822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5858:5871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5890:5903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5916:5929 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5944:5957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5982:5995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5996:6008 CertiOS.framework.model.opsem <> htstepabtstar ind
R6022:6024 CertiOS.framework.proof.simulation <> OOO var
R6018:6020 CertiOS.framework.proof.simulation <> cst var
R6015:6016 CertiOS.framework.proof.simulation <> Ch var
R6013:6013 CertiOS.framework.proof.simulation <> t var
R6010:6011 CertiOS.framework.proof.simulation <> ph var
R5958:5966 CertiOS.framework.model.opsem <> ltstepabt ind
R5980:5981 CertiOS.framework.proof.simulation <> o' var
R5976:5978 CertiOS.framework.proof.simulation <> cst var
R5973:5974 CertiOS.framework.proof.simulation <> Cl var
R5971:5971 CertiOS.framework.proof.simulation <> t var
R5968:5969 CertiOS.framework.proof.simulation <> pl var
R5930:5933 CertiOS.framework.auxlibs.Maps <> join meth
R5941:5943 CertiOS.framework.proof.simulation <> OOO var
R5938:5939 CertiOS.framework.proof.simulation <> Of var
R5935:5936 CertiOS.framework.proof.simulation <> OO var
R5904:5907 CertiOS.framework.auxlibs.Maps <> join meth
R5914:5915 CertiOS.framework.proof.simulation <> OO var
R5911:5912 CertiOS.framework.proof.simulation <> Os var
R5909:5909 CertiOS.framework.proof.simulation <> O var
R5872:5877 CertiOS.framework.proof.simulation <> joinm2 def
R5888:5889 CertiOS.framework.proof.simulation <> o' var
R5885:5886 CertiOS.framework.proof.simulation <> Mf var
R5881:5882 CertiOS.framework.proof.simulation <> Ms var
R5879:5879 CertiOS.framework.proof.simulation <> o var
R5823:5826 CertiOS.framework.logic.inferules <> satp def
R5852:5854 CertiOS.framework.logic.assertion <> INV def
R5856:5856 CertiOS.framework.proof.simulation <> I var
R5847:5848 CertiOS.framework.proof.simulation <> Os var
R5829:5838 CertiOS.framework.logic.assertion <> substaskst def
R5842:5843 CertiOS.framework.proof.simulation <> Ms var
R5840:5840 CertiOS.framework.proof.simulation <> o var
R5794:5795 Coq.Init.Logic <> :type_scope:'~'_x not
R5808:5808 Coq.Init.Logic <> :type_scope:'~'_x not
R5796:5804 CertiOS.framework.model.opsem <> IsStkFree def
R5806:5807 CertiOS.framework.proof.simulation <> Cl var
R5766:5767 Coq.Init.Logic <> :type_scope:'~'_x not
R5780:5780 Coq.Init.Logic <> :type_scope:'~'_x not
R5768:5776 CertiOS.framework.model.opsem <> IsStkInit def
R5778:5779 CertiOS.framework.proof.simulation <> Cl var
R5738:5739 Coq.Init.Logic <> :type_scope:'~'_x not
R5751:5751 Coq.Init.Logic <> :type_scope:'~'_x not
R5740:5747 CertiOS.framework.model.opsem <> IsSwitch def
R5749:5750 CertiOS.framework.proof.simulation <> Cl var
R5713:5714 Coq.Init.Logic <> :type_scope:'~'_x not
R5723:5723 Coq.Init.Logic <> :type_scope:'~'_x not
R5715:5719 CertiOS.framework.model.opsem <> IsEnd def
R5721:5722 CertiOS.framework.proof.simulation <> Cl var
R5218:5232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5267:5283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5306:5320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5333:5360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5630:5641 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5361:5367 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R5370:5370 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R5374:5374 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R5377:5377 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R5381:5397 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R5406:5423 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5398:5402 CertiOS.framework.model.opsem <> IsEnd def
R5404:5405 CertiOS.framework.proof.simulation <> Ch var
R5424:5424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5473:5491 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5437:5446 CertiOS.framework.model.opsem <> htstepstar ind
R5466:5468 CertiOS.framework.proof.simulation <> cst var
R5463:5464 CertiOS.framework.proof.simulation <> Ch var
R5460:5461 CertiOS.framework.proof.simulation <> OO var
R5456:5458 CertiOS.framework.proof.simulation <> cst var
R5453:5454 CertiOS.framework.proof.simulation <> Ch var
R5451:5451 CertiOS.framework.proof.simulation <> t var
R5448:5449 CertiOS.framework.proof.simulation <> ph var
R5507:5523 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5492:5495 CertiOS.framework.auxlibs.Maps <> join meth
R5559:5576 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5524:5527 CertiOS.framework.logic.inferules <> satp def
R5553:5555 CertiOS.framework.logic.assertion <> INV def
R5557:5557 CertiOS.framework.proof.simulation <> I var
R5530:5539 CertiOS.framework.logic.assertion <> substaskst def
R5544:5545 CertiOS.framework.proof.simulation <> Ms var
R5541:5541 CertiOS.framework.proof.simulation <> o var
R5603:5620 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5577:5580 CertiOS.framework.logic.inferules <> satp def
R5587:5593 CertiOS.framework.logic.inferules <> CurLINV def
R5601:5601 CertiOS.framework.proof.simulation <> t var
R5595:5599 CertiOS.framework.proof.simulation <> lasrt var
R5584:5584 CertiOS.framework.proof.simulation <> O var
R5582:5582 CertiOS.framework.proof.simulation <> o var
R5621:5621 CertiOS.framework.proof.simulation <> P var
R5623:5623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5625:5626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5629:5629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5624:5624 CertiOS.framework.proof.simulation <> o var
R5321:5324 CertiOS.framework.auxlibs.Maps <> join meth
R5331:5332 CertiOS.framework.proof.simulation <> OO var
R5328:5329 CertiOS.framework.proof.simulation <> Os var
R5326:5326 CertiOS.framework.proof.simulation <> O var
R5284:5291 CertiOS.framework.auxlibs.Maps <> disjoint def
R5304:5305 CertiOS.framework.proof.simulation <> Ms var
R5294:5299 CertiOS.framework.proof.simulation <> getmem def
R5301:5301 CertiOS.framework.proof.simulation <> o var
R5233:5236 CertiOS.framework.logic.inferules <> satp def
R5261:5263 CertiOS.framework.logic.assertion <> INV def
R5265:5265 CertiOS.framework.proof.simulation <> I var
R5256:5257 CertiOS.framework.proof.simulation <> Os var
R5239:5248 CertiOS.framework.logic.assertion <> substaskst def
R5252:5253 CertiOS.framework.proof.simulation <> Ms var
R5250:5250 CertiOS.framework.proof.simulation <> o var
R5210:5214 CertiOS.framework.model.opsem <> IsEnd def
R5216:5217 CertiOS.framework.proof.simulation <> Cl var
R3022:3094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3130:3185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3208:3222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3235:3262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4304:4315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3263:3269 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3273:3273 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3275:3275 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3277:3278 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3282:3283 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3286:3286 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3289:3289 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3292:3292 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3296:3296 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3299:3299 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3302:3319 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_x_','_x not
R3365:3382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3323:3325 Coq.Init.Logic <> :type_scope:x_'='_x not
R3326:3326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3362:3362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3364:3364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3327:3330 CertiOS.framework.model.language <> curs constr
R3333:3341 CertiOS.framework.model.language <> hapi_code constr
R3344:3351 CertiOS.framework.model.language <> spec_seq constr
R3353:3357 CertiOS.framework.model.language <> sched constr
R3383:3383 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3433:3452 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3396:3405 CertiOS.framework.model.opsem <> htstepstar ind
R3426:3428 CertiOS.framework.proof.simulation <> cst var
R3419:3420 CertiOS.framework.proof.simulation <> OO var
R3415:3417 CertiOS.framework.proof.simulation <> cst var
R3412:3413 CertiOS.framework.proof.simulation <> Ch var
R3410:3410 CertiOS.framework.proof.simulation <> t var
R3407:3408 CertiOS.framework.proof.simulation <> ph var
R3468:3485 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3453:3459 CertiOS.framework.logic.assertion <> joinmem def
R3467:3467 CertiOS.framework.proof.simulation <> o var
R3501:3517 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3486:3489 CertiOS.framework.auxlibs.Maps <> join meth
R3531:3548 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3518:3521 CertiOS.framework.auxlibs.Maps <> join meth
R3584:3601 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3549:3552 CertiOS.framework.logic.inferules <> satp def
R3578:3580 CertiOS.framework.logic.assertion <> INV def
R3582:3582 CertiOS.framework.proof.simulation <> I var
R3555:3564 CertiOS.framework.logic.assertion <> substaskst def
R3568:3569 CertiOS.framework.proof.simulation <> Ms var
R3566:3566 CertiOS.framework.proof.simulation <> o var
R3641:3658 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3602:3605 CertiOS.framework.logic.inferules <> satp def
R3630:3635 CertiOS.framework.logic.assertion <> SWINVt def
R3639:3639 CertiOS.framework.proof.simulation <> t var
R3637:3637 CertiOS.framework.proof.simulation <> I var
R3609:3618 CertiOS.framework.logic.assertion <> substaskst def
R3620:3620 CertiOS.framework.proof.simulation <> o var
R3706:3741 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4286:4303 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3659:3662 CertiOS.framework.logic.inferules <> satp def
R3672:3674 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R3678:3679 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R3696:3699 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R3680:3683 CertiOS.framework.logic.inferules <> LINV def
R3693:3695 CertiOS.framework.proof.simulation <> lg' var
R3691:3691 CertiOS.framework.proof.simulation <> t var
R3685:3689 CertiOS.framework.proof.simulation <> lasrt var
R3700:3704 CertiOS.framework.logic.assertion <> Atrue constr
R3742:3761 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4159:4229 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3819:3862 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4139:4158 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3762:3765 CertiOS.framework.logic.inferules <> satp def
R3789:3799 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R3817:3817 CertiOS.framework.proof.simulation <> t var
R3815:3815 CertiOS.framework.proof.simulation <> x var
R3802:3809 CertiOS.framework.proof.simulation <> getsched def
R3811:3812 CertiOS.framework.proof.simulation <> ph var
R3768:3777 CertiOS.framework.logic.assertion <> substaskst def
R3779:3779 CertiOS.framework.proof.simulation <> o var
R3950:3975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3993:4018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4034:4059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4060:4066 CertiOS.framework.proof.simulation <> TaskSim ind
R4138:4138 CertiOS.framework.proof.simulation <> t var
R4136:4136 CertiOS.framework.proof.simulation <> P var
R4134:4134 CertiOS.framework.proof.simulation <> I var
R4128:4132 CertiOS.framework.proof.simulation <> lasrt var
R4123:4125 CertiOS.framework.proof.simulation <> O'' var
R4100:4100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4119:4119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4121:4121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4101:4104 CertiOS.framework.model.language <> curs constr
R4107:4115 CertiOS.framework.model.language <> hapi_code constr
R4097:4098 CertiOS.framework.proof.simulation <> ph var
R4093:4094 CertiOS.framework.proof.simulation <> o' var
R4072:4072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4077:4078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4090:4090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4073:4076 CertiOS.framework.model.language <> ::'SKIP' not
R4079:4079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4085:4086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4089:4089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4080:4084 CertiOS.framework.model.language <> kenil constr
R4087:4088 CertiOS.framework.proof.simulation <> ks var
R4068:4069 CertiOS.framework.proof.simulation <> pl var
R4019:4022 CertiOS.framework.auxlibs.Maps <> join meth
R4031:4033 CertiOS.framework.proof.simulation <> O'' var
R4027:4029 CertiOS.framework.proof.simulation <> Oc' var
R3976:3982 CertiOS.framework.logic.assertion <> joinmem def
R3991:3992 CertiOS.framework.proof.simulation <> o' var
R3987:3989 CertiOS.framework.proof.simulation <> Mc' var
R3909:3912 CertiOS.framework.logic.inferules <> satp def
R3939:3944 CertiOS.framework.logic.assertion <> SWINVt def
R3948:3948 CertiOS.framework.proof.simulation <> t var
R3946:3946 CertiOS.framework.proof.simulation <> I var
R3934:3936 CertiOS.framework.proof.simulation <> Oc' var
R3916:3925 CertiOS.framework.logic.assertion <> substaskst def
R3929:3931 CertiOS.framework.proof.simulation <> Mc' var
R3927:3927 CertiOS.framework.proof.simulation <> o var
R4230:4233 CertiOS.framework.logic.inferules <> satp def
R4257:4266 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R4284:4284 CertiOS.framework.proof.simulation <> t var
R4282:4282 CertiOS.framework.proof.simulation <> x var
R4269:4276 CertiOS.framework.proof.simulation <> getsched def
R4278:4279 CertiOS.framework.proof.simulation <> ph var
R4236:4245 CertiOS.framework.logic.assertion <> substaskst def
R4247:4247 CertiOS.framework.proof.simulation <> o var
R3223:3226 CertiOS.framework.auxlibs.Maps <> join meth
R3233:3234 CertiOS.framework.proof.simulation <> OO var
R3230:3231 CertiOS.framework.proof.simulation <> Os var
R3228:3228 CertiOS.framework.proof.simulation <> O var
R3186:3193 CertiOS.framework.auxlibs.Maps <> disjoint def
R3206:3207 CertiOS.framework.proof.simulation <> Ms var
R3196:3201 CertiOS.framework.proof.simulation <> getmem def
R3203:3203 CertiOS.framework.proof.simulation <> o var
R3095:3098 CertiOS.framework.logic.inferules <> satp def
R3124:3126 CertiOS.framework.logic.assertion <> INV def
R3128:3128 CertiOS.framework.proof.simulation <> I var
R3119:3120 CertiOS.framework.proof.simulation <> Os var
R3101:3110 CertiOS.framework.logic.assertion <> substaskst def
R3114:3115 CertiOS.framework.proof.simulation <> Ms var
R3112:3112 CertiOS.framework.proof.simulation <> o var
R2981:2983 Coq.Init.Logic <> :type_scope:x_'='_x not
R2979:2980 CertiOS.framework.proof.simulation <> Cl var
R2984:2984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3008:3009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3021:3021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2985:2988 CertiOS.framework.model.language <> curs constr
R2991:2995 CertiOS.framework.model.language <> sprim constr
R2998:3003 CertiOS.framework.model.language <> switch constr
R3005:3005 CertiOS.framework.proof.simulation <> x var
R3010:3010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3016:3017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3020:3020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3011:3015 CertiOS.framework.model.language <> kenil constr
R3018:3019 CertiOS.framework.proof.simulation <> ks var
R2443:2455 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2473:2486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2499:2512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2552:2578 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2903:2914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2579:2585 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2589:2589 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2593:2594 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2597:2598 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2602:2603 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2606:2606 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2610:2626 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2670:2687 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2627:2638 CertiOS.framework.model.opsem <> htstepevstar ind
R2668:2669 CertiOS.framework.proof.simulation <> ev var
R2659:2662 CertiOS.framework.proof.simulation <> cst' var
R2652:2653 CertiOS.framework.proof.simulation <> OO var
R2648:2650 CertiOS.framework.proof.simulation <> cst var
R2645:2646 CertiOS.framework.proof.simulation <> Ch var
R2643:2643 CertiOS.framework.proof.simulation <> t var
R2640:2641 CertiOS.framework.proof.simulation <> ph var
R2708:2726 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2688:2693 CertiOS.framework.proof.simulation <> joinm2 def
R2705:2707 CertiOS.framework.proof.simulation <> o'' var
R2702:2703 CertiOS.framework.proof.simulation <> Mf var
R2742:2760 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2727:2730 CertiOS.framework.auxlibs.Maps <> join meth
R2797:2814 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2761:2764 CertiOS.framework.logic.inferules <> satp def
R2791:2793 CertiOS.framework.logic.assertion <> INV def
R2795:2795 CertiOS.framework.proof.simulation <> I var
R2767:2776 CertiOS.framework.logic.assertion <> substaskst def
R2844:2862 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2815:2818 CertiOS.framework.logic.inferules <> satp def
R2828:2834 CertiOS.framework.logic.inferules <> CurLINV def
R2842:2842 CertiOS.framework.proof.simulation <> t var
R2836:2840 CertiOS.framework.proof.simulation <> lasrt var
R2863:2869 CertiOS.framework.proof.simulation <> TaskSim ind
R2902:2902 CertiOS.framework.proof.simulation <> t var
R2900:2900 CertiOS.framework.proof.simulation <> P var
R2898:2898 CertiOS.framework.proof.simulation <> I var
R2892:2896 CertiOS.framework.proof.simulation <> lasrt var
R2881:2882 CertiOS.framework.proof.simulation <> ph var
R2874:2876 CertiOS.framework.proof.simulation <> Cl' var
R2871:2872 CertiOS.framework.proof.simulation <> pl var
R2513:2520 CertiOS.framework.model.opsem <> ltstepev ind
R2550:2551 CertiOS.framework.proof.simulation <> ev var
R2546:2548 CertiOS.framework.proof.simulation <> o'' var
R2541:2544 CertiOS.framework.proof.simulation <> cst' var
R2537:2539 CertiOS.framework.proof.simulation <> Cl' var
R2534:2535 CertiOS.framework.proof.simulation <> o2 var
R2530:2532 CertiOS.framework.proof.simulation <> cst var
R2527:2528 CertiOS.framework.proof.simulation <> Cl var
R2525:2525 CertiOS.framework.proof.simulation <> t var
R2522:2523 CertiOS.framework.proof.simulation <> pl var
R2487:2490 CertiOS.framework.auxlibs.Maps <> join meth
R2497:2498 CertiOS.framework.proof.simulation <> OO var
R2494:2495 CertiOS.framework.proof.simulation <> Os var
R2492:2492 CertiOS.framework.proof.simulation <> O var
R2456:2461 CertiOS.framework.proof.simulation <> joinm2 def
R2471:2472 CertiOS.framework.proof.simulation <> o2 var
R2468:2469 CertiOS.framework.proof.simulation <> Mf var
R2465:2466 CertiOS.framework.proof.simulation <> Ms var
R2463:2463 CertiOS.framework.proof.simulation <> o var
R2409:2412 CertiOS.framework.logic.inferules <> satp def
R2437:2439 CertiOS.framework.logic.assertion <> INV def
R2441:2441 CertiOS.framework.proof.simulation <> I var
R2433:2434 CertiOS.framework.proof.simulation <> Os var
R2415:2424 CertiOS.framework.logic.assertion <> substaskst def
R2429:2430 CertiOS.framework.proof.simulation <> Ms var
R2426:2426 CertiOS.framework.proof.simulation <> o var
R1864:1876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1894:1907 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1920:1933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1968:1995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2314:2325 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1996:2002 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2006:2006 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2010:2011 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2014:2015 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2019:2020 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2023:2023 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2027:2043 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R2082:2098 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2044:2053 CertiOS.framework.model.opsem <> htstepstar ind
R2074:2077 CertiOS.framework.proof.simulation <> cst' var
R2067:2068 CertiOS.framework.proof.simulation <> OO var
R2063:2065 CertiOS.framework.proof.simulation <> cst var
R2060:2061 CertiOS.framework.proof.simulation <> Ch var
R2058:2058 CertiOS.framework.proof.simulation <> t var
R2055:2056 CertiOS.framework.proof.simulation <> ph var
R2119:2137 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2099:2104 CertiOS.framework.proof.simulation <> joinm2 def
R2116:2118 CertiOS.framework.proof.simulation <> o'' var
R2113:2114 CertiOS.framework.proof.simulation <> Mf var
R2153:2171 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2138:2141 CertiOS.framework.auxlibs.Maps <> join meth
R2208:2225 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2172:2175 CertiOS.framework.logic.inferules <> satp def
R2202:2204 CertiOS.framework.logic.assertion <> INV def
R2206:2206 CertiOS.framework.proof.simulation <> I var
R2178:2187 CertiOS.framework.logic.assertion <> substaskst def
R2255:2273 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2226:2229 CertiOS.framework.logic.inferules <> satp def
R2239:2245 CertiOS.framework.logic.inferules <> CurLINV def
R2253:2253 CertiOS.framework.proof.simulation <> t var
R2247:2251 CertiOS.framework.proof.simulation <> lasrt var
R2274:2280 CertiOS.framework.proof.simulation <> TaskSim ind
R2313:2313 CertiOS.framework.proof.simulation <> t var
R2311:2311 CertiOS.framework.proof.simulation <> P var
R2309:2309 CertiOS.framework.proof.simulation <> I var
R2303:2307 CertiOS.framework.proof.simulation <> lasrt var
R2292:2293 CertiOS.framework.proof.simulation <> ph var
R2285:2287 CertiOS.framework.proof.simulation <> Cl' var
R2282:2283 CertiOS.framework.proof.simulation <> pl var
R1934:1939 CertiOS.framework.model.opsem <> ltstep ind
R1965:1967 CertiOS.framework.proof.simulation <> o'' var
R1960:1963 CertiOS.framework.proof.simulation <> cst' var
R1956:1958 CertiOS.framework.proof.simulation <> Cl' var
R1953:1954 CertiOS.framework.proof.simulation <> o2 var
R1949:1951 CertiOS.framework.proof.simulation <> cst var
R1946:1947 CertiOS.framework.proof.simulation <> Cl var
R1944:1944 CertiOS.framework.proof.simulation <> t var
R1941:1942 CertiOS.framework.proof.simulation <> pl var
R1908:1911 CertiOS.framework.auxlibs.Maps <> join meth
R1918:1919 CertiOS.framework.proof.simulation <> OO var
R1915:1916 CertiOS.framework.proof.simulation <> Os var
R1913:1913 CertiOS.framework.proof.simulation <> O var
R1877:1882 CertiOS.framework.proof.simulation <> joinm2 def
R1892:1893 CertiOS.framework.proof.simulation <> o2 var
R1889:1890 CertiOS.framework.proof.simulation <> Mf var
R1886:1887 CertiOS.framework.proof.simulation <> Ms var
R1884:1884 CertiOS.framework.proof.simulation <> o var
R1830:1833 CertiOS.framework.logic.inferules <> satp def
R1858:1860 CertiOS.framework.logic.assertion <> INV def
R1862:1862 CertiOS.framework.proof.simulation <> I var
R1854:1855 CertiOS.framework.proof.simulation <> Os var
R1836:1845 CertiOS.framework.logic.assertion <> substaskst def
R1850:1851 CertiOS.framework.proof.simulation <> Ms var
R1847:1847 CertiOS.framework.proof.simulation <> o var
def 9481:9491 <> TaskSimAsrt
R9510:9514 CertiOS.framework.model.language <> lprog def
R9521:9524 CertiOS.framework.model.language <> code def
R9531:9535 CertiOS.framework.model.language <> hprog def
R9542:9545 CertiOS.framework.model.language <> code def
R9563:9565 CertiOS.framework.auxlibs.Modules <> tid def
R9577:9579 CertiOS.framework.logic.assertion <> Inv def
R9585:9595 CertiOS.framework.proof.simulation <> reltaskpred def
R9617:9622 CertiOS.framework.model.language <> taskst def
R9628:9633 CertiOS.framework.model.language <> osabst def
R9682:9686 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9687:9693 CertiOS.framework.proof.simulation <> TaskSim coind
R9721:9721 CertiOS.framework.proof.simulation <> t var
R9719:9719 CertiOS.framework.proof.simulation <> P var
R9717:9717 CertiOS.framework.proof.simulation <> I var
R9711:9715 CertiOS.framework.proof.simulation <> lasrt var
R9709:9709 CertiOS.framework.proof.simulation <> O var
R9706:9707 CertiOS.framework.proof.simulation <> Ch var
R9703:9704 CertiOS.framework.proof.simulation <> ph var
R9701:9701 CertiOS.framework.proof.simulation <> o var
R9698:9699 CertiOS.framework.proof.simulation <> Cl var
R9695:9696 CertiOS.framework.proof.simulation <> pl var
R9650:9655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9642:9642 CertiOS.framework.proof.simulation <> P var
R9644:9644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9646:9647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9649:9649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9645:9645 CertiOS.framework.proof.simulation <> o var
R9648:9648 CertiOS.framework.proof.simulation <> O var
R9656:9659 CertiOS.framework.logic.inferules <> satp def
R9666:9672 CertiOS.framework.logic.inferules <> CurLINV def
R9680:9680 CertiOS.framework.proof.simulation <> t var
R9674:9678 CertiOS.framework.proof.simulation <> lasrt var
R9663:9663 CertiOS.framework.proof.simulation <> O var
R9661:9661 CertiOS.framework.proof.simulation <> o var
def 10098:10105 <> notabort
R10110:10113 CertiOS.framework.model.language <> code def
R10131:10134 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10120:10120 Coq.Init.Logic <> :type_scope:'~'_x not
R10121:10128 CertiOS.framework.model.opsem <> IsSwitch def
R10130:10130 CertiOS.framework.proof.simulation <> C var
R10143:10149 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10135:10135 Coq.Init.Logic <> :type_scope:'~'_x not
R10136:10140 CertiOS.framework.model.opsem <> IsEnd def
R10142:10142 CertiOS.framework.proof.simulation <> C var
R10159:10162 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10150:10151 Coq.Init.Logic <> :type_scope:'~'_x not
R10152:10156 CertiOS.framework.model.opsem <> IsRet def
R10158:10158 CertiOS.framework.proof.simulation <> C var
R10172:10175 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10163:10163 Coq.Init.Logic <> :type_scope:'~'_x not
R10164:10169 CertiOS.framework.model.opsem <> IsRetE def
R10171:10171 CertiOS.framework.proof.simulation <> C var
R10185:10191 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10176:10176 Coq.Init.Logic <> :type_scope:'~'_x not
R10177:10182 CertiOS.framework.model.opsem <> IsIRet def
R10184:10184 CertiOS.framework.proof.simulation <> C var
R10204:10209 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10192:10192 Coq.Init.Logic <> :type_scope:'~'_x not
R10193:10201 CertiOS.framework.model.opsem <> IsStkInit def
R10203:10203 CertiOS.framework.proof.simulation <> C var
R10210:10210 Coq.Init.Logic <> :type_scope:'~'_x not
R10211:10219 CertiOS.framework.model.opsem <> IsStkFree def
R10221:10221 CertiOS.framework.proof.simulation <> C var
def 10236:10244 <> notabortm
R10249:10252 CertiOS.framework.model.language <> code def
R10267:10270 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10257:10257 Coq.Init.Logic <> :type_scope:'~'_x not
R10258:10264 CertiOS.framework.model.opsem <> IsFcall def
R10266:10266 CertiOS.framework.proof.simulation <> C var
R10271:10278 CertiOS.framework.proof.simulation <> notabort def
R10280:10280 CertiOS.framework.proof.simulation <> C var
ind 10296:10305 <> MethSimMod
constr 10461:10472 <> meth_sim_mod
R10316:10319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10327:10331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10336:10339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10346:10349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10355:10358 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10365:10369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10378:10406 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10410:10413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10421:10424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10429:10432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10440:10443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10447:10450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10444:10446 CertiOS.framework.auxlibs.Modules <> tid def
R10433:10439 CertiOS.framework.logic.assertion <> retasrt def
R10425:10428 CertiOS.framework.logic.assertion <> asrt ind
R10414:10420 CertiOS.framework.logic.assertion <> retasrt def
R10407:10409 CertiOS.framework.logic.assertion <> Inv def
R10370:10377 CertiOS.framework.logic.inferules <> LocalInv def
R10359:10364 CertiOS.framework.model.language <> osabst def
R10350:10354 CertiOS.framework.logic.assertion <> absop def
R10340:10345 CertiOS.framework.model.language <> taskst def
R10332:10335 CertiOS.framework.model.language <> code def
R10320:10326 CertiOS.framework.model.language <> ossched def
R10309:10315 CertiOS.framework.logic.assertion <> funspec def
R10494:10500 CertiOS.framework.logic.assertion <> funspec def
R10509:10512 CertiOS.framework.model.language <> code def
R10535:10539 CertiOS.framework.logic.assertion <> absop def
R10545:10550 CertiOS.framework.model.language <> osabst def
R10564:10566 CertiOS.framework.logic.assertion <> Inv def
R10587:10593 CertiOS.framework.logic.assertion <> retasrt def
R10601:10604 CertiOS.framework.logic.assertion <> asrt ind
R10611:10616 CertiOS.framework.model.language <> taskst def
R10627:10636 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11195:11211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11212:11221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12616:13654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13655:13664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14843:14860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14861:14870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15333:15350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15351:15360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15879:15896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15897:15906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16437:16460 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16461:16470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16995:17011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17012:17021 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17227:17243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17244:17253 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18298:18314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18315:18324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19806:20794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20795:20804 CertiOS.framework.proof.simulation <> MethSimMod ind
R20841:20841 CertiOS.framework.proof.simulation <> t var
R20839:20839 CertiOS.framework.proof.simulation <> q var
R20836:20837 CertiOS.framework.proof.simulation <> ri var
R20834:20834 CertiOS.framework.proof.simulation <> r var
R20832:20832 CertiOS.framework.proof.simulation <> I var
R20826:20830 CertiOS.framework.proof.simulation <> lasrt var
R20824:20824 CertiOS.framework.proof.simulation <> O var
R20818:20822 CertiOS.framework.proof.simulation <> gamma var
R20816:20816 CertiOS.framework.proof.simulation <> o var
R20814:20814 CertiOS.framework.proof.simulation <> C var
R20811:20812 CertiOS.framework.proof.simulation <> sd var
R20806:20809 CertiOS.framework.proof.simulation <> spec var
R18400:18412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18446:18459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18482:18496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18509:18535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19794:19805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18536:18542 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18549:18549 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18551:18551 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18553:18553 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18556:18557 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18561:18577 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R18621:18638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18584:18587 Coq.Init.Logic <> :type_scope:x_'='_x not
R18620:18620 Coq.Init.Logic <> :type_scope:x_'='_x not
R18588:18595 CertiOS.framework.model.language <> spec_seq constr
R18598:18605 CertiOS.framework.model.language <> spec_del constr
R18608:18613 CertiOS.framework.model.memory <> Vint32 constr
R18678:18697 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18661:18663 Coq.Init.Logic <> :type_scope:x_'='_x not
R18639:18645 CertiOS.framework.model.opsem <> evalval def
R18650:18657 CertiOS.framework.model.language <> get_smem def
R18659:18659 CertiOS.framework.proof.simulation <> o var
R18647:18647 CertiOS.framework.proof.simulation <> e var
R18664:18667 Coq.Init.Datatypes <> Some constr
R18670:18673 CertiOS.framework.model.memory <> Vptr constr
R18731:18766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19778:19793 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18698:18707 CertiOS.framework.logic.inferules <> hmstepstar syndef
R18718:18719 CertiOS.framework.proof.simulation <> OO var
R18712:18716 CertiOS.framework.proof.simulation <> gamma var
R18709:18710 CertiOS.framework.proof.simulation <> sd var
R18767:18787 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19099:19174 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19760:19777 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18788:18794 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R18799:18799 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R18802:18802 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R18806:18828 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R18861:18884 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18829:18844 CertiOS.framework.model.opsem <> abs_delself_step def
R18855:18855 CertiOS.framework.proof.simulation <> t var
R18901:18925 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18885:18888 CertiOS.framework.auxlibs.Maps <> join meth
R18961:18984 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18926:18929 CertiOS.framework.logic.inferules <> satp def
R18955:18957 CertiOS.framework.logic.assertion <> INV def
R18959:18959 CertiOS.framework.proof.simulation <> I var
R18932:18941 CertiOS.framework.logic.assertion <> substaskst def
R18945:18946 CertiOS.framework.proof.simulation <> Ms var
R18943:18943 CertiOS.framework.proof.simulation <> o var
R19012:19035 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18985:18988 CertiOS.framework.logic.inferules <> satp def
R18996:19002 CertiOS.framework.logic.inferules <> CurLINV def
R19010:19010 CertiOS.framework.proof.simulation <> t var
R19004:19008 CertiOS.framework.proof.simulation <> lasrt var
R18990:18990 CertiOS.framework.proof.simulation <> o var
R19036:19045 CertiOS.framework.proof.simulation <> MethSimMod ind
R19098:19098 CertiOS.framework.proof.simulation <> t var
R19096:19096 CertiOS.framework.proof.simulation <> q var
R19093:19094 CertiOS.framework.proof.simulation <> ri var
R19091:19091 CertiOS.framework.proof.simulation <> r var
R19089:19089 CertiOS.framework.proof.simulation <> I var
R19083:19087 CertiOS.framework.proof.simulation <> lasrt var
R19076:19076 CertiOS.framework.proof.simulation <> o var
R19056:19056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19061:19062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19073:19073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19057:19060 CertiOS.framework.model.language <> ::'SKIP' not
R19063:19063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19069:19069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19072:19072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19064:19068 CertiOS.framework.model.language <> kenil constr
R19070:19071 CertiOS.framework.proof.simulation <> ks var
R19052:19053 CertiOS.framework.proof.simulation <> sd var
R19047:19050 CertiOS.framework.proof.simulation <> spec var
R19175:19181 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R19186:19186 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R19189:19189 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R19193:19215 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R19249:19272 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19216:19232 CertiOS.framework.model.opsem <> abs_delother_step def
R19243:19243 CertiOS.framework.proof.simulation <> t var
R19289:19313 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19273:19276 CertiOS.framework.auxlibs.Maps <> join meth
R19348:19371 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19314:19317 CertiOS.framework.logic.inferules <> satp def
R19342:19344 CertiOS.framework.logic.assertion <> INV def
R19346:19346 CertiOS.framework.proof.simulation <> I var
R19320:19329 CertiOS.framework.logic.assertion <> substaskst def
R19333:19334 CertiOS.framework.proof.simulation <> Ms var
R19331:19331 CertiOS.framework.proof.simulation <> o var
R19399:19422 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19372:19375 CertiOS.framework.logic.inferules <> satp def
R19383:19389 CertiOS.framework.logic.inferules <> CurLINV def
R19397:19397 CertiOS.framework.proof.simulation <> t var
R19391:19395 CertiOS.framework.proof.simulation <> lasrt var
R19377:19377 CertiOS.framework.proof.simulation <> o var
R19552:19580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19598:19625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19642:19669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19670:19679 CertiOS.framework.proof.simulation <> MethSimMod ind
R19735:19735 CertiOS.framework.proof.simulation <> t var
R19733:19733 CertiOS.framework.proof.simulation <> q var
R19730:19731 CertiOS.framework.proof.simulation <> ri var
R19728:19728 CertiOS.framework.proof.simulation <> r var
R19726:19726 CertiOS.framework.proof.simulation <> I var
R19720:19724 CertiOS.framework.proof.simulation <> lasrt var
R19715:19717 CertiOS.framework.proof.simulation <> O'' var
R19710:19711 CertiOS.framework.proof.simulation <> o' var
R19690:19690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19695:19696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19707:19707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19691:19694 CertiOS.framework.model.language <> ::'SKIP' not
R19697:19697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19703:19703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19706:19706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19698:19702 CertiOS.framework.model.language <> kenil constr
R19704:19705 CertiOS.framework.proof.simulation <> ks var
R19686:19687 CertiOS.framework.proof.simulation <> sd var
R19681:19684 CertiOS.framework.proof.simulation <> spec var
R19626:19629 CertiOS.framework.auxlibs.Maps <> join meth
R19639:19641 CertiOS.framework.proof.simulation <> O'' var
R19634:19637 CertiOS.framework.proof.simulation <> Odel var
R19581:19587 CertiOS.framework.logic.assertion <> joinmem def
R19596:19597 CertiOS.framework.proof.simulation <> o' var
R19591:19594 CertiOS.framework.proof.simulation <> Mdel var
R19589:19589 CertiOS.framework.proof.simulation <> o var
R19496:19499 CertiOS.framework.logic.inferules <> satp def
R19528:19530 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R19533:19534 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R19535:19538 CertiOS.framework.logic.inferules <> LINV def
R19549:19550 CertiOS.framework.proof.simulation <> lg var
R19540:19544 CertiOS.framework.proof.simulation <> lasrt var
R19521:19524 CertiOS.framework.proof.simulation <> Odel var
R19502:19511 CertiOS.framework.logic.assertion <> substaskst def
R19515:19518 CertiOS.framework.proof.simulation <> Mdel var
R19513:19513 CertiOS.framework.proof.simulation <> o var
R18497:18500 CertiOS.framework.auxlibs.Maps <> join meth
R18507:18508 CertiOS.framework.proof.simulation <> OO var
R18504:18505 CertiOS.framework.proof.simulation <> Os var
R18502:18502 CertiOS.framework.proof.simulation <> O var
R18460:18467 CertiOS.framework.auxlibs.Maps <> disjoint def
R18480:18481 CertiOS.framework.proof.simulation <> Ms var
R18470:18475 CertiOS.framework.proof.simulation <> getmem def
R18477:18477 CertiOS.framework.proof.simulation <> o var
R18413:18416 CertiOS.framework.logic.inferules <> satp def
R18440:18442 CertiOS.framework.logic.assertion <> INV def
R18444:18444 CertiOS.framework.proof.simulation <> I var
R18436:18437 CertiOS.framework.proof.simulation <> Os var
R18419:18428 CertiOS.framework.logic.assertion <> substaskst def
R18432:18433 CertiOS.framework.proof.simulation <> Ms var
R18430:18430 CertiOS.framework.proof.simulation <> o var
R18360:18362 Coq.Init.Logic <> :type_scope:x_'='_x not
R18359:18359 CertiOS.framework.proof.simulation <> C var
R18363:18363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18388:18388 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18399:18399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18364:18367 CertiOS.framework.model.language <> curs constr
R18370:18374 CertiOS.framework.model.language <> sprim constr
R18377:18383 CertiOS.framework.model.language <> stkfree constr
R18385:18385 CertiOS.framework.proof.simulation <> e var
R18389:18389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18395:18395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18398:18398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18390:18394 CertiOS.framework.model.language <> kenil constr
R18396:18397 CertiOS.framework.proof.simulation <> ks var
R17344:17356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17390:17403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17426:17439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17452:17479 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18286:18297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17480:17486 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17493:17493 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17496:17496 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17499:17499 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17502:17502 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17504:17504 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17506:17507 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17511:17512 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17517:17517 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17520:17537 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R17538:17544 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17549:17549 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17552:17552 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17556:17556 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17559:17559 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17564:17582 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R17632:17651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17589:17592 Coq.Init.Logic <> :type_scope:x_'='_x not
R17631:17631 Coq.Init.Logic <> :type_scope:x_'='_x not
R17593:17600 CertiOS.framework.model.language <> spec_seq constr
R17603:17610 CertiOS.framework.model.language <> spec_crt constr
R17619:17624 CertiOS.framework.model.memory <> Vint32 constr
R17685:17704 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17675:17677 Coq.Init.Logic <> :type_scope:x_'='_x not
R17652:17658 CertiOS.framework.model.opsem <> evalval def
R17664:17671 CertiOS.framework.model.language <> get_smem def
R17673:17673 CertiOS.framework.proof.simulation <> o var
R17660:17661 CertiOS.framework.proof.simulation <> e1 var
R17678:17681 Coq.Init.Datatypes <> Some constr
R17738:17758 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17728:17730 Coq.Init.Logic <> :type_scope:x_'='_x not
R17705:17711 CertiOS.framework.model.opsem <> evalval def
R17717:17724 CertiOS.framework.model.language <> get_smem def
R17726:17726 CertiOS.framework.proof.simulation <> o var
R17713:17714 CertiOS.framework.proof.simulation <> e2 var
R17731:17734 Coq.Init.Datatypes <> Some constr
R17799:17818 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17782:17784 Coq.Init.Logic <> :type_scope:x_'='_x not
R17759:17765 CertiOS.framework.model.opsem <> evalval def
R17771:17778 CertiOS.framework.model.language <> get_smem def
R17780:17780 CertiOS.framework.proof.simulation <> o var
R17767:17768 CertiOS.framework.proof.simulation <> e3 var
R17785:17788 Coq.Init.Datatypes <> Some constr
R17791:17794 CertiOS.framework.model.memory <> Vptr constr
R17852:17871 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17819:17828 CertiOS.framework.logic.inferules <> hmstepstar syndef
R17839:17840 CertiOS.framework.proof.simulation <> OO var
R17833:17837 CertiOS.framework.proof.simulation <> gamma var
R17830:17831 CertiOS.framework.proof.simulation <> sd var
R17900:17919 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17872:17883 CertiOS.framework.model.opsem <> abs_crt_step def
R17894:17894 CertiOS.framework.proof.simulation <> t var
R17937:17956 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17920:17926 CertiOS.framework.logic.assertion <> joinmem def
R17936:17936 CertiOS.framework.proof.simulation <> o var
R17973:17992 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17957:17960 CertiOS.framework.auxlibs.Maps <> join meth
R18008:18027 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17993:17996 CertiOS.framework.auxlibs.Maps <> join meth
R18062:18081 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18028:18031 CertiOS.framework.logic.inferules <> satp def
R18056:18058 CertiOS.framework.logic.assertion <> INV def
R18060:18060 CertiOS.framework.proof.simulation <> I var
R18034:18043 CertiOS.framework.logic.assertion <> substaskst def
R18047:18048 CertiOS.framework.proof.simulation <> Ms var
R18045:18045 CertiOS.framework.proof.simulation <> o var
R18110:18129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18082:18085 CertiOS.framework.logic.inferules <> satp def
R18094:18100 CertiOS.framework.logic.inferules <> CurLINV def
R18108:18108 CertiOS.framework.proof.simulation <> t var
R18102:18106 CertiOS.framework.proof.simulation <> lasrt var
R18202:18221 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18130:18133 CertiOS.framework.logic.inferules <> satp def
R18177:18178 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R18161:18165 CertiOS.framework.proof.simulation <> lasrt var
R18170:18176 CertiOS.framework.logic.inferules <> init_lg def
R18179:18180 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R18199:18200 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R18181:18192 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R18194:18198 CertiOS.framework.proof.simulation <> lasrt var
R18136:18145 CertiOS.framework.logic.assertion <> substaskst def
R18147:18147 CertiOS.framework.proof.simulation <> o var
R18222:18231 CertiOS.framework.proof.simulation <> MethSimMod ind
R18285:18285 CertiOS.framework.proof.simulation <> t var
R18283:18283 CertiOS.framework.proof.simulation <> q var
R18280:18281 CertiOS.framework.proof.simulation <> ri var
R18278:18278 CertiOS.framework.proof.simulation <> r var
R18276:18276 CertiOS.framework.proof.simulation <> I var
R18270:18274 CertiOS.framework.proof.simulation <> lasrt var
R18242:18242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18247:18248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18259:18259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18243:18246 CertiOS.framework.model.language <> ::'SKIP' not
R18249:18249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18255:18255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18258:18258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18250:18254 CertiOS.framework.model.language <> kenil constr
R18256:18257 CertiOS.framework.proof.simulation <> ks var
R18238:18239 CertiOS.framework.proof.simulation <> sd var
R18233:18236 CertiOS.framework.proof.simulation <> spec var
R17440:17443 CertiOS.framework.auxlibs.Maps <> join meth
R17450:17451 CertiOS.framework.proof.simulation <> OO var
R17447:17448 CertiOS.framework.proof.simulation <> Os var
R17445:17445 CertiOS.framework.proof.simulation <> O var
R17404:17411 CertiOS.framework.auxlibs.Maps <> disjoint def
R17424:17425 CertiOS.framework.proof.simulation <> Ms var
R17414:17419 CertiOS.framework.proof.simulation <> getmem def
R17421:17421 CertiOS.framework.proof.simulation <> o var
R17357:17360 CertiOS.framework.logic.inferules <> satp def
R17384:17386 CertiOS.framework.logic.assertion <> INV def
R17388:17388 CertiOS.framework.proof.simulation <> I var
R17380:17381 CertiOS.framework.proof.simulation <> Os var
R17363:17372 CertiOS.framework.logic.assertion <> substaskst def
R17376:17377 CertiOS.framework.proof.simulation <> Ms var
R17374:17374 CertiOS.framework.proof.simulation <> o var
R17297:17299 Coq.Init.Logic <> :type_scope:x_'='_x not
R17296:17296 CertiOS.framework.proof.simulation <> C var
R17300:17300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17332:17332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17343:17343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17301:17304 CertiOS.framework.model.language <> curs constr
R17307:17311 CertiOS.framework.model.language <> sprim constr
R17314:17320 CertiOS.framework.model.language <> stkinit constr
R17328:17329 CertiOS.framework.proof.simulation <> e3 var
R17325:17326 CertiOS.framework.proof.simulation <> e2 var
R17322:17323 CertiOS.framework.proof.simulation <> e1 var
R17333:17333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17339:17339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17342:17342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17334:17338 CertiOS.framework.model.language <> kenil constr
R17340:17341 CertiOS.framework.proof.simulation <> ks var
R17086:17099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17133:17146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17164:17177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17191:17204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17205:17207 Coq.Init.Logic <> :type_scope:'~'_x not
R17226:17226 Coq.Init.Logic <> :type_scope:'~'_x not
R17208:17218 CertiOS.framework.model.opsem <> loststepabt def
R17224:17225 CertiOS.framework.proof.simulation <> o2 var
R17222:17222 CertiOS.framework.proof.simulation <> C var
R17220:17220 CertiOS.framework.proof.simulation <> p var
R17178:17185 CertiOS.framework.auxlibs.Maps <> disjoint def
R17189:17190 CertiOS.framework.proof.simulation <> Os var
R17187:17187 CertiOS.framework.proof.simulation <> O var
R17147:17152 CertiOS.framework.proof.simulation <> joinm2 def
R17162:17163 CertiOS.framework.proof.simulation <> o2 var
R17159:17160 CertiOS.framework.proof.simulation <> Mf var
R17156:17157 CertiOS.framework.proof.simulation <> Ms var
R17154:17154 CertiOS.framework.proof.simulation <> o var
R17100:17103 CertiOS.framework.logic.inferules <> satp def
R17127:17129 CertiOS.framework.logic.assertion <> INV def
R17131:17131 CertiOS.framework.proof.simulation <> I var
R17123:17124 CertiOS.framework.proof.simulation <> Os var
R17106:17115 CertiOS.framework.logic.assertion <> substaskst def
R17119:17120 CertiOS.framework.proof.simulation <> Ms var
R17117:17117 CertiOS.framework.proof.simulation <> o var
R17075:17083 CertiOS.framework.proof.simulation <> notabortm def
R17085:17085 CertiOS.framework.proof.simulation <> C var
R16538:16551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16570:16584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16601:16614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16648:16661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16684:16697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16710:16737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16982:16994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16738:16745 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16752:16752 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16756:16756 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16759:16759 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16763:16778 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16812:16829 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16779:16788 CertiOS.framework.logic.inferules <> hmstepstar syndef
R16799:16800 CertiOS.framework.proof.simulation <> OO var
R16793:16797 CertiOS.framework.proof.simulation <> gamma var
R16790:16791 CertiOS.framework.proof.simulation <> sd var
R16845:16862 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16830:16833 CertiOS.framework.auxlibs.Maps <> join meth
R16897:16913 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16863:16866 CertiOS.framework.logic.inferules <> satp def
R16891:16893 CertiOS.framework.logic.assertion <> INV def
R16895:16895 CertiOS.framework.proof.simulation <> I var
R16869:16878 CertiOS.framework.logic.assertion <> substaskst def
R16882:16883 CertiOS.framework.proof.simulation <> Ms var
R16880:16880 CertiOS.framework.proof.simulation <> o var
R16941:16958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16914:16917 CertiOS.framework.logic.inferules <> satp def
R16925:16931 CertiOS.framework.logic.inferules <> CurLINV def
R16939:16939 CertiOS.framework.proof.simulation <> t var
R16933:16937 CertiOS.framework.proof.simulation <> lasrt var
R16919:16919 CertiOS.framework.proof.simulation <> o var
R16959:16961 CertiOS.framework.logic.assertion <> sat def
R16980:16981 CertiOS.framework.proof.simulation <> ri var
R16963:16963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16971:16971 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16978:16978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16964:16964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16966:16967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16970:16970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16965:16965 CertiOS.framework.proof.simulation <> o var
R16698:16701 CertiOS.framework.auxlibs.Maps <> join meth
R16708:16709 CertiOS.framework.proof.simulation <> OO var
R16705:16706 CertiOS.framework.proof.simulation <> Os var
R16703:16703 CertiOS.framework.proof.simulation <> O var
R16662:16669 CertiOS.framework.auxlibs.Maps <> disjoint def
R16682:16683 CertiOS.framework.proof.simulation <> Ms var
R16672:16677 CertiOS.framework.proof.simulation <> getmem def
R16679:16679 CertiOS.framework.proof.simulation <> o var
R16615:16618 CertiOS.framework.logic.inferules <> satp def
R16642:16644 CertiOS.framework.logic.assertion <> INV def
R16646:16646 CertiOS.framework.proof.simulation <> I var
R16638:16639 CertiOS.framework.proof.simulation <> Os var
R16621:16630 CertiOS.framework.logic.assertion <> substaskst def
R16634:16635 CertiOS.framework.proof.simulation <> Ms var
R16632:16632 CertiOS.framework.proof.simulation <> o var
R16595:16596 Coq.Init.Logic <> :type_scope:x_'='_x not
R16585:16591 CertiOS.framework.model.opsem <> intcont def
R16593:16594 CertiOS.framework.proof.simulation <> ks var
R16597:16600 Coq.Init.Datatypes <> None constr
R16563:16565 Coq.Init.Logic <> :type_scope:x_'='_x not
R16552:16559 CertiOS.framework.model.opsem <> callcont def
R16561:16562 CertiOS.framework.proof.simulation <> ks var
R16566:16569 Coq.Init.Datatypes <> None constr
R16502:16504 Coq.Init.Logic <> :type_scope:x_'='_x not
R16501:16501 CertiOS.framework.proof.simulation <> C var
R16505:16505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16524:16525 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16537:16537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16506:16509 CertiOS.framework.model.language <> curs constr
R16512:16516 CertiOS.framework.model.language <> sprim constr
R16518:16522 CertiOS.framework.model.language <> exint constr
R16526:16526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16532:16533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16536:16536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16527:16531 CertiOS.framework.model.language <> kenil constr
R16534:16535 CertiOS.framework.proof.simulation <> ks var
R15968:15981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16000:16014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16031:16044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16078:16091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16114:16127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16140:16167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16424:16436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16168:16174 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16181:16181 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16185:16185 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16188:16188 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16192:16207 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R16241:16258 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16208:16217 CertiOS.framework.logic.inferules <> hmstepstar syndef
R16228:16229 CertiOS.framework.proof.simulation <> OO var
R16222:16226 CertiOS.framework.proof.simulation <> gamma var
R16219:16220 CertiOS.framework.proof.simulation <> sd var
R16274:16291 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16259:16262 CertiOS.framework.auxlibs.Maps <> join meth
R16326:16343 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16292:16295 CertiOS.framework.logic.inferules <> satp def
R16320:16322 CertiOS.framework.logic.assertion <> INV def
R16324:16324 CertiOS.framework.proof.simulation <> I var
R16298:16307 CertiOS.framework.logic.assertion <> substaskst def
R16311:16312 CertiOS.framework.proof.simulation <> Ms var
R16309:16309 CertiOS.framework.proof.simulation <> o var
R16371:16388 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16344:16347 CertiOS.framework.logic.inferules <> satp def
R16355:16361 CertiOS.framework.logic.inferules <> CurLINV def
R16369:16369 CertiOS.framework.proof.simulation <> t var
R16363:16367 CertiOS.framework.proof.simulation <> lasrt var
R16349:16349 CertiOS.framework.proof.simulation <> o var
R16389:16391 CertiOS.framework.logic.assertion <> sat def
R16413:16413 CertiOS.framework.proof.simulation <> r var
R16416:16419 Coq.Init.Datatypes <> Some constr
R16421:16421 CertiOS.framework.proof.simulation <> v var
R16393:16393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16401:16402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16409:16409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16394:16394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16396:16397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16400:16400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16395:16395 CertiOS.framework.proof.simulation <> o var
R16128:16131 CertiOS.framework.auxlibs.Maps <> join meth
R16138:16139 CertiOS.framework.proof.simulation <> OO var
R16135:16136 CertiOS.framework.proof.simulation <> Os var
R16133:16133 CertiOS.framework.proof.simulation <> O var
R16092:16099 CertiOS.framework.auxlibs.Maps <> disjoint def
R16112:16113 CertiOS.framework.proof.simulation <> Ms var
R16102:16107 CertiOS.framework.proof.simulation <> getmem def
R16109:16109 CertiOS.framework.proof.simulation <> o var
R16045:16048 CertiOS.framework.logic.inferules <> satp def
R16072:16074 CertiOS.framework.logic.assertion <> INV def
R16076:16076 CertiOS.framework.proof.simulation <> I var
R16068:16069 CertiOS.framework.proof.simulation <> Os var
R16051:16060 CertiOS.framework.logic.assertion <> substaskst def
R16064:16065 CertiOS.framework.proof.simulation <> Ms var
R16062:16062 CertiOS.framework.proof.simulation <> o var
R16025:16026 Coq.Init.Logic <> :type_scope:x_'='_x not
R16015:16021 CertiOS.framework.model.opsem <> intcont def
R16023:16024 CertiOS.framework.proof.simulation <> ks var
R16027:16030 Coq.Init.Datatypes <> None constr
R15993:15995 Coq.Init.Logic <> :type_scope:x_'='_x not
R15982:15989 CertiOS.framework.model.opsem <> callcont def
R15991:15992 CertiOS.framework.proof.simulation <> ks var
R15996:15999 Coq.Init.Datatypes <> None constr
R15940:15942 Coq.Init.Logic <> :type_scope:x_'='_x not
R15939:15939 CertiOS.framework.proof.simulation <> C var
R15943:15943 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15947:15948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15967:15967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15944:15944 CertiOS.framework.model.language <> ::'['_x_']' not
R15946:15946 CertiOS.framework.model.language <> ::'['_x_']' not
R15945:15945 CertiOS.framework.proof.simulation <> v var
R15949:15949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15955:15957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15965:15966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15950:15954 CertiOS.framework.model.language <> kenil constr
R15958:15961 CertiOS.framework.model.language <> kret constr
R15963:15964 CertiOS.framework.proof.simulation <> ks var
R15419:15432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15451:15465 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15482:15495 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15529:15541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15564:15577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15590:15617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15867:15878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15618:15624 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15631:15631 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15635:15635 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15638:15638 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15642:15657 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15691:15708 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15658:15667 CertiOS.framework.logic.inferules <> hmstepstar syndef
R15678:15679 CertiOS.framework.proof.simulation <> OO var
R15672:15676 CertiOS.framework.proof.simulation <> gamma var
R15669:15670 CertiOS.framework.proof.simulation <> sd var
R15724:15741 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15709:15712 CertiOS.framework.auxlibs.Maps <> join meth
R15776:15792 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15742:15745 CertiOS.framework.logic.inferules <> satp def
R15770:15772 CertiOS.framework.logic.assertion <> INV def
R15774:15774 CertiOS.framework.proof.simulation <> I var
R15748:15757 CertiOS.framework.logic.assertion <> substaskst def
R15761:15762 CertiOS.framework.proof.simulation <> Ms var
R15759:15759 CertiOS.framework.proof.simulation <> o var
R15820:15837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15793:15796 CertiOS.framework.logic.inferules <> satp def
R15804:15810 CertiOS.framework.logic.inferules <> CurLINV def
R15818:15818 CertiOS.framework.proof.simulation <> t var
R15812:15816 CertiOS.framework.proof.simulation <> lasrt var
R15798:15798 CertiOS.framework.proof.simulation <> o var
R15838:15840 CertiOS.framework.logic.assertion <> sat def
R15860:15860 CertiOS.framework.proof.simulation <> r var
R15862:15865 Coq.Init.Datatypes <> None constr
R15842:15842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15850:15850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15857:15857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15843:15843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15845:15846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15849:15849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15844:15844 CertiOS.framework.proof.simulation <> o var
R15578:15581 CertiOS.framework.auxlibs.Maps <> join meth
R15588:15589 CertiOS.framework.proof.simulation <> OO var
R15585:15586 CertiOS.framework.proof.simulation <> Os var
R15583:15583 CertiOS.framework.proof.simulation <> O var
R15542:15549 CertiOS.framework.auxlibs.Maps <> disjoint def
R15562:15563 CertiOS.framework.proof.simulation <> Ms var
R15552:15557 CertiOS.framework.proof.simulation <> getmem def
R15559:15559 CertiOS.framework.proof.simulation <> o var
R15496:15499 CertiOS.framework.logic.inferules <> satp def
R15523:15525 CertiOS.framework.logic.assertion <> INV def
R15527:15527 CertiOS.framework.proof.simulation <> I var
R15519:15520 CertiOS.framework.proof.simulation <> Os var
R15502:15511 CertiOS.framework.logic.assertion <> substaskst def
R15515:15516 CertiOS.framework.proof.simulation <> Ms var
R15513:15513 CertiOS.framework.proof.simulation <> o var
R15476:15477 Coq.Init.Logic <> :type_scope:x_'='_x not
R15466:15472 CertiOS.framework.model.opsem <> intcont def
R15474:15475 CertiOS.framework.proof.simulation <> ks var
R15478:15481 Coq.Init.Datatypes <> None constr
R15444:15446 Coq.Init.Logic <> :type_scope:x_'='_x not
R15433:15440 CertiOS.framework.model.opsem <> callcont def
R15442:15443 CertiOS.framework.proof.simulation <> ks var
R15447:15450 Coq.Init.Datatypes <> None constr
R15392:15394 Coq.Init.Logic <> :type_scope:x_'='_x not
R15391:15391 CertiOS.framework.proof.simulation <> C var
R15395:15395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15405:15406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15418:15418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15396:15399 CertiOS.framework.model.language <> curs constr
R15401:15404 CertiOS.framework.model.language <> sret constr
R15407:15407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15413:15414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15417:15417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15408:15412 CertiOS.framework.model.language <> kenil constr
R15415:15416 CertiOS.framework.proof.simulation <> ks var
R14937:14950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14984:14996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15019:15032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15045:15072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15320:15332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15073:15079 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15086:15086 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15090:15090 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15093:15093 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15097:15112 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R15146:15163 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15113:15122 CertiOS.framework.logic.inferules <> hmstepstar syndef
R15133:15134 CertiOS.framework.proof.simulation <> OO var
R15127:15131 CertiOS.framework.proof.simulation <> gamma var
R15124:15125 CertiOS.framework.proof.simulation <> sd var
R15179:15196 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15164:15167 CertiOS.framework.auxlibs.Maps <> join meth
R15231:15248 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15197:15200 CertiOS.framework.logic.inferules <> satp def
R15225:15227 CertiOS.framework.logic.assertion <> INV def
R15229:15229 CertiOS.framework.proof.simulation <> I var
R15203:15212 CertiOS.framework.logic.assertion <> substaskst def
R15216:15217 CertiOS.framework.proof.simulation <> Ms var
R15214:15214 CertiOS.framework.proof.simulation <> o var
R15276:15293 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15249:15252 CertiOS.framework.logic.inferules <> satp def
R15260:15266 CertiOS.framework.logic.inferules <> CurLINV def
R15274:15274 CertiOS.framework.proof.simulation <> t var
R15268:15272 CertiOS.framework.proof.simulation <> lasrt var
R15254:15254 CertiOS.framework.proof.simulation <> o var
R15294:15296 CertiOS.framework.logic.assertion <> sat def
R15316:15316 CertiOS.framework.proof.simulation <> q var
R15318:15318 CertiOS.framework.proof.simulation <> v var
R15298:15298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15306:15306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15313:15313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15299:15299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15301:15302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15305:15305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15300:15300 CertiOS.framework.proof.simulation <> o var
R15033:15036 CertiOS.framework.auxlibs.Maps <> join meth
R15043:15044 CertiOS.framework.proof.simulation <> OO var
R15040:15041 CertiOS.framework.proof.simulation <> Os var
R15038:15038 CertiOS.framework.proof.simulation <> O var
R14997:15004 CertiOS.framework.auxlibs.Maps <> disjoint def
R15017:15018 CertiOS.framework.proof.simulation <> Ms var
R15007:15012 CertiOS.framework.proof.simulation <> getmem def
R15014:15014 CertiOS.framework.proof.simulation <> o var
R14951:14954 CertiOS.framework.logic.inferules <> satp def
R14978:14980 CertiOS.framework.logic.assertion <> INV def
R14982:14982 CertiOS.framework.proof.simulation <> I var
R14974:14975 CertiOS.framework.proof.simulation <> Os var
R14957:14966 CertiOS.framework.logic.assertion <> substaskst def
R14970:14971 CertiOS.framework.proof.simulation <> Ms var
R14968:14968 CertiOS.framework.proof.simulation <> o var
R14902:14904 Coq.Init.Logic <> :type_scope:x_'='_x not
R14901:14901 CertiOS.framework.proof.simulation <> C var
R14905:14905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14920:14921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14936:14936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14906:14909 CertiOS.framework.model.language <> curs constr
R14912:14916 CertiOS.framework.model.language <> sskip constr
R14918:14918 CertiOS.framework.proof.simulation <> v var
R14922:14922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14928:14929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14935:14935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14923:14927 CertiOS.framework.model.language <> kenil constr
R14930:14934 CertiOS.framework.model.language <> kstop constr
R13740:13753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13787:13800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13823:13837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13850:13877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14831:14842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13878:13884 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13891:13891 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13893:13893 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13897:13897 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13900:13900 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13903:13903 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13906:13906 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13910:13910 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13913:13913 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13916:13933 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R13959:13976 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13940:13942 Coq.Init.Logic <> :type_scope:x_'='_x not
R13943:13950 CertiOS.framework.model.language <> spec_seq constr
R13952:13956 CertiOS.framework.model.language <> sched constr
R14010:14027 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13977:13986 CertiOS.framework.logic.inferules <> hmstepstar syndef
R13997:13998 CertiOS.framework.proof.simulation <> OO var
R13991:13995 CertiOS.framework.proof.simulation <> gamma var
R13988:13989 CertiOS.framework.proof.simulation <> sd var
R14043:14060 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14028:14034 CertiOS.framework.logic.assertion <> joinmem def
R14042:14042 CertiOS.framework.proof.simulation <> o var
R14076:14092 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14061:14064 CertiOS.framework.auxlibs.Maps <> join meth
R14107:14124 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14093:14096 CertiOS.framework.auxlibs.Maps <> join meth
R14160:14177 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14125:14128 CertiOS.framework.logic.inferules <> satp def
R14154:14156 CertiOS.framework.logic.assertion <> INV def
R14158:14158 CertiOS.framework.proof.simulation <> I var
R14131:14140 CertiOS.framework.logic.assertion <> substaskst def
R14144:14145 CertiOS.framework.proof.simulation <> Ms var
R14142:14142 CertiOS.framework.proof.simulation <> o var
R14217:14234 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14178:14181 CertiOS.framework.logic.inferules <> satp def
R14206:14211 CertiOS.framework.logic.assertion <> SWINVt def
R14215:14215 CertiOS.framework.proof.simulation <> t var
R14213:14213 CertiOS.framework.proof.simulation <> I var
R14184:14193 CertiOS.framework.logic.assertion <> substaskst def
R14195:14195 CertiOS.framework.proof.simulation <> o var
R14282:14317 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14814:14830 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14235:14238 CertiOS.framework.logic.inferules <> satp def
R14248:14250 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R14254:14255 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R14272:14275 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R14256:14259 CertiOS.framework.logic.inferules <> LINV def
R14269:14271 CertiOS.framework.proof.simulation <> lg' var
R14267:14267 CertiOS.framework.proof.simulation <> t var
R14261:14265 CertiOS.framework.proof.simulation <> lasrt var
R14276:14280 CertiOS.framework.logic.assertion <> Atrue constr
R14318:14337 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14711:14767 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R14384:14428 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14690:14710 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14338:14341 CertiOS.framework.logic.inferules <> satp def
R14365:14375 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R14382:14382 CertiOS.framework.proof.simulation <> t var
R14380:14380 CertiOS.framework.proof.simulation <> x var
R14377:14378 CertiOS.framework.proof.simulation <> sd var
R14344:14353 CertiOS.framework.logic.assertion <> substaskst def
R14355:14355 CertiOS.framework.proof.simulation <> o var
R14516:14540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14558:14583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14599:14624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14625:14634 CertiOS.framework.proof.simulation <> MethSimMod ind
R14689:14689 CertiOS.framework.proof.simulation <> t var
R14687:14687 CertiOS.framework.proof.simulation <> q var
R14684:14685 CertiOS.framework.proof.simulation <> ri var
R14682:14682 CertiOS.framework.proof.simulation <> r var
R14680:14680 CertiOS.framework.proof.simulation <> I var
R14674:14678 CertiOS.framework.proof.simulation <> lasrt var
R14670:14672 CertiOS.framework.proof.simulation <> O'' var
R14665:14666 CertiOS.framework.proof.simulation <> o' var
R14644:14644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14649:14650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14662:14662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14645:14648 CertiOS.framework.model.language <> ::'SKIP' not
R14651:14651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14657:14658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14661:14661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14652:14656 CertiOS.framework.model.language <> kenil constr
R14659:14660 CertiOS.framework.proof.simulation <> ks var
R14641:14642 CertiOS.framework.proof.simulation <> sd var
R14636:14639 CertiOS.framework.proof.simulation <> spec var
R14584:14587 CertiOS.framework.auxlibs.Maps <> join meth
R14596:14598 CertiOS.framework.proof.simulation <> O'' var
R14592:14594 CertiOS.framework.proof.simulation <> Oc' var
R14541:14547 CertiOS.framework.logic.assertion <> joinmem def
R14556:14557 CertiOS.framework.proof.simulation <> o' var
R14552:14554 CertiOS.framework.proof.simulation <> Mc' var
R14475:14478 CertiOS.framework.logic.inferules <> satp def
R14505:14510 CertiOS.framework.logic.assertion <> SWINVt def
R14514:14514 CertiOS.framework.proof.simulation <> t var
R14512:14512 CertiOS.framework.proof.simulation <> I var
R14500:14502 CertiOS.framework.proof.simulation <> Oc' var
R14481:14490 CertiOS.framework.logic.assertion <> substaskst def
R14495:14497 CertiOS.framework.proof.simulation <> Mc' var
R14492:14492 CertiOS.framework.proof.simulation <> o var
R14768:14771 CertiOS.framework.logic.inferules <> satp def
R14796:14805 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R14812:14812 CertiOS.framework.proof.simulation <> t var
R14810:14810 CertiOS.framework.proof.simulation <> x var
R14807:14808 CertiOS.framework.proof.simulation <> sd var
R14774:14783 CertiOS.framework.logic.assertion <> substaskst def
R14785:14785 CertiOS.framework.proof.simulation <> o var
R13838:13841 CertiOS.framework.auxlibs.Maps <> join meth
R13848:13849 CertiOS.framework.proof.simulation <> OO var
R13845:13846 CertiOS.framework.proof.simulation <> Os var
R13843:13843 CertiOS.framework.proof.simulation <> O var
R13801:13808 CertiOS.framework.auxlibs.Maps <> disjoint def
R13821:13822 CertiOS.framework.proof.simulation <> Ms var
R13811:13816 CertiOS.framework.proof.simulation <> getmem def
R13818:13818 CertiOS.framework.proof.simulation <> o var
R13754:13757 CertiOS.framework.logic.inferules <> satp def
R13781:13783 CertiOS.framework.logic.assertion <> INV def
R13785:13785 CertiOS.framework.proof.simulation <> I var
R13777:13778 CertiOS.framework.proof.simulation <> Os var
R13760:13769 CertiOS.framework.logic.assertion <> substaskst def
R13773:13774 CertiOS.framework.proof.simulation <> Ms var
R13771:13771 CertiOS.framework.proof.simulation <> o var
R13699:13701 Coq.Init.Logic <> :type_scope:x_'='_x not
R13698:13698 CertiOS.framework.proof.simulation <> C var
R13702:13702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13726:13727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13739:13739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13703:13706 CertiOS.framework.model.language <> curs constr
R13709:13713 CertiOS.framework.model.language <> sprim constr
R13716:13721 CertiOS.framework.model.language <> switch constr
R13723:13723 CertiOS.framework.proof.simulation <> x var
R13728:13728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13734:13735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13738:13738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13729:13733 CertiOS.framework.model.language <> kenil constr
R13736:13737 CertiOS.framework.proof.simulation <> ks var
R11299:11312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11347:11359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11382:11396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11409:11437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12604:12615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11438:11444 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11451:11451 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11455:11455 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11458:11458 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11460:11460 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11463:11463 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11467:11467 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11470:11470 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11473:11489 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R11490:11496 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R11500:11500 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R11505:11505 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R11508:11508 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R11515:11532 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R11566:11585 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11533:11542 CertiOS.framework.logic.inferules <> hmstepstar syndef
R11553:11554 CertiOS.framework.proof.simulation <> OO var
R11547:11551 CertiOS.framework.proof.simulation <> gamma var
R11544:11545 CertiOS.framework.proof.simulation <> sd var
R11600:11619 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11586:11592 CertiOS.framework.logic.assertion <> joinmem def
R11599:11599 CertiOS.framework.proof.simulation <> o var
R11635:11654 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11620:11623 CertiOS.framework.auxlibs.Maps <> join meth
R11668:11686 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11655:11658 CertiOS.framework.auxlibs.Maps <> join meth
R11711:11730 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11704:11706 Coq.Init.Logic <> :type_scope:x_'='_x not
R11687:11697 CertiOS.framework.model.opsem <> tl_vl_match def
R11702:11703 CertiOS.framework.proof.simulation <> vl var
R11699:11700 CertiOS.framework.proof.simulation <> tl var
R11707:11710 Coq.Init.Datatypes <> true constr
R11776:11795 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11737:11739 Coq.Init.Logic <> :type_scope:x_'='_x not
R11731:11734 CertiOS.framework.proof.simulation <> spec var
R11736:11736 CertiOS.framework.proof.simulation <> f var
R11740:11743 Coq.Init.Datatypes <> Some constr
R11745:11745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11749:11750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11755:11757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11775:11775 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11758:11758 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11761:11762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11774:11774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11763:11770 Coq.Lists.List <> rev def
R11772:11773 CertiOS.framework.proof.simulation <> tl var
R11850:11870 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11796:11798 CertiOS.framework.logic.assertion <> sat def
R11818:11824 CertiOS.framework.logic.assertion <> getasrt proj
R11847:11847 CertiOS.framework.proof.simulation <> t var
R11832:11834 Coq.Lists.List <> rev def
R11836:11837 CertiOS.framework.proof.simulation <> vl var
R11800:11800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11803:11804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11807:11808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11815:11815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11899:11919 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11871:11874 CertiOS.framework.logic.inferules <> satp def
R11883:11889 CertiOS.framework.logic.inferules <> CurLINV def
R11897:11897 CertiOS.framework.proof.simulation <> t var
R11891:11895 CertiOS.framework.proof.simulation <> lasrt var
R11954:11993 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12586:12603 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11920:11923 CertiOS.framework.logic.inferules <> satp def
R11948:11950 CertiOS.framework.logic.assertion <> INV def
R11952:11952 CertiOS.framework.proof.simulation <> I var
R11926:11935 CertiOS.framework.logic.assertion <> substaskst def
R11939:11940 CertiOS.framework.proof.simulation <> Ms var
R11937:11937 CertiOS.framework.proof.simulation <> o var
R12096:12143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12564:12585 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12172:12224 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12539:12563 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12144:12147 CertiOS.framework.logic.inferules <> satp def
R12156:12162 CertiOS.framework.logic.inferules <> CurLINV def
R12170:12170 CertiOS.framework.proof.simulation <> t var
R12164:12168 CertiOS.framework.proof.simulation <> lasrt var
R12152:12153 CertiOS.framework.proof.simulation <> O1 var
R12149:12150 CertiOS.framework.proof.simulation <> o1 var
R12346:12375 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12390:12419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12430:12459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12460:12469 CertiOS.framework.proof.simulation <> MethSimMod ind
R12538:12538 CertiOS.framework.proof.simulation <> t var
R12536:12536 CertiOS.framework.proof.simulation <> q var
R12533:12534 CertiOS.framework.proof.simulation <> ri var
R12531:12531 CertiOS.framework.proof.simulation <> r var
R12529:12529 CertiOS.framework.proof.simulation <> I var
R12523:12527 CertiOS.framework.proof.simulation <> lasrt var
R12519:12521 CertiOS.framework.proof.simulation <> O'' var
R12511:12517 CertiOS.framework.proof.simulation <> gamma'' var
R12508:12509 CertiOS.framework.proof.simulation <> o' var
R12479:12479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12494:12495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12506:12506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12480:12483 CertiOS.framework.model.language <> curs constr
R12486:12490 CertiOS.framework.model.language <> sskip constr
R12492:12492 CertiOS.framework.proof.simulation <> v var
R12496:12496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12502:12502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12505:12505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12497:12501 CertiOS.framework.model.language <> kenil constr
R12503:12504 CertiOS.framework.proof.simulation <> ks var
R12476:12477 CertiOS.framework.proof.simulation <> sd var
R12471:12474 CertiOS.framework.proof.simulation <> spec var
R12420:12424 CertiOS.framework.model.language <> eqenv def
R12428:12429 CertiOS.framework.proof.simulation <> o' var
R12426:12426 CertiOS.framework.proof.simulation <> o var
R12376:12379 CertiOS.framework.auxlibs.Maps <> join meth
R12387:12389 CertiOS.framework.proof.simulation <> O'' var
R12381:12382 CertiOS.framework.proof.simulation <> O1 var
R12331:12337 CertiOS.framework.logic.assertion <> joinmem def
R12344:12345 CertiOS.framework.proof.simulation <> o' var
R12339:12340 CertiOS.framework.proof.simulation <> o1 var
R12040:12042 CertiOS.framework.logic.assertion <> sat def
R12061:12067 CertiOS.framework.logic.assertion <> getasrt proj
R12093:12093 CertiOS.framework.proof.simulation <> t var
R12084:12084 CertiOS.framework.proof.simulation <> v var
R12076:12078 Coq.Lists.List <> rev def
R12080:12081 CertiOS.framework.proof.simulation <> vl var
R12044:12044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12047:12047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12050:12050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12058:12058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12045:12046 CertiOS.framework.proof.simulation <> o1 var
R12048:12049 CertiOS.framework.proof.simulation <> O1 var
R12051:12057 CertiOS.framework.proof.simulation <> gamma'' var
R11397:11400 CertiOS.framework.auxlibs.Maps <> join meth
R11407:11408 CertiOS.framework.proof.simulation <> OO var
R11404:11405 CertiOS.framework.proof.simulation <> Os var
R11402:11402 CertiOS.framework.proof.simulation <> O var
R11360:11367 CertiOS.framework.auxlibs.Maps <> disjoint def
R11380:11381 CertiOS.framework.proof.simulation <> Ms var
R11370:11375 CertiOS.framework.proof.simulation <> getmem def
R11377:11377 CertiOS.framework.proof.simulation <> o var
R11313:11316 CertiOS.framework.logic.inferules <> satp def
R11341:11343 CertiOS.framework.logic.assertion <> INV def
R11345:11345 CertiOS.framework.proof.simulation <> I var
R11337:11338 CertiOS.framework.proof.simulation <> Os var
R11319:11328 CertiOS.framework.logic.assertion <> substaskst def
R11333:11334 CertiOS.framework.proof.simulation <> Ms var
R11330:11330 CertiOS.framework.proof.simulation <> o var
R11261:11263 Coq.Init.Logic <> :type_scope:x_'='_x not
R11260:11260 CertiOS.framework.proof.simulation <> C var
R11264:11264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11286:11287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11298:11298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11265:11268 CertiOS.framework.model.language <> curs constr
R11271:11276 CertiOS.framework.model.language <> sfexec constr
R11283:11284 CertiOS.framework.proof.simulation <> tl var
R11280:11281 CertiOS.framework.proof.simulation <> vl var
R11278:11278 CertiOS.framework.proof.simulation <> f var
R11288:11288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11294:11294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11297:11297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11289:11293 CertiOS.framework.model.language <> kenil constr
R11295:11296 CertiOS.framework.proof.simulation <> ks var
R10689:10702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10736:10749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10767:10781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10794:10807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10830:10858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11183:11194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10859:10865 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10872:10872 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10876:10877 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10880:10880 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10884:10885 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10888:10888 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10892:10908 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R10942:10959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10909:10918 CertiOS.framework.logic.inferules <> hmstepstar syndef
R10929:10930 CertiOS.framework.proof.simulation <> OO var
R10923:10927 CertiOS.framework.proof.simulation <> gamma var
R10920:10921 CertiOS.framework.proof.simulation <> sd var
R10980:10998 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10960:10965 CertiOS.framework.proof.simulation <> joinm2 def
R10977:10979 CertiOS.framework.proof.simulation <> o2' var
R10974:10975 CertiOS.framework.proof.simulation <> Mf var
R11014:11031 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10999:11002 CertiOS.framework.auxlibs.Maps <> join meth
R11069:11085 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11032:11035 CertiOS.framework.logic.inferules <> satp def
R11063:11065 CertiOS.framework.logic.assertion <> INV def
R11067:11067 CertiOS.framework.proof.simulation <> I var
R11038:11047 CertiOS.framework.logic.assertion <> substaskst def
R11114:11131 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11086:11089 CertiOS.framework.logic.inferules <> satp def
R11098:11104 CertiOS.framework.logic.inferules <> CurLINV def
R11112:11112 CertiOS.framework.proof.simulation <> t var
R11106:11110 CertiOS.framework.proof.simulation <> lasrt var
R11132:11141 CertiOS.framework.proof.simulation <> MethSimMod ind
R11182:11182 CertiOS.framework.proof.simulation <> t var
R11180:11180 CertiOS.framework.proof.simulation <> q var
R11177:11178 CertiOS.framework.proof.simulation <> ri var
R11175:11175 CertiOS.framework.proof.simulation <> r var
R11173:11173 CertiOS.framework.proof.simulation <> I var
R11167:11171 CertiOS.framework.proof.simulation <> lasrt var
R11151:11152 CertiOS.framework.proof.simulation <> C' var
R11148:11149 CertiOS.framework.proof.simulation <> sd var
R11143:11146 CertiOS.framework.proof.simulation <> spec var
R10808:10815 CertiOS.framework.model.opsem <> loststep ind
R10827:10829 CertiOS.framework.proof.simulation <> o2' var
R10824:10825 CertiOS.framework.proof.simulation <> C' var
R10821:10822 CertiOS.framework.proof.simulation <> o2 var
R10819:10819 CertiOS.framework.proof.simulation <> C var
R10817:10817 CertiOS.framework.proof.simulation <> p var
R10782:10785 CertiOS.framework.auxlibs.Maps <> join meth
R10792:10793 CertiOS.framework.proof.simulation <> OO var
R10789:10790 CertiOS.framework.proof.simulation <> Os var
R10787:10787 CertiOS.framework.proof.simulation <> O var
R10750:10755 CertiOS.framework.proof.simulation <> joinm2 def
R10765:10766 CertiOS.framework.proof.simulation <> o2 var
R10762:10763 CertiOS.framework.proof.simulation <> Mf var
R10759:10760 CertiOS.framework.proof.simulation <> Ms var
R10757:10757 CertiOS.framework.proof.simulation <> o var
R10703:10706 CertiOS.framework.logic.inferules <> satp def
R10730:10732 CertiOS.framework.logic.assertion <> INV def
R10734:10734 CertiOS.framework.proof.simulation <> I var
R10726:10727 CertiOS.framework.proof.simulation <> Os var
R10709:10718 CertiOS.framework.logic.assertion <> substaskst def
R10722:10723 CertiOS.framework.proof.simulation <> Ms var
R10720:10720 CertiOS.framework.proof.simulation <> o var
R10679:10679 Coq.Init.Logic <> :type_scope:'~'_x not
R10680:10686 CertiOS.framework.model.opsem <> IsFcall def
R10688:10688 CertiOS.framework.proof.simulation <> C var
R20960:20969 CertiOS.framework.proof.simulation <> MethSimMod coind
not 20855:20855 <> ::'{['_x_','_x_','_x_','_x_','_x_','_x_','_x_']}'_'||-'_x_'('_x_','_x_')'_'<_msim'_'('_x_','_x_')'
ind 21039:21045 <> MethSim
constr 21197:21204 <> meth_sim
R21057:21060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21068:21071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21076:21079 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21086:21089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21095:21098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21105:21108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21117:21142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21146:21149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21157:21160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21165:21168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21176:21179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21183:21186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21180:21182 CertiOS.framework.auxlibs.Modules <> tid def
R21169:21175 CertiOS.framework.logic.assertion <> retasrt def
R21161:21164 CertiOS.framework.logic.assertion <> asrt ind
R21150:21156 CertiOS.framework.logic.assertion <> retasrt def
R21143:21145 CertiOS.framework.logic.assertion <> Inv def
R21109:21116 CertiOS.framework.logic.inferules <> LocalInv def
R21099:21104 CertiOS.framework.model.language <> osabst def
R21090:21094 CertiOS.framework.logic.assertion <> absop def
R21080:21085 CertiOS.framework.model.language <> taskst def
R21072:21075 CertiOS.framework.model.language <> code def
R21061:21067 CertiOS.framework.model.language <> ossched def
R21049:21056 CertiOS.framework.model.language <> progunit def
R21222:21229 CertiOS.framework.model.language <> progunit def
R21238:21241 CertiOS.framework.model.language <> code def
R21262:21266 CertiOS.framework.logic.assertion <> absop def
R21272:21277 CertiOS.framework.model.language <> osabst def
R21283:21285 CertiOS.framework.logic.assertion <> Inv def
R21305:21311 CertiOS.framework.logic.assertion <> retasrt def
R21319:21322 CertiOS.framework.logic.assertion <> asrt ind
R21329:21334 CertiOS.framework.model.language <> taskst def
R21352:21361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21889:21905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21906:21915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23098:23114 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23115:23124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23587:23603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23604:23613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24132:24148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24149:24158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24689:24705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24706:24715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25240:25256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25257:25266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25470:25486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25487:25496 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26544:26560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26561:26570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27953:27969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27970:27976 CertiOS.framework.proof.simulation <> MethSim ind
R28010:28010 CertiOS.framework.proof.simulation <> t var
R28008:28008 CertiOS.framework.proof.simulation <> q var
R28005:28006 CertiOS.framework.proof.simulation <> ri var
R28003:28003 CertiOS.framework.proof.simulation <> r var
R28001:28001 CertiOS.framework.proof.simulation <> I var
R27995:27999 CertiOS.framework.proof.simulation <> lasrt var
R27993:27993 CertiOS.framework.proof.simulation <> O var
R27987:27991 CertiOS.framework.proof.simulation <> gamma var
R27985:27985 CertiOS.framework.proof.simulation <> o var
R27983:27983 CertiOS.framework.proof.simulation <> C var
R27980:27981 CertiOS.framework.proof.simulation <> sd var
R27978:27978 CertiOS.framework.proof.simulation <> p var
R26646:26658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26692:26705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26728:26742 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26755:26781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27941:27952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26782:26788 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26795:26795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26799:26799 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26801:26801 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26804:26805 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26809:26809 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26814:26814 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26817:26817 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26821:26837 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_','_x not
R26883:26900 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26844:26847 Coq.Init.Logic <> :type_scope:x_'='_x not
R26882:26882 Coq.Init.Logic <> :type_scope:x_'='_x not
R26848:26855 CertiOS.framework.model.language <> spec_seq constr
R26858:26865 CertiOS.framework.model.language <> spec_del constr
R26868:26873 CertiOS.framework.model.memory <> Vint32 constr
R26940:26959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26923:26925 Coq.Init.Logic <> :type_scope:x_'='_x not
R26901:26907 CertiOS.framework.model.opsem <> evalval def
R26912:26919 CertiOS.framework.model.language <> get_smem def
R26921:26921 CertiOS.framework.proof.simulation <> o var
R26909:26909 CertiOS.framework.proof.simulation <> e var
R26926:26929 Coq.Init.Datatypes <> Some constr
R26932:26935 CertiOS.framework.model.memory <> Vptr constr
R26993:27028 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27925:27940 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26960:26969 CertiOS.framework.logic.inferules <> hmstepstar syndef
R26980:26981 CertiOS.framework.proof.simulation <> OO var
R26974:26978 CertiOS.framework.proof.simulation <> gamma var
R26971:26972 CertiOS.framework.proof.simulation <> sd var
R27029:27048 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27309:27384 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27907:27924 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27083:27104 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27049:27064 CertiOS.framework.model.opsem <> abs_delself_step def
R27075:27075 CertiOS.framework.proof.simulation <> t var
R27121:27143 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27105:27108 CertiOS.framework.auxlibs.Maps <> join meth
R27179:27200 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27144:27147 CertiOS.framework.logic.inferules <> satp def
R27173:27175 CertiOS.framework.logic.assertion <> INV def
R27177:27177 CertiOS.framework.proof.simulation <> I var
R27150:27159 CertiOS.framework.logic.assertion <> substaskst def
R27163:27164 CertiOS.framework.proof.simulation <> Ms var
R27161:27161 CertiOS.framework.proof.simulation <> o var
R27228:27249 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27201:27204 CertiOS.framework.logic.inferules <> satp def
R27212:27218 CertiOS.framework.logic.inferules <> CurLINV def
R27226:27226 CertiOS.framework.proof.simulation <> t var
R27220:27224 CertiOS.framework.proof.simulation <> lasrt var
R27206:27206 CertiOS.framework.proof.simulation <> o var
R27250:27256 CertiOS.framework.proof.simulation <> MethSim ind
R27308:27308 CertiOS.framework.proof.simulation <> t var
R27306:27306 CertiOS.framework.proof.simulation <> q var
R27303:27304 CertiOS.framework.proof.simulation <> ri var
R27301:27301 CertiOS.framework.proof.simulation <> r var
R27299:27299 CertiOS.framework.proof.simulation <> I var
R27293:27297 CertiOS.framework.proof.simulation <> lasrt var
R27286:27286 CertiOS.framework.proof.simulation <> o var
R27266:27266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27271:27272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27283:27283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27267:27270 CertiOS.framework.model.language <> ::'SKIP' not
R27273:27273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27279:27279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27282:27282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27274:27278 CertiOS.framework.model.language <> kenil constr
R27280:27281 CertiOS.framework.proof.simulation <> ks var
R27262:27263 CertiOS.framework.proof.simulation <> sd var
R27259:27259 CertiOS.framework.proof.simulation <> p var
R27420:27441 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27385:27401 CertiOS.framework.model.opsem <> abs_delother_step def
R27412:27412 CertiOS.framework.proof.simulation <> t var
R27458:27480 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27442:27445 CertiOS.framework.auxlibs.Maps <> join meth
R27515:27536 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27481:27484 CertiOS.framework.logic.inferules <> satp def
R27509:27511 CertiOS.framework.logic.assertion <> INV def
R27513:27513 CertiOS.framework.proof.simulation <> I var
R27487:27496 CertiOS.framework.logic.assertion <> substaskst def
R27500:27501 CertiOS.framework.proof.simulation <> Ms var
R27498:27498 CertiOS.framework.proof.simulation <> o var
R27564:27585 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27537:27540 CertiOS.framework.logic.inferules <> satp def
R27548:27554 CertiOS.framework.logic.inferules <> CurLINV def
R27562:27562 CertiOS.framework.proof.simulation <> t var
R27556:27560 CertiOS.framework.proof.simulation <> lasrt var
R27542:27542 CertiOS.framework.proof.simulation <> o var
R27711:27737 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27755:27780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27797:27822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27823:27829 CertiOS.framework.proof.simulation <> MethSim ind
R27884:27884 CertiOS.framework.proof.simulation <> t var
R27882:27882 CertiOS.framework.proof.simulation <> q var
R27879:27880 CertiOS.framework.proof.simulation <> ri var
R27877:27877 CertiOS.framework.proof.simulation <> r var
R27875:27875 CertiOS.framework.proof.simulation <> I var
R27869:27873 CertiOS.framework.proof.simulation <> lasrt var
R27864:27866 CertiOS.framework.proof.simulation <> O'' var
R27859:27860 CertiOS.framework.proof.simulation <> o' var
R27839:27839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27844:27845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27856:27856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27840:27843 CertiOS.framework.model.language <> ::'SKIP' not
R27846:27846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27852:27852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27855:27855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27847:27851 CertiOS.framework.model.language <> kenil constr
R27853:27854 CertiOS.framework.proof.simulation <> ks var
R27835:27836 CertiOS.framework.proof.simulation <> sd var
R27832:27832 CertiOS.framework.proof.simulation <> p var
R27781:27784 CertiOS.framework.auxlibs.Maps <> join meth
R27794:27796 CertiOS.framework.proof.simulation <> O'' var
R27789:27792 CertiOS.framework.proof.simulation <> Odel var
R27738:27744 CertiOS.framework.logic.assertion <> joinmem def
R27753:27754 CertiOS.framework.proof.simulation <> o' var
R27748:27751 CertiOS.framework.proof.simulation <> Mdel var
R27746:27746 CertiOS.framework.proof.simulation <> o var
R27655:27658 CertiOS.framework.logic.inferules <> satp def
R27687:27689 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R27692:27693 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R27694:27697 CertiOS.framework.logic.inferules <> LINV def
R27708:27709 CertiOS.framework.proof.simulation <> lg var
R27699:27703 CertiOS.framework.proof.simulation <> lasrt var
R27680:27683 CertiOS.framework.proof.simulation <> Odel var
R27661:27670 CertiOS.framework.logic.assertion <> substaskst def
R27674:27677 CertiOS.framework.proof.simulation <> Mdel var
R27672:27672 CertiOS.framework.proof.simulation <> o var
R26743:26746 CertiOS.framework.auxlibs.Maps <> join meth
R26753:26754 CertiOS.framework.proof.simulation <> OO var
R26750:26751 CertiOS.framework.proof.simulation <> Os var
R26748:26748 CertiOS.framework.proof.simulation <> O var
R26706:26713 CertiOS.framework.auxlibs.Maps <> disjoint def
R26726:26727 CertiOS.framework.proof.simulation <> Ms var
R26716:26721 CertiOS.framework.proof.simulation <> getmem def
R26723:26723 CertiOS.framework.proof.simulation <> o var
R26659:26662 CertiOS.framework.logic.inferules <> satp def
R26686:26688 CertiOS.framework.logic.assertion <> INV def
R26690:26690 CertiOS.framework.proof.simulation <> I var
R26682:26683 CertiOS.framework.proof.simulation <> Os var
R26665:26674 CertiOS.framework.logic.assertion <> substaskst def
R26678:26679 CertiOS.framework.proof.simulation <> Ms var
R26676:26676 CertiOS.framework.proof.simulation <> o var
R26606:26608 Coq.Init.Logic <> :type_scope:x_'='_x not
R26605:26605 CertiOS.framework.proof.simulation <> C var
R26609:26609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26634:26634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26645:26645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26610:26613 CertiOS.framework.model.language <> curs constr
R26616:26620 CertiOS.framework.model.language <> sprim constr
R26623:26629 CertiOS.framework.model.language <> stkfree constr
R26631:26631 CertiOS.framework.proof.simulation <> e var
R26635:26635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26641:26641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26644:26644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26636:26640 CertiOS.framework.model.language <> kenil constr
R26642:26643 CertiOS.framework.proof.simulation <> ks var
R25587:25599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25633:25646 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25669:25682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25695:25722 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26532:26543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25723:25729 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25736:25736 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25739:25739 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25742:25742 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25745:25745 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25749:25749 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25751:25752 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25756:25757 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25762:25762 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25765:25782 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R25783:25789 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25794:25794 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25797:25797 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25801:25801 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25804:25804 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25809:25827 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R25879:25898 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25834:25837 Coq.Init.Logic <> :type_scope:x_'='_x not
R25878:25878 Coq.Init.Logic <> :type_scope:x_'='_x not
R25838:25845 CertiOS.framework.model.language <> spec_seq constr
R25848:25855 CertiOS.framework.model.language <> spec_crt constr
R25864:25869 CertiOS.framework.model.memory <> Vint32 constr
R25932:25951 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25922:25924 Coq.Init.Logic <> :type_scope:x_'='_x not
R25899:25905 CertiOS.framework.model.opsem <> evalval def
R25911:25918 CertiOS.framework.model.language <> get_smem def
R25920:25920 CertiOS.framework.proof.simulation <> o var
R25907:25908 CertiOS.framework.proof.simulation <> e1 var
R25925:25928 Coq.Init.Datatypes <> Some constr
R25985:26007 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25975:25977 Coq.Init.Logic <> :type_scope:x_'='_x not
R25952:25958 CertiOS.framework.model.opsem <> evalval def
R25964:25971 CertiOS.framework.model.language <> get_smem def
R25973:25973 CertiOS.framework.proof.simulation <> o var
R25960:25961 CertiOS.framework.proof.simulation <> e2 var
R25978:25981 Coq.Init.Datatypes <> Some constr
R26048:26068 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26031:26033 Coq.Init.Logic <> :type_scope:x_'='_x not
R26008:26014 CertiOS.framework.model.opsem <> evalval def
R26020:26027 CertiOS.framework.model.language <> get_smem def
R26029:26029 CertiOS.framework.proof.simulation <> o var
R26016:26017 CertiOS.framework.proof.simulation <> e3 var
R26034:26037 Coq.Init.Datatypes <> Some constr
R26040:26043 CertiOS.framework.model.memory <> Vptr constr
R26102:26121 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26069:26078 CertiOS.framework.logic.inferules <> hmstepstar syndef
R26089:26090 CertiOS.framework.proof.simulation <> OO var
R26083:26087 CertiOS.framework.proof.simulation <> gamma var
R26080:26081 CertiOS.framework.proof.simulation <> sd var
R26152:26171 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26122:26133 CertiOS.framework.model.opsem <> abs_crt_step def
R26144:26144 CertiOS.framework.proof.simulation <> t var
R26189:26208 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26172:26178 CertiOS.framework.logic.assertion <> joinmem def
R26188:26188 CertiOS.framework.proof.simulation <> o var
R26225:26244 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26209:26212 CertiOS.framework.auxlibs.Maps <> join meth
R26260:26279 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26245:26248 CertiOS.framework.auxlibs.Maps <> join meth
R26314:26333 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26280:26283 CertiOS.framework.logic.inferules <> satp def
R26308:26310 CertiOS.framework.logic.assertion <> INV def
R26312:26312 CertiOS.framework.proof.simulation <> I var
R26286:26295 CertiOS.framework.logic.assertion <> substaskst def
R26299:26300 CertiOS.framework.proof.simulation <> Ms var
R26297:26297 CertiOS.framework.proof.simulation <> o var
R26362:26381 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26334:26337 CertiOS.framework.logic.inferules <> satp def
R26346:26352 CertiOS.framework.logic.inferules <> CurLINV def
R26360:26360 CertiOS.framework.proof.simulation <> t var
R26354:26358 CertiOS.framework.proof.simulation <> lasrt var
R26454:26473 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26382:26385 CertiOS.framework.logic.inferules <> satp def
R26429:26430 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R26413:26417 CertiOS.framework.proof.simulation <> lasrt var
R26422:26428 CertiOS.framework.logic.inferules <> init_lg def
R26431:26432 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R26451:26452 CertiOS.framework.logic.assertion <> ::'[|'_x_'|]' not
R26433:26444 CertiOS.framework.logic.inferules <> GoodLInvAsrt def
R26446:26450 CertiOS.framework.proof.simulation <> lasrt var
R26388:26397 CertiOS.framework.logic.assertion <> substaskst def
R26399:26399 CertiOS.framework.proof.simulation <> o var
R26474:26480 CertiOS.framework.proof.simulation <> MethSim ind
R26531:26531 CertiOS.framework.proof.simulation <> t var
R26529:26529 CertiOS.framework.proof.simulation <> q var
R26526:26527 CertiOS.framework.proof.simulation <> ri var
R26524:26524 CertiOS.framework.proof.simulation <> r var
R26522:26522 CertiOS.framework.proof.simulation <> I var
R26516:26520 CertiOS.framework.proof.simulation <> lasrt var
R26488:26488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26493:26494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26505:26505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26489:26492 CertiOS.framework.model.language <> ::'SKIP' not
R26495:26495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26501:26501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26504:26504 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26496:26500 CertiOS.framework.model.language <> kenil constr
R26502:26503 CertiOS.framework.proof.simulation <> ks var
R26484:26485 CertiOS.framework.proof.simulation <> sd var
R26482:26482 CertiOS.framework.proof.simulation <> p var
R25683:25686 CertiOS.framework.auxlibs.Maps <> join meth
R25693:25694 CertiOS.framework.proof.simulation <> OO var
R25690:25691 CertiOS.framework.proof.simulation <> Os var
R25688:25688 CertiOS.framework.proof.simulation <> O var
R25647:25654 CertiOS.framework.auxlibs.Maps <> disjoint def
R25667:25668 CertiOS.framework.proof.simulation <> Ms var
R25657:25662 CertiOS.framework.proof.simulation <> getmem def
R25664:25664 CertiOS.framework.proof.simulation <> o var
R25600:25603 CertiOS.framework.logic.inferules <> satp def
R25627:25629 CertiOS.framework.logic.assertion <> INV def
R25631:25631 CertiOS.framework.proof.simulation <> I var
R25623:25624 CertiOS.framework.proof.simulation <> Os var
R25606:25615 CertiOS.framework.logic.assertion <> substaskst def
R25619:25620 CertiOS.framework.proof.simulation <> Ms var
R25617:25617 CertiOS.framework.proof.simulation <> o var
R25540:25542 Coq.Init.Logic <> :type_scope:x_'='_x not
R25539:25539 CertiOS.framework.proof.simulation <> C var
R25543:25543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25575:25575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25586:25586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25544:25547 CertiOS.framework.model.language <> curs constr
R25550:25554 CertiOS.framework.model.language <> sprim constr
R25557:25563 CertiOS.framework.model.language <> stkinit constr
R25571:25572 CertiOS.framework.proof.simulation <> e3 var
R25568:25569 CertiOS.framework.proof.simulation <> e2 var
R25565:25566 CertiOS.framework.proof.simulation <> e1 var
R25576:25576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25582:25582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25585:25585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25577:25581 CertiOS.framework.model.language <> kenil constr
R25583:25584 CertiOS.framework.proof.simulation <> ks var
R25329:25342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25376:25389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25407:25420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25434:25447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25448:25450 Coq.Init.Logic <> :type_scope:'~'_x not
R25469:25469 Coq.Init.Logic <> :type_scope:'~'_x not
R25451:25461 CertiOS.framework.model.opsem <> loststepabt def
R25467:25468 CertiOS.framework.proof.simulation <> o2 var
R25465:25465 CertiOS.framework.proof.simulation <> C var
R25463:25463 CertiOS.framework.proof.simulation <> p var
R25421:25428 CertiOS.framework.auxlibs.Maps <> disjoint def
R25432:25433 CertiOS.framework.proof.simulation <> Os var
R25430:25430 CertiOS.framework.proof.simulation <> O var
R25390:25395 CertiOS.framework.proof.simulation <> joinm2 def
R25405:25406 CertiOS.framework.proof.simulation <> o2 var
R25402:25403 CertiOS.framework.proof.simulation <> Mf var
R25399:25400 CertiOS.framework.proof.simulation <> Ms var
R25397:25397 CertiOS.framework.proof.simulation <> o var
R25343:25346 CertiOS.framework.logic.inferules <> satp def
R25370:25372 CertiOS.framework.logic.assertion <> INV def
R25374:25374 CertiOS.framework.proof.simulation <> I var
R25366:25367 CertiOS.framework.proof.simulation <> Os var
R25349:25358 CertiOS.framework.logic.assertion <> substaskst def
R25362:25363 CertiOS.framework.proof.simulation <> Ms var
R25360:25360 CertiOS.framework.proof.simulation <> o var
R25319:25326 CertiOS.framework.proof.simulation <> notabort def
R25328:25328 CertiOS.framework.proof.simulation <> C var
R24783:24796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24815:24829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24846:24859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24893:24906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24929:24942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24955:24982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25227:25239 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24983:24990 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24997:24997 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25001:25001 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25004:25004 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25008:25023 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R25057:25074 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25024:25033 CertiOS.framework.logic.inferules <> hmstepstar syndef
R25044:25045 CertiOS.framework.proof.simulation <> OO var
R25038:25042 CertiOS.framework.proof.simulation <> gamma var
R25035:25036 CertiOS.framework.proof.simulation <> sd var
R25090:25107 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25075:25078 CertiOS.framework.auxlibs.Maps <> join meth
R25142:25158 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25108:25111 CertiOS.framework.logic.inferules <> satp def
R25136:25138 CertiOS.framework.logic.assertion <> INV def
R25140:25140 CertiOS.framework.proof.simulation <> I var
R25114:25123 CertiOS.framework.logic.assertion <> substaskst def
R25127:25128 CertiOS.framework.proof.simulation <> Ms var
R25125:25125 CertiOS.framework.proof.simulation <> o var
R25186:25203 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25159:25162 CertiOS.framework.logic.inferules <> satp def
R25170:25176 CertiOS.framework.logic.inferules <> CurLINV def
R25184:25184 CertiOS.framework.proof.simulation <> t var
R25178:25182 CertiOS.framework.proof.simulation <> lasrt var
R25164:25164 CertiOS.framework.proof.simulation <> o var
R25204:25206 CertiOS.framework.logic.assertion <> sat def
R25225:25226 CertiOS.framework.proof.simulation <> ri var
R25208:25208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25216:25216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25223:25223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25209:25209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25211:25212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25215:25215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25210:25210 CertiOS.framework.proof.simulation <> o var
R24943:24946 CertiOS.framework.auxlibs.Maps <> join meth
R24953:24954 CertiOS.framework.proof.simulation <> OO var
R24950:24951 CertiOS.framework.proof.simulation <> Os var
R24948:24948 CertiOS.framework.proof.simulation <> O var
R24907:24914 CertiOS.framework.auxlibs.Maps <> disjoint def
R24927:24928 CertiOS.framework.proof.simulation <> Ms var
R24917:24922 CertiOS.framework.proof.simulation <> getmem def
R24924:24924 CertiOS.framework.proof.simulation <> o var
R24860:24863 CertiOS.framework.logic.inferules <> satp def
R24887:24889 CertiOS.framework.logic.assertion <> INV def
R24891:24891 CertiOS.framework.proof.simulation <> I var
R24883:24884 CertiOS.framework.proof.simulation <> Os var
R24866:24875 CertiOS.framework.logic.assertion <> substaskst def
R24879:24880 CertiOS.framework.proof.simulation <> Ms var
R24877:24877 CertiOS.framework.proof.simulation <> o var
R24840:24841 Coq.Init.Logic <> :type_scope:x_'='_x not
R24830:24836 CertiOS.framework.model.opsem <> intcont def
R24838:24839 CertiOS.framework.proof.simulation <> ks var
R24842:24845 Coq.Init.Datatypes <> None constr
R24808:24810 Coq.Init.Logic <> :type_scope:x_'='_x not
R24797:24804 CertiOS.framework.model.opsem <> callcont def
R24806:24807 CertiOS.framework.proof.simulation <> ks var
R24811:24814 Coq.Init.Datatypes <> None constr
R24747:24749 Coq.Init.Logic <> :type_scope:x_'='_x not
R24746:24746 CertiOS.framework.proof.simulation <> C var
R24750:24750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24769:24770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24782:24782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24751:24754 CertiOS.framework.model.language <> curs constr
R24757:24761 CertiOS.framework.model.language <> sprim constr
R24763:24767 CertiOS.framework.model.language <> exint constr
R24771:24771 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24777:24778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24781:24781 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24772:24776 CertiOS.framework.model.language <> kenil constr
R24779:24780 CertiOS.framework.proof.simulation <> ks var
R24220:24233 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24252:24266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24283:24296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24330:24343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24366:24379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24392:24419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24676:24688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24420:24426 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24433:24433 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24437:24437 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24440:24440 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24444:24459 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R24493:24510 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24460:24469 CertiOS.framework.logic.inferules <> hmstepstar syndef
R24480:24481 CertiOS.framework.proof.simulation <> OO var
R24474:24478 CertiOS.framework.proof.simulation <> gamma var
R24471:24472 CertiOS.framework.proof.simulation <> sd var
R24526:24543 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24511:24514 CertiOS.framework.auxlibs.Maps <> join meth
R24578:24595 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24544:24547 CertiOS.framework.logic.inferules <> satp def
R24572:24574 CertiOS.framework.logic.assertion <> INV def
R24576:24576 CertiOS.framework.proof.simulation <> I var
R24550:24559 CertiOS.framework.logic.assertion <> substaskst def
R24563:24564 CertiOS.framework.proof.simulation <> Ms var
R24561:24561 CertiOS.framework.proof.simulation <> o var
R24623:24640 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24596:24599 CertiOS.framework.logic.inferules <> satp def
R24607:24613 CertiOS.framework.logic.inferules <> CurLINV def
R24621:24621 CertiOS.framework.proof.simulation <> t var
R24615:24619 CertiOS.framework.proof.simulation <> lasrt var
R24601:24601 CertiOS.framework.proof.simulation <> o var
R24641:24643 CertiOS.framework.logic.assertion <> sat def
R24665:24665 CertiOS.framework.proof.simulation <> r var
R24668:24671 Coq.Init.Datatypes <> Some constr
R24673:24673 CertiOS.framework.proof.simulation <> v var
R24645:24645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24653:24654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24661:24661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24646:24646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24648:24649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24652:24652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24647:24647 CertiOS.framework.proof.simulation <> o var
R24380:24383 CertiOS.framework.auxlibs.Maps <> join meth
R24390:24391 CertiOS.framework.proof.simulation <> OO var
R24387:24388 CertiOS.framework.proof.simulation <> Os var
R24385:24385 CertiOS.framework.proof.simulation <> O var
R24344:24351 CertiOS.framework.auxlibs.Maps <> disjoint def
R24364:24365 CertiOS.framework.proof.simulation <> Ms var
R24354:24359 CertiOS.framework.proof.simulation <> getmem def
R24361:24361 CertiOS.framework.proof.simulation <> o var
R24297:24300 CertiOS.framework.logic.inferules <> satp def
R24324:24326 CertiOS.framework.logic.assertion <> INV def
R24328:24328 CertiOS.framework.proof.simulation <> I var
R24320:24321 CertiOS.framework.proof.simulation <> Os var
R24303:24312 CertiOS.framework.logic.assertion <> substaskst def
R24316:24317 CertiOS.framework.proof.simulation <> Ms var
R24314:24314 CertiOS.framework.proof.simulation <> o var
R24277:24278 Coq.Init.Logic <> :type_scope:x_'='_x not
R24267:24273 CertiOS.framework.model.opsem <> intcont def
R24275:24276 CertiOS.framework.proof.simulation <> ks var
R24279:24282 Coq.Init.Datatypes <> None constr
R24245:24247 Coq.Init.Logic <> :type_scope:x_'='_x not
R24234:24241 CertiOS.framework.model.opsem <> callcont def
R24243:24244 CertiOS.framework.proof.simulation <> ks var
R24248:24251 Coq.Init.Datatypes <> None constr
R24192:24194 Coq.Init.Logic <> :type_scope:x_'='_x not
R24191:24191 CertiOS.framework.proof.simulation <> C var
R24195:24195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24199:24200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24219:24219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24196:24196 CertiOS.framework.model.language <> ::'['_x_']' not
R24198:24198 CertiOS.framework.model.language <> ::'['_x_']' not
R24197:24197 CertiOS.framework.proof.simulation <> v var
R24201:24201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24207:24209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24217:24218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24202:24206 CertiOS.framework.model.language <> kenil constr
R24210:24213 CertiOS.framework.model.language <> kret constr
R24215:24216 CertiOS.framework.proof.simulation <> ks var
R23672:23685 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23704:23718 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23735:23748 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23782:23794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23817:23830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23843:23870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24120:24131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23871:23877 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23884:23884 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23888:23888 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23891:23891 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23895:23910 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23944:23961 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23911:23920 CertiOS.framework.logic.inferules <> hmstepstar syndef
R23931:23932 CertiOS.framework.proof.simulation <> OO var
R23925:23929 CertiOS.framework.proof.simulation <> gamma var
R23922:23923 CertiOS.framework.proof.simulation <> sd var
R23977:23994 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23962:23965 CertiOS.framework.auxlibs.Maps <> join meth
R24029:24045 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23995:23998 CertiOS.framework.logic.inferules <> satp def
R24023:24025 CertiOS.framework.logic.assertion <> INV def
R24027:24027 CertiOS.framework.proof.simulation <> I var
R24001:24010 CertiOS.framework.logic.assertion <> substaskst def
R24014:24015 CertiOS.framework.proof.simulation <> Ms var
R24012:24012 CertiOS.framework.proof.simulation <> o var
R24073:24090 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24046:24049 CertiOS.framework.logic.inferules <> satp def
R24057:24063 CertiOS.framework.logic.inferules <> CurLINV def
R24071:24071 CertiOS.framework.proof.simulation <> t var
R24065:24069 CertiOS.framework.proof.simulation <> lasrt var
R24051:24051 CertiOS.framework.proof.simulation <> o var
R24091:24093 CertiOS.framework.logic.assertion <> sat def
R24113:24113 CertiOS.framework.proof.simulation <> r var
R24115:24118 Coq.Init.Datatypes <> None constr
R24095:24095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24103:24103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24110:24110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24096:24096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24098:24099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24102:24102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24097:24097 CertiOS.framework.proof.simulation <> o var
R23831:23834 CertiOS.framework.auxlibs.Maps <> join meth
R23841:23842 CertiOS.framework.proof.simulation <> OO var
R23838:23839 CertiOS.framework.proof.simulation <> Os var
R23836:23836 CertiOS.framework.proof.simulation <> O var
R23795:23802 CertiOS.framework.auxlibs.Maps <> disjoint def
R23815:23816 CertiOS.framework.proof.simulation <> Ms var
R23805:23810 CertiOS.framework.proof.simulation <> getmem def
R23812:23812 CertiOS.framework.proof.simulation <> o var
R23749:23752 CertiOS.framework.logic.inferules <> satp def
R23776:23778 CertiOS.framework.logic.assertion <> INV def
R23780:23780 CertiOS.framework.proof.simulation <> I var
R23772:23773 CertiOS.framework.proof.simulation <> Os var
R23755:23764 CertiOS.framework.logic.assertion <> substaskst def
R23768:23769 CertiOS.framework.proof.simulation <> Ms var
R23766:23766 CertiOS.framework.proof.simulation <> o var
R23729:23730 Coq.Init.Logic <> :type_scope:x_'='_x not
R23719:23725 CertiOS.framework.model.opsem <> intcont def
R23727:23728 CertiOS.framework.proof.simulation <> ks var
R23731:23734 Coq.Init.Datatypes <> None constr
R23697:23699 Coq.Init.Logic <> :type_scope:x_'='_x not
R23686:23693 CertiOS.framework.model.opsem <> callcont def
R23695:23696 CertiOS.framework.proof.simulation <> ks var
R23700:23703 Coq.Init.Datatypes <> None constr
R23645:23647 Coq.Init.Logic <> :type_scope:x_'='_x not
R23644:23644 CertiOS.framework.proof.simulation <> C var
R23648:23648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23658:23659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23671:23671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23649:23652 CertiOS.framework.model.language <> curs constr
R23654:23657 CertiOS.framework.model.language <> sret constr
R23660:23660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23666:23667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23670:23670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23661:23665 CertiOS.framework.model.language <> kenil constr
R23668:23669 CertiOS.framework.proof.simulation <> ks var
R23191:23204 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23238:23250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23273:23286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23299:23326 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23574:23586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23327:23333 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23340:23340 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23344:23344 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23347:23347 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23351:23366 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R23400:23417 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23367:23376 CertiOS.framework.logic.inferules <> hmstepstar syndef
R23387:23388 CertiOS.framework.proof.simulation <> OO var
R23381:23385 CertiOS.framework.proof.simulation <> gamma var
R23378:23379 CertiOS.framework.proof.simulation <> sd var
R23433:23450 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23418:23421 CertiOS.framework.auxlibs.Maps <> join meth
R23485:23502 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23451:23454 CertiOS.framework.logic.inferules <> satp def
R23479:23481 CertiOS.framework.logic.assertion <> INV def
R23483:23483 CertiOS.framework.proof.simulation <> I var
R23457:23466 CertiOS.framework.logic.assertion <> substaskst def
R23470:23471 CertiOS.framework.proof.simulation <> Ms var
R23468:23468 CertiOS.framework.proof.simulation <> o var
R23530:23547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23503:23506 CertiOS.framework.logic.inferules <> satp def
R23514:23520 CertiOS.framework.logic.inferules <> CurLINV def
R23528:23528 CertiOS.framework.proof.simulation <> t var
R23522:23526 CertiOS.framework.proof.simulation <> lasrt var
R23508:23508 CertiOS.framework.proof.simulation <> o var
R23548:23550 CertiOS.framework.logic.assertion <> sat def
R23570:23570 CertiOS.framework.proof.simulation <> q var
R23572:23572 CertiOS.framework.proof.simulation <> v var
R23552:23552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23560:23560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23567:23567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23553:23553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23555:23556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23559:23559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23554:23554 CertiOS.framework.proof.simulation <> o var
R23287:23290 CertiOS.framework.auxlibs.Maps <> join meth
R23297:23298 CertiOS.framework.proof.simulation <> OO var
R23294:23295 CertiOS.framework.proof.simulation <> Os var
R23292:23292 CertiOS.framework.proof.simulation <> O var
R23251:23258 CertiOS.framework.auxlibs.Maps <> disjoint def
R23271:23272 CertiOS.framework.proof.simulation <> Ms var
R23261:23266 CertiOS.framework.proof.simulation <> getmem def
R23268:23268 CertiOS.framework.proof.simulation <> o var
R23205:23208 CertiOS.framework.logic.inferules <> satp def
R23232:23234 CertiOS.framework.logic.assertion <> INV def
R23236:23236 CertiOS.framework.proof.simulation <> I var
R23228:23229 CertiOS.framework.proof.simulation <> Os var
R23211:23220 CertiOS.framework.logic.assertion <> substaskst def
R23224:23225 CertiOS.framework.proof.simulation <> Ms var
R23222:23222 CertiOS.framework.proof.simulation <> o var
R23156:23158 Coq.Init.Logic <> :type_scope:x_'='_x not
R23155:23155 CertiOS.framework.proof.simulation <> C var
R23159:23159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23174:23175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23190:23190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23160:23163 CertiOS.framework.model.language <> curs constr
R23166:23170 CertiOS.framework.model.language <> sskip constr
R23172:23172 CertiOS.framework.proof.simulation <> v var
R23176:23176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23182:23183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23189:23189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23177:23181 CertiOS.framework.model.language <> kenil constr
R23184:23188 CertiOS.framework.model.language <> kstop constr
R21992:22005 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22039:22052 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22075:22089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22102:22129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23086:23097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22130:22136 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22143:22143 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22145:22145 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22149:22149 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22152:22152 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22155:22155 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22158:22158 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22162:22162 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22165:22165 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22168:22184 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_x_x_','_x not
R22210:22227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22191:22193 Coq.Init.Logic <> :type_scope:x_'='_x not
R22194:22201 CertiOS.framework.model.language <> spec_seq constr
R22203:22207 CertiOS.framework.model.language <> sched constr
R22261:22278 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22228:22237 CertiOS.framework.logic.inferules <> hmstepstar syndef
R22248:22249 CertiOS.framework.proof.simulation <> OO var
R22242:22246 CertiOS.framework.proof.simulation <> gamma var
R22239:22240 CertiOS.framework.proof.simulation <> sd var
R22294:22311 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22279:22285 CertiOS.framework.logic.assertion <> joinmem def
R22293:22293 CertiOS.framework.proof.simulation <> o var
R22327:22343 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22312:22315 CertiOS.framework.auxlibs.Maps <> join meth
R22357:22374 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22344:22347 CertiOS.framework.auxlibs.Maps <> join meth
R22409:22426 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22375:22378 CertiOS.framework.logic.inferules <> satp def
R22403:22405 CertiOS.framework.logic.assertion <> INV def
R22407:22407 CertiOS.framework.proof.simulation <> I var
R22381:22390 CertiOS.framework.logic.assertion <> substaskst def
R22394:22395 CertiOS.framework.proof.simulation <> Ms var
R22392:22392 CertiOS.framework.proof.simulation <> o var
R22466:22483 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22427:22430 CertiOS.framework.logic.inferules <> satp def
R22455:22460 CertiOS.framework.logic.assertion <> SWINVt def
R22464:22464 CertiOS.framework.proof.simulation <> t var
R22462:22462 CertiOS.framework.proof.simulation <> I var
R22433:22442 CertiOS.framework.logic.assertion <> substaskst def
R22444:22444 CertiOS.framework.proof.simulation <> o var
R22531:22566 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23070:23085 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22484:22487 CertiOS.framework.logic.inferules <> satp def
R22497:22499 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R22503:22504 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R22521:22524 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R22505:22508 CertiOS.framework.logic.inferules <> LINV def
R22518:22520 CertiOS.framework.proof.simulation <> lg' var
R22516:22516 CertiOS.framework.proof.simulation <> t var
R22510:22514 CertiOS.framework.proof.simulation <> lasrt var
R22525:22529 CertiOS.framework.logic.assertion <> Atrue constr
R22567:22586 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22954:23024 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22633:22677 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22933:22953 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22587:22590 CertiOS.framework.logic.inferules <> satp def
R22614:22624 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R22631:22631 CertiOS.framework.proof.simulation <> t var
R22629:22629 CertiOS.framework.proof.simulation <> x var
R22626:22627 CertiOS.framework.proof.simulation <> sd var
R22593:22602 CertiOS.framework.logic.assertion <> substaskst def
R22604:22604 CertiOS.framework.proof.simulation <> o var
R22765:22789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22807:22832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22848:22873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22874:22880 CertiOS.framework.proof.simulation <> MethSim ind
R22932:22932 CertiOS.framework.proof.simulation <> t var
R22930:22930 CertiOS.framework.proof.simulation <> q var
R22927:22928 CertiOS.framework.proof.simulation <> ri var
R22925:22925 CertiOS.framework.proof.simulation <> r var
R22923:22923 CertiOS.framework.proof.simulation <> I var
R22917:22921 CertiOS.framework.proof.simulation <> lasrt var
R22913:22915 CertiOS.framework.proof.simulation <> O'' var
R22908:22909 CertiOS.framework.proof.simulation <> o' var
R22887:22887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22892:22893 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22905:22905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22888:22891 CertiOS.framework.model.language <> ::'SKIP' not
R22894:22894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22900:22901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22904:22904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22895:22899 CertiOS.framework.model.language <> kenil constr
R22902:22903 CertiOS.framework.proof.simulation <> ks var
R22884:22885 CertiOS.framework.proof.simulation <> sd var
R22882:22882 CertiOS.framework.proof.simulation <> p var
R22833:22836 CertiOS.framework.auxlibs.Maps <> join meth
R22845:22847 CertiOS.framework.proof.simulation <> O'' var
R22841:22843 CertiOS.framework.proof.simulation <> Oc' var
R22790:22796 CertiOS.framework.logic.assertion <> joinmem def
R22805:22806 CertiOS.framework.proof.simulation <> o' var
R22801:22803 CertiOS.framework.proof.simulation <> Mc' var
R22724:22727 CertiOS.framework.logic.inferules <> satp def
R22754:22759 CertiOS.framework.logic.assertion <> SWINVt def
R22763:22763 CertiOS.framework.proof.simulation <> t var
R22761:22761 CertiOS.framework.proof.simulation <> I var
R22749:22751 CertiOS.framework.proof.simulation <> Oc' var
R22730:22739 CertiOS.framework.logic.assertion <> substaskst def
R22744:22746 CertiOS.framework.proof.simulation <> Mc' var
R22741:22741 CertiOS.framework.proof.simulation <> o var
R23025:23028 CertiOS.framework.logic.inferules <> satp def
R23052:23061 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R23068:23068 CertiOS.framework.proof.simulation <> t var
R23066:23066 CertiOS.framework.proof.simulation <> x var
R23063:23064 CertiOS.framework.proof.simulation <> sd var
R23031:23040 CertiOS.framework.logic.assertion <> substaskst def
R23042:23042 CertiOS.framework.proof.simulation <> o var
R22090:22093 CertiOS.framework.auxlibs.Maps <> join meth
R22100:22101 CertiOS.framework.proof.simulation <> OO var
R22097:22098 CertiOS.framework.proof.simulation <> Os var
R22095:22095 CertiOS.framework.proof.simulation <> O var
R22053:22060 CertiOS.framework.auxlibs.Maps <> disjoint def
R22073:22074 CertiOS.framework.proof.simulation <> Ms var
R22063:22068 CertiOS.framework.proof.simulation <> getmem def
R22070:22070 CertiOS.framework.proof.simulation <> o var
R22006:22009 CertiOS.framework.logic.inferules <> satp def
R22033:22035 CertiOS.framework.logic.assertion <> INV def
R22037:22037 CertiOS.framework.proof.simulation <> I var
R22029:22030 CertiOS.framework.proof.simulation <> Os var
R22012:22021 CertiOS.framework.logic.assertion <> substaskst def
R22025:22026 CertiOS.framework.proof.simulation <> Ms var
R22023:22023 CertiOS.framework.proof.simulation <> o var
R21951:21953 Coq.Init.Logic <> :type_scope:x_'='_x not
R21950:21950 CertiOS.framework.proof.simulation <> C var
R21954:21954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21978:21979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21991:21991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21955:21958 CertiOS.framework.model.language <> curs constr
R21961:21965 CertiOS.framework.model.language <> sprim constr
R21968:21973 CertiOS.framework.model.language <> switch constr
R21975:21975 CertiOS.framework.proof.simulation <> x var
R21980:21980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21986:21987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21990:21990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21981:21985 CertiOS.framework.model.language <> kenil constr
R21988:21989 CertiOS.framework.proof.simulation <> ks var
R21436:21449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21467:21481 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21494:21507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21530:21558 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21877:21888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21559:21565 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21572:21572 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21576:21577 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21580:21580 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21584:21585 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21588:21588 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21592:21608 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R21642:21659 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21609:21618 CertiOS.framework.logic.inferules <> hmstepstar syndef
R21629:21630 CertiOS.framework.proof.simulation <> OO var
R21623:21627 CertiOS.framework.proof.simulation <> gamma var
R21620:21621 CertiOS.framework.proof.simulation <> sd var
R21680:21698 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21660:21665 CertiOS.framework.proof.simulation <> joinm2 def
R21677:21679 CertiOS.framework.proof.simulation <> o2' var
R21674:21675 CertiOS.framework.proof.simulation <> Mf var
R21714:21731 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21699:21702 CertiOS.framework.auxlibs.Maps <> join meth
R21769:21785 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21732:21735 CertiOS.framework.logic.inferules <> satp def
R21763:21765 CertiOS.framework.logic.assertion <> INV def
R21767:21767 CertiOS.framework.proof.simulation <> I var
R21738:21747 CertiOS.framework.logic.assertion <> substaskst def
R21814:21831 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21786:21789 CertiOS.framework.logic.inferules <> satp def
R21798:21804 CertiOS.framework.logic.inferules <> CurLINV def
R21812:21812 CertiOS.framework.proof.simulation <> t var
R21806:21810 CertiOS.framework.proof.simulation <> lasrt var
R21832:21838 CertiOS.framework.proof.simulation <> MethSim ind
R21876:21876 CertiOS.framework.proof.simulation <> t var
R21874:21874 CertiOS.framework.proof.simulation <> q var
R21871:21872 CertiOS.framework.proof.simulation <> ri var
R21869:21869 CertiOS.framework.proof.simulation <> r var
R21867:21867 CertiOS.framework.proof.simulation <> I var
R21861:21865 CertiOS.framework.proof.simulation <> lasrt var
R21845:21846 CertiOS.framework.proof.simulation <> C' var
R21842:21843 CertiOS.framework.proof.simulation <> sd var
R21840:21840 CertiOS.framework.proof.simulation <> p var
R21508:21515 CertiOS.framework.model.opsem <> loststep ind
R21527:21529 CertiOS.framework.proof.simulation <> o2' var
R21524:21525 CertiOS.framework.proof.simulation <> C' var
R21521:21522 CertiOS.framework.proof.simulation <> o2 var
R21519:21519 CertiOS.framework.proof.simulation <> C var
R21517:21517 CertiOS.framework.proof.simulation <> p var
R21482:21485 CertiOS.framework.auxlibs.Maps <> join meth
R21492:21493 CertiOS.framework.proof.simulation <> OO var
R21489:21490 CertiOS.framework.proof.simulation <> Os var
R21487:21487 CertiOS.framework.proof.simulation <> O var
R21450:21455 CertiOS.framework.proof.simulation <> joinm2 def
R21465:21466 CertiOS.framework.proof.simulation <> o2 var
R21462:21463 CertiOS.framework.proof.simulation <> Mf var
R21459:21460 CertiOS.framework.proof.simulation <> Ms var
R21457:21457 CertiOS.framework.proof.simulation <> o var
R21403:21406 CertiOS.framework.logic.inferules <> satp def
R21430:21432 CertiOS.framework.logic.assertion <> INV def
R21434:21434 CertiOS.framework.proof.simulation <> I var
R21426:21427 CertiOS.framework.proof.simulation <> Os var
R21409:21418 CertiOS.framework.logic.assertion <> substaskst def
R21422:21423 CertiOS.framework.proof.simulation <> Ms var
R21420:21420 CertiOS.framework.proof.simulation <> o var
prf 28022:28044 <> buldp_some_imp_gooddecl
R28085:28088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28105:28107 Coq.Init.Logic <> :type_scope:x_'='_x not
R28089:28101 CertiOS.framework.logic.inferules <> good_decllist def
R28103:28104 CertiOS.framework.proof.simulation <> dl var
R28108:28111 Coq.Init.Datatypes <> true constr
R28076:28078 Coq.Init.Logic <> :type_scope:x_'='_x not
R28064:28069 CertiOS.framework.logic.inferules <> buildp def
R28074:28075 CertiOS.framework.proof.simulation <> vl var
R28071:28072 CertiOS.framework.proof.simulation <> dl var
R28079:28082 Coq.Init.Datatypes <> Some constr
R28084:28084 CertiOS.framework.proof.simulation <> p var
R28230:28233 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R28207:28210 Coq.Init.Datatypes <> negb def
R28213:28223 CertiOS.framework.logic.inferules <> in_decllist def
R28234:28246 CertiOS.framework.logic.inferules <> good_decllist def
R28230:28233 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R28207:28210 Coq.Init.Datatypes <> negb def
R28213:28223 CertiOS.framework.logic.inferules <> in_decllist def
R28234:28246 CertiOS.framework.logic.inferules <> good_decllist def
R28266:28271 Coq.Init.Logic <> sym_eq syndef
R28266:28271 Coq.Init.Logic <> sym_eq syndef
def 28338:28344 <> RuleSem
R28354:28360 CertiOS.framework.logic.assertion <> funspec def
R28369:28375 CertiOS.framework.model.language <> ossched def
R28387:28389 CertiOS.framework.logic.assertion <> Inv def
R28395:28401 CertiOS.framework.logic.assertion <> retasrt def
R28408:28411 CertiOS.framework.logic.assertion <> asrt ind
R28429:28432 CertiOS.framework.logic.assertion <> asrt ind
R28438:28442 CertiOS.framework.model.language <> stmts ind
R28449:28452 CertiOS.framework.logic.assertion <> asrt ind
R28484:28484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28535:28560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28561:28570 CertiOS.framework.proof.simulation <> MethSimMod coind
R28622:28622 CertiOS.framework.proof.simulation <> t var
R28614:28617 CertiOS.framework.logic.inferules <> lift def
R28619:28619 CertiOS.framework.proof.simulation <> q var
R28610:28611 CertiOS.framework.proof.simulation <> ri var
R28608:28608 CertiOS.framework.proof.simulation <> r var
R28606:28606 CertiOS.framework.proof.simulation <> I var
R28600:28604 CertiOS.framework.proof.simulation <> lasrt var
R28598:28598 CertiOS.framework.proof.simulation <> O var
R28594:28596 CertiOS.framework.proof.simulation <> aop var
R28592:28592 CertiOS.framework.proof.simulation <> o var
R28581:28587 CertiOS.framework.model.opsem <> nilcont def
R28589:28589 CertiOS.framework.proof.simulation <> s var
R28577:28578 CertiOS.framework.proof.simulation <> sd var
R28572:28575 CertiOS.framework.proof.simulation <> spec var
R28503:28507 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28485:28487 CertiOS.framework.logic.assertion <> sat def
R28502:28502 CertiOS.framework.proof.simulation <> p var
R28489:28489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28496:28496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28500:28500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28490:28490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28492:28493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28495:28495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28491:28491 CertiOS.framework.proof.simulation <> o var
R28494:28494 CertiOS.framework.proof.simulation <> O var
R28497:28499 CertiOS.framework.proof.simulation <> aop var
R28508:28511 CertiOS.framework.logic.inferules <> satp def
R28519:28525 CertiOS.framework.logic.inferules <> CurLINV def
R28533:28533 CertiOS.framework.proof.simulation <> t var
R28527:28531 CertiOS.framework.proof.simulation <> lasrt var
R28515:28515 CertiOS.framework.proof.simulation <> O var
R28513:28513 CertiOS.framework.proof.simulation <> o var
def 28638:28648 <> MethSimAsrt
R28655:28662 CertiOS.framework.model.language <> progunit def
R28669:28675 CertiOS.framework.model.language <> ossched def
R28687:28689 CertiOS.framework.logic.assertion <> Inv def
R28695:28701 CertiOS.framework.logic.assertion <> retasrt def
R28708:28711 CertiOS.framework.logic.assertion <> asrt ind
R28729:28732 CertiOS.framework.logic.assertion <> asrt ind
R28738:28742 CertiOS.framework.model.language <> stmts ind
R28749:28752 CertiOS.framework.logic.assertion <> asrt ind
R28783:28783 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28834:28857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28858:28864 CertiOS.framework.proof.simulation <> MethSim coind
R28913:28913 CertiOS.framework.proof.simulation <> t var
R28905:28908 CertiOS.framework.logic.inferules <> lift def
R28910:28910 CertiOS.framework.proof.simulation <> q var
R28901:28902 CertiOS.framework.proof.simulation <> ri var
R28899:28899 CertiOS.framework.proof.simulation <> r var
R28897:28897 CertiOS.framework.proof.simulation <> I var
R28891:28895 CertiOS.framework.proof.simulation <> lasrt var
R28889:28889 CertiOS.framework.proof.simulation <> O var
R28885:28887 CertiOS.framework.proof.simulation <> aop var
R28883:28883 CertiOS.framework.proof.simulation <> o var
R28872:28878 CertiOS.framework.model.opsem <> nilcont def
R28880:28880 CertiOS.framework.proof.simulation <> s var
R28868:28869 CertiOS.framework.proof.simulation <> sd var
R28866:28866 CertiOS.framework.proof.simulation <> P var
R28802:28806 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R28784:28786 CertiOS.framework.logic.assertion <> sat def
R28801:28801 CertiOS.framework.proof.simulation <> p var
R28788:28788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28795:28795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28799:28799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28789:28789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28791:28792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28794:28794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28790:28790 CertiOS.framework.proof.simulation <> o var
R28793:28793 CertiOS.framework.proof.simulation <> O var
R28796:28798 CertiOS.framework.proof.simulation <> aop var
R28807:28810 CertiOS.framework.logic.inferules <> satp def
R28818:28824 CertiOS.framework.logic.inferules <> CurLINV def
R28832:28832 CertiOS.framework.proof.simulation <> t var
R28826:28830 CertiOS.framework.proof.simulation <> lasrt var
R28814:28814 CertiOS.framework.proof.simulation <> O var
R28812:28812 CertiOS.framework.proof.simulation <> o var
def 28929:28938 <> WFFuncsSim
R28943:28950 CertiOS.framework.model.language <> progunit def
R28960:28966 CertiOS.framework.logic.assertion <> funspec def
R28973:28979 CertiOS.framework.model.language <> ossched def
R28991:28993 CertiOS.framework.logic.assertion <> Inv def
R29019:29024 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29006:29010 CertiOS.framework.logic.inferules <> EqDom def
R29014:29018 CertiOS.framework.proof.simulation <> FSpec var
R29012:29012 CertiOS.framework.proof.simulation <> P var
R29088:29096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29097:29104 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29107:29107 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29110:29110 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29112:29119 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29145:29156 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29123:29125 Coq.Init.Logic <> :type_scope:x_'='_x not
R29120:29120 CertiOS.framework.proof.simulation <> P var
R29122:29122 CertiOS.framework.proof.simulation <> f var
R29126:29129 Coq.Init.Datatypes <> Some constr
R29131:29131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29133:29134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29137:29138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29141:29142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29144:29144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29132:29132 CertiOS.framework.proof.simulation <> t var
R29170:29179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29157:29163 CertiOS.framework.model.opsem <> tlmatch def
R29165:29166 CertiOS.framework.proof.simulation <> tl var
R29217:29237 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29431:29438 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29210:29212 Coq.Init.Logic <> :type_scope:x_'='_x not
R29180:29192 CertiOS.framework.logic.inferules <> good_decllist def
R29195:29202 CertiOS.framework.model.opsem <> revlcons def
R29213:29216 Coq.Init.Datatypes <> true constr
R29314:29327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29369:29382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29383:29389 CertiOS.framework.proof.simulation <> RuleSem def
R29428:29430 CertiOS.framework.proof.simulation <> tid var
R29421:29426 CertiOS.framework.logic.assertion <> Afalse constr
R29417:29417 CertiOS.framework.proof.simulation <> p var
R29410:29415 CertiOS.framework.logic.assertion <> Afalse constr
R29408:29408 CertiOS.framework.proof.simulation <> r var
R29406:29406 CertiOS.framework.proof.simulation <> I var
R29400:29404 CertiOS.framework.proof.simulation <> lasrt var
R29397:29398 CertiOS.framework.proof.simulation <> sd var
R29391:29395 CertiOS.framework.proof.simulation <> FSpec var
R29334:29336 Coq.Init.Logic <> :type_scope:x_'='_x not
R29328:29331 Coq.Init.Datatypes <> Some constr
R29333:29333 CertiOS.framework.proof.simulation <> r var
R29337:29345 CertiOS.framework.logic.inferules <> BuildRetI def
R29366:29368 CertiOS.framework.proof.simulation <> tid var
R29361:29364 CertiOS.framework.proof.simulation <> post var
R29354:29359 CertiOS.framework.proof.simulation <> logicl var
R29351:29352 CertiOS.framework.proof.simulation <> vl var
R29349:29349 CertiOS.framework.proof.simulation <> f var
R29347:29347 CertiOS.framework.proof.simulation <> P var
R29280:29282 Coq.Init.Logic <> :type_scope:x_'='_x not
R29274:29277 Coq.Init.Datatypes <> Some constr
R29279:29279 CertiOS.framework.proof.simulation <> p var
R29283:29291 CertiOS.framework.logic.inferules <> BuildPreI def
R29311:29313 CertiOS.framework.proof.simulation <> tid var
R29307:29309 CertiOS.framework.proof.simulation <> pre var
R29300:29305 CertiOS.framework.proof.simulation <> logicl var
R29297:29298 CertiOS.framework.proof.simulation <> vl var
R29295:29295 CertiOS.framework.proof.simulation <> f var
R29293:29293 CertiOS.framework.proof.simulation <> P var
R29060:29062 Coq.Init.Logic <> :type_scope:x_'='_x not
R29053:29057 CertiOS.framework.proof.simulation <> FSpec var
R29059:29059 CertiOS.framework.proof.simulation <> f var
R29063:29066 Coq.Init.Datatypes <> Some constr
R29068:29068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29072:29073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29078:29079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29087:29087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29069:29071 CertiOS.framework.proof.simulation <> pre var
R29074:29077 CertiOS.framework.proof.simulation <> post var
R29080:29080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29082:29083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29086:29086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29081:29081 CertiOS.framework.proof.simulation <> t var
R29084:29085 CertiOS.framework.proof.simulation <> tl var
def 29455:29465 <> WFFuncsSim'
R29470:29477 CertiOS.framework.model.language <> progunit def
R29487:29493 CertiOS.framework.logic.assertion <> funspec def
R29500:29506 CertiOS.framework.model.language <> ossched def
R29518:29520 CertiOS.framework.logic.assertion <> Inv def
R29546:29551 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29533:29537 CertiOS.framework.logic.inferules <> EqDom def
R29541:29545 CertiOS.framework.proof.simulation <> FSpec var
R29539:29539 CertiOS.framework.proof.simulation <> P var
R29615:29623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29624:29631 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29634:29634 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29637:29637 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29639:29646 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R29672:29683 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29650:29652 Coq.Init.Logic <> :type_scope:x_'='_x not
R29647:29647 CertiOS.framework.proof.simulation <> P var
R29649:29649 CertiOS.framework.proof.simulation <> f var
R29653:29656 Coq.Init.Datatypes <> Some constr
R29658:29658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29660:29661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29664:29665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29668:29669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29671:29671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29659:29659 CertiOS.framework.proof.simulation <> t var
R29697:29706 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29684:29690 CertiOS.framework.model.opsem <> tlmatch def
R29692:29693 CertiOS.framework.proof.simulation <> tl var
R29744:29764 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30101:30109 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29737:29739 Coq.Init.Logic <> :type_scope:x_'='_x not
R29707:29719 CertiOS.framework.logic.inferules <> good_decllist def
R29722:29729 CertiOS.framework.model.opsem <> revlcons def
R29740:29743 Coq.Init.Datatypes <> true constr
R29841:29855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29897:29924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30089:30100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30003:30021 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30022:30028 CertiOS.framework.proof.simulation <> MethSim coind
R30086:30088 CertiOS.framework.proof.simulation <> tid var
R30073:30076 CertiOS.framework.logic.inferules <> lift def
R30078:30083 CertiOS.framework.logic.assertion <> Afalse constr
R30065:30070 CertiOS.framework.logic.assertion <> Afalse constr
R30063:30063 CertiOS.framework.proof.simulation <> r var
R30061:30061 CertiOS.framework.proof.simulation <> I var
R30055:30059 CertiOS.framework.proof.simulation <> lasrt var
R30053:30053 CertiOS.framework.proof.simulation <> O var
R30049:30051 CertiOS.framework.proof.simulation <> aop var
R30047:30047 CertiOS.framework.proof.simulation <> o var
R30036:30042 CertiOS.framework.model.opsem <> nilcont def
R30032:30033 CertiOS.framework.proof.simulation <> sd var
R30030:30030 CertiOS.framework.proof.simulation <> P var
R29971:29974 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29966:29969 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R29955:29955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29957:29958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29960:29961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29965:29965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29956:29956 CertiOS.framework.proof.simulation <> o var
R29959:29959 CertiOS.framework.proof.simulation <> O var
R29962:29964 CertiOS.framework.proof.simulation <> aop var
R29970:29970 CertiOS.framework.proof.simulation <> p var
R29975:29978 CertiOS.framework.logic.inferules <> satp def
R29985:29991 CertiOS.framework.logic.inferules <> CurLINV def
R29999:30001 CertiOS.framework.proof.simulation <> tid var
R29993:29997 CertiOS.framework.proof.simulation <> lasrt var
R29982:29982 CertiOS.framework.proof.simulation <> O var
R29980:29980 CertiOS.framework.proof.simulation <> o var
R29862:29864 Coq.Init.Logic <> :type_scope:x_'='_x not
R29856:29859 Coq.Init.Datatypes <> Some constr
R29861:29861 CertiOS.framework.proof.simulation <> r var
R29865:29873 CertiOS.framework.logic.inferules <> BuildRetI def
R29894:29896 CertiOS.framework.proof.simulation <> tid var
R29889:29892 CertiOS.framework.proof.simulation <> post var
R29882:29887 CertiOS.framework.proof.simulation <> logicl var
R29879:29880 CertiOS.framework.proof.simulation <> vl var
R29877:29877 CertiOS.framework.proof.simulation <> f var
R29875:29875 CertiOS.framework.proof.simulation <> P var
R29807:29809 Coq.Init.Logic <> :type_scope:x_'='_x not
R29801:29804 Coq.Init.Datatypes <> Some constr
R29806:29806 CertiOS.framework.proof.simulation <> p var
R29810:29818 CertiOS.framework.logic.inferules <> BuildPreI def
R29838:29840 CertiOS.framework.proof.simulation <> tid var
R29834:29836 CertiOS.framework.proof.simulation <> pre var
R29827:29832 CertiOS.framework.proof.simulation <> logicl var
R29824:29825 CertiOS.framework.proof.simulation <> vl var
R29822:29822 CertiOS.framework.proof.simulation <> f var
R29820:29820 CertiOS.framework.proof.simulation <> P var
R29587:29589 Coq.Init.Logic <> :type_scope:x_'='_x not
R29580:29584 CertiOS.framework.proof.simulation <> FSpec var
R29586:29586 CertiOS.framework.proof.simulation <> f var
R29590:29593 Coq.Init.Datatypes <> Some constr
R29595:29595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29599:29600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29605:29606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29614:29614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29596:29598 CertiOS.framework.proof.simulation <> pre var
R29601:29604 CertiOS.framework.proof.simulation <> post var
R29607:29607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29609:29610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29613:29613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29608:29608 CertiOS.framework.proof.simulation <> t var
R29611:29612 CertiOS.framework.proof.simulation <> tl var
R30216:30222 CertiOS.framework.proof.simulation <> RuleSem def
not 30122:30122 <> ::'['_x_','_x_','_x_','_x_','_x_','_x_','_x_']'_'|='_x_'{{'_x_'}}'_x_'{{'_x_'}}'
R30397:30406 CertiOS.framework.proof.simulation <> MethSimMod coind
not 30288:30288 <> ::'{['_x_','_x_','_x_','_x_','_x_','_x_','_x_']}'_'||-'_x_'('_x_','_x_')'_'<_msim'_'('_x_','_x_')'
R30585:30591 CertiOS.framework.proof.simulation <> MethSim coind
not 30476:30476 <> ::'{{['_x_','_x_','_x_','_x_','_x_','_x_','_x_']}}'_'||-'_x_'('_x_','_x_')'_'<_msim'_'('_x_','_x_')'
