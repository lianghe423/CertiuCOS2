DIGEST 8f3be725c46afd288a08cdf7a224a50e
FCertiOS.framework.proof.funsim
R16:28 CertiOS.framework.proof.sound_include <> <> lib
prf 65:76 <> fun_seq_comp
R154:162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R163:163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R191:200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R201:208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R472:486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R556:565 Coq.Init.Logic <> :type_scope:x_'->'_x not
R582:592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R607:616 Coq.Init.Logic <> :type_scope:x_'->'_x not
R706:716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R717:726 CertiOS.framework.proof.simulation <> MethSimMod coind
R798:798 CertiOS.framework.proof.funsim <> t var
R795:796 CertiOS.framework.proof.funsim <> q' var
R792:793 CertiOS.framework.proof.funsim <> ri var
R790:790 CertiOS.framework.proof.funsim <> r var
R788:788 CertiOS.framework.proof.funsim <> I var
R785:786 CertiOS.framework.proof.funsim <> li var
R781:783 CertiOS.framework.proof.funsim <> O1' var
R775:779 CertiOS.framework.proof.funsim <> gamma var
R771:773 CertiOS.framework.proof.funsim <> o1' var
R738:738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R740:741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R769:769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R739:739 CertiOS.framework.proof.funsim <> c var
R742:742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R745:746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R768:768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R743:744 CertiOS.framework.proof.funsim <> ke var
R749:752 CertiOS.framework.model.opsem <> ::x_'##'_x not
R753:757 CertiOS.framework.model.language <> kcall constr
R765:767 CertiOS.framework.proof.funsim <> ks' var
R763:763 CertiOS.framework.proof.funsim <> E var
R761:761 CertiOS.framework.proof.funsim <> s var
R759:759 CertiOS.framework.proof.funsim <> f var
R747:748 CertiOS.framework.proof.funsim <> ks var
R734:735 CertiOS.framework.proof.funsim <> sd var
R728:732 CertiOS.framework.proof.funsim <> FSpec var
R617:626 CertiOS.framework.proof.simulation <> MethSimMod coind
R705:705 CertiOS.framework.proof.funsim <> t var
R703:703 CertiOS.framework.proof.funsim <> q var
R696:701 CertiOS.framework.logic.assertion <> Afalse constr
R688:694 CertiOS.framework.logic.assertion <> arfalse def
R686:686 CertiOS.framework.proof.funsim <> I var
R683:684 CertiOS.framework.proof.funsim <> li var
R680:681 CertiOS.framework.proof.funsim <> O1 var
R674:678 CertiOS.framework.proof.funsim <> gamma var
R671:672 CertiOS.framework.proof.funsim <> o1 var
R638:638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R640:640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R669:669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R639:639 CertiOS.framework.proof.funsim <> c var
R641:641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R644:644 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R668:668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R642:643 CertiOS.framework.proof.funsim <> ke var
R647:650 CertiOS.framework.model.opsem <> ::x_'##'_x not
R651:655 CertiOS.framework.model.language <> kcall constr
R663:667 CertiOS.framework.model.language <> kstop constr
R661:661 CertiOS.framework.proof.funsim <> E var
R659:659 CertiOS.framework.proof.funsim <> s var
R657:657 CertiOS.framework.proof.funsim <> f var
R645:646 CertiOS.framework.proof.funsim <> ks var
R634:635 CertiOS.framework.proof.funsim <> sd var
R628:632 CertiOS.framework.proof.funsim <> FSpec var
R593:596 CertiOS.framework.auxlibs.Maps <> join meth
R604:606 CertiOS.framework.proof.funsim <> O1' var
R601:602 CertiOS.framework.proof.funsim <> Of var
R598:599 CertiOS.framework.proof.funsim <> O1 var
R566:572 CertiOS.framework.logic.assertion <> joinmem def
R579:581 CertiOS.framework.proof.funsim <> o1' var
R577:577 CertiOS.framework.proof.funsim <> M var
R574:575 CertiOS.framework.proof.funsim <> o1 var
R531:533 Coq.Init.Logic <> :type_scope:x_'='_x not
R530:530 CertiOS.framework.proof.funsim <> G var
R534:541 CertiOS.framework.model.opsem <> get_genv def
R544:551 CertiOS.framework.model.language <> get_smem def
R553:554 CertiOS.framework.proof.funsim <> o1 var
R267:278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R305:316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R335:345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R360:371 Coq.Init.Logic <> :type_scope:x_'->'_x not
R385:396 Coq.Init.Logic <> :type_scope:x_'->'_x not
R397:406 CertiOS.framework.proof.simulation <> MethSimMod coind
R471:471 CertiOS.framework.proof.funsim <> t var
R468:469 CertiOS.framework.proof.funsim <> q' var
R465:466 CertiOS.framework.proof.funsim <> ri var
R463:463 CertiOS.framework.proof.funsim <> r var
R461:461 CertiOS.framework.proof.funsim <> I var
R458:459 CertiOS.framework.proof.funsim <> li var
R455:456 CertiOS.framework.proof.funsim <> O' var
R452:453 CertiOS.framework.proof.funsim <> ab var
R449:450 CertiOS.framework.proof.funsim <> o' var
R418:418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R433:434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R447:447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R419:422 CertiOS.framework.model.language <> curs constr
R425:429 CertiOS.framework.model.language <> sskip constr
R431:431 CertiOS.framework.proof.funsim <> v var
R435:435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R441:442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R446:446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R436:440 CertiOS.framework.model.language <> kenil constr
R443:445 CertiOS.framework.proof.funsim <> ks' var
R414:415 CertiOS.framework.proof.funsim <> sd var
R408:412 CertiOS.framework.proof.funsim <> FSpec var
R372:375 CertiOS.framework.auxlibs.Maps <> join meth
R383:384 CertiOS.framework.proof.funsim <> O' var
R380:381 CertiOS.framework.proof.funsim <> Of var
R377:378 CertiOS.framework.proof.funsim <> Ok var
R346:352 CertiOS.framework.logic.assertion <> joinmem def
R358:359 CertiOS.framework.proof.funsim <> o' var
R356:356 CertiOS.framework.proof.funsim <> M var
R354:354 CertiOS.framework.proof.funsim <> o var
R328:331 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R317:317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R319:320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R323:324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R327:327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R318:318 CertiOS.framework.proof.funsim <> o var
R321:322 CertiOS.framework.proof.funsim <> Ok var
R325:326 CertiOS.framework.proof.funsim <> ab var
R332:332 CertiOS.framework.proof.funsim <> q var
R334:334 CertiOS.framework.proof.funsim <> v var
R280:282 Coq.Init.Logic <> :type_scope:x_'='_x not
R279:279 CertiOS.framework.proof.funsim <> E var
R283:290 CertiOS.framework.model.opsem <> get_lenv def
R293:300 CertiOS.framework.model.language <> get_smem def
R302:303 CertiOS.framework.proof.funsim <> o' var
R242:244 Coq.Init.Logic <> :type_scope:x_'='_x not
R241:241 CertiOS.framework.proof.funsim <> G var
R245:252 CertiOS.framework.model.opsem <> get_genv def
R255:262 CertiOS.framework.model.language <> get_smem def
R264:265 CertiOS.framework.proof.funsim <> o' var
R174:184 CertiOS.framework.logic.assertion <> GoodFunAsrt def
R187:187 CertiOS.framework.proof.funsim <> q var
R189:189 CertiOS.framework.proof.funsim <> v var
R141:145 CertiOS.framework.logic.inferules <> GoodI def
R152:153 CertiOS.framework.proof.funsim <> li var
R149:150 CertiOS.framework.proof.funsim <> sd var
R147:147 CertiOS.framework.proof.funsim <> I var
R952:965 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R910:918 CertiOS.framework.proof.simulation <> notabortm def
R920:920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R922:922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R951:951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R923:923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R926:926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R950:950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R929:932 CertiOS.framework.model.opsem <> ::x_'##'_x not
R933:937 CertiOS.framework.model.language <> kcall constr
R945:949 CertiOS.framework.model.language <> kstop constr
R966:966 Coq.Init.Logic <> :type_scope:'~'_x not
R967:975 CertiOS.framework.proof.simulation <> notabortm def
R976:976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R978:978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1005:1005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R979:979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R982:982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1004:1004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R985:986 CertiOS.framework.model.opsem <> ::x_'##'_x not
R987:991 CertiOS.framework.model.language <> kcall constr
R999:1003 CertiOS.framework.model.language <> kstop constr
R952:965 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R910:918 CertiOS.framework.proof.simulation <> notabortm def
R920:920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R922:922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R951:951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R923:923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R926:926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R950:950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R929:932 CertiOS.framework.model.opsem <> ::x_'##'_x not
R933:937 CertiOS.framework.model.language <> kcall constr
R945:949 CertiOS.framework.model.language <> kstop constr
R966:966 Coq.Init.Logic <> :type_scope:'~'_x not
R967:975 CertiOS.framework.proof.simulation <> notabortm def
R976:976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R978:978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1005:1005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R979:979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R982:982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1004:1004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R985:986 CertiOS.framework.model.opsem <> ::x_'##'_x not
R987:991 CertiOS.framework.model.language <> kcall constr
R999:1003 CertiOS.framework.model.language <> kstop constr
R1089:1090 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1074:1076 CertiOS.framework.proof.rulesoundlib <> frp def
R1078:1078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1080:1080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1088:1088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1081:1081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1084:1084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1087:1087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1091:1092 Coq.Init.Logic <> :type_scope:'~'_x not
R1108:1108 Coq.Init.Logic <> :type_scope:'~'_x not
R1093:1095 CertiOS.framework.proof.rulesoundlib <> frp def
R1097:1097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1099:1099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1107:1107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1100:1100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1103:1103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1106:1106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1089:1090 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1074:1076 CertiOS.framework.proof.rulesoundlib <> frp def
R1078:1078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1080:1080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1088:1088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1081:1081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1084:1084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1087:1087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1091:1092 Coq.Init.Logic <> :type_scope:'~'_x not
R1108:1108 Coq.Init.Logic <> :type_scope:'~'_x not
R1093:1095 CertiOS.framework.proof.rulesoundlib <> frp def
R1097:1097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1099:1099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1107:1107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1100:1100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1103:1103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1106:1106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1390:1393 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1357:1364 CertiOS.framework.model.opsem <> callcont def
R1370:1373 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1374:1378 CertiOS.framework.model.language <> kcall constr
R1394:1397 Coq.Init.Datatypes <> None constr
R1390:1393 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1357:1364 CertiOS.framework.model.opsem <> callcont def
R1370:1373 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1374:1378 CertiOS.framework.model.language <> kcall constr
R1394:1397 Coq.Init.Datatypes <> None constr
R1469:1470 Coq.Init.Logic <> :type_scope:x_'='_x not
R1436:1443 CertiOS.framework.model.opsem <> callcont def
R1449:1452 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1453:1457 CertiOS.framework.model.language <> kcall constr
R1471:1474 Coq.Init.Datatypes <> Some constr
R1477:1481 CertiOS.framework.model.language <> kcall constr
R1469:1470 Coq.Init.Logic <> :type_scope:x_'='_x not
R1436:1443 CertiOS.framework.model.opsem <> callcont def
R1449:1452 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1453:1457 CertiOS.framework.model.language <> kcall constr
R1471:1474 Coq.Init.Datatypes <> Some constr
R1477:1481 CertiOS.framework.model.language <> kcall constr
R1528:1545 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R1528:1545 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R1528:1545 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R1528:1545 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R1528:1545 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R1570:1575 Coq.Init.Logic <> eq_sym thm
R1570:1575 Coq.Init.Logic <> eq_sym thm
R1620:1632 CertiOS.framework.proof.rulesoundlib <> IsFcall_kstop thm
R1620:1632 CertiOS.framework.proof.rulesoundlib <> IsFcall_kstop thm
R1662:1675 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R1662:1675 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R1741:1757 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R1741:1757 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R1783:1790 CertiOS.framework.model.opsem <> loststep ind
R1904:1904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1907:1908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1910:1911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1914:1915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1917:1918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1921:1921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1871:1871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1886:1886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1901:1901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1872:1875 CertiOS.framework.model.language <> curs constr
R1878:1882 CertiOS.framework.model.language <> sskip constr
R1887:1887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1893:1894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1900:1900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1888:1892 CertiOS.framework.model.language <> kenil constr
R1895:1899 CertiOS.framework.model.language <> kstop constr
R1851:1851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1854:1855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1858:1859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1862:1863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1865:1866 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1869:1869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1794:1794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1813:1814 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1848:1848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1795:1798 CertiOS.framework.model.language <> curs constr
R1801:1805 CertiOS.framework.model.language <> sfree constr
R1807:1809 Coq.Init.Datatypes <> nil constr
R1815:1815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1821:1822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1847:1847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1816:1820 CertiOS.framework.model.language <> kenil constr
R1826:1829 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1830:1834 CertiOS.framework.model.language <> kcall constr
R1842:1846 CertiOS.framework.model.language <> kstop constr
R1783:1790 CertiOS.framework.model.opsem <> loststep ind
R1904:1904 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1907:1908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1910:1911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1914:1915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1917:1918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1921:1921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1871:1871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1886:1886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1901:1901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1872:1875 CertiOS.framework.model.language <> curs constr
R1878:1882 CertiOS.framework.model.language <> sskip constr
R1887:1887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1893:1894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1900:1900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1888:1892 CertiOS.framework.model.language <> kenil constr
R1895:1899 CertiOS.framework.model.language <> kstop constr
R1851:1851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1854:1855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1858:1859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1862:1863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1865:1866 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1869:1869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1794:1794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1813:1814 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1848:1848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1795:1798 CertiOS.framework.model.language <> curs constr
R1801:1805 CertiOS.framework.model.language <> sfree constr
R1807:1809 Coq.Init.Datatypes <> nil constr
R1815:1815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1821:1822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1847:1847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1816:1820 CertiOS.framework.model.language <> kenil constr
R1826:1829 CertiOS.framework.model.opsem <> ::x_'##'_x not
R1830:1834 CertiOS.framework.model.language <> kcall constr
R1842:1846 CertiOS.framework.model.language <> kstop constr
R1942:1950 CertiOS.framework.model.opsem <> ostc_step constr
R1942:1950 CertiOS.framework.model.opsem <> ostc_step constr
R1969:1977 CertiOS.framework.model.opsem <> stmt_step constr
R1969:1977 CertiOS.framework.model.opsem <> stmt_step constr
R2034:2050 CertiOS.framework.proof.rulesoundlib <> callcont_ks_kstop thm
R2034:2050 CertiOS.framework.proof.rulesoundlib <> callcont_ks_kstop thm
R2079:2085 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2087:2088 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2101:2104 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2089:2092 CertiOS.framework.auxlibs.Maps <> join meth
R2105:2108 CertiOS.framework.auxlibs.Maps <> join meth
R2079:2085 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2087:2088 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2101:2104 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2089:2092 CertiOS.framework.auxlibs.Maps <> join meth
R2105:2108 CertiOS.framework.auxlibs.Maps <> join meth
R2426:2436 CertiOS.framework.proof.rulesoundlib <> joinm2_disj thm
R2426:2436 CertiOS.framework.proof.rulesoundlib <> joinm2_disj thm
R2538:2553 CertiOS.framework.proof.absinfer_sound <> hmstepstar_trans thm
R2538:2553 CertiOS.framework.proof.absinfer_sound <> hmstepstar_trans thm
R2581:2602 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R2581:2602 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R2685:2699 CertiOS.framework.proof.rulesoundlib <> joinm2_join_ex1 thm
R2685:2699 CertiOS.framework.proof.rulesoundlib <> joinm2_join_ex1 thm
R2780:2786 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2788:2789 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2804:2807 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2790:2793 CertiOS.framework.auxlibs.Maps <> join meth
R2808:2811 CertiOS.framework.auxlibs.Maps <> join meth
R2780:2786 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2788:2789 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2804:2807 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2790:2793 CertiOS.framework.auxlibs.Maps <> join meth
R2808:2811 CertiOS.framework.auxlibs.Maps <> join meth
R2949:2969 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R2949:2969 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R2988:3006 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R2988:3006 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3045:3060 CertiOS.framework.proof.rulesoundlib <> joinm2_getenv_eq thm
R3183:3183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3185:3186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3188:3189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3191:3192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3194:3195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3197:3197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3183:3183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3185:3186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3188:3189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3191:3192 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3194:3195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3197:3197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3211:3219 CertiOS.framework.model.opsem <> ostc_step constr
R3211:3219 CertiOS.framework.model.opsem <> ostc_step constr
R3238:3246 CertiOS.framework.model.opsem <> stmt_step constr
R3238:3246 CertiOS.framework.model.opsem <> stmt_step constr
R3288:3305 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R3288:3305 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R3402:3415 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R3402:3415 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R3481:3497 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R3481:3497 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R3522:3528 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3530:3531 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3544:3547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3532:3535 CertiOS.framework.auxlibs.Maps <> join meth
R3548:3551 CertiOS.framework.auxlibs.Maps <> join meth
R3522:3528 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3530:3531 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3544:3547 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3532:3535 CertiOS.framework.auxlibs.Maps <> join meth
R3548:3551 CertiOS.framework.auxlibs.Maps <> join meth
R3652:3659 CertiOS.framework.auxlibs.Maps <> disjoint def
R3652:3659 CertiOS.framework.auxlibs.Maps <> disjoint def
R3716:3726 CertiOS.framework.proof.rulesoundlib <> fcall_kstop thm
R3716:3726 CertiOS.framework.proof.rulesoundlib <> fcall_kstop thm
R3799:3815 CertiOS.framework.proof.rulesoundlib <> not_free_cont_loc thm
R3799:3815 CertiOS.framework.proof.rulesoundlib <> not_free_cont_loc thm
R4107:4121 CertiOS.framework.proof.rulesoundlib <> joinm2_join_ex1 thm
R4107:4121 CertiOS.framework.proof.rulesoundlib <> joinm2_join_ex1 thm
R4188:4209 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R4188:4209 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R4273:4279 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4281:4282 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4296:4299 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4283:4286 CertiOS.framework.auxlibs.Maps <> join meth
R4300:4303 CertiOS.framework.auxlibs.Maps <> join meth
R4273:4279 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4281:4282 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4296:4299 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4283:4286 CertiOS.framework.auxlibs.Maps <> join meth
R4300:4303 CertiOS.framework.auxlibs.Maps <> join meth
R4464:4484 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R4464:4484 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R4503:4521 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R4503:4521 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R4585:4598 CertiOS.framework.proof.rulesoundlib <> loststep_keepG thm
R4585:4598 CertiOS.framework.proof.rulesoundlib <> loststep_keepG thm
R4616:4632 CertiOS.framework.proof.rulesoundlib <> get_genv_join3_eq thm
R4616:4632 CertiOS.framework.proof.rulesoundlib <> get_genv_join3_eq thm
R4958:4974 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R4958:4974 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R5040:5056 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R5040:5056 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R5127:5144 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R5127:5144 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R5313:5329 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R5313:5329 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R5387:5400 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R5387:5400 CertiOS.framework.proof.rulesoundlib <> join_frame_dis thm
R5466:5482 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R5466:5482 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R5597:5604 CertiOS.framework.auxlibs.Maps <> disjoint def
R5597:5604 CertiOS.framework.auxlibs.Maps <> disjoint def
R5651:5658 CertiOS.framework.auxlibs.Maps <> disjoint def
R5732:5759 CertiOS.framework.proof.rulesoundlib <> loststepabt_cont_loststepabt thm
R5732:5759 CertiOS.framework.proof.rulesoundlib <> loststepabt_cont_loststepabt thm
R6413:6429 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R6413:6429 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R6459:6475 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R6459:6475 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R6499:6505 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6507:6508 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6521:6524 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6509:6512 CertiOS.framework.auxlibs.Maps <> join meth
R6525:6528 CertiOS.framework.auxlibs.Maps <> join meth
R6499:6505 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6507:6508 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6521:6524 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6509:6512 CertiOS.framework.auxlibs.Maps <> join meth
R6525:6528 CertiOS.framework.auxlibs.Maps <> join meth
R6888:6909 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R6888:6909 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R6973:6979 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6981:6982 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6996:6999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6983:6986 CertiOS.framework.auxlibs.Maps <> join meth
R7000:7003 CertiOS.framework.auxlibs.Maps <> join meth
R6973:6979 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6981:6982 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R6996:6999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6983:6986 CertiOS.framework.auxlibs.Maps <> join meth
R7000:7003 CertiOS.framework.auxlibs.Maps <> join meth
R7115:7130 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_intro thm
R7115:7130 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_intro thm
R7221:7227 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7229:7230 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7244:7247 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7231:7234 CertiOS.framework.auxlibs.Maps <> join meth
R7248:7251 CertiOS.framework.auxlibs.Maps <> join meth
R7221:7227 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7229:7230 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7244:7247 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7231:7234 CertiOS.framework.auxlibs.Maps <> join meth
R7248:7251 CertiOS.framework.auxlibs.Maps <> join meth
R7423:7443 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R7423:7443 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R7463:7479 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R7463:7479 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R7638:7652 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_elim thm
R7638:7652 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_elim thm
R7719:7725 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7728:7729 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7744:7747 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7730:7733 CertiOS.framework.auxlibs.Maps <> join meth
R7748:7751 CertiOS.framework.auxlibs.Maps <> join meth
R7719:7725 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7728:7729 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R7744:7747 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7730:7733 CertiOS.framework.auxlibs.Maps <> join meth
R7748:7751 CertiOS.framework.auxlibs.Maps <> join meth
R7899:7910 CertiOS.framework.proof.rulesoundlib <> get_genv_jeq thm
R7899:7910 CertiOS.framework.proof.rulesoundlib <> get_genv_jeq thm
R7950:7961 CertiOS.framework.proof.rulesoundlib <> get_genv_jeq thm
R7950:7961 CertiOS.framework.proof.rulesoundlib <> get_genv_jeq thm
R8319:8335 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R8319:8335 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R8363:8379 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R8363:8379 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R8403:8409 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8411:8412 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8425:8428 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8413:8416 CertiOS.framework.auxlibs.Maps <> join meth
R8429:8432 CertiOS.framework.auxlibs.Maps <> join meth
R8403:8409 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8411:8412 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8425:8428 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8413:8416 CertiOS.framework.auxlibs.Maps <> join meth
R8429:8432 CertiOS.framework.auxlibs.Maps <> join meth
R8755:8776 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R8755:8776 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R8844:8846 CertiOS.framework.model.language <> ::x_';;'_x not
R8839:8843 CertiOS.framework.model.language <> sched constr
R8844:8846 CertiOS.framework.model.language <> ::x_';;'_x not
R8839:8843 CertiOS.framework.model.language <> sched constr
R8869:8875 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8877:8878 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8892:8895 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8879:8882 CertiOS.framework.auxlibs.Maps <> join meth
R8896:8899 CertiOS.framework.auxlibs.Maps <> join meth
R8869:8875 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8877:8878 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8892:8895 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8879:8882 CertiOS.framework.auxlibs.Maps <> join meth
R8896:8899 CertiOS.framework.auxlibs.Maps <> join meth
R8971:8987 CertiOS.framework.proof.rulesoundlib <> joinmem2_ex_intro thm
R8971:8987 CertiOS.framework.proof.rulesoundlib <> joinmem2_ex_intro thm
R9088:9094 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9097:9098 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9112:9115 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9099:9102 CertiOS.framework.auxlibs.Maps <> join meth
R9116:9119 CertiOS.framework.auxlibs.Maps <> join meth
R9088:9094 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9097:9098 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9112:9115 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9099:9102 CertiOS.framework.auxlibs.Maps <> join meth
R9116:9119 CertiOS.framework.auxlibs.Maps <> join meth
R9267:9287 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R9267:9287 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R9311:9327 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R9311:9327 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R9355:9375 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R9355:9375 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R9400:9415 CertiOS.framework.proof.rulesoundlib <> join3_satp_swinv thm
R9400:9415 CertiOS.framework.proof.rulesoundlib <> join3_satp_swinv thm
R9452:9470 CertiOS.framework.proof.rulesoundlib <> local_inv_satp_hold thm
R9452:9470 CertiOS.framework.proof.rulesoundlib <> local_inv_satp_hold thm
R9598:9604 CertiOS.framework.logic.assertion <> joinmem def
R9706:9722 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_intro2 thm
R9706:9722 CertiOS.framework.proof.rulesoundlib <> joinmem_ex_intro2 thm
R9789:9795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9798:9799 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9814:9816 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9800:9803 CertiOS.framework.auxlibs.Maps <> join meth
R9817:9820 CertiOS.framework.auxlibs.Maps <> join meth
R9789:9795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9798:9799 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R9814:9816 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9800:9803 CertiOS.framework.auxlibs.Maps <> join meth
R9817:9820 CertiOS.framework.auxlibs.Maps <> join meth
R9976:9994 CertiOS.framework.proof.rulesoundlib <> get_genv_joinmem_eq thm
R9976:9994 CertiOS.framework.proof.rulesoundlib <> get_genv_joinmem_eq thm
R10063:10082 CertiOS.framework.proof.rulesoundlib <> join3_satp_swinv_rev thm
R10063:10082 CertiOS.framework.proof.rulesoundlib <> join3_satp_swinv_rev thm
R10146:10152 CertiOS.framework.logic.assertion <> joinmem def
R10387:10403 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R10387:10403 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R10510:10526 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R10510:10526 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R10634:10651 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R10634:10651 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R10756:10772 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R10756:10772 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R11153:11169 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R11153:11169 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R11197:11213 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R11197:11213 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R11237:11243 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R11245:11246 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R11259:11262 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11247:11250 CertiOS.framework.auxlibs.Maps <> join meth
R11263:11266 CertiOS.framework.auxlibs.Maps <> join meth
R11237:11243 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R11245:11246 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R11259:11262 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11247:11250 CertiOS.framework.auxlibs.Maps <> join meth
R11263:11266 CertiOS.framework.auxlibs.Maps <> join meth
R11616:11637 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R11616:11637 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R11755:11770 CertiOS.framework.proof.rulesoundlib <> abs_crt_locality thm
R11755:11770 CertiOS.framework.proof.rulesoundlib <> abs_crt_locality thm
R11854:11870 CertiOS.framework.proof.rulesoundlib <> joinmem2_ex_intro thm
R11854:11870 CertiOS.framework.proof.rulesoundlib <> joinmem2_ex_intro thm
R11949:11955 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11958:11958 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11961:11962 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11977:11980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11963:11966 CertiOS.framework.auxlibs.Maps <> join meth
R11994:11996 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11981:11984 CertiOS.framework.auxlibs.Maps <> join meth
R12011:12014 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11997:12000 CertiOS.framework.auxlibs.Maps <> join meth
R12015:12018 CertiOS.framework.auxlibs.Maps <> join meth
R11949:11955 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11958:11958 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11961:11962 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R11977:11980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11963:11966 CertiOS.framework.auxlibs.Maps <> join meth
R11994:11996 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11981:11984 CertiOS.framework.auxlibs.Maps <> join meth
R12011:12014 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11997:12000 CertiOS.framework.auxlibs.Maps <> join meth
R12015:12018 CertiOS.framework.auxlibs.Maps <> join meth
R12198:12217 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12198:12217 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12249:12268 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12249:12268 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12300:12319 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12300:12319 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R12371:12391 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R12371:12391 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R12420:12438 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R12420:12438 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R12479:12494 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_ocr thm
R12479:12494 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_ocr thm
R12576:12595 CertiOS.framework.proof.rulesoundlib <> get_genv_joinmem3_eq thm
R12576:12595 CertiOS.framework.proof.rulesoundlib <> get_genv_joinmem3_eq thm
R12616:12634 Coq.Logic.Classical_Prop <> NNPP thm
R12616:12634 Coq.Logic.Classical_Prop <> NNPP thm
R13021:13037 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R13021:13037 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono thm
R13065:13081 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R13065:13081 CertiOS.framework.proof.rulesoundlib <> joinmem_disj_disj thm
R13105:13111 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13113:13114 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13127:13130 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13115:13118 CertiOS.framework.auxlibs.Maps <> join meth
R13131:13134 CertiOS.framework.auxlibs.Maps <> join meth
R13105:13111 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13113:13114 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13127:13130 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13115:13118 CertiOS.framework.auxlibs.Maps <> join meth
R13131:13134 CertiOS.framework.auxlibs.Maps <> join meth
R13353:13374 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R13353:13374 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R13482:13501 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R13482:13501 CertiOS.framework.proof.rulesoundlib <> evalval_mono_joinmem thm
R13657:13676 CertiOS.framework.proof.rulesoundlib <> abs_delself_locality thm
R13657:13676 CertiOS.framework.proof.rulesoundlib <> abs_delself_locality thm
R13740:13746 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13748:13749 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13763:13766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13750:13753 CertiOS.framework.auxlibs.Maps <> join meth
R13767:13770 CertiOS.framework.auxlibs.Maps <> join meth
R13740:13746 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13748:13749 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R13763:13766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13750:13753 CertiOS.framework.auxlibs.Maps <> join meth
R13767:13770 CertiOS.framework.auxlibs.Maps <> join meth
R13916:13936 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R13916:13936 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R13965:13983 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R13965:13983 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R14163:14183 CertiOS.framework.proof.rulesoundlib <> abs_delother_locality thm
R14163:14183 CertiOS.framework.proof.rulesoundlib <> abs_delother_locality thm
R14247:14253 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14255:14256 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14270:14273 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14257:14260 CertiOS.framework.auxlibs.Maps <> join meth
R14274:14277 CertiOS.framework.auxlibs.Maps <> join meth
R14247:14253 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14255:14256 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14270:14273 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14257:14260 CertiOS.framework.auxlibs.Maps <> join meth
R14274:14277 CertiOS.framework.auxlibs.Maps <> join meth
R14423:14443 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R14423:14443 CertiOS.framework.proof.rulesoundlib <> joinmem_satp_mono_rev thm
R14472:14490 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R14472:14490 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R14564:14587 CertiOS.framework.proof.rulesoundlib <> local_inv_satp_join_hold thm
R14564:14587 CertiOS.framework.proof.rulesoundlib <> local_inv_satp_join_hold thm
R14616:14622 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14624:14625 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14643:14646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14626:14632 CertiOS.framework.logic.assertion <> joinmem def
R14647:14653 CertiOS.framework.logic.assertion <> joinmem def
R14616:14622 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14624:14625 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R14643:14646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14626:14632 CertiOS.framework.logic.assertion <> joinmem def
R14647:14653 CertiOS.framework.logic.assertion <> joinmem def
R14699:14705 CertiOS.framework.logic.assertion <> joinmem def
R14850:14853 CertiOS.framework.auxlibs.Maps <> join meth
R14850:14853 CertiOS.framework.auxlibs.Maps <> join meth
R14885:14888 CertiOS.framework.auxlibs.Maps <> join meth
R14885:14888 CertiOS.framework.auxlibs.Maps <> join meth
R14925:14932 CertiOS.framework.proof.rulesoundlib <> join_ex2 thm
R14925:14932 CertiOS.framework.proof.rulesoundlib <> join_ex2 thm
R15047:15066 CertiOS.framework.proof.rulesoundlib <> get_genv_join2del_eq thm
R15047:15066 CertiOS.framework.proof.rulesoundlib <> get_genv_join2del_eq thm
prf 15090:15104 <> fun_free_ignore
R15205:15211 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15252:15259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15278:15286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15304:15320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15649:15654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15333:15338 CertiOS.framework.model.language <> taskst def
R15346:15351 CertiOS.framework.model.language <> osabst def
R15361:15365 CertiOS.framework.logic.assertion <> absop def
R15371:15376 Coq.Init.Datatypes <> option ind
R15378:15380 CertiOS.framework.model.memory <> val ind
R15416:15428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15465:15476 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15477:15486 CertiOS.framework.proof.simulation <> MethSimMod coind
R15648:15648 CertiOS.framework.proof.funsim <> t var
R15612:15618 CertiOS.framework.logic.assertion <> getasrt proj
R15621:15624 CertiOS.framework.proof.funsim <> post var
R15644:15644 CertiOS.framework.proof.funsim <> t var
R15637:15642 CertiOS.framework.proof.funsim <> logicl var
R15635:15635 CertiOS.framework.proof.funsim <> v var
R15627:15629 Coq.Lists.List <> rev def
R15631:15632 CertiOS.framework.proof.funsim <> vl var
R15595:15600 CertiOS.framework.logic.assertion <> Afalse constr
R15587:15593 CertiOS.framework.logic.assertion <> arfalse def
R15584:15584 CertiOS.framework.proof.funsim <> I var
R15581:15582 CertiOS.framework.proof.funsim <> li var
R15579:15579 CertiOS.framework.proof.funsim <> O var
R15575:15577 CertiOS.framework.proof.funsim <> aop var
R15553:15553 CertiOS.framework.proof.funsim <> o var
R15497:15497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15515:15516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15551:15551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15498:15501 CertiOS.framework.model.language <> curs constr
R15504:15508 CertiOS.framework.model.language <> sfree constr
R15513:15513 CertiOS.framework.proof.funsim <> v var
R15510:15511 CertiOS.framework.proof.funsim <> al var
R15517:15517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15523:15525 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15550:15550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15518:15522 CertiOS.framework.model.language <> kenil constr
R15528:15531 CertiOS.framework.model.opsem <> ::x_'##'_x not
R15532:15536 CertiOS.framework.model.language <> kcall constr
R15545:15549 CertiOS.framework.model.language <> kstop constr
R15542:15543 CertiOS.framework.proof.funsim <> E' var
R15540:15540 CertiOS.framework.proof.funsim <> s var
R15538:15538 CertiOS.framework.proof.funsim <> f var
R15526:15527 CertiOS.framework.proof.funsim <> ks var
R15494:15495 CertiOS.framework.proof.funsim <> sd var
R15488:15492 CertiOS.framework.proof.funsim <> FSpec var
R15460:15462 Coq.Init.Logic <> :type_scope:x_'='_x not
R15429:15435 CertiOS.framework.model.opsem <> getaddr def
R15438:15445 CertiOS.framework.model.opsem <> get_lenv def
R15448:15455 CertiOS.framework.model.language <> get_smem def
R15457:15457 CertiOS.framework.proof.funsim <> o var
R15463:15464 CertiOS.framework.proof.funsim <> al var
R15406:15410 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R15415:15415 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R15395:15395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15397:15398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15400:15401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15405:15405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15396:15396 CertiOS.framework.proof.funsim <> o var
R15399:15399 CertiOS.framework.proof.funsim <> O var
R15402:15404 CertiOS.framework.proof.funsim <> aop var
R15411:15412 CertiOS.framework.proof.funsim <> pr var
R15414:15414 CertiOS.framework.proof.funsim <> v var
R15297:15299 Coq.Init.Logic <> :type_scope:x_'='_x not
R15287:15293 CertiOS.framework.model.opsem <> intcont def
R15295:15296 CertiOS.framework.proof.funsim <> ks var
R15300:15303 Coq.Init.Datatypes <> None constr
R15271:15273 Coq.Init.Logic <> :type_scope:x_'='_x not
R15260:15267 CertiOS.framework.model.opsem <> callcont def
R15269:15270 CertiOS.framework.proof.funsim <> ks var
R15274:15277 Coq.Init.Datatypes <> None constr
R15219:15221 Coq.Init.Logic <> :type_scope:x_'='_x not
R15212:15215 Coq.Init.Datatypes <> Some constr
R15217:15218 CertiOS.framework.proof.funsim <> pr var
R15222:15230 CertiOS.framework.logic.inferules <> BuildRetI def
R15251:15251 CertiOS.framework.proof.funsim <> t var
R15246:15249 CertiOS.framework.proof.funsim <> post var
R15239:15244 CertiOS.framework.proof.funsim <> logicl var
R15236:15237 CertiOS.framework.proof.funsim <> vl var
R15234:15234 CertiOS.framework.proof.funsim <> f var
R15232:15232 CertiOS.framework.proof.funsim <> P var
R15170:15182 CertiOS.framework.proof.rulesoundlib <> post_imp_linv def
R15204:15204 CertiOS.framework.proof.funsim <> t var
R15197:15202 CertiOS.framework.proof.funsim <> logicl var
R15194:15195 CertiOS.framework.proof.funsim <> vl var
R15190:15191 CertiOS.framework.proof.funsim <> li var
R15185:15188 CertiOS.framework.proof.funsim <> post var
R15796:15804 CertiOS.framework.logic.inferules <> BuildRetI def
R15895:15900 CertiOS.framework.logic.inferules <> buildq def
R15903:15910 CertiOS.framework.model.opsem <> revlcons def
R15895:15900 CertiOS.framework.logic.inferules <> buildq def
R15903:15910 CertiOS.framework.model.opsem <> revlcons def
R16049:16051 CertiOS.framework.logic.assertion <> sat def
R16067:16069 CertiOS.framework.logic.assertion <> sat def
R16067:16069 CertiOS.framework.logic.assertion <> sat def
R16227:16236 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R16227:16236 CertiOS.framework.proof.rulesoundlib <> free_intro thm
R16325:16343 CertiOS.framework.proof.rulesoundlib <> free_stepn_sim_hold thm
R16325:16343 CertiOS.framework.proof.rulesoundlib <> free_stepn_sim_hold thm
R16459:16474 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R16459:16474 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R16459:16474 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R16459:16474 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R16459:16474 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R16499:16504 Coq.Init.Logic <> sym_eq syndef
R16499:16504 Coq.Init.Logic <> sym_eq syndef
R16561:16566 CertiOS.framework.proof.simulation <> joinm2 def
R16585:16591 CertiOS.framework.logic.assertion <> joinmem def
R16626:16626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16629:16630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16633:16634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16638:16639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16642:16643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16646:16646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16626:16626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16629:16630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16633:16634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16638:16639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16642:16643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16646:16646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16720:16726 CertiOS.framework.logic.assertion <> joinmem def
R16778:16781 CertiOS.framework.logic.inferules <> satp def
R16808:16821 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R16808:16821 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R16864:16879 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R16864:16879 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R17109:17124 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R17109:17124 CertiOS.framework.proof.rulesoundlib <> local_inv_E_irev thm
R17143:17161 CertiOS.framework.proof.rulesoundlib <> good_fun_asrt_absop thm
R17143:17161 CertiOS.framework.proof.rulesoundlib <> good_fun_asrt_absop thm
R17180:17186 CertiOS.framework.logic.assertion <> getprop proj
R17195:17197 Coq.Lists.List <> rev def
R17180:17186 CertiOS.framework.logic.assertion <> getprop proj
R17195:17197 Coq.Lists.List <> rev def
R17391:17399 CertiOS.framework.model.opsem <> ostc_step constr
R17391:17399 CertiOS.framework.model.opsem <> ostc_step constr
R17418:17426 CertiOS.framework.model.opsem <> stmt_step constr
R17418:17426 CertiOS.framework.model.opsem <> stmt_step constr
R17468:17483 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R17468:17483 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
prf 17545:17557 <> fun_free_comp
R17660:17666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17667:17674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18073:18087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18225:18234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18235:18244 CertiOS.framework.proof.simulation <> MethSimMod coind
R18406:18406 CertiOS.framework.proof.funsim <> t var
R18370:18376 CertiOS.framework.logic.assertion <> getasrt proj
R18379:18382 CertiOS.framework.proof.funsim <> post var
R18402:18402 CertiOS.framework.proof.funsim <> t var
R18395:18400 CertiOS.framework.proof.funsim <> logicl var
R18393:18393 CertiOS.framework.proof.funsim <> v var
R18385:18387 Coq.Lists.List <> rev def
R18389:18390 CertiOS.framework.proof.funsim <> vl var
R18333:18338 CertiOS.framework.logic.assertion <> Afalse constr
R18325:18331 CertiOS.framework.logic.assertion <> arfalse def
R18323:18323 CertiOS.framework.proof.funsim <> I var
R18320:18321 CertiOS.framework.proof.funsim <> li var
R18318:18318 CertiOS.framework.proof.funsim <> O var
R18312:18316 CertiOS.framework.proof.funsim <> gamma var
R18292:18292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18294:18295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18297:18298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18300:18301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18305:18306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18310:18310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18293:18293 CertiOS.framework.proof.funsim <> G var
R18296:18296 CertiOS.framework.proof.funsim <> E var
R18299:18299 CertiOS.framework.proof.funsim <> M var
R18302:18304 CertiOS.framework.proof.funsim <> isr var
R18307:18309 CertiOS.framework.proof.funsim <> aux var
R18255:18255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18257:18258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18289:18289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18256:18256 CertiOS.framework.proof.funsim <> c var
R18259:18259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18262:18263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18288:18288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18260:18261 CertiOS.framework.proof.funsim <> ke var
R18266:18269 CertiOS.framework.model.opsem <> ::x_'##'_x not
R18270:18274 CertiOS.framework.model.language <> kcall constr
R18283:18287 CertiOS.framework.model.language <> kstop constr
R18280:18281 CertiOS.framework.proof.funsim <> E' var
R18278:18278 CertiOS.framework.proof.funsim <> s var
R18276:18276 CertiOS.framework.proof.funsim <> f var
R18264:18265 CertiOS.framework.proof.funsim <> ks var
R18252:18253 CertiOS.framework.proof.funsim <> sd var
R18246:18250 CertiOS.framework.proof.funsim <> FSpec var
R18133:18142 CertiOS.framework.proof.simulation <> MethSimMod coind
R18224:18224 CertiOS.framework.proof.funsim <> t var
R18211:18214 CertiOS.framework.logic.inferules <> lift def
R18216:18221 CertiOS.framework.logic.assertion <> Afalse constr
R18203:18208 CertiOS.framework.logic.assertion <> Afalse constr
R18200:18201 CertiOS.framework.proof.funsim <> pr var
R18198:18198 CertiOS.framework.proof.funsim <> I var
R18195:18196 CertiOS.framework.proof.funsim <> li var
R18193:18193 CertiOS.framework.proof.funsim <> O var
R18187:18191 CertiOS.framework.proof.funsim <> gamma var
R18167:18167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18169:18170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18172:18173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18175:18176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18180:18181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18185:18185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18168:18168 CertiOS.framework.proof.funsim <> G var
R18171:18171 CertiOS.framework.proof.funsim <> E var
R18174:18174 CertiOS.framework.proof.funsim <> M var
R18177:18179 CertiOS.framework.proof.funsim <> isr var
R18182:18184 CertiOS.framework.proof.funsim <> aux var
R18154:18154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18156:18157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18165:18165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18155:18155 CertiOS.framework.proof.funsim <> c var
R18158:18158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18161:18161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18164:18164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18159:18160 CertiOS.framework.proof.funsim <> ke var
R18162:18163 CertiOS.framework.proof.funsim <> ks var
R18150:18151 CertiOS.framework.proof.funsim <> sd var
R18144:18148 CertiOS.framework.proof.funsim <> FSpec var
R17687:17692 CertiOS.framework.model.language <> taskst def
R17700:17705 CertiOS.framework.model.language <> osabst def
R17715:17719 CertiOS.framework.logic.assertion <> absop def
R17725:17730 Coq.Init.Datatypes <> option ind
R17732:17734 CertiOS.framework.model.memory <> val ind
R17773:17785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17804:17816 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17838:17849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17886:17897 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17898:17907 CertiOS.framework.proof.simulation <> MethSimMod coind
R18072:18072 CertiOS.framework.proof.funsim <> t var
R18036:18042 CertiOS.framework.logic.assertion <> getasrt proj
R18045:18048 CertiOS.framework.proof.funsim <> post var
R18068:18068 CertiOS.framework.proof.funsim <> t var
R18061:18066 CertiOS.framework.proof.funsim <> logicl var
R18059:18059 CertiOS.framework.proof.funsim <> v var
R18051:18053 Coq.Lists.List <> rev def
R18055:18056 CertiOS.framework.proof.funsim <> vl var
R17997:18002 CertiOS.framework.logic.assertion <> Afalse constr
R17989:17995 CertiOS.framework.logic.assertion <> arfalse def
R17987:17987 CertiOS.framework.proof.funsim <> I var
R17984:17985 CertiOS.framework.proof.funsim <> li var
R17982:17982 CertiOS.framework.proof.funsim <> O var
R17978:17980 CertiOS.framework.proof.funsim <> aop var
R17976:17976 CertiOS.framework.proof.funsim <> o var
R17919:17919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17937:17938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17974:17974 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17920:17923 CertiOS.framework.model.language <> curs constr
R17926:17930 CertiOS.framework.model.language <> sfree constr
R17935:17935 CertiOS.framework.proof.funsim <> v var
R17932:17933 CertiOS.framework.proof.funsim <> al var
R17939:17939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17945:17946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17973:17973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17940:17944 CertiOS.framework.model.language <> kenil constr
R17950:17954 CertiOS.framework.model.opsem <> ::x_'##'_x not
R17955:17959 CertiOS.framework.model.language <> kcall constr
R17968:17972 CertiOS.framework.model.language <> kstop constr
R17965:17966 CertiOS.framework.proof.funsim <> E' var
R17963:17963 CertiOS.framework.proof.funsim <> s var
R17961:17961 CertiOS.framework.proof.funsim <> f var
R17947:17949 CertiOS.framework.proof.funsim <> ks1 var
R17915:17916 CertiOS.framework.proof.funsim <> sd var
R17909:17913 CertiOS.framework.proof.funsim <> FSpec var
R17881:17883 Coq.Init.Logic <> :type_scope:x_'='_x not
R17850:17856 CertiOS.framework.model.opsem <> getaddr def
R17859:17866 CertiOS.framework.model.opsem <> get_lenv def
R17869:17876 CertiOS.framework.model.language <> get_smem def
R17878:17878 CertiOS.framework.proof.funsim <> o var
R17884:17885 CertiOS.framework.proof.funsim <> al var
R17828:17832 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R17837:17837 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R17817:17817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17819:17820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17822:17823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17827:17827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17818:17818 CertiOS.framework.proof.funsim <> o var
R17821:17821 CertiOS.framework.proof.funsim <> O var
R17824:17826 CertiOS.framework.proof.funsim <> aop var
R17833:17834 CertiOS.framework.proof.funsim <> pr var
R17836:17836 CertiOS.framework.proof.funsim <> v var
R17797:17799 Coq.Init.Logic <> :type_scope:x_'='_x not
R17786:17792 CertiOS.framework.model.opsem <> intcont def
R17794:17796 CertiOS.framework.proof.funsim <> ks1 var
R17800:17803 Coq.Init.Datatypes <> None constr
R17765:17768 Coq.Init.Logic <> :type_scope:x_'='_x not
R17753:17760 CertiOS.framework.model.opsem <> callcont def
R17762:17764 CertiOS.framework.proof.funsim <> ks1 var
R17769:17772 Coq.Init.Datatypes <> None constr
R17626:17628 Coq.Init.Logic <> :type_scope:x_'='_x not
R17619:17622 Coq.Init.Datatypes <> Some constr
R17624:17625 CertiOS.framework.proof.funsim <> pr var
R17629:17637 CertiOS.framework.logic.inferules <> BuildRetI def
R17659:17659 CertiOS.framework.proof.funsim <> t var
R17654:17657 CertiOS.framework.proof.funsim <> post var
R17647:17652 CertiOS.framework.proof.funsim <> logicl var
R17644:17645 CertiOS.framework.proof.funsim <> vl var
R17641:17641 CertiOS.framework.proof.funsim <> f var
R17639:17639 CertiOS.framework.proof.funsim <> P var
R18500:18503 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18479:18487 CertiOS.framework.proof.simulation <> notabortm def
R18489:18489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18491:18491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18499:18499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18492:18492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18495:18495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18498:18498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18504:18506 Coq.Init.Logic <> :type_scope:'~'_x not
R18507:18515 CertiOS.framework.proof.simulation <> notabortm def
R18517:18517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18519:18519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18527:18527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18520:18520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18523:18523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18526:18526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18500:18503 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18479:18487 CertiOS.framework.proof.simulation <> notabortm def
R18489:18489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18491:18491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18499:18499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18492:18492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18495:18495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18498:18498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18504:18506 Coq.Init.Logic <> :type_scope:'~'_x not
R18507:18515 CertiOS.framework.proof.simulation <> notabortm def
R18517:18517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18519:18519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18527:18527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18520:18520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18523:18523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18526:18526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18667:18674 CertiOS.framework.auxlibs.Maps <> disjoint def
R18667:18674 CertiOS.framework.auxlibs.Maps <> disjoint def
R18772:18786 CertiOS.framework.proof.rulesoundlib <> cont_frame_mono thm
R18772:18786 CertiOS.framework.proof.rulesoundlib <> cont_frame_mono thm
R18877:18885 CertiOS.framework.proof.rulesoundlib <> fcall_not thm
R18877:18885 CertiOS.framework.proof.rulesoundlib <> fcall_not thm
R19337:19353 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R19337:19353 CertiOS.framework.proof.rulesoundlib <> ks_puls_kcall_neq thm
R19416:19432 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R19416:19432 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R19495:19512 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R19495:19512 CertiOS.framework.proof.rulesoundlib <> callcont_not_none' thm
R19579:19595 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R19579:19595 CertiOS.framework.proof.rulesoundlib <> callcont_not_none thm
R19696:19724 CertiOS.framework.proof.rulesoundlib <> loststepabt_cont_loststepabt' thm
R19696:19724 CertiOS.framework.proof.rulesoundlib <> loststepabt_cont_loststepabt' thm
R21388:21395 CertiOS.framework.auxlibs.Maps <> disjoint def
R21482:21487 CertiOS.framework.proof.simulation <> joinm2 def
R21507:21513 CertiOS.framework.logic.assertion <> joinmem def
R21554:21559 CertiOS.framework.proof.simulation <> getmem def
R21802:21817 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R21802:21817 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R21802:21817 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R21802:21817 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R21802:21817 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R21841:21846 Coq.Init.Logic <> eq_sym thm
R21841:21846 Coq.Init.Logic <> eq_sym thm
R21938:21943 CertiOS.framework.proof.simulation <> joinm2 def
R21963:21969 CertiOS.framework.logic.assertion <> joinmem def
R22010:22015 CertiOS.framework.proof.simulation <> getmem def
R22188:22193 CertiOS.framework.proof.simulation <> joinm2 def
R22213:22219 CertiOS.framework.logic.assertion <> joinmem def
R22327:22330 Coq.Init.Logic <> :type_scope:x_'='_x not
R22291:22298 CertiOS.framework.model.opsem <> callcont def
R22304:22307 CertiOS.framework.model.opsem <> ::x_'##'_x not
R22308:22312 CertiOS.framework.model.language <> kcall constr
R22321:22325 CertiOS.framework.model.language <> kstop constr
R22331:22334 Coq.Init.Datatypes <> Some constr
R22337:22341 CertiOS.framework.model.language <> kcall constr
R22350:22354 CertiOS.framework.model.language <> kstop constr
R22327:22330 Coq.Init.Logic <> :type_scope:x_'='_x not
R22291:22298 CertiOS.framework.model.opsem <> callcont def
R22304:22307 CertiOS.framework.model.opsem <> ::x_'##'_x not
R22308:22312 CertiOS.framework.model.language <> kcall constr
R22321:22325 CertiOS.framework.model.language <> kstop constr
R22331:22334 Coq.Init.Datatypes <> Some constr
R22337:22341 CertiOS.framework.model.language <> kcall constr
R22350:22354 CertiOS.framework.model.language <> kstop constr
R22368:22383 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R22368:22383 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R22481:22487 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R22490:22491 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R22502:22504 Coq.Init.Logic <> :type_scope:x_'='_x not
R22492:22498 CertiOS.framework.model.opsem <> getaddr def
R22481:22487 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R22490:22491 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R22502:22504 Coq.Init.Logic <> :type_scope:x_'='_x not
R22492:22498 CertiOS.framework.model.opsem <> getaddr def
R22519:22537 CertiOS.framework.proof.rulesoundlib <> get_env_addrlist_ex thm
R22519:22537 CertiOS.framework.proof.rulesoundlib <> get_env_addrlist_ex thm
R22577:22577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22579:22580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22583:22584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22586:22587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22589:22590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22592:22592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22577:22577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22579:22580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22583:22584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22586:22587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22589:22590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22592:22592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22604:22612 CertiOS.framework.model.opsem <> ostc_step constr
R22604:22612 CertiOS.framework.model.opsem <> ostc_step constr
R22631:22639 CertiOS.framework.model.opsem <> stmt_step constr
R22631:22639 CertiOS.framework.model.opsem <> stmt_step constr
R22681:22696 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R22681:22696 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R22956:22961 CertiOS.framework.proof.simulation <> joinm2 def
R22981:22987 CertiOS.framework.logic.assertion <> joinmem def
R23028:23033 CertiOS.framework.proof.simulation <> getmem def
R23131:23136 CertiOS.framework.proof.simulation <> joinm2 def
R23156:23162 CertiOS.framework.logic.assertion <> joinmem def
R23255:23281 CertiOS.framework.proof.rulesoundlib <> callcont_intcont_kcall_none thm
R23255:23281 CertiOS.framework.proof.rulesoundlib <> callcont_intcont_kcall_none thm
R23342:23345 Coq.Init.Logic <> :type_scope:x_'='_x not
R23306:23313 CertiOS.framework.model.opsem <> callcont def
R23319:23322 CertiOS.framework.model.opsem <> ::x_'##'_x not
R23323:23327 CertiOS.framework.model.language <> kcall constr
R23336:23340 CertiOS.framework.model.language <> kstop constr
R23346:23349 Coq.Init.Datatypes <> Some constr
R23352:23356 CertiOS.framework.model.language <> kcall constr
R23365:23369 CertiOS.framework.model.language <> kstop constr
R23342:23345 Coq.Init.Logic <> :type_scope:x_'='_x not
R23306:23313 CertiOS.framework.model.opsem <> callcont def
R23319:23322 CertiOS.framework.model.opsem <> ::x_'##'_x not
R23323:23327 CertiOS.framework.model.language <> kcall constr
R23336:23340 CertiOS.framework.model.language <> kstop constr
R23346:23349 Coq.Init.Datatypes <> Some constr
R23352:23356 CertiOS.framework.model.language <> kcall constr
R23365:23369 CertiOS.framework.model.language <> kstop constr
R23383:23398 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R23383:23398 CertiOS.framework.proof.rulesoundlib <> callcont_some_eq thm
R23496:23502 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R23505:23506 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R23517:23519 Coq.Init.Logic <> :type_scope:x_'='_x not
R23507:23513 CertiOS.framework.model.opsem <> getaddr def
R23496:23502 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R23505:23506 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R23517:23519 Coq.Init.Logic <> :type_scope:x_'='_x not
R23507:23513 CertiOS.framework.model.opsem <> getaddr def
R23534:23552 CertiOS.framework.proof.rulesoundlib <> get_env_addrlist_ex thm
R23534:23552 CertiOS.framework.proof.rulesoundlib <> get_env_addrlist_ex thm
R23591:23591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23593:23594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23597:23598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23600:23601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23603:23604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23606:23606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23591:23591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23593:23594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23597:23598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23600:23601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23603:23604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23606:23606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23618:23626 CertiOS.framework.model.opsem <> ostc_step constr
R23618:23626 CertiOS.framework.model.opsem <> ostc_step constr
R23645:23653 CertiOS.framework.model.opsem <> stmt_step constr
R23645:23653 CertiOS.framework.model.opsem <> stmt_step constr
R23713:23723 CertiOS.framework.model.opsem <> AddKsToTail def
R23713:23723 CertiOS.framework.model.opsem <> AddKsToTail def
R23741:23758 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R23767:23771 CertiOS.framework.model.language <> kstop constr
R23741:23758 CertiOS.framework.proof.rulesoundlib <> call_int_none_call thm
R23767:23771 CertiOS.framework.model.language <> kstop constr
R24041:24044 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24006:24012 CertiOS.framework.model.opsem <> intcont def
R24018:24021 CertiOS.framework.model.opsem <> ::x_'##'_x not
R24022:24026 CertiOS.framework.model.language <> kcall constr
R24035:24039 CertiOS.framework.model.language <> kstop constr
R24045:24048 Coq.Init.Datatypes <> None constr
R24041:24044 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R24006:24012 CertiOS.framework.model.opsem <> intcont def
R24018:24021 CertiOS.framework.model.opsem <> ::x_'##'_x not
R24022:24026 CertiOS.framework.model.language <> kcall constr
R24035:24039 CertiOS.framework.model.language <> kstop constr
R24045:24048 Coq.Init.Datatypes <> None constr
R24099:24121 CertiOS.framework.proof.rulesoundlib <> intcont_some_kcall_none thm
R24099:24121 CertiOS.framework.proof.rulesoundlib <> intcont_some_kcall_none thm
R24193:24216 CertiOS.framework.proof.rulesoundlib <> intcont_calcont_not_none thm
R24225:24229 CertiOS.framework.model.language <> kstop constr
R24193:24216 CertiOS.framework.proof.rulesoundlib <> intcont_calcont_not_none thm
R24225:24229 CertiOS.framework.model.language <> kstop constr
R24367:24373 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R24376:24377 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R24378:24381 CertiOS.framework.auxlibs.Maps <> join meth
R24367:24373 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R24376:24377 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R24378:24381 CertiOS.framework.auxlibs.Maps <> join meth
R24488:24493 CertiOS.framework.proof.simulation <> joinm2 def
R24513:24519 CertiOS.framework.logic.assertion <> joinmem def
R24560:24565 CertiOS.framework.proof.simulation <> getmem def
R25176:25194 Coq.Logic.Classical_Prop <> NNPP thm
R25176:25194 Coq.Logic.Classical_Prop <> NNPP thm
