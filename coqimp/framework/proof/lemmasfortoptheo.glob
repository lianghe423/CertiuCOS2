DIGEST cede7cc0e67b3785e8573a58ae72d5de
FCertiOS.framework.proof.lemmasfortoptheo
R15:25 CertiOS.framework.include_frm <> <> lib
R44:56 CertiOS.framework.proof.oscorrectness <> <> lib
R75:84 CertiOS.framework.proof.simulation <> <> lib
R103:108 CertiOS.framework.proof.auxdef <> <> lib
R127:135 Coq.Logic.Classical <> <> lib
R154:161 CertiOS.tactics.sep_auto <> <> lib
R180:187 CertiOS.tactics.base_tac <> <> lib
R206:214 CertiOS.framework.proof.soundness <> <> lib
R233:246 CertiOS.framework.proof.absinfer_sound <> <> lib
R265:275 CertiOS.framework.proof.memory_prop <> <> lib
R294:303 CertiOS.framework.proof.joinmemLib <> <> lib
R322:329 CertiOS.framework.proof.lmachLib <> <> lib
R348:361 CertiOS.framework.proof.invariant_prop <> <> lib
R380:388 CertiOS.framework.proof.join_prop <> <> lib
R407:418 CertiOS.framework.proof.rulesoundlib <> <> lib
R437:445 CertiOS.framework.proof.step_prop <> <> lib
R547:550 CertiOS.framework.model.language <> code def
R564:566 CertiOS.framework.auxlibs.Modules <> tid def
R580:583 CertiOS.framework.model.language <> cont def
R630:633 CertiOS.framework.model.language <> code def
R647:650 CertiOS.framework.model.language <> cont def
R664:666 CertiOS.framework.auxlibs.Modules <> tid def
R680:690 CertiOS.framework.proof.auxdef TMSpecMod B def
R711:724 CertiOS.framework.proof.auxdef mmapspec image def
R745:755 CertiOS.framework.proof.auxdef TOSpecMod B def
R776:789 CertiOS.framework.proof.auxdef omapspec image def
R803:810 CertiOS.framework.auxlibs.Maps <> sub def
R824:831 CertiOS.framework.auxlibs.Maps <> disjoint def
R845:850 CertiOS.framework.model.language <> osabst def
ind 877:885 <> lintstep'
constr 954:960 <> li_step
R892:895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R903:906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R911:914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R921:924 Coq.Init.Logic <> :type_scope:x_'->'_x not
R929:932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R939:942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R933:938 CertiOS.framework.model.language <> taskst def
R925:928 CertiOS.framework.model.language <> code def
R915:920 CertiOS.framework.model.language <> taskst def
R907:910 CertiOS.framework.model.language <> code def
R896:902 CertiOS.framework.model.language <> intunit def
R889:891 CertiOS.framework.model.language <> hid def
R976:979 CertiOS.framework.model.language <> code def
R987:993 CertiOS.framework.model.language <> cureval ind
R1002:1009 CertiOS.framework.model.language <> exprcont ind
R1039:1046 CertiOS.framework.model.language <> stmtcont ind
R1055:1057 CertiOS.framework.model.language <> isr def
R1066:1067 CertiOS.framework.model.language <> is def
R1096:1098 CertiOS.framework.model.language <> hid def
R1127:1131 CertiOS.framework.model.language <> stmts ind
R1143:1149 CertiOS.framework.model.language <> intunit def
R1161:1163 CertiOS.framework.model.memory <> env def
R1171:1173 CertiOS.framework.model.memory <> mem def
R1209:1227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1242:1260 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1275:1293 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1310:1328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1329:1337 CertiOS.framework.proof.lemmasfortoptheo <> lintstep' ind
R1467:1467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1470:1471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1478:1479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1481:1482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1499:1500 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1522:1522 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1468:1469 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R1472:1477 CertiOS.framework.logic.assertion <> empenv syndef
R1480:1480 CertiOS.framework.proof.lemmasfortoptheo <> m var
R1483:1488 CertiOS.framework.model.language <> isrupd def
R1495:1498 Coq.Init.Datatypes <> true constr
R1493:1493 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1490:1491 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R1501:1501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1507:1508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1516:1517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1521:1521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1502:1506 Coq.Init.Datatypes <> false constr
R1510:1513 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1509:1509 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1514:1515 CertiOS.framework.proof.lemmasfortoptheo <> si var
R1518:1520 Coq.Init.Datatypes <> nil constr
R1407:1407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1414:1415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1440:1440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1408:1411 CertiOS.framework.model.language <> curs constr
R1413:1413 CertiOS.framework.proof.lemmasfortoptheo <> s var
R1416:1416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1422:1423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1439:1439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1417:1421 CertiOS.framework.model.language <> kenil constr
R1424:1427 CertiOS.framework.model.language <> kint constr
R1437:1438 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R1434:1435 CertiOS.framework.proof.lemmasfortoptheo <> le var
R1431:1432 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R1429:1429 CertiOS.framework.proof.lemmasfortoptheo <> c var
R1349:1349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1352:1353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1356:1357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1359:1360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1363:1364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1380:1380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1350:1351 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R1354:1355 CertiOS.framework.proof.lemmasfortoptheo <> le var
R1358:1358 CertiOS.framework.proof.lemmasfortoptheo <> m var
R1361:1362 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R1365:1365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1370:1371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1374:1375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1379:1379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1366:1369 Coq.Init.Datatypes <> true constr
R1372:1373 CertiOS.framework.proof.lemmasfortoptheo <> si var
R1376:1378 Coq.Init.Datatypes <> nil constr
R1347:1347 CertiOS.framework.proof.lemmasfortoptheo <> C var
R1341:1345 CertiOS.framework.proof.lemmasfortoptheo <> theta var
R1339:1339 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1301:1303 Coq.Init.Logic <> :type_scope:x_'='_x not
R1294:1298 CertiOS.framework.proof.lemmasfortoptheo <> theta var
R1300:1300 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1304:1307 Coq.Init.Datatypes <> Some constr
R1309:1309 CertiOS.framework.proof.lemmasfortoptheo <> s var
R1263:1265 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R1262:1262 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1266:1269 CertiOS.framework.model.language <> INUM def
R1228:1236 CertiOS.framework.model.language <> higherint def
R1241:1241 CertiOS.framework.proof.lemmasfortoptheo <> i var
R1238:1239 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R1193:1195 Coq.Init.Logic <> :type_scope:x_'='_x not
R1192:1192 CertiOS.framework.proof.lemmasfortoptheo <> C var
R1196:1196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1198:1199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1208:1208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1197:1197 CertiOS.framework.proof.lemmasfortoptheo <> c var
R1200:1200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1203:1204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1207:1207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1201:1202 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R1205:1206 CertiOS.framework.proof.lemmasfortoptheo <> ks var
prf 7328:7336 <> exint_dec
R7355:7355 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7436:7439 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7401:7402 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7367:7369 Coq.Init.Logic <> :type_scope:x_'='_x not
R7356:7356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7358:7358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7366:7366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7357:7357 CertiOS.framework.proof.lemmasfortoptheo <> c var
R7359:7359 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7362:7362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7365:7365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7360:7361 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R7363:7364 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7370:7370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7389:7389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7400:7400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7371:7374 CertiOS.framework.model.language <> curs constr
R7377:7381 CertiOS.framework.model.language <> sprim constr
R7383:7387 CertiOS.framework.model.language <> exint constr
R7390:7390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7396:7396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7399:7399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7391:7395 CertiOS.framework.model.language <> kenil constr
R7397:7398 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7419:7420 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7414:7414 Coq.Init.Logic <> :type_scope:x_'='_x not
R7403:7410 CertiOS.framework.model.opsem <> callcont def
R7412:7413 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7415:7418 Coq.Init.Datatypes <> None constr
R7431:7431 Coq.Init.Logic <> :type_scope:x_'='_x not
R7421:7427 CertiOS.framework.model.opsem <> intcont def
R7429:7430 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7432:7435 Coq.Init.Datatypes <> None constr
R7440:7441 Coq.Init.Logic <> :type_scope:'~'_x not
R7522:7522 Coq.Init.Logic <> :type_scope:'~'_x not
R7487:7488 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7453:7455 Coq.Init.Logic <> :type_scope:x_'='_x not
R7442:7442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7444:7444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7452:7452 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7443:7443 CertiOS.framework.proof.lemmasfortoptheo <> c var
R7445:7445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7448:7448 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7451:7451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7446:7447 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R7449:7450 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7456:7456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7475:7475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7486:7486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7457:7460 CertiOS.framework.model.language <> curs constr
R7463:7467 CertiOS.framework.model.language <> sprim constr
R7469:7473 CertiOS.framework.model.language <> exint constr
R7476:7476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7482:7482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7485:7485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7477:7481 CertiOS.framework.model.language <> kenil constr
R7483:7484 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7505:7506 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7500:7500 Coq.Init.Logic <> :type_scope:x_'='_x not
R7489:7496 CertiOS.framework.model.opsem <> callcont def
R7498:7499 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7501:7504 Coq.Init.Datatypes <> None constr
R7517:7517 Coq.Init.Logic <> :type_scope:x_'='_x not
R7507:7513 CertiOS.framework.model.opsem <> intcont def
R7515:7516 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R7518:7521 Coq.Init.Datatypes <> None constr
R7553:7559 Coq.Logic.Classical_Prop <> classic prfax
R7553:7559 Coq.Logic.Classical_Prop <> classic prfax
prf 7645:7655 <> api_tlmatch
R7676:7683 CertiOS.framework.model.language <> progunit def
R7692:7698 CertiOS.framework.model.language <> intunit def
R7706:7714 CertiOS.framework.model.language <> osapispec def
R7732:7740 CertiOS.framework.model.language <> osintspec def
R7748:7750 CertiOS.framework.model.language <> fid def
R7759:7762 CertiOS.framework.model.memory <> type ind
R7774:7781 CertiOS.framework.model.memory <> decllist ind
R7800:7804 CertiOS.framework.model.language <> stmts ind
R7812:7818 CertiOS.framework.model.language <> ossched def
R7857:7865 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7893:7901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7902:7908 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R7911:7911 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R7914:7914 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R7918:7919 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R7946:7949 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7923:7925 Coq.Init.Logic <> :type_scope:x_'='_x not
R7920:7920 CertiOS.framework.proof.lemmasfortoptheo <> B var
R7922:7922 CertiOS.framework.proof.lemmasfortoptheo <> f var
R7926:7929 Coq.Init.Datatypes <> Some constr
R7931:7931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7934:7935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7945:7945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7936:7936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7940:7941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7944:7944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7950:7956 CertiOS.framework.model.opsem <> tlmatch def
R7961:7962 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R7870:7872 Coq.Init.Logic <> :type_scope:x_'='_x not
R7866:7867 CertiOS.framework.proof.lemmasfortoptheo <> po var
R7869:7869 CertiOS.framework.proof.lemmasfortoptheo <> f var
R7873:7876 Coq.Init.Datatypes <> Some constr
R7878:7878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7881:7882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7885:7886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7889:7890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7892:7892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7879:7880 CertiOS.framework.proof.lemmasfortoptheo <> tp var
R7883:7884 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R7887:7888 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R7891:7891 CertiOS.framework.proof.lemmasfortoptheo <> s var
R7827:7833 CertiOS.framework.proof.auxdef <> eqdomOS def
R7848:7848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7850:7851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7853:7854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7856:7856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7849:7849 CertiOS.framework.proof.lemmasfortoptheo <> B var
R7852:7852 CertiOS.framework.proof.lemmasfortoptheo <> C var
R7855:7855 CertiOS.framework.proof.lemmasfortoptheo <> D var
R7835:7835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7838:7839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7842:7843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7846:7846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7836:7837 CertiOS.framework.proof.lemmasfortoptheo <> po var
R7840:7841 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R7844:7845 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R7994:8000 CertiOS.framework.proof.auxdef <> eqdomOS def
R8050:8056 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8061:8062 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8067:8069 Coq.Init.Logic <> :type_scope:x_'='_x not
R8070:8073 Coq.Init.Datatypes <> Some constr
R8050:8056 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8061:8062 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R8067:8069 Coq.Init.Logic <> :type_scope:x_'='_x not
R8070:8073 Coq.Init.Datatypes <> Some constr
R8092:8092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8095:8096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8099:8100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8103:8104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8106:8106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8092:8092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8095:8096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8099:8100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8103:8104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8106:8106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8244:8244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8246:8246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8253:8253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8247:8247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8249:8249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8252:8252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8244:8244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8246:8246 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8253:8253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8247:8247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8249:8249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8252:8252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 8320:8329 <> init_emple
R8356:8361 CertiOS.framework.model.language <> taskst def
R8369:8374 CertiOS.framework.model.language <> osabst def
R8410:8413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8436:8438 Coq.Init.Logic <> :type_scope:x_'='_x not
R8414:8416 Coq.Init.Datatypes <> snd def
R8419:8421 Coq.Init.Datatypes <> fst def
R8424:8431 CertiOS.framework.model.language <> get_smem def
R8433:8433 CertiOS.framework.proof.lemmasfortoptheo <> o var
R8439:8441 CertiOS.framework.auxlibs.Maps <> emp meth
R8383:8392 CertiOS.framework.proof.auxdef <> InitTaskSt def
R8404:8404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8406:8407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8409:8409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8405:8405 CertiOS.framework.proof.lemmasfortoptheo <> o var
R8408:8408 CertiOS.framework.proof.lemmasfortoptheo <> O var
R8400:8402 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R8394:8398 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R8473:8482 CertiOS.framework.proof.auxdef <> InitTaskSt def
prf 8578:8593 <> good_dl_le_init'
R8611:8618 CertiOS.framework.model.memory <> decllist ind
R8627:8629 CertiOS.framework.model.memory <> env def
R8637:8639 CertiOS.framework.model.memory <> mem def
R8648:8650 CertiOS.framework.model.language <> isr def
R8660:8666 CertiOS.framework.model.language <> localst def
R8698:8701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8702:8711 CertiOS.framework.proof.auxdef <> good_dl_le def
R8716:8716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8719:8720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8724:8725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8727:8728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8731:8732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8736:8736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8717:8718 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R8721:8723 CertiOS.framework.auxlibs.Maps <> emp meth
R8726:8726 CertiOS.framework.proof.lemmasfortoptheo <> M var
R8729:8730 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R8733:8735 CertiOS.framework.proof.lemmasfortoptheo <> aux var
R8713:8714 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R8691:8693 Coq.Init.Logic <> :type_scope:x_'='_x not
R8675:8687 CertiOS.framework.logic.inferules <> good_decllist def
R8689:8690 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R8694:8697 Coq.Init.Datatypes <> true constr
R8858:8870 Coq.Bool.Bool <> andb_true_iff thm
R8858:8870 Coq.Bool.Bool <> andb_true_iff thm
R8934:8946 Coq.Bool.Bool <> andb_true_iff thm
R8934:8946 Coq.Bool.Bool <> andb_true_iff thm
R9076:9087 CertiOS.framework.model.memory EnvMod indom def
R9127:9140 CertiOS.framework.model.memory EnvMod emp_sem thm
R9127:9140 CertiOS.framework.model.memory EnvMod emp_sem thm
prf 9185:9192 <> InitAemp
R9217:9219 CertiOS.framework.model.memory <> env def
R9227:9229 CertiOS.framework.model.memory <> mem def
R9238:9240 CertiOS.framework.model.language <> isr def
R9261:9267 CertiOS.framework.model.language <> localst def
R9275:9280 CertiOS.framework.model.language <> osabst def
R9343:9351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9364:9368 CertiOS.framework.logic.assertion <> absop def
R9409:9421 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R9378:9378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9383:9384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9389:9390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9392:9393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9396:9397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9401:9402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9404:9405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9408:9408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9379:9382 CertiOS.framework.proof.lemmasfortoptheo <> genv var
R9385:9388 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R9391:9391 CertiOS.framework.proof.lemmasfortoptheo <> M var
R9394:9395 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R9398:9400 CertiOS.framework.proof.lemmasfortoptheo <> aux var
R9403:9403 CertiOS.framework.proof.lemmasfortoptheo <> O var
R9406:9407 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R9422:9422 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9503:9516 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9427:9430 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9423:9426 CertiOS.framework.logic.assertion <> Aemp constr
R9454:9457 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9431:9437 CertiOS.framework.logic.inferules <> p_local def
R9447:9453 CertiOS.framework.logic.inferules <> init_lg def
R9445:9445 CertiOS.framework.proof.lemmasfortoptheo <> t var
R9439:9443 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R9466:9469 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9458:9460 CertiOS.framework.logic.assertion <> Aie constr
R9462:9465 Coq.Init.Datatypes <> true constr
R9477:9480 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9470:9472 CertiOS.framework.logic.assertion <> Ais constr
R9474:9476 Coq.Init.Datatypes <> nil constr
R9488:9491 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9481:9483 CertiOS.framework.logic.assertion <> Acs constr
R9485:9487 Coq.Init.Datatypes <> nil constr
R9492:9495 CertiOS.framework.logic.assertion <> Aisr constr
R9497:9502 CertiOS.framework.model.language <> empisr def
R9517:9526 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R9529:9538 CertiOS.framework.logic.inferules <> getlenvdom def
R9540:9543 CertiOS.framework.model.memory <> dnil constr
R9297:9306 CertiOS.framework.proof.auxdef <> InitTaskSt def
R9316:9316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9321:9322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9327:9328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9330:9331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9334:9335 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9339:9340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9342:9342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9317:9320 CertiOS.framework.proof.lemmasfortoptheo <> genv var
R9323:9326 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R9329:9329 CertiOS.framework.proof.lemmasfortoptheo <> M var
R9332:9333 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R9336:9338 CertiOS.framework.proof.lemmasfortoptheo <> aux var
R9341:9341 CertiOS.framework.proof.lemmasfortoptheo <> O var
R9314:9314 CertiOS.framework.proof.lemmasfortoptheo <> t var
R9308:9312 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R9666:9672 CertiOS.framework.logic.inferules <> p_local def
R9708:9713 CertiOS.framework.auxlibs.Maps <> emp meth
prf 9838:9851 <> emple_subs_inv
R9871:9876 CertiOS.framework.model.language <> taskst def
R9885:9887 CertiOS.framework.model.memory <> mem def
R9896:9901 CertiOS.framework.model.language <> osabst def
R9909:9911 CertiOS.framework.logic.assertion <> Inv def
R9959:9967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10001:10009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10010:10013 CertiOS.framework.logic.inferules <> satp def
R10038:10040 CertiOS.framework.logic.assertion <> INV def
R10042:10042 CertiOS.framework.proof.lemmasfortoptheo <> I var
R10034:10035 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R10016:10025 CertiOS.framework.logic.assertion <> substaskst def
R10030:10031 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R10027:10028 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R9968:9971 CertiOS.framework.logic.inferules <> satp def
R9995:9997 CertiOS.framework.logic.assertion <> INV def
R9999:9999 CertiOS.framework.proof.lemmasfortoptheo <> I var
R9991:9992 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R9974:9983 CertiOS.framework.logic.assertion <> substaskst def
R9987:9988 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R9985:9985 CertiOS.framework.proof.lemmasfortoptheo <> o var
R9920:9929 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R9947:9955 CertiOS.framework.proof.auxdef <> emple_tst def
R9957:9957 CertiOS.framework.proof.lemmasfortoptheo <> o var
R9932:9940 CertiOS.framework.proof.auxdef <> emple_tst def
R9942:9943 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R10259:10272 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R10259:10272 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
prf 10299:10306 <> join_eqe
R10323:10328 CertiOS.framework.model.language <> taskst def
R10338:10340 CertiOS.framework.model.memory <> mem def
R10349:10354 CertiOS.framework.model.language <> taskst def
R10379:10382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10404:10406 Coq.Init.Logic <> :type_scope:x_'='_x not
R10383:10390 CertiOS.framework.model.opsem <> get_lenv def
R10393:10400 CertiOS.framework.model.language <> get_smem def
R10402:10402 CertiOS.framework.proof.lemmasfortoptheo <> o var
R10407:10414 CertiOS.framework.model.opsem <> get_lenv def
R10417:10424 CertiOS.framework.model.language <> get_smem def
R10426:10427 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R10363:10368 CertiOS.framework.proof.simulation <> joinm2 def
R10377:10378 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R10374:10375 CertiOS.framework.proof.lemmasfortoptheo <> M' var
R10372:10372 CertiOS.framework.proof.lemmasfortoptheo <> M var
R10370:10370 CertiOS.framework.proof.lemmasfortoptheo <> o var
R10532:10538 CertiOS.framework.logic.assertion <> joinmem def
prf 10586:10600 <> good_dl_le_care
R10620:10625 CertiOS.framework.model.language <> taskst def
R10634:10641 CertiOS.framework.model.memory <> decllist ind
R10696:10704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10720:10723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10724:10733 CertiOS.framework.proof.auxdef <> good_dl_le def
R10738:10739 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R10735:10736 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R10705:10714 CertiOS.framework.proof.auxdef <> good_dl_le def
R10719:10719 CertiOS.framework.proof.lemmasfortoptheo <> o var
R10716:10717 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R10671:10673 Coq.Init.Logic <> :type_scope:x_'='_x not
R10650:10657 CertiOS.framework.model.opsem <> get_lenv def
R10660:10667 CertiOS.framework.model.language <> get_smem def
R10669:10669 CertiOS.framework.proof.lemmasfortoptheo <> o var
R10674:10681 CertiOS.framework.model.opsem <> get_lenv def
R10684:10691 CertiOS.framework.model.language <> get_smem def
R10693:10694 CertiOS.framework.proof.lemmasfortoptheo <> o' var
prf 11050:11068 <> higherint_update_eq
R11086:11088 CertiOS.framework.model.language <> hid def
R11097:11099 CertiOS.framework.model.language <> isr def
R11117:11120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11123:11125 Coq.Init.Logic <> :type_scope:x_'='_x not
R11121:11122 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R11126:11131 CertiOS.framework.model.language <> isrupd def
R11138:11142 Coq.Init.Datatypes <> false constr
R11136:11136 CertiOS.framework.proof.lemmasfortoptheo <> i var
R11133:11134 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R11103:11111 CertiOS.framework.model.language <> higherint def
R11116:11116 CertiOS.framework.proof.lemmasfortoptheo <> i var
R11113:11114 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R11174:11182 CertiOS.framework.model.language <> higherint def
R11245:11273 Coq.Logic.FunctionalExtensionality <> functional_extensionality_dep prfax
R11245:11273 Coq.Logic.FunctionalExtensionality <> functional_extensionality_dep prfax
R11301:11304 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11299:11299 Coq.Init.Logic <> :type_scope:x_'='_x not
R11306:11307 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11301:11304 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11299:11299 Coq.Init.Logic <> :type_scope:x_'='_x not
R11306:11307 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11347:11352 CertiOS.framework.model.language <> isrupd def
R11388:11388 Coq.Init.Logic <> :type_scope:x_'='_x not
R11388:11388 Coq.Init.Logic <> :type_scope:x_'='_x not
R11410:11425 Coq.Arith.EqNat <> beq_nat_true_iff syndef
R11410:11425 Coq.Arith.EqNat <> beq_nat_true_iff syndef
R11482:11487 CertiOS.framework.model.language <> isrupd def
R11499:11515 Coq.Arith.EqNat <> beq_nat_false_iff syndef
R11499:11515 Coq.Arith.EqNat <> beq_nat_false_iff syndef
R11535:11552 Coq.Numbers.Natural.Peano.NPeano Nat eqb_sym thm
R11535:11552 Coq.Numbers.Natural.Peano.NPeano Nat eqb_sym thm
R11535:11552 Coq.Numbers.Natural.Peano.NPeano Nat eqb_sym thm
prf 11594:11606 <> dl_add_nil_eq
R11623:11630 CertiOS.framework.model.memory <> decllist ind
R11647:11649 Coq.Init.Logic <> :type_scope:x_'='_x not
R11633:11638 CertiOS.framework.proof.auxdef <> dl_add def
R11643:11646 CertiOS.framework.model.memory <> dnil constr
R11640:11641 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R11650:11651 CertiOS.framework.proof.lemmasfortoptheo <> dl var
prf 11757:11761 <> eq_tp
R11782:11789 CertiOS.framework.model.language <> progunit def
R11798:11804 CertiOS.framework.model.language <> intunit def
R11812:11817 CertiOS.framework.model.language <> osspec def
R11836:11838 CertiOS.framework.model.language <> fid def
R11847:11854 CertiOS.framework.model.language <> api_code def
R11862:11865 CertiOS.framework.model.memory <> type ind
R11874:11881 CertiOS.framework.model.memory <> typelist def
R11901:11904 CertiOS.framework.model.memory <> type ind
R11916:11923 CertiOS.framework.model.memory <> decllist ind
R11931:11935 CertiOS.framework.model.language <> stmts ind
R11966:11974 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12009:12017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12045:12048 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12055:12058 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12051:12053 Coq.Init.Logic <> :type_scope:x_'='_x not
R12049:12050 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R12054:12054 CertiOS.framework.proof.lemmasfortoptheo <> t var
R12059:12065 CertiOS.framework.model.opsem <> tlmatch def
R12070:12071 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R12067:12068 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R12022:12024 Coq.Init.Logic <> :type_scope:x_'='_x not
R12018:12019 CertiOS.framework.proof.lemmasfortoptheo <> po var
R12021:12021 CertiOS.framework.proof.lemmasfortoptheo <> f var
R12025:12028 Coq.Init.Datatypes <> Some constr
R12030:12030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12033:12034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12037:12038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12041:12042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12044:12044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12031:12032 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R12035:12036 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R12039:12040 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R12043:12043 CertiOS.framework.proof.lemmasfortoptheo <> s var
R11988:11990 Coq.Init.Logic <> :type_scope:x_'='_x not
R11975:11977 Coq.Init.Datatypes <> fst def
R11987:11987 CertiOS.framework.proof.lemmasfortoptheo <> f var
R11980:11982 Coq.Init.Datatypes <> fst def
R11984:11984 CertiOS.framework.proof.lemmasfortoptheo <> A var
R11991:11994 Coq.Init.Datatypes <> Some constr
R11996:11996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11999:12000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12008:12008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11997:11998 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R12001:12001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12003:12004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12007:12007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12002:12002 CertiOS.framework.proof.lemmasfortoptheo <> t var
R12005:12006 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R11944:11950 CertiOS.framework.proof.auxdef <> eqdomOS def
R11965:11965 CertiOS.framework.proof.lemmasfortoptheo <> A var
R11952:11952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11955:11956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11959:11960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11963:11963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11953:11954 CertiOS.framework.proof.lemmasfortoptheo <> po var
R11957:11958 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R11961:11962 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R12103:12109 CertiOS.framework.proof.auxdef <> eqdomOS def
R12210:12216 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R12221:12222 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R12227:12228 Coq.Init.Logic <> :type_scope:x_'='_x not
R12229:12232 Coq.Init.Datatypes <> Some constr
R12210:12216 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R12221:12222 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R12227:12228 Coq.Init.Logic <> :type_scope:x_'='_x not
R12229:12232 Coq.Init.Datatypes <> Some constr
R12251:12251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12254:12255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12258:12259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12262:12263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12265:12265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12251:12251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12254:12255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12258:12259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12262:12263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12265:12265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12433:12433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12436:12437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12445:12445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12438:12438 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12440:12441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12444:12444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12433:12433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12436:12437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12445:12445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12438:12438 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12440:12441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12444:12444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 12529:12543 <> tlmatch_trans''
R12577:12580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12594:12597 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12600:12601 Coq.Init.Logic <> :type_scope:x_'='_x not
R12598:12599 CertiOS.framework.proof.lemmasfortoptheo <> t1 var
R12602:12603 CertiOS.framework.proof.lemmasfortoptheo <> t2 var
R12581:12587 CertiOS.framework.model.opsem <> tlmatch def
R12592:12593 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R12589:12590 CertiOS.framework.proof.lemmasfortoptheo <> t2 var
R12564:12570 CertiOS.framework.model.opsem <> tlmatch def
R12575:12576 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R12572:12573 CertiOS.framework.proof.lemmasfortoptheo <> t1 var
R12689:12695 CertiOS.framework.model.opsem <> tlmatch def
R12729:12735 CertiOS.framework.model.opsem <> tlmatch def
R13021:13021 Coq.Init.Logic <> :type_scope:x_'='_x not
R13021:13021 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 13085:13097 <> tlmatch_trans
R13130:13133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13147:13150 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13153:13154 Coq.Init.Logic <> :type_scope:x_'='_x not
R13151:13152 CertiOS.framework.proof.lemmasfortoptheo <> t1 var
R13155:13156 CertiOS.framework.proof.lemmasfortoptheo <> t2 var
R13134:13140 CertiOS.framework.model.opsem <> tlmatch def
R13145:13146 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R13142:13143 CertiOS.framework.proof.lemmasfortoptheo <> t2 var
R13117:13123 CertiOS.framework.model.opsem <> tlmatch def
R13128:13129 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R13125:13126 CertiOS.framework.proof.lemmasfortoptheo <> t1 var
R13188:13202 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_trans'' thm
R13188:13202 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_trans'' thm
def 13229:13240 <> length_eq_td
R13246:13253 CertiOS.framework.model.memory <> typelist def
R13260:13267 CertiOS.framework.model.memory <> decllist ind
R13282:13283 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R13297:13299 Coq.Init.Datatypes <> nil constr
R13310:13311 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13336:13339 CertiOS.framework.model.memory <> dnil constr
R13344:13347 Coq.Init.Logic <> True ind
R13372:13376 Coq.Init.Logic <> False ind
R13404:13405 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R13419:13420 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13449:13453 CertiOS.framework.model.memory <> dcons constr
R13466:13477 CertiOS.framework.proof.lemmasfortoptheo <> length_eq_td def
R13513:13517 Coq.Init.Logic <> False ind
prf 13557:13572 <> tlmatch_lengtheq
R13602:13605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13606:13617 CertiOS.framework.proof.lemmasfortoptheo <> length_eq_td def
R13622:13623 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13619:13620 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R13589:13595 CertiOS.framework.model.opsem <> tlmatch def
R13600:13601 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13597:13598 CertiOS.framework.proof.lemmasfortoptheo <> tl var
prf 13859:13869 <> tl_dl_vl_eq
R13887:13890 Coq.Init.Datatypes <> list ind
R13892:13895 CertiOS.framework.model.memory <> type ind
R13904:13911 CertiOS.framework.model.memory <> decllist ind
R13920:13923 Coq.Init.Datatypes <> list ind
R13925:13927 CertiOS.framework.model.memory <> val ind
R13955:13958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13980:13983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13984:13992 CertiOS.framework.proof.auxdef <> length_eq def
R13997:13998 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13994:13995 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R13968:13970 Coq.Init.Logic <> :type_scope:x_'='_x not
R13959:13964 Coq.Init.Datatypes <> length def
R13966:13967 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R13971:13976 Coq.Init.Datatypes <> length def
R13978:13979 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R13936:13942 CertiOS.framework.model.opsem <> tlmatch def
R13953:13954 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R13945:13947 Coq.Lists.List <> rev def
R13949:13950 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R14029:14044 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_lengtheq thm
R14029:14044 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_lengtheq thm
R14078:14080 Coq.Init.Logic <> :type_scope:x_'='_x not
R14063:14068 Coq.Init.Datatypes <> length def
R14071:14073 Coq.Lists.List <> rev def
R14081:14086 Coq.Init.Datatypes <> length def
R14078:14080 Coq.Init.Logic <> :type_scope:x_'='_x not
R14063:14068 Coq.Init.Datatypes <> length def
R14071:14073 Coq.Lists.List <> rev def
R14081:14086 Coq.Init.Datatypes <> length def
R14102:14116 Coq.Lists.List <> rev_length thm
R14102:14116 Coq.Lists.List <> rev_length thm
R14156:14158 Coq.Lists.List <> rev def
R14156:14158 Coq.Lists.List <> rev def
prf 14575:14592 <> app_cons_length_lt
R14631:14631 CertiOS.framework.proof.lemmasfortoptheo <> A var
R14686:14719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14730:14732 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R14721:14726 Coq.Init.Datatypes <> length def
R14728:14729 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R14733:14738 Coq.Init.Datatypes <> length def
R14740:14743 CertiOS.framework.proof.lemmasfortoptheo <> vl'' var
R14679:14681 Coq.Init.Logic <> :type_scope:x_'='_x not
R14667:14670 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14665:14666 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R14672:14675 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R14671:14671 CertiOS.framework.proof.lemmasfortoptheo <> v var
R14676:14678 CertiOS.framework.proof.lemmasfortoptheo <> vl' var
R14682:14685 CertiOS.framework.proof.lemmasfortoptheo <> vl'' var
R14860:14865 Coq.Arith.Lt <> lt_n_S thm
R14860:14865 Coq.Arith.Lt <> lt_n_S thm
prf 14900:14921 <> length_dl_revlcons_add
R14999:15036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15049:15051 Coq.Init.Logic <> :type_scope:x_'='_x not
R15037:15045 CertiOS.framework.proof.rulesoundlib <> length_dl def
R15047:15048 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R15066:15068 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15053:15061 CertiOS.framework.proof.rulesoundlib <> length_dl def
R15063:15065 CertiOS.framework.proof.lemmasfortoptheo <> dl1 var
R15069:15077 CertiOS.framework.proof.rulesoundlib <> length_dl def
R15079:15081 CertiOS.framework.proof.lemmasfortoptheo <> dl2 var
R14980:14982 Coq.Init.Logic <> :type_scope:x_'='_x not
R14978:14979 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R14983:14990 CertiOS.framework.model.opsem <> revlcons def
R14996:14998 CertiOS.framework.proof.lemmasfortoptheo <> dl2 var
R14992:14994 CertiOS.framework.proof.lemmasfortoptheo <> dl1 var
R15214:15218 CertiOS.framework.model.memory <> dcons constr
R15214:15218 CertiOS.framework.model.memory <> dcons constr
prf 15299:15317 <> length_length_dl_eq
R15381:15384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15394:15396 Coq.Init.Logic <> :type_scope:x_'='_x not
R15385:15390 Coq.Init.Datatypes <> length def
R15392:15393 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R15397:15405 CertiOS.framework.proof.rulesoundlib <> length_dl def
R15407:15408 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R15366:15374 CertiOS.framework.proof.auxdef <> length_eq def
R15379:15380 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R15376:15377 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R15578:15581 Coq.Init.Peano <> eq_S def
R15578:15581 Coq.Init.Peano <> eq_S def
prf 15623:15636 <> dl_add_dnil_eq
R15691:15693 Coq.Init.Logic <> :type_scope:x_'='_x not
R15677:15682 CertiOS.framework.proof.auxdef <> dl_add def
R15687:15690 CertiOS.framework.model.memory <> dnil constr
R15684:15685 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R15694:15695 CertiOS.framework.proof.lemmasfortoptheo <> dl var
prf 15801:15811 <> sub_len_neq
R15830:15833 Coq.Init.Datatypes <> list ind
R15835:15837 CertiOS.framework.model.memory <> val ind
R15847:15853 CertiOS.framework.model.memory <> vallist def
R15862:15869 CertiOS.framework.model.memory <> decllist ind
R15888:15890 CertiOS.framework.model.memory <> val ind
R15899:15902 Coq.Init.Datatypes <> list ind
R15904:15906 CertiOS.framework.model.memory <> val ind
R15919:15926 CertiOS.framework.model.memory <> decllist ind
R15951:15959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15980:15988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16021:16024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16025:16026 Coq.Init.Logic <> :type_scope:'~'_x not
R16027:16035 CertiOS.framework.proof.auxdef <> length_eq def
R16041:16043 CertiOS.framework.proof.lemmasfortoptheo <> dl' var
R16037:16039 CertiOS.framework.proof.lemmasfortoptheo <> vl' var
R16004:16006 Coq.Init.Logic <> :type_scope:x_'='_x not
R15989:15994 CertiOS.framework.proof.auxdef <> dl_add def
R16000:16003 CertiOS.framework.model.memory <> dnil constr
R15996:15998 CertiOS.framework.proof.lemmasfortoptheo <> dl' var
R16007:16014 CertiOS.framework.model.opsem <> revlcons def
R16019:16020 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R16016:16017 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R15974:15976 Coq.Init.Logic <> :type_scope:x_'='_x not
R15963:15966 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R15960:15962 CertiOS.framework.proof.lemmasfortoptheo <> vl' var
R15968:15971 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15967:15967 CertiOS.framework.proof.lemmasfortoptheo <> v var
R15972:15973 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R15977:15979 CertiOS.framework.proof.lemmasfortoptheo <> vlh var
R15935:15943 CertiOS.framework.proof.auxdef <> length_eq def
R15949:15950 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R15945:15947 CertiOS.framework.proof.lemmasfortoptheo <> vlh var
R16074:16091 CertiOS.framework.proof.lemmasfortoptheo <> app_cons_length_lt thm
R16074:16091 CertiOS.framework.proof.lemmasfortoptheo <> app_cons_length_lt thm
R16109:16130 CertiOS.framework.proof.lemmasfortoptheo <> length_dl_revlcons_add thm
R16109:16130 CertiOS.framework.proof.lemmasfortoptheo <> length_dl_revlcons_add thm
R16148:16166 CertiOS.framework.proof.lemmasfortoptheo <> length_length_dl_eq thm
R16148:16166 CertiOS.framework.proof.lemmasfortoptheo <> length_length_dl_eq thm
R16193:16211 CertiOS.framework.proof.lemmasfortoptheo <> length_length_dl_eq thm
R16193:16211 CertiOS.framework.proof.lemmasfortoptheo <> length_length_dl_eq thm
R16272:16285 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_dnil_eq thm
R16272:16285 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_dnil_eq thm
R16272:16285 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_dnil_eq thm
prf 16342:16348 <> ret_dec
R16448:16450 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16530:16530 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16365:16367 Coq.Init.Logic <> :type_scope:'~'_x not
R16447:16447 Coq.Init.Logic <> :type_scope:'~'_x not
R16408:16411 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16381:16383 Coq.Init.Logic <> :type_scope:x_'='_x not
R16368:16368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16370:16371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16380:16380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16369:16369 CertiOS.framework.proof.lemmasfortoptheo <> c var
R16372:16372 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16375:16376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16379:16379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16373:16374 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R16377:16378 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16384:16384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16394:16395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16407:16407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16385:16388 CertiOS.framework.model.language <> curs constr
R16390:16393 CertiOS.framework.model.language <> sret constr
R16396:16396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16402:16403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16406:16406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16397:16401 CertiOS.framework.model.language <> kenil constr
R16404:16405 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16430:16431 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16423:16425 Coq.Init.Logic <> :type_scope:x_'='_x not
R16412:16419 CertiOS.framework.model.opsem <> callcont def
R16421:16422 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16426:16429 Coq.Init.Datatypes <> None constr
R16442:16442 Coq.Init.Logic <> :type_scope:x_'='_x not
R16432:16438 CertiOS.framework.model.opsem <> intcont def
R16440:16441 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16443:16446 Coq.Init.Datatypes <> None constr
R16491:16494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16464:16466 Coq.Init.Logic <> :type_scope:x_'='_x not
R16451:16451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16453:16454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16463:16463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16452:16452 CertiOS.framework.proof.lemmasfortoptheo <> c var
R16455:16455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16458:16459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16462:16462 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16456:16457 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R16460:16461 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16467:16467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16477:16478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16490:16490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16468:16471 CertiOS.framework.model.language <> curs constr
R16473:16476 CertiOS.framework.model.language <> sret constr
R16479:16479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16485:16486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16489:16489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16480:16484 CertiOS.framework.model.language <> kenil constr
R16487:16488 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16513:16514 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16506:16508 Coq.Init.Logic <> :type_scope:x_'='_x not
R16495:16502 CertiOS.framework.model.opsem <> callcont def
R16504:16505 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16509:16512 Coq.Init.Datatypes <> None constr
R16525:16525 Coq.Init.Logic <> :type_scope:x_'='_x not
R16515:16521 CertiOS.framework.model.opsem <> intcont def
R16523:16524 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16526:16529 Coq.Init.Datatypes <> None constr
R16572:16572 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16664:16675 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16613:16624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16586:16588 Coq.Init.Logic <> :type_scope:x_'='_x not
R16573:16573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16575:16576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16585:16585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16577:16577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16580:16581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16584:16584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16589:16589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16599:16600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16612:16612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16590:16593 CertiOS.framework.model.language <> curs constr
R16595:16598 CertiOS.framework.model.language <> sret constr
R16601:16601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16607:16608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16611:16611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16602:16606 CertiOS.framework.model.language <> kenil constr
R16643:16646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16636:16638 Coq.Init.Logic <> :type_scope:x_'='_x not
R16625:16632 CertiOS.framework.model.opsem <> callcont def
R16639:16642 Coq.Init.Datatypes <> None constr
R16657:16659 Coq.Init.Logic <> :type_scope:x_'='_x not
R16647:16653 CertiOS.framework.model.opsem <> intcont def
R16660:16663 Coq.Init.Datatypes <> None constr
R16676:16678 Coq.Init.Logic <> :type_scope:'~'_x not
R16772:16772 Coq.Init.Logic <> :type_scope:'~'_x not
R16719:16732 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16692:16694 Coq.Init.Logic <> :type_scope:x_'='_x not
R16679:16679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16681:16682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16691:16691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16683:16683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16686:16687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16690:16690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16695:16695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16705:16706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16718:16718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16696:16699 CertiOS.framework.model.language <> curs constr
R16701:16704 CertiOS.framework.model.language <> sret constr
R16707:16707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16713:16714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16717:16717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16708:16712 CertiOS.framework.model.language <> kenil constr
R16751:16754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16744:16746 Coq.Init.Logic <> :type_scope:x_'='_x not
R16733:16740 CertiOS.framework.model.opsem <> callcont def
R16747:16750 Coq.Init.Datatypes <> None constr
R16765:16767 Coq.Init.Logic <> :type_scope:x_'='_x not
R16755:16761 CertiOS.framework.model.opsem <> intcont def
R16768:16771 Coq.Init.Datatypes <> None constr
R16572:16572 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16664:16675 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16613:16624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16586:16588 Coq.Init.Logic <> :type_scope:x_'='_x not
R16573:16573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16575:16576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16585:16585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16577:16577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16580:16581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16584:16584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16589:16589 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16599:16600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16612:16612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16590:16593 CertiOS.framework.model.language <> curs constr
R16595:16598 CertiOS.framework.model.language <> sret constr
R16601:16601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16607:16608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16611:16611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16602:16606 CertiOS.framework.model.language <> kenil constr
R16643:16646 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16636:16638 Coq.Init.Logic <> :type_scope:x_'='_x not
R16625:16632 CertiOS.framework.model.opsem <> callcont def
R16639:16642 Coq.Init.Datatypes <> None constr
R16657:16659 Coq.Init.Logic <> :type_scope:x_'='_x not
R16647:16653 CertiOS.framework.model.opsem <> intcont def
R16660:16663 Coq.Init.Datatypes <> None constr
R16676:16678 Coq.Init.Logic <> :type_scope:'~'_x not
R16772:16772 Coq.Init.Logic <> :type_scope:'~'_x not
R16719:16732 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16692:16694 Coq.Init.Logic <> :type_scope:x_'='_x not
R16679:16679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16681:16682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16691:16691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16683:16683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16686:16687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16690:16690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16695:16695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16705:16706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16718:16718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16696:16699 CertiOS.framework.model.language <> curs constr
R16701:16704 CertiOS.framework.model.language <> sret constr
R16707:16707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16713:16714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16717:16717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16708:16712 CertiOS.framework.model.language <> kenil constr
R16751:16754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16744:16746 Coq.Init.Logic <> :type_scope:x_'='_x not
R16733:16740 CertiOS.framework.model.opsem <> callcont def
R16747:16750 Coq.Init.Datatypes <> None constr
R16765:16767 Coq.Init.Logic <> :type_scope:x_'='_x not
R16755:16761 CertiOS.framework.model.opsem <> intcont def
R16768:16771 Coq.Init.Datatypes <> None constr
R16786:16792 Coq.Logic.Classical_Prop <> classic prfax
R16786:16792 Coq.Logic.Classical_Prop <> classic prfax
prf 16830:16837 <> retv_dec
R16965:16970 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17077:17077 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16856:16857 Coq.Init.Logic <> :type_scope:'~'_x not
R16964:16964 Coq.Init.Logic <> :type_scope:'~'_x not
R16858:16864 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R16866:16866 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R16870:16871 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R16925:16926 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16883:16884 Coq.Init.Logic <> :type_scope:x_'='_x not
R16872:16872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16874:16874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16882:16882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16873:16873 CertiOS.framework.proof.lemmasfortoptheo <> c var
R16875:16875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16878:16878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16881:16881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16876:16877 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R16879:16880 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16885:16885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16907:16907 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16924:16924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16886:16889 CertiOS.framework.model.language <> curs constr
R16892:16896 CertiOS.framework.model.language <> sskip constr
R16899:16902 Coq.Init.Datatypes <> Some constr
R16908:16908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16914:16914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16923:16923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16909:16913 CertiOS.framework.model.language <> kenil constr
R16915:16918 CertiOS.framework.model.language <> kret constr
R16946:16947 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16939:16941 Coq.Init.Logic <> :type_scope:x_'='_x not
R16927:16934 CertiOS.framework.model.opsem <> callcont def
R16942:16945 Coq.Init.Datatypes <> None constr
R16959:16959 Coq.Init.Logic <> :type_scope:x_'='_x not
R16948:16954 CertiOS.framework.model.opsem <> intcont def
R16960:16963 Coq.Init.Datatypes <> None constr
R16971:16977 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R16979:16979 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R16983:16984 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17038:17039 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16996:16997 Coq.Init.Logic <> :type_scope:x_'='_x not
R16985:16985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16987:16987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16995:16995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16986:16986 CertiOS.framework.proof.lemmasfortoptheo <> c var
R16988:16988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16991:16991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16994:16994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16989:16990 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R16992:16993 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R16998:16998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17020:17020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17037:17037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R16999:17002 CertiOS.framework.model.language <> curs constr
R17005:17009 CertiOS.framework.model.language <> sskip constr
R17012:17015 Coq.Init.Datatypes <> Some constr
R17021:17021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17027:17027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17036:17036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17022:17026 CertiOS.framework.model.language <> kenil constr
R17028:17031 CertiOS.framework.model.language <> kret constr
R17059:17060 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17052:17054 Coq.Init.Logic <> :type_scope:x_'='_x not
R17040:17047 CertiOS.framework.model.opsem <> callcont def
R17055:17058 Coq.Init.Datatypes <> None constr
R17072:17072 Coq.Init.Logic <> :type_scope:x_'='_x not
R17061:17067 CertiOS.framework.model.opsem <> intcont def
R17073:17076 Coq.Init.Datatypes <> None constr
R17110:17110 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17217:17222 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17111:17117 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17119:17119 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17123:17124 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17178:17179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17136:17137 Coq.Init.Logic <> :type_scope:x_'='_x not
R17125:17125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17127:17127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17135:17135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17128:17128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17131:17131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17134:17134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17138:17138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17160:17160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17177:17177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17139:17142 CertiOS.framework.model.language <> curs constr
R17145:17149 CertiOS.framework.model.language <> sskip constr
R17152:17155 Coq.Init.Datatypes <> Some constr
R17161:17161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17167:17167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17176:17176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17162:17166 CertiOS.framework.model.language <> kenil constr
R17168:17171 CertiOS.framework.model.language <> kret constr
R17199:17200 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17192:17194 Coq.Init.Logic <> :type_scope:x_'='_x not
R17180:17187 CertiOS.framework.model.opsem <> callcont def
R17195:17198 Coq.Init.Datatypes <> None constr
R17212:17212 Coq.Init.Logic <> :type_scope:x_'='_x not
R17201:17207 CertiOS.framework.model.opsem <> intcont def
R17213:17216 Coq.Init.Datatypes <> None constr
R17223:17224 Coq.Init.Logic <> :type_scope:'~'_x not
R17331:17331 Coq.Init.Logic <> :type_scope:'~'_x not
R17225:17231 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17233:17233 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17237:17238 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17292:17293 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17250:17251 Coq.Init.Logic <> :type_scope:x_'='_x not
R17239:17239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17241:17241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17249:17249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17242:17242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17245:17245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17248:17248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17252:17252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17274:17274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17291:17291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17253:17256 CertiOS.framework.model.language <> curs constr
R17259:17263 CertiOS.framework.model.language <> sskip constr
R17266:17269 Coq.Init.Datatypes <> Some constr
R17275:17275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17281:17281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17290:17290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17276:17280 CertiOS.framework.model.language <> kenil constr
R17282:17285 CertiOS.framework.model.language <> kret constr
R17313:17314 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17306:17308 Coq.Init.Logic <> :type_scope:x_'='_x not
R17294:17301 CertiOS.framework.model.opsem <> callcont def
R17309:17312 Coq.Init.Datatypes <> None constr
R17326:17326 Coq.Init.Logic <> :type_scope:x_'='_x not
R17315:17321 CertiOS.framework.model.opsem <> intcont def
R17327:17330 Coq.Init.Datatypes <> None constr
R17110:17110 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17217:17222 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17111:17117 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17119:17119 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17123:17124 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17178:17179 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17136:17137 Coq.Init.Logic <> :type_scope:x_'='_x not
R17125:17125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17127:17127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17135:17135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17128:17128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17131:17131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17134:17134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17138:17138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17160:17160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17177:17177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17139:17142 CertiOS.framework.model.language <> curs constr
R17145:17149 CertiOS.framework.model.language <> sskip constr
R17152:17155 Coq.Init.Datatypes <> Some constr
R17161:17161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17167:17167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17176:17176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17162:17166 CertiOS.framework.model.language <> kenil constr
R17168:17171 CertiOS.framework.model.language <> kret constr
R17199:17200 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17192:17194 Coq.Init.Logic <> :type_scope:x_'='_x not
R17180:17187 CertiOS.framework.model.opsem <> callcont def
R17195:17198 Coq.Init.Datatypes <> None constr
R17212:17212 Coq.Init.Logic <> :type_scope:x_'='_x not
R17201:17207 CertiOS.framework.model.opsem <> intcont def
R17213:17216 Coq.Init.Datatypes <> None constr
R17223:17224 Coq.Init.Logic <> :type_scope:'~'_x not
R17331:17331 Coq.Init.Logic <> :type_scope:'~'_x not
R17225:17231 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17233:17233 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17237:17238 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R17292:17293 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17250:17251 Coq.Init.Logic <> :type_scope:x_'='_x not
R17239:17239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17241:17241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17249:17249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17242:17242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17245:17245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17248:17248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17252:17252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17274:17274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17291:17291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17253:17256 CertiOS.framework.model.language <> curs constr
R17259:17263 CertiOS.framework.model.language <> sskip constr
R17266:17269 Coq.Init.Datatypes <> Some constr
R17275:17275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17281:17281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17290:17290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17276:17280 CertiOS.framework.model.language <> kenil constr
R17282:17285 CertiOS.framework.model.language <> kret constr
R17313:17314 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17306:17308 Coq.Init.Logic <> :type_scope:x_'='_x not
R17294:17301 CertiOS.framework.model.opsem <> callcont def
R17309:17312 Coq.Init.Datatypes <> None constr
R17326:17326 Coq.Init.Logic <> :type_scope:x_'='_x not
R17315:17321 CertiOS.framework.model.opsem <> intcont def
R17327:17330 Coq.Init.Datatypes <> None constr
R17345:17351 Coq.Logic.Classical_Prop <> classic prfax
R17345:17351 Coq.Logic.Classical_Prop <> classic prfax
prf 17391:17408 <> join_tst_wo_mem_eq
R17428:17433 CertiOS.framework.model.language <> taskst def
R17443:17445 CertiOS.framework.model.memory <> mem def
R17465:17468 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17469:17478 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R17482:17483 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R17480:17480 CertiOS.framework.proof.lemmasfortoptheo <> o var
R17449:17454 CertiOS.framework.proof.simulation <> joinm2 def
R17463:17464 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R17460:17461 CertiOS.framework.proof.lemmasfortoptheo <> M' var
R17458:17458 CertiOS.framework.proof.lemmasfortoptheo <> M var
R17456:17456 CertiOS.framework.proof.lemmasfortoptheo <> o var
R17542:17548 CertiOS.framework.logic.assertion <> joinmem def
prf 17611:17620 <> fun_goodks
R17644:17651 CertiOS.framework.model.language <> progunit def
R17660:17666 CertiOS.framework.model.language <> intunit def
R17687:17694 CertiOS.framework.model.language <> stmtcont ind
R17702:17704 CertiOS.framework.model.language <> fid def
R17712:17716 CertiOS.framework.model.language <> stmts ind
R17725:17732 CertiOS.framework.model.language <> stmtcont ind
R17795:17803 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17804:17809 CertiOS.framework.proof.auxdef <> goodks def
R17830:17831 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R17811:17811 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17814:17815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17828:17828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17812:17813 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R17816:17816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17819:17820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17823:17824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17827:17827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17817:17818 CertiOS.framework.proof.lemmasfortoptheo <> po var
R17821:17822 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R17825:17826 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R17741:17746 CertiOS.framework.proof.auxdef <> goodks def
R17771:17774 CertiOS.framework.model.opsem <> ::x_'##'_x not
R17775:17779 CertiOS.framework.model.language <> kcall constr
R17792:17793 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R17785:17790 CertiOS.framework.logic.assertion <> empenv syndef
R17783:17783 CertiOS.framework.proof.lemmasfortoptheo <> s var
R17781:17781 CertiOS.framework.proof.lemmasfortoptheo <> f var
R17768:17770 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R17748:17748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17751:17752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17765:17765 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17749:17750 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R17753:17753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17756:17757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17760:17761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17764:17764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R17754:17755 CertiOS.framework.proof.lemmasfortoptheo <> po var
R17758:17759 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R17762:17763 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R17891:17897 CertiOS.framework.model.opsem <> pumerge def
R17891:17897 CertiOS.framework.model.opsem <> pumerge def
R17956:17960 CertiOS.framework.proof.auxdef <> no_os def
R17981:17987 CertiOS.framework.model.opsem <> pumerge def
R17981:17987 CertiOS.framework.model.opsem <> pumerge def
R18035:18039 CertiOS.framework.proof.auxdef <> no_os def
R18057:18062 CertiOS.framework.proof.auxdef <> goodks def
R18091:18097 CertiOS.framework.model.opsem <> pumerge def
R18091:18097 CertiOS.framework.model.opsem <> pumerge def
R18187:18199 CertiOS.framework.proof.step_prop <> no_os_goodks' thm
R18187:18199 CertiOS.framework.proof.step_prop <> no_os_goodks' thm
prf 18235:18247 <> proj_stneq_ex
R18307:18310 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18316:18320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18341:18368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18380:18406 Coq.Init.Logic <> :type_scope:x_'='_x not
R18369:18373 CertiOS.framework.model.opsem <> projS def
R18378:18379 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R18375:18376 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R18407:18410 Coq.Init.Datatypes <> Some constr
R18438:18467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18577:18665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18678:18709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18716:18745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18468:18469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18479:18511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18533:18565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18575:18576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R18470:18475 CertiOS.framework.model.opsem <> gets_g def
R18477:18478 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R18512:18518 CertiOS.framework.model.opsem <> get_env def
R18521:18528 CertiOS.framework.model.language <> get_smem def
R18530:18531 CertiOS.framework.proof.lemmasfortoptheo <> or var
R18566:18571 CertiOS.framework.model.opsem <> gets_m def
R18573:18574 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R18666:18668 Coq.Init.Datatypes <> snd def
R18671:18673 Coq.Init.Datatypes <> fst def
R18675:18676 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R18710:18712 Coq.Init.Datatypes <> snd def
R18714:18715 CertiOS.framework.proof.lemmasfortoptheo <> or var
R18331:18333 Coq.Init.Logic <> :type_scope:x_'='_x not
R18321:18325 CertiOS.framework.model.opsem <> projS def
R18329:18330 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R18327:18327 CertiOS.framework.proof.lemmasfortoptheo <> S var
R18334:18337 Coq.Init.Datatypes <> Some constr
R18339:18340 CertiOS.framework.proof.lemmasfortoptheo <> or var
R18313:18314 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18311:18312 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R18315:18315 CertiOS.framework.proof.lemmasfortoptheo <> t var
R18296:18299 CertiOS.framework.model.opsem <> Steq def
R18306:18306 CertiOS.framework.proof.lemmasfortoptheo <> t var
R18303:18304 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R18301:18301 CertiOS.framework.proof.lemmasfortoptheo <> S var
R18768:18771 CertiOS.framework.model.opsem <> Steq def
R18781:18785 CertiOS.framework.model.opsem <> projS def
R18946:18949 CertiOS.framework.model.opsem <> Dteq def
R19028:19032 CertiOS.framework.model.opsem <> Piteq def
R19102:19106 CertiOS.framework.model.opsem <> projD def
R19128:19130 CertiOS.framework.auxlibs.Maps <> get meth
R19128:19130 CertiOS.framework.auxlibs.Maps <> get meth
R19160:19162 CertiOS.framework.auxlibs.Maps <> get meth
R19160:19162 CertiOS.framework.auxlibs.Maps <> get meth
R19190:19194 CertiOS.framework.model.opsem <> projD def
R19253:19258 CertiOS.framework.model.opsem <> gets_g def
R19271:19277 CertiOS.framework.model.opsem <> get_env def
R19290:19295 CertiOS.framework.model.opsem <> gets_m def
prf 19400:19407 <> IntSeq''
R19428:19435 CertiOS.framework.model.language <> progunit def
R19491:19496 CertiOS.framework.model.language <> taskst def
R19639:19647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19677:19684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19706:19714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19728:19736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19752:19760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19801:19808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19836:19918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19919:19920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20189:20198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20246:20254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20327:20335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20392:20400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20401:20407 CertiOS.framework.proof.simulation <> TaskSim coind
R20531:20531 CertiOS.framework.proof.lemmasfortoptheo <> t var
R20529:20529 CertiOS.framework.proof.lemmasfortoptheo <> p var
R20527:20527 CertiOS.framework.proof.lemmasfortoptheo <> I var
R20521:20525 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R20518:20519 CertiOS.framework.proof.lemmasfortoptheo <> OO var
R20470:20470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20490:20490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20516:20516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20471:20474 CertiOS.framework.model.language <> curs constr
R20477:20485 CertiOS.framework.model.language <> hapi_code constr
R20487:20488 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R20491:20491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20497:20497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20515:20515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20492:20496 CertiOS.framework.model.language <> kenil constr
R20498:20503 CertiOS.framework.model.language <> kevent constr
R20512:20514 CertiOS.framework.proof.lemmasfortoptheo <> ksh var
R20508:20510 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R20505:20506 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R20463:20463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20466:20466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20468:20468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20464:20465 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R20467:20467 CertiOS.framework.proof.lemmasfortoptheo <> A var
R20461:20461 CertiOS.framework.proof.lemmasfortoptheo <> o var
R20425:20425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20428:20428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20459:20459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20426:20427 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R20429:20429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20433:20434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20458:20458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20430:20432 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R20438:20440 CertiOS.framework.model.opsem <> ::x_'##'_x not
R20441:20444 CertiOS.framework.model.language <> kint constr
R20456:20457 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R20451:20454 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R20448:20449 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R20446:20446 CertiOS.framework.proof.lemmasfortoptheo <> c var
R20435:20437 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R20409:20409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20412:20412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20423:20423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20410:20411 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R20413:20413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20416:20416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20419:20419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20422:20422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20414:20415 CertiOS.framework.proof.lemmasfortoptheo <> po var
R20417:20418 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R20420:20421 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R20336:20339 CertiOS.framework.model.opsem <> InOS def
R20378:20384 CertiOS.framework.model.opsem <> pumerge def
R20389:20390 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R20386:20387 CertiOS.framework.proof.lemmasfortoptheo <> po var
R20341:20341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20344:20344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20375:20375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20342:20343 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R20345:20345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20349:20350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20374:20374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20346:20348 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R20354:20356 CertiOS.framework.model.opsem <> ::x_'##'_x not
R20357:20360 CertiOS.framework.model.language <> kint constr
R20372:20373 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R20367:20370 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R20364:20365 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R20362:20362 CertiOS.framework.proof.lemmasfortoptheo <> c var
R20351:20353 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R20255:20261 CertiOS.framework.proof.simulation <> MethSim coind
R20326:20326 CertiOS.framework.proof.lemmasfortoptheo <> t var
R20317:20324 CertiOS.framework.proof.auxdef <> retfalse def
R20315:20315 CertiOS.framework.proof.lemmasfortoptheo <> r var
R20306:20313 CertiOS.framework.proof.auxdef <> retfalse def
R20304:20304 CertiOS.framework.proof.lemmasfortoptheo <> I var
R20298:20302 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R20295:20296 CertiOS.framework.proof.lemmasfortoptheo <> Oi var
R20292:20293 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R20289:20290 CertiOS.framework.proof.lemmasfortoptheo <> oi var
R20274:20274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20277:20277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20287:20287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20275:20276 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R20278:20278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20282:20282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20286:20286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20279:20281 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R20283:20285 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R20267:20269 Coq.Init.Datatypes <> snd def
R20271:20271 CertiOS.framework.proof.lemmasfortoptheo <> A var
R20263:20264 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R20199:20204 CertiOS.framework.proof.auxdef <> goodks def
R20226:20227 CertiOS.framework.model.opsem <> ::x_'##'_x not
R20228:20231 CertiOS.framework.model.language <> kint constr
R20243:20244 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R20238:20241 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R20235:20236 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R20233:20233 CertiOS.framework.proof.lemmasfortoptheo <> c var
R20223:20225 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R20206:20206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20209:20209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20220:20220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20207:20208 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R20210:20210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20213:20213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20216:20216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20219:20219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20211:20212 CertiOS.framework.proof.lemmasfortoptheo <> po var
R20214:20215 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R20217:20218 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R20028:20036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20037:20043 CertiOS.framework.proof.simulation <> TaskSim coind
R20188:20188 CertiOS.framework.proof.lemmasfortoptheo <> t var
R20186:20186 CertiOS.framework.proof.lemmasfortoptheo <> p var
R20184:20184 CertiOS.framework.proof.lemmasfortoptheo <> I var
R20178:20182 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R20162:20166 CertiOS.framework.auxlibs.Maps <> merge meth
R20171:20175 CertiOS.framework.proof.lemmasfortoptheo <> Olinv var
R20168:20169 CertiOS.framework.proof.lemmasfortoptheo <> Ol var
R20147:20147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20150:20150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20160:20160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20148:20149 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R20151:20151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20155:20155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20159:20159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20152:20154 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R20156:20158 CertiOS.framework.proof.lemmasfortoptheo <> ksh var
R20140:20140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20143:20143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20145:20145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20141:20142 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R20144:20144 CertiOS.framework.proof.lemmasfortoptheo <> A var
R20073:20073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20100:20101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20123:20124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20138:20138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20074:20074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20077:20077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20082:20083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20098:20099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20075:20076 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R20078:20081 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R20084:20088 CertiOS.framework.auxlibs.Maps <> merge meth
R20093:20097 CertiOS.framework.proof.lemmasfortoptheo <> Mlinv var
R20090:20091 CertiOS.framework.proof.lemmasfortoptheo <> Ml var
R20102:20107 CertiOS.framework.model.language <> isrupd def
R20118:20122 Coq.Init.Datatypes <> false constr
R20116:20116 CertiOS.framework.proof.lemmasfortoptheo <> i var
R20109:20114 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R20125:20125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20130:20130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20133:20133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20137:20137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20126:20129 Coq.Init.Datatypes <> true constr
R20131:20132 CertiOS.framework.proof.lemmasfortoptheo <> si var
R20134:20136 Coq.Init.Datatypes <> nil constr
R20061:20061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20063:20063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20071:20071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20062:20062 CertiOS.framework.proof.lemmasfortoptheo <> c var
R20064:20064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20067:20067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20070:20070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20065:20066 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R20068:20069 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R20045:20045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20048:20048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20059:20059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20046:20047 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R20049:20049 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20052:20052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20055:20055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20058:20058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20050:20051 CertiOS.framework.proof.lemmasfortoptheo <> po var
R20053:20054 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R20056:20057 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R19941:19944 CertiOS.framework.logic.inferules <> satp def
R20009:20015 CertiOS.framework.logic.inferules <> p_local def
R20025:20026 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R20023:20023 CertiOS.framework.proof.lemmasfortoptheo <> t var
R20017:20021 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R20002:20006 CertiOS.framework.proof.lemmasfortoptheo <> Olinv var
R19946:19946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19962:19963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19985:19986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20000:20000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19947:19947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19950:19950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19955:19955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19961:19961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19948:19949 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R19951:19954 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R19956:19960 CertiOS.framework.proof.lemmasfortoptheo <> Mlinv var
R19964:19969 CertiOS.framework.model.language <> isrupd def
R19980:19984 Coq.Init.Datatypes <> false constr
R19978:19978 CertiOS.framework.proof.lemmasfortoptheo <> i var
R19971:19976 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R19987:19987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19992:19992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19995:19995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19999:19999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19988:19991 Coq.Init.Datatypes <> true constr
R19993:19994 CertiOS.framework.proof.lemmasfortoptheo <> si var
R19996:19998 Coq.Init.Datatypes <> nil constr
R19824:19826 Coq.Init.Logic <> :type_scope:x_'='_x not
R19810:19812 Coq.Init.Datatypes <> snd def
R19815:19817 Coq.Init.Datatypes <> fst def
R19819:19819 CertiOS.framework.proof.lemmasfortoptheo <> A var
R19823:19823 CertiOS.framework.proof.lemmasfortoptheo <> i var
R19827:19830 Coq.Init.Datatypes <> Some constr
R19832:19835 CertiOS.framework.proof.lemmasfortoptheo <> absi var
R19762:19764 Coq.Init.Logic <> :type_scope:x_'='_x not
R19761:19761 CertiOS.framework.proof.lemmasfortoptheo <> r var
R19765:19772 CertiOS.framework.proof.auxdef <> iretasrt def
R19799:19800 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R19797:19797 CertiOS.framework.proof.lemmasfortoptheo <> t var
R19791:19795 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R19788:19789 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R19786:19786 CertiOS.framework.proof.lemmasfortoptheo <> I var
R19783:19784 CertiOS.framework.proof.lemmasfortoptheo <> si var
R19776:19781 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R19774:19774 CertiOS.framework.proof.lemmasfortoptheo <> i var
R19737:19743 CertiOS.framework.logic.assertion <> joinmem def
R19751:19751 CertiOS.framework.proof.lemmasfortoptheo <> o var
R19748:19749 CertiOS.framework.proof.lemmasfortoptheo <> Ml var
R19745:19746 CertiOS.framework.proof.lemmasfortoptheo <> oi var
R19715:19718 CertiOS.framework.auxlibs.Maps <> join meth
R19726:19727 CertiOS.framework.proof.lemmasfortoptheo <> OO var
R19723:19724 CertiOS.framework.proof.lemmasfortoptheo <> Ol var
R19720:19721 CertiOS.framework.proof.lemmasfortoptheo <> Oi var
R19685:19689 CertiOS.framework.logic.inferules <> GoodI def
R19701:19705 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R19694:19696 Coq.Init.Datatypes <> snd def
R19698:19698 CertiOS.framework.proof.lemmasfortoptheo <> A var
R19691:19691 CertiOS.framework.proof.lemmasfortoptheo <> I var
R19648:19658 CertiOS.framework.proof.auxdef <> no_call_api def
R19675:19676 CertiOS.framework.proof.lemmasfortoptheo <> po var
R19660:19660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19663:19663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19673:19673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19661:19662 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R19664:19664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19668:19668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19672:19672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19665:19667 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R19669:19671 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R19616:19629 CertiOS.framework.proof.auxdef <> no_call_api_os def
R19637:19638 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R19634:19635 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R19631:19632 CertiOS.framework.proof.lemmasfortoptheo <> po var
R20825:20832 CertiOS.framework.proof.simulation <> task_sim constr
R20825:20832 CertiOS.framework.proof.simulation <> task_sim constr
R20863:20871 CertiOS.framework.proof.lemmasfortoptheo <> exint_dec thm
R20863:20871 CertiOS.framework.proof.lemmasfortoptheo <> exint_dec thm
R21195:21197 Coq.Init.Logic <> :type_scope:x_'='_x not
R21161:21167 CertiOS.framework.model.opsem <> intcont def
R21173:21176 CertiOS.framework.model.opsem <> ::x_'##'_x not
R21177:21180 CertiOS.framework.model.language <> kint constr
R21198:21201 Coq.Init.Datatypes <> Some constr
R21204:21207 CertiOS.framework.model.language <> kint constr
R21195:21197 Coq.Init.Logic <> :type_scope:x_'='_x not
R21161:21167 CertiOS.framework.model.opsem <> intcont def
R21173:21176 CertiOS.framework.model.opsem <> ::x_'##'_x not
R21177:21180 CertiOS.framework.model.language <> kint constr
R21198:21201 Coq.Init.Datatypes <> Some constr
R21204:21207 CertiOS.framework.model.language <> kint constr
R21237:21249 CertiOS.framework.proof.step_prop <> intcont_local thm
R21237:21249 CertiOS.framework.proof.step_prop <> intcont_local thm
R21397:21403 CertiOS.framework.logic.assertion <> joinmem def
R21545:21551 CertiOS.framework.logic.assertion <> joinmem def
R21724:21731 CertiOS.framework.auxlibs.Maps <> disjoint def
R21724:21731 CertiOS.framework.auxlibs.Maps <> disjoint def
R21822:21836 Coq.Init.Logic <> :type_scope:x_'='_x not
R21788:21788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21807:21808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21821:21821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21789:21792 CertiOS.framework.model.language <> curs constr
R21795:21799 CertiOS.framework.model.language <> sprim constr
R21801:21805 CertiOS.framework.model.language <> exint constr
R21809:21809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21815:21816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21820:21820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21810:21814 CertiOS.framework.model.language <> kenil constr
R21837:21837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21856:21857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21870:21870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21838:21841 CertiOS.framework.model.language <> curs constr
R21844:21848 CertiOS.framework.model.language <> sprim constr
R21850:21854 CertiOS.framework.model.language <> exint constr
R21858:21858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21864:21865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21869:21869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21859:21863 CertiOS.framework.model.language <> kenil constr
R21822:21836 Coq.Init.Logic <> :type_scope:x_'='_x not
R21788:21788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21807:21808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21821:21821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21789:21792 CertiOS.framework.model.language <> curs constr
R21795:21799 CertiOS.framework.model.language <> sprim constr
R21801:21805 CertiOS.framework.model.language <> exint constr
R21809:21809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21815:21816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21820:21820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21810:21814 CertiOS.framework.model.language <> kenil constr
R21837:21837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21856:21857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21870:21870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21838:21841 CertiOS.framework.model.language <> curs constr
R21844:21848 CertiOS.framework.model.language <> sprim constr
R21850:21854 CertiOS.framework.model.language <> exint constr
R21858:21858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21864:21865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21869:21869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21859:21863 CertiOS.framework.model.language <> kenil constr
R21981:21986 CertiOS.framework.proof.simulation <> getmem def
R22128:22135 CertiOS.framework.proof.auxdef <> iretasrt def
R22164:22169 CertiOS.framework.proof.invariant_prop <> ret_st thm
R22164:22169 CertiOS.framework.proof.invariant_prop <> ret_st thm
R22366:22374 CertiOS.framework.model.language <> spec_done constr
R22376:22379 Coq.Init.Datatypes <> None constr
R22387:22391 CertiOS.framework.auxlibs.Maps <> merge meth
R22274:22282 CertiOS.framework.proof.invariant_prop <> iret_spec thm
R22366:22374 CertiOS.framework.model.language <> spec_done constr
R22376:22379 Coq.Init.Datatypes <> None constr
R22387:22391 CertiOS.framework.auxlibs.Maps <> merge meth
R22274:22282 CertiOS.framework.proof.invariant_prop <> iret_spec thm
R22506:22506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22509:22509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22519:22519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22510:22510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22514:22514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22518:22518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22522:22526 CertiOS.framework.auxlibs.Maps <> merge meth
R22536:22536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22539:22539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22544:22545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22561:22563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22585:22585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22604:22604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22546:22550 CertiOS.framework.auxlibs.Maps <> merge meth
R22564:22569 CertiOS.framework.model.language <> isrupd def
R22580:22584 Coq.Init.Datatypes <> false constr
R22586:22586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22591:22591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22594:22595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22602:22603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22587:22590 Coq.Init.Datatypes <> true constr
R22600:22601 CertiOS.framework.model.language <> cs def
R22596:22598 Coq.Init.Datatypes <> nil constr
R22506:22506 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22509:22509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22519:22519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22510:22510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22514:22514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22518:22518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22522:22526 CertiOS.framework.auxlibs.Maps <> merge meth
R22536:22536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22539:22539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22544:22545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22561:22563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22585:22585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22604:22604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22546:22550 CertiOS.framework.auxlibs.Maps <> merge meth
R22564:22569 CertiOS.framework.model.language <> isrupd def
R22580:22584 Coq.Init.Datatypes <> false constr
R22586:22586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22591:22591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22594:22595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22602:22603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22587:22590 Coq.Init.Datatypes <> true constr
R22600:22601 CertiOS.framework.model.language <> cs def
R22596:22598 Coq.Init.Datatypes <> nil constr
R22622:22626 CertiOS.framework.auxlibs.Maps <> merge meth
R22622:22626 CertiOS.framework.auxlibs.Maps <> merge meth
R22710:22715 CertiOS.framework.proof.simulation <> joinm2 def
R22728:22728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22731:22731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22736:22737 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22740:22743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22765:22767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22786:22786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22744:22749 CertiOS.framework.model.language <> isrupd def
R22760:22764 Coq.Init.Datatypes <> false constr
R22768:22768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22773:22773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22776:22777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22784:22785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22769:22772 Coq.Init.Datatypes <> true constr
R22782:22783 CertiOS.framework.model.language <> cs def
R22778:22780 Coq.Init.Datatypes <> nil constr
R22728:22728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22731:22731 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22736:22737 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22740:22743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22765:22767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22786:22786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22744:22749 CertiOS.framework.model.language <> isrupd def
R22760:22764 Coq.Init.Datatypes <> false constr
R22768:22768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22773:22773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22776:22777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22784:22785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22769:22772 Coq.Init.Datatypes <> true constr
R22782:22783 CertiOS.framework.model.language <> cs def
R22778:22780 Coq.Init.Datatypes <> nil constr
R22850:22864 CertiOS.framework.proof.join_prop <> join_join_merge thm
R22850:22864 CertiOS.framework.proof.join_prop <> join_join_merge thm
R22949:22949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22983:22984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23011:23011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22950:22953 CertiOS.framework.model.language <> curs constr
R22956:22964 CertiOS.framework.model.language <> hapi_code constr
R22967:22975 CertiOS.framework.model.language <> spec_done constr
R22977:22980 Coq.Init.Datatypes <> None constr
R22985:22985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22991:22992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23010:23010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22986:22990 CertiOS.framework.model.language <> kenil constr
R22993:22998 CertiOS.framework.model.language <> kevent constr
R23020:23024 CertiOS.framework.auxlibs.Maps <> merge meth
R22915:22937 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R22949:22949 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22983:22984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23011:23011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22950:22953 CertiOS.framework.model.language <> curs constr
R22956:22964 CertiOS.framework.model.language <> hapi_code constr
R22967:22975 CertiOS.framework.model.language <> spec_done constr
R22977:22980 Coq.Init.Datatypes <> None constr
R22985:22985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22991:22992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23010:23010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22986:22990 CertiOS.framework.model.language <> kenil constr
R22993:22998 CertiOS.framework.model.language <> kevent constr
R23020:23024 CertiOS.framework.auxlibs.Maps <> merge meth
R22915:22937 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R23105:23109 CertiOS.framework.model.language <> kenil constr
R23118:23123 CertiOS.framework.model.language <> kevent constr
R23048:23058 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R23105:23109 CertiOS.framework.model.language <> kenil constr
R23118:23123 CertiOS.framework.model.language <> kevent constr
R23048:23058 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R23164:23181 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R23164:23181 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R23237:23245 CertiOS.tactics.basetac.join_lib <> join_comm thm
R23237:23245 CertiOS.tactics.basetac.join_lib <> join_comm thm
R23264:23278 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R23264:23278 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R23337:23340 Coq.Init.Logic <> :type_scope:x_'='_x not
R23349:23349 Coq.Init.Logic <> :type_scope:x_'='_x not
R23341:23344 CertiOS.framework.model.language <> ::'END'_x not
R23345:23348 Coq.Init.Datatypes <> None constr
R23337:23340 Coq.Init.Logic <> :type_scope:x_'='_x not
R23349:23349 Coq.Init.Logic <> :type_scope:x_'='_x not
R23341:23344 CertiOS.framework.model.language <> ::'END'_x not
R23345:23348 Coq.Init.Datatypes <> None constr
R23475:23483 CertiOS.framework.model.opsem <> hapi_step constr
R23475:23483 CertiOS.framework.model.opsem <> hapi_step constr
R23502:23512 CertiOS.framework.model.opsem <> hintex_step constr
R23502:23512 CertiOS.framework.model.opsem <> hintex_step constr
R23532:23539 CertiOS.framework.auxlibs.Maps <> disjoint def
R23532:23539 CertiOS.framework.auxlibs.Maps <> disjoint def
R23603:23617 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R23603:23617 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R23665:23685 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R23665:23685 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R23706:23717 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R23706:23717 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R23737:23744 CertiOS.framework.auxlibs.Maps <> disjoint def
R23737:23744 CertiOS.framework.auxlibs.Maps <> disjoint def
R23794:23818 CertiOS.framework.proof.join_prop <> join_join_join_merge_disj thm
R23794:23818 CertiOS.framework.proof.join_prop <> join_join_join_merge_disj thm
R23852:23859 CertiOS.framework.auxlibs.Maps <> disjoint def
R23852:23859 CertiOS.framework.auxlibs.Maps <> disjoint def
R23884:23891 CertiOS.framework.auxlibs.Maps <> disjoint def
R23884:23891 CertiOS.framework.auxlibs.Maps <> disjoint def
R23953:23967 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R23953:23967 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R24021:24028 CertiOS.framework.auxlibs.Maps <> disjoint def
R24062:24062 Coq.Init.Logic <> :type_scope:x_'='_x not
R24078:24082 Coq.Init.Logic <> :type_scope:x_'='_x not
R24098:24098 Coq.Init.Logic <> :type_scope:x_'='_x not
R24063:24067 CertiOS.framework.auxlibs.Maps <> merge meth
R24083:24087 CertiOS.framework.auxlibs.Maps <> merge meth
R24062:24062 Coq.Init.Logic <> :type_scope:x_'='_x not
R24078:24082 Coq.Init.Logic <> :type_scope:x_'='_x not
R24098:24098 Coq.Init.Logic <> :type_scope:x_'='_x not
R24063:24067 CertiOS.framework.auxlibs.Maps <> merge meth
R24083:24087 CertiOS.framework.auxlibs.Maps <> merge meth
R24111:24128 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24111:24128 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24163:24180 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24163:24180 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24163:24180 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24163:24180 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R24198:24215 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R24198:24215 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R24233:24240 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R24233:24240 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R24257:24264 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R24257:24264 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R24283:24286 CertiOS.framework.logic.inferules <> satp def
R24365:24371 CertiOS.framework.logic.inferules <> CurLINV def
R24288:24288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24291:24292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24295:24296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24303:24304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24326:24327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24343:24343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24305:24310 CertiOS.framework.model.language <> isrupd def
R24321:24325 Coq.Init.Datatypes <> false constr
R24328:24328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24333:24334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24337:24338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24342:24342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24329:24332 Coq.Init.Datatypes <> true constr
R24339:24341 Coq.Init.Datatypes <> nil constr
R24283:24286 CertiOS.framework.logic.inferules <> satp def
R24365:24371 CertiOS.framework.logic.inferules <> CurLINV def
R24288:24288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24291:24292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24295:24296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24303:24304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24326:24327 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24343:24343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24305:24310 CertiOS.framework.model.language <> isrupd def
R24321:24325 Coq.Init.Datatypes <> false constr
R24328:24328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24333:24334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24337:24338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24342:24342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24329:24332 Coq.Init.Datatypes <> true constr
R24339:24341 Coq.Init.Datatypes <> nil constr
R24410:24413 CertiOS.framework.logic.inferules <> satp def
R24464:24470 CertiOS.framework.logic.inferules <> CurLINV def
R24483:24489 CertiOS.framework.logic.inferules <> p_local def
R24534:24551 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R24534:24551 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R24592:24609 CertiOS.framework.proof.invariant_prop <> p_local_ignore_int thm
R24592:24609 CertiOS.framework.proof.invariant_prop <> p_local_ignore_int thm
R24628:24641 CertiOS.framework.auxlibs.Maps <> map_join_merge meth
R24628:24641 CertiOS.framework.auxlibs.Maps <> map_join_merge meth
R24774:24780 CertiOS.framework.logic.assertion <> joinmem def
R24922:24928 CertiOS.framework.logic.assertion <> joinmem def
R25157:25171 CertiOS.framework.proof.step_prop <> ltstep_no_exint thm
R25157:25171 CertiOS.framework.proof.step_prop <> ltstep_no_exint thm
R25314:25336 CertiOS.framework.proof.step_prop <> no_call_api_loststep_eq thm
R25314:25336 CertiOS.framework.proof.step_prop <> no_call_api_loststep_eq thm
R25388:25392 CertiOS.framework.auxlibs.Maps <> merge meth
R25415:25419 CertiOS.framework.auxlibs.Maps <> merge meth
R25388:25392 CertiOS.framework.auxlibs.Maps <> merge meth
R25415:25419 CertiOS.framework.auxlibs.Maps <> merge meth
R25633:25638 CertiOS.framework.proof.simulation <> joinm2 def
R25836:25842 CertiOS.framework.logic.assertion <> joinmem def
R25991:25991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26015:26016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26043:26043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25992:25995 CertiOS.framework.model.language <> curs constr
R25998:26006 CertiOS.framework.model.language <> hapi_code constr
R26017:26017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26023:26024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26042:26042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26018:26022 CertiOS.framework.model.language <> kenil constr
R26025:26030 CertiOS.framework.model.language <> kevent constr
R26046:26050 CertiOS.framework.auxlibs.Maps <> merge meth
R26060:26060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26063:26063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26066:26067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26078:26079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26082:26082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26093:26093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26068:26072 CertiOS.framework.auxlibs.Maps <> merge meth
R26083:26083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26086:26086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26089:26089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26092:26092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26100:26104 CertiOS.framework.auxlibs.Maps <> merge meth
R25991:25991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26015:26016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26043:26043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25992:25995 CertiOS.framework.model.language <> curs constr
R25998:26006 CertiOS.framework.model.language <> hapi_code constr
R26017:26017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26023:26024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26042:26042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26018:26022 CertiOS.framework.model.language <> kenil constr
R26025:26030 CertiOS.framework.model.language <> kevent constr
R26046:26050 CertiOS.framework.auxlibs.Maps <> merge meth
R26060:26060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26063:26063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26066:26067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26078:26079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26082:26082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26093:26093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26068:26072 CertiOS.framework.auxlibs.Maps <> merge meth
R26083:26083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26086:26086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26089:26089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26092:26092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26100:26104 CertiOS.framework.auxlibs.Maps <> merge meth
R26204:26208 CertiOS.framework.model.language <> kenil constr
R26217:26222 CertiOS.framework.model.language <> kevent constr
R26148:26158 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R26204:26208 CertiOS.framework.model.language <> kenil constr
R26217:26222 CertiOS.framework.model.language <> kevent constr
R26148:26158 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R26263:26280 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R26263:26280 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R26336:26344 CertiOS.tactics.basetac.join_lib <> join_comm thm
R26336:26344 CertiOS.tactics.basetac.join_lib <> join_comm thm
R26363:26377 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R26363:26377 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R26412:26431 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R26412:26431 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R26463:26471 CertiOS.tactics.basetac.join_lib <> join_comm thm
R26463:26471 CertiOS.tactics.basetac.join_lib <> join_comm thm
R26493:26498 CertiOS.framework.proof.simulation <> joinm2 def
R26511:26511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26514:26515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26518:26520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26532:26534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26537:26538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26551:26551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26521:26525 CertiOS.framework.auxlibs.Maps <> merge meth
R26539:26539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26542:26543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26546:26547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26550:26550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26511:26511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26514:26515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26518:26520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26532:26534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26537:26538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26551:26551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26521:26525 CertiOS.framework.auxlibs.Maps <> merge meth
R26539:26539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26542:26543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26546:26547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26550:26550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26612:26632 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R26612:26632 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R26652:26659 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R26652:26659 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R26672:26697 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R26672:26697 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R26793:26812 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R26793:26812 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R26876:26896 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R26876:26896 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R26915:26929 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R26915:26929 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R26948:26965 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R26948:26965 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R27015:27022 CertiOS.framework.auxlibs.Maps <> disjoint def
R27015:27022 CertiOS.framework.auxlibs.Maps <> disjoint def
R27041:27066 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R27041:27066 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R27111:27118 CertiOS.framework.auxlibs.Maps <> disjoint def
R27169:27176 CertiOS.framework.auxlibs.Maps <> disjoint def
R27169:27176 CertiOS.framework.auxlibs.Maps <> disjoint def
R27197:27204 CertiOS.framework.auxlibs.Maps <> disjoint def
R27197:27204 CertiOS.framework.auxlibs.Maps <> disjoint def
R27225:27239 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R27225:27239 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R27269:27286 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R27269:27286 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R27352:27359 CertiOS.framework.auxlibs.Maps <> disjoint def
R27393:27393 Coq.Init.Logic <> :type_scope:x_'='_x not
R27405:27409 Coq.Init.Logic <> :type_scope:x_'='_x not
R27421:27421 Coq.Init.Logic <> :type_scope:x_'='_x not
R27394:27398 CertiOS.framework.auxlibs.Maps <> merge meth
R27410:27414 CertiOS.framework.auxlibs.Maps <> merge meth
R27393:27393 Coq.Init.Logic <> :type_scope:x_'='_x not
R27405:27409 Coq.Init.Logic <> :type_scope:x_'='_x not
R27421:27421 Coq.Init.Logic <> :type_scope:x_'='_x not
R27394:27398 CertiOS.framework.auxlibs.Maps <> merge meth
R27410:27414 CertiOS.framework.auxlibs.Maps <> merge meth
R27434:27451 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27434:27451 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27486:27503 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27486:27503 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27486:27503 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27486:27503 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R27521:27538 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R27521:27538 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R27556:27563 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R27556:27563 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R27580:27587 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R27580:27587 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R27684:27709 CertiOS.framework.proof.step_prop <> no_call_api_loststep_still thm
R27684:27709 CertiOS.framework.proof.step_prop <> no_call_api_loststep_still thm
R27727:27735 CertiOS.tactics.basetac.join_lib <> join_comm thm
R27727:27735 CertiOS.tactics.basetac.join_lib <> join_comm thm
R27747:27761 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R27747:27761 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R27775:27782 CertiOS.framework.auxlibs.Maps <> disjoint def
R27775:27782 CertiOS.framework.auxlibs.Maps <> disjoint def
R27803:27817 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R27803:27817 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R27836:27853 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R27836:27853 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R27900:27907 CertiOS.framework.auxlibs.Maps <> disjoint def
R27976:27984 CertiOS.tactics.basetac.join_lib <> join_comm thm
R27976:27984 CertiOS.tactics.basetac.join_lib <> join_comm thm
R27996:28010 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R27996:28010 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R28023:28048 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R28023:28048 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R28093:28100 CertiOS.framework.auxlibs.Maps <> disjoint def
R28152:28164 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R28152:28164 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R28198:28198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28200:28201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28204:28205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28217:28218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28221:28222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28224:28224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28206:28210 CertiOS.framework.auxlibs.Maps <> merge meth
R28198:28198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28200:28201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28204:28205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28217:28218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28221:28222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28224:28224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28206:28210 CertiOS.framework.auxlibs.Maps <> merge meth
R28285:28299 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R28285:28299 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R28336:28361 CertiOS.framework.proof.join_prop <> join_merge_merge_recompose thm
R28336:28361 CertiOS.framework.proof.join_prop <> join_merge_merge_recompose thm
R28379:28387 CertiOS.tactics.basetac.join_lib <> join_comm thm
R28379:28387 CertiOS.tactics.basetac.join_lib <> join_comm thm
R28399:28413 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R28399:28413 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R28716:28720 CertiOS.framework.auxlibs.Maps <> merge meth
R28716:28720 CertiOS.framework.auxlibs.Maps <> merge meth
R29114:29114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29147:29148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29174:29174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29115:29118 CertiOS.framework.model.language <> curs constr
R29121:29129 CertiOS.framework.model.language <> hapi_code constr
R29137:29139 CertiOS.framework.model.language <> ::x_';;'_x not
R29132:29136 CertiOS.framework.model.language <> sched constr
R29149:29149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29155:29155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29173:29173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29150:29154 CertiOS.framework.model.language <> kenil constr
R29156:29161 CertiOS.framework.model.language <> kevent constr
R29182:29182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29188:29188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29206:29206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29183:29187 CertiOS.framework.model.language <> kenil constr
R29189:29194 CertiOS.framework.model.language <> kevent constr
R29114:29114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29147:29148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29174:29174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29115:29118 CertiOS.framework.model.language <> curs constr
R29121:29129 CertiOS.framework.model.language <> hapi_code constr
R29137:29139 CertiOS.framework.model.language <> ::x_';;'_x not
R29132:29136 CertiOS.framework.model.language <> sched constr
R29149:29149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29155:29155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29173:29173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29150:29154 CertiOS.framework.model.language <> kenil constr
R29156:29161 CertiOS.framework.model.language <> kevent constr
R29182:29182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29188:29188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29206:29206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29183:29187 CertiOS.framework.model.language <> kenil constr
R29189:29194 CertiOS.framework.model.language <> kevent constr
R29220:29224 CertiOS.framework.auxlibs.Maps <> merge meth
R29237:29237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29239:29239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29242:29243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29256:29257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29260:29260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29262:29262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29244:29248 CertiOS.framework.auxlibs.Maps <> merge meth
R29220:29224 CertiOS.framework.auxlibs.Maps <> merge meth
R29237:29237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29239:29239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29242:29243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29256:29257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29260:29260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29262:29262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29244:29248 CertiOS.framework.auxlibs.Maps <> merge meth
R29276:29280 CertiOS.framework.auxlibs.Maps <> merge meth
R29294:29298 CertiOS.framework.auxlibs.Maps <> merge meth
R29276:29280 CertiOS.framework.auxlibs.Maps <> merge meth
R29294:29298 CertiOS.framework.auxlibs.Maps <> merge meth
R29405:29409 CertiOS.framework.model.language <> kenil constr
R29418:29423 CertiOS.framework.model.language <> kevent constr
R29349:29359 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R29405:29409 CertiOS.framework.model.language <> kenil constr
R29418:29423 CertiOS.framework.model.language <> kevent constr
R29349:29359 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R29460:29477 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R29460:29477 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R29529:29537 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29529:29537 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29555:29569 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R29555:29569 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R29605:29625 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R29605:29625 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R29643:29651 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29643:29651 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29711:29730 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R29711:29730 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R29748:29756 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29748:29756 CertiOS.tactics.basetac.join_lib <> join_comm thm
R29774:29794 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R29774:29794 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R29813:29827 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R29813:29827 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R29846:29863 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R29846:29863 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R29910:29930 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R29910:29930 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R29950:29957 CertiOS.framework.auxlibs.Maps <> disjoint def
R29950:29957 CertiOS.framework.auxlibs.Maps <> disjoint def
R29978:29992 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R29978:29992 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R30011:30028 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30011:30028 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30075:30082 CertiOS.framework.auxlibs.Maps <> disjoint def
R30128:30146 CertiOS.framework.proof.invariant_prop <> linvtrue_merge_hold thm
R30128:30146 CertiOS.framework.proof.invariant_prop <> linvtrue_merge_hold thm
R30188:30195 CertiOS.framework.auxlibs.Maps <> disjoint def
R30188:30195 CertiOS.framework.auxlibs.Maps <> disjoint def
R30216:30230 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R30216:30230 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R30249:30266 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30249:30266 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30313:30320 CertiOS.framework.auxlibs.Maps <> disjoint def
R30509:30509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30511:30512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30515:30516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30530:30531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30534:30535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30537:30537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30517:30521 CertiOS.framework.auxlibs.Maps <> merge meth
R30554:30558 CertiOS.framework.auxlibs.Maps <> merge meth
R30509:30509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30511:30512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30515:30516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30530:30531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30534:30535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30537:30537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30517:30521 CertiOS.framework.auxlibs.Maps <> merge meth
R30554:30558 CertiOS.framework.auxlibs.Maps <> merge meth
R30587:30594 CertiOS.framework.auxlibs.Maps <> disjoint def
R30587:30594 CertiOS.framework.auxlibs.Maps <> disjoint def
R30616:30623 CertiOS.framework.auxlibs.Maps <> disjoint def
R30616:30623 CertiOS.framework.auxlibs.Maps <> disjoint def
R30644:30658 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R30644:30658 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R30677:30694 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30677:30694 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R30741:30748 CertiOS.framework.auxlibs.Maps <> disjoint def
R30775:30783 CertiOS.tactics.basetac.join_lib <> join_comm thm
R30775:30783 CertiOS.tactics.basetac.join_lib <> join_comm thm
R30803:30822 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R30803:30822 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R30842:30859 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R30842:30859 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R30842:30859 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R30842:30859 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R30969:30976 CertiOS.framework.auxlibs.Maps <> disjoint def
R30969:30976 CertiOS.framework.auxlibs.Maps <> disjoint def
R31019:31038 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R31019:31038 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R31058:31075 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31058:31075 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31058:31075 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31058:31075 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31092:31100 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31092:31100 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31175:31189 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31175:31189 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31228:31235 CertiOS.framework.auxlibs.Maps <> disjoint def
R31228:31235 CertiOS.framework.auxlibs.Maps <> disjoint def
R31277:31284 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R31277:31284 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R31297:31322 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R31297:31322 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R31342:31359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31342:31359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31342:31359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31342:31359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31377:31385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31377:31385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31405:31412 CertiOS.framework.auxlibs.Maps <> disjoint def
R31405:31412 CertiOS.framework.auxlibs.Maps <> disjoint def
R31434:31441 CertiOS.framework.auxlibs.Maps <> disjoint def
R31434:31441 CertiOS.framework.auxlibs.Maps <> disjoint def
R31462:31476 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R31462:31476 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R31495:31512 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R31495:31512 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R31559:31566 CertiOS.framework.auxlibs.Maps <> disjoint def
R31593:31607 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31593:31607 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31619:31626 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R31619:31626 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R31639:31664 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R31639:31664 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R31684:31701 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31684:31701 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31684:31701 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31684:31701 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R31719:31727 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31719:31727 CertiOS.tactics.basetac.join_lib <> join_comm thm
R31748:31764 CertiOS.framework.proof.step_prop <> int_inos_sw_still thm
R31748:31764 CertiOS.framework.proof.step_prop <> int_inos_sw_still thm
R31787:31792 CertiOS.framework.proof.simulation <> getmem def
R31867:31881 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31867:31881 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R31961:31965 CertiOS.framework.model.opsem <> IsEnd def
R32174:32179 CertiOS.framework.proof.simulation <> joinm2 def
R32212:32218 CertiOS.framework.logic.assertion <> joinmem def
R32320:32326 CertiOS.framework.logic.assertion <> joinmem def
R32484:32489 CertiOS.framework.proof.simulation <> joinm2 def
R32530:32530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32533:32534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32537:32538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32541:32542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32546:32547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32550:32550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32517:32521 CertiOS.framework.auxlibs.Maps <> merge meth
R32491:32491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32494:32495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32498:32499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32502:32503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32507:32508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32511:32511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32484:32489 CertiOS.framework.proof.simulation <> joinm2 def
R32530:32530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32533:32534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32537:32538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32541:32542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32546:32547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32550:32550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32517:32521 CertiOS.framework.auxlibs.Maps <> merge meth
R32491:32491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32494:32495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32498:32499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32502:32503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32507:32508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32511:32511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32621:32633 CertiOS.framework.proof.step_prop <> int_nabt_lift thm
R32621:32633 CertiOS.framework.proof.step_prop <> int_nabt_lift thm
R32687:32694 CertiOS.framework.proof.step_prop <> inos_int thm
R32687:32694 CertiOS.framework.proof.step_prop <> inos_int thm
R32737:32744 CertiOS.framework.proof.simulation <> notabort def
R32778:32785 CertiOS.framework.model.opsem <> IsSwitch def
R32894:32898 CertiOS.framework.model.opsem <> IsEnd def
R32945:32952 CertiOS.framework.auxlibs.Maps <> disjoint def
R32955:32960 CertiOS.framework.proof.simulation <> getmem def
R32962:32962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32965:32966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32969:32970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32973:32974 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32978:32979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32982:32982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32945:32952 CertiOS.framework.auxlibs.Maps <> disjoint def
R32955:32960 CertiOS.framework.proof.simulation <> getmem def
R32962:32962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32965:32966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32969:32970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32973:32974 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32978:32979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32982:32982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33000:33005 CertiOS.framework.proof.simulation <> getmem def
R33055:33061 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33064:33065 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33066:33069 CertiOS.framework.auxlibs.Maps <> join meth
R33055:33061 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33064:33065 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33066:33069 CertiOS.framework.auxlibs.Maps <> join meth
R33176:33183 CertiOS.framework.proof.auxdef <> retfalse def
R33203:33205 CertiOS.framework.logic.assertion <> sat def
R33259:33263 CertiOS.framework.model.opsem <> IsRet def
R33323:33330 CertiOS.framework.auxlibs.Maps <> disjoint def
R33333:33338 CertiOS.framework.proof.simulation <> getmem def
R33340:33340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33343:33344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33347:33348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33351:33352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33356:33357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33360:33360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33323:33330 CertiOS.framework.auxlibs.Maps <> disjoint def
R33333:33338 CertiOS.framework.proof.simulation <> getmem def
R33340:33340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33343:33344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33347:33348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33351:33352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33356:33357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33360:33360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33378:33383 CertiOS.framework.proof.simulation <> getmem def
R33433:33439 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33442:33443 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33444:33447 CertiOS.framework.auxlibs.Maps <> join meth
R33433:33439 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33442:33443 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33444:33447 CertiOS.framework.auxlibs.Maps <> join meth
R33550:33557 CertiOS.framework.proof.auxdef <> retfalse def
R33577:33579 CertiOS.framework.logic.assertion <> sat def
R33631:33636 CertiOS.framework.model.opsem <> IsRetE def
R33698:33705 CertiOS.framework.auxlibs.Maps <> disjoint def
R33708:33713 CertiOS.framework.proof.simulation <> getmem def
R33715:33715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33718:33719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33722:33723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33726:33727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33731:33732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33735:33735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33698:33705 CertiOS.framework.auxlibs.Maps <> disjoint def
R33708:33713 CertiOS.framework.proof.simulation <> getmem def
R33715:33715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33718:33719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33722:33723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33726:33727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33731:33732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33735:33735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33753:33758 CertiOS.framework.proof.simulation <> getmem def
R33808:33814 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33817:33818 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33819:33822 CertiOS.framework.auxlibs.Maps <> join meth
R33808:33814 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33817:33818 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R33819:33822 CertiOS.framework.auxlibs.Maps <> join meth
R33925:33932 CertiOS.framework.proof.auxdef <> retfalse def
R33952:33954 CertiOS.framework.logic.assertion <> sat def
R34007:34012 CertiOS.framework.model.opsem <> IsIRet def
R34014:34014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34017:34018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34029:34029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34019:34019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34023:34024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34028:34028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34007:34012 CertiOS.framework.model.opsem <> IsIRet def
R34014:34014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34017:34018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34029:34029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34019:34019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34023:34024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34028:34028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34054:34059 CertiOS.framework.model.opsem <> IsIRet def
R34113:34120 CertiOS.framework.auxlibs.Maps <> disjoint def
R34123:34128 CertiOS.framework.proof.simulation <> getmem def
R34130:34130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34133:34134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34137:34138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34141:34142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34146:34147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34150:34150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34113:34120 CertiOS.framework.auxlibs.Maps <> disjoint def
R34123:34128 CertiOS.framework.proof.simulation <> getmem def
R34130:34130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34133:34134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34137:34138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34141:34142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34146:34147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34150:34150 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34168:34173 CertiOS.framework.proof.simulation <> getmem def
R34223:34229 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R34232:34233 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R34234:34237 CertiOS.framework.auxlibs.Maps <> join meth
R34223:34229 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R34232:34233 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R34234:34237 CertiOS.framework.auxlibs.Maps <> join meth
R34341:34351 CertiOS.framework.proof.step_prop <> isiret_nabt thm
R34341:34351 CertiOS.framework.proof.step_prop <> isiret_nabt thm
R34546:34546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34549:34549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34552:34552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34564:34564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34568:34568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34571:34571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34553:34557 CertiOS.framework.auxlibs.Maps <> merge meth
R34546:34546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34549:34549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34552:34552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34564:34564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34568:34568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34571:34571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34553:34557 CertiOS.framework.auxlibs.Maps <> merge meth
R34627:34641 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R34627:34641 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R34676:34701 CertiOS.framework.proof.join_prop <> join_merge_merge_recompose thm
R34676:34701 CertiOS.framework.proof.join_prop <> join_merge_merge_recompose thm
R34887:34891 CertiOS.framework.auxlibs.Maps <> merge meth
R34887:34891 CertiOS.framework.auxlibs.Maps <> merge meth
R35020:35020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35075:35076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35102:35102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35021:35024 CertiOS.framework.model.language <> curs constr
R35027:35035 CertiOS.framework.model.language <> hapi_code constr
R35065:35067 CertiOS.framework.model.language <> ::x_';;'_x not
R35038:35045 CertiOS.framework.model.language <> spec_crt constr
R35054:35059 CertiOS.framework.model.memory <> Vint32 constr
R35077:35077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35083:35083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35101:35101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35078:35082 CertiOS.framework.model.language <> kenil constr
R35084:35089 CertiOS.framework.model.language <> kevent constr
R35020:35020 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35075:35076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35102:35102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35021:35024 CertiOS.framework.model.language <> curs constr
R35027:35035 CertiOS.framework.model.language <> hapi_code constr
R35065:35067 CertiOS.framework.model.language <> ::x_';;'_x not
R35038:35045 CertiOS.framework.model.language <> spec_crt constr
R35054:35059 CertiOS.framework.model.memory <> Vint32 constr
R35077:35077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35083:35083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35101:35101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35078:35082 CertiOS.framework.model.language <> kenil constr
R35084:35089 CertiOS.framework.model.language <> kevent constr
R35134:35134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35140:35140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35158:35158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35135:35139 CertiOS.framework.model.language <> kenil constr
R35141:35146 CertiOS.framework.model.language <> kevent constr
R35134:35134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35140:35140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35158:35158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35135:35139 CertiOS.framework.model.language <> kenil constr
R35141:35146 CertiOS.framework.model.language <> kevent constr
R35172:35176 CertiOS.framework.auxlibs.Maps <> merge meth
R35187:35191 CertiOS.framework.auxlibs.Maps <> merge meth
R35172:35176 CertiOS.framework.auxlibs.Maps <> merge meth
R35187:35191 CertiOS.framework.auxlibs.Maps <> merge meth
R35378:35378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35380:35381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35384:35385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35398:35399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35402:35403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35405:35405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35386:35390 CertiOS.framework.auxlibs.Maps <> merge meth
R35413:35417 CertiOS.framework.auxlibs.Maps <> merge meth
R35431:35435 CertiOS.framework.auxlibs.Maps <> merge meth
R35378:35378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35380:35381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35384:35385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35398:35399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35402:35403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35405:35405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R35386:35390 CertiOS.framework.auxlibs.Maps <> merge meth
R35413:35417 CertiOS.framework.auxlibs.Maps <> merge meth
R35431:35435 CertiOS.framework.auxlibs.Maps <> merge meth
R35502:35516 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35502:35516 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35557:35571 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35557:35571 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35612:35626 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35612:35626 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R35738:35742 CertiOS.framework.model.language <> kenil constr
R35751:35756 CertiOS.framework.model.language <> kevent constr
R35682:35692 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R35738:35742 CertiOS.framework.model.language <> kenil constr
R35751:35756 CertiOS.framework.model.language <> kevent constr
R35682:35692 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R35793:35810 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R35793:35810 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R35862:35870 CertiOS.tactics.basetac.join_lib <> join_comm thm
R35862:35870 CertiOS.tactics.basetac.join_lib <> join_comm thm
R35888:35902 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R35888:35902 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R35936:35956 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R35936:35956 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R35974:35982 CertiOS.tactics.basetac.join_lib <> join_comm thm
R35974:35982 CertiOS.tactics.basetac.join_lib <> join_comm thm
R36002:36019 CertiOS.framework.proof.step_prop <> abs_crt_step_local thm
R36002:36019 CertiOS.framework.proof.step_prop <> abs_crt_step_local thm
R36037:36044 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R36037:36044 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R36057:36071 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36057:36071 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36090:36107 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36090:36107 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36192:36211 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R36192:36211 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R36229:36237 CertiOS.tactics.basetac.join_lib <> join_comm thm
R36229:36237 CertiOS.tactics.basetac.join_lib <> join_comm thm
R36272:36292 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R36272:36292 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R36313:36324 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36313:36324 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36343:36357 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36343:36357 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36376:36393 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36376:36393 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36440:36460 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R36440:36460 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R36480:36487 CertiOS.framework.auxlibs.Maps <> disjoint def
R36480:36487 CertiOS.framework.auxlibs.Maps <> disjoint def
R36509:36520 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36509:36520 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36539:36553 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36539:36553 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36572:36589 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36572:36589 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36636:36643 CertiOS.framework.auxlibs.Maps <> disjoint def
R36675:36682 CertiOS.framework.auxlibs.Maps <> disjoint def
R36675:36682 CertiOS.framework.auxlibs.Maps <> disjoint def
R36726:36733 CertiOS.framework.auxlibs.Maps <> disjoint def
R36726:36733 CertiOS.framework.auxlibs.Maps <> disjoint def
R36755:36762 CertiOS.framework.auxlibs.Maps <> disjoint def
R36755:36762 CertiOS.framework.auxlibs.Maps <> disjoint def
R36784:36795 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36784:36795 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R36814:36828 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36814:36828 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R36847:36864 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36847:36864 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R36911:36918 CertiOS.framework.auxlibs.Maps <> disjoint def
R36948:36948 Coq.Init.Logic <> :type_scope:x_'='_x not
R36961:36965 Coq.Init.Logic <> :type_scope:x_'='_x not
R36978:36978 Coq.Init.Logic <> :type_scope:x_'='_x not
R36949:36953 CertiOS.framework.auxlibs.Maps <> merge meth
R36966:36970 CertiOS.framework.auxlibs.Maps <> merge meth
R36948:36948 Coq.Init.Logic <> :type_scope:x_'='_x not
R36961:36965 Coq.Init.Logic <> :type_scope:x_'='_x not
R36978:36978 Coq.Init.Logic <> :type_scope:x_'='_x not
R36949:36953 CertiOS.framework.auxlibs.Maps <> merge meth
R36966:36970 CertiOS.framework.auxlibs.Maps <> merge meth
R36991:37008 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R36991:37008 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R37043:37060 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R37043:37060 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R37043:37060 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R37043:37060 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R37078:37095 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R37078:37095 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R37113:37120 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R37113:37120 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R37137:37144 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R37137:37144 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R37182:37190 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37182:37190 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37202:37216 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37202:37216 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37230:37237 CertiOS.framework.auxlibs.Maps <> disjoint def
R37230:37237 CertiOS.framework.auxlibs.Maps <> disjoint def
R37259:37270 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R37259:37270 CertiOS.framework.proof.step_prop <> abs_crt_disj thm
R37289:37303 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R37289:37303 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R37322:37339 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R37322:37339 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R37386:37393 CertiOS.framework.auxlibs.Maps <> disjoint def
R37462:37470 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37462:37470 CertiOS.tactics.basetac.join_lib <> join_comm thm
R37482:37496 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37482:37496 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37531:37552 CertiOS.framework.proof.step_prop <> int_inos_stkinit_still thm
R37531:37552 CertiOS.framework.proof.step_prop <> int_inos_stkinit_still thm
R37571:37576 CertiOS.framework.proof.simulation <> getmem def
R37616:37623 CertiOS.framework.auxlibs.Maps <> disjoint def
R37650:37664 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37650:37664 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R37866:37870 CertiOS.framework.auxlibs.Maps <> merge meth
R37866:37870 CertiOS.framework.auxlibs.Maps <> merge meth
R38018:38018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38067:38068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38094:38094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38019:38022 CertiOS.framework.model.language <> curs constr
R38025:38033 CertiOS.framework.model.language <> hapi_code constr
R38057:38059 CertiOS.framework.model.language <> ::x_';;'_x not
R38036:38043 CertiOS.framework.model.language <> spec_del constr
R38046:38051 CertiOS.framework.model.memory <> Vint32 constr
R38069:38069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38075:38075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38093:38093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38070:38074 CertiOS.framework.model.language <> kenil constr
R38076:38081 CertiOS.framework.model.language <> kevent constr
R38018:38018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38067:38068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38094:38094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38019:38022 CertiOS.framework.model.language <> curs constr
R38025:38033 CertiOS.framework.model.language <> hapi_code constr
R38057:38059 CertiOS.framework.model.language <> ::x_';;'_x not
R38036:38043 CertiOS.framework.model.language <> spec_del constr
R38046:38051 CertiOS.framework.model.memory <> Vint32 constr
R38069:38069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38075:38075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38093:38093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38070:38074 CertiOS.framework.model.language <> kenil constr
R38076:38081 CertiOS.framework.model.language <> kevent constr
R38117:38117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38123:38123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38141:38141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38118:38122 CertiOS.framework.model.language <> kenil constr
R38124:38129 CertiOS.framework.model.language <> kevent constr
R38117:38117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38123:38123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38141:38141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38118:38122 CertiOS.framework.model.language <> kenil constr
R38124:38129 CertiOS.framework.model.language <> kevent constr
R38158:38162 CertiOS.framework.auxlibs.Maps <> merge meth
R38173:38177 CertiOS.framework.auxlibs.Maps <> merge meth
R38158:38162 CertiOS.framework.auxlibs.Maps <> merge meth
R38173:38177 CertiOS.framework.auxlibs.Maps <> merge meth
R38200:38204 CertiOS.framework.auxlibs.Maps <> merge meth
R38200:38204 CertiOS.framework.auxlibs.Maps <> merge meth
R38269:38283 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R38269:38283 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R38391:38395 CertiOS.framework.model.language <> kenil constr
R38404:38409 CertiOS.framework.model.language <> kevent constr
R38335:38345 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R38391:38395 CertiOS.framework.model.language <> kenil constr
R38404:38409 CertiOS.framework.model.language <> kevent constr
R38335:38345 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R38445:38462 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R38445:38462 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R38513:38521 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38513:38521 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38540:38554 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R38540:38554 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R38589:38609 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R38589:38609 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R38627:38635 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38627:38635 CertiOS.tactics.basetac.join_lib <> join_comm thm
R38678:38699 CertiOS.framework.proof.step_prop <> abs_delself_step_local thm
R38678:38699 CertiOS.framework.proof.step_prop <> abs_delself_step_local thm
R38717:38724 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R38717:38724 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R38737:38751 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R38737:38751 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R38770:38787 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R38770:38787 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R38834:38853 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R38834:38853 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R38873:38887 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R38873:38887 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R38900:38915 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R38900:38915 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R38934:38948 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R38934:38948 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R38967:38984 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R38967:38984 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R39033:39035 Coq.Init.Logic <> :type_scope:x_'='_x not
R39036:39040 CertiOS.framework.auxlibs.Maps <> merge meth
R39033:39035 Coq.Init.Logic <> :type_scope:x_'='_x not
R39036:39040 CertiOS.framework.auxlibs.Maps <> merge meth
R39060:39074 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R39060:39074 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R39105:39112 CertiOS.framework.auxlibs.Maps <> disjoint def
R39105:39112 CertiOS.framework.auxlibs.Maps <> disjoint def
R39133:39140 CertiOS.framework.auxlibs.Maps <> disjoint def
R39133:39140 CertiOS.framework.auxlibs.Maps <> disjoint def
R39162:39177 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R39162:39177 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R39196:39210 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R39196:39210 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R39229:39246 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R39229:39246 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R39293:39300 CertiOS.framework.auxlibs.Maps <> disjoint def
R39330:39330 Coq.Init.Logic <> :type_scope:x_'='_x not
R39342:39346 Coq.Init.Logic <> :type_scope:x_'='_x not
R39358:39358 Coq.Init.Logic <> :type_scope:x_'='_x not
R39331:39335 CertiOS.framework.auxlibs.Maps <> merge meth
R39347:39351 CertiOS.framework.auxlibs.Maps <> merge meth
R39330:39330 Coq.Init.Logic <> :type_scope:x_'='_x not
R39342:39346 Coq.Init.Logic <> :type_scope:x_'='_x not
R39358:39358 Coq.Init.Logic <> :type_scope:x_'='_x not
R39331:39335 CertiOS.framework.auxlibs.Maps <> merge meth
R39347:39351 CertiOS.framework.auxlibs.Maps <> merge meth
R39371:39388 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R39371:39388 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R39422:39439 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R39422:39439 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R39479:39486 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R39479:39486 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R39524:39532 CertiOS.tactics.basetac.join_lib <> join_comm thm
R39524:39532 CertiOS.tactics.basetac.join_lib <> join_comm thm
R39544:39558 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R39544:39558 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R39572:39579 CertiOS.framework.auxlibs.Maps <> disjoint def
R39572:39579 CertiOS.framework.auxlibs.Maps <> disjoint def
R39601:39616 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R39601:39616 CertiOS.framework.proof.step_prop <> abs_delself_disj thm
R39635:39649 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R39635:39649 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R39668:39685 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R39668:39685 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R39732:39739 CertiOS.framework.auxlibs.Maps <> disjoint def
R39811:39832 CertiOS.framework.proof.step_prop <> int_inos_stkfree_still thm
R39811:39832 CertiOS.framework.proof.step_prop <> int_inos_stkfree_still thm
R39880:39880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39929:39930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39956:39956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39881:39884 CertiOS.framework.model.language <> curs constr
R39887:39895 CertiOS.framework.model.language <> hapi_code constr
R39919:39921 CertiOS.framework.model.language <> ::x_';;'_x not
R39898:39905 CertiOS.framework.model.language <> spec_del constr
R39908:39913 CertiOS.framework.model.memory <> Vint32 constr
R39931:39931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39937:39937 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39955:39955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39932:39936 CertiOS.framework.model.language <> kenil constr
R39938:39943 CertiOS.framework.model.language <> kevent constr
R39880:39880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39929:39930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39956:39956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39881:39884 CertiOS.framework.model.language <> curs constr
R39887:39895 CertiOS.framework.model.language <> hapi_code constr
R39919:39921 CertiOS.framework.model.language <> ::x_';;'_x not
R39898:39905 CertiOS.framework.model.language <> spec_del constr
R39908:39913 CertiOS.framework.model.memory <> Vint32 constr
R39931:39931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39937:39937 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39955:39955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39932:39936 CertiOS.framework.model.language <> kenil constr
R39938:39943 CertiOS.framework.model.language <> kevent constr
R39979:39979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39985:39985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40003:40003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39980:39984 CertiOS.framework.model.language <> kenil constr
R39986:39991 CertiOS.framework.model.language <> kevent constr
R39979:39979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39985:39985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40003:40003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39980:39984 CertiOS.framework.model.language <> kenil constr
R39986:39991 CertiOS.framework.model.language <> kevent constr
R40020:40024 CertiOS.framework.auxlibs.Maps <> merge meth
R40035:40039 CertiOS.framework.auxlibs.Maps <> merge meth
R40020:40024 CertiOS.framework.auxlibs.Maps <> merge meth
R40035:40039 CertiOS.framework.auxlibs.Maps <> merge meth
R40062:40066 CertiOS.framework.auxlibs.Maps <> merge meth
R40062:40066 CertiOS.framework.auxlibs.Maps <> merge meth
R40131:40145 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R40131:40145 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R40253:40257 CertiOS.framework.model.language <> kenil constr
R40266:40271 CertiOS.framework.model.language <> kevent constr
R40197:40207 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R40253:40257 CertiOS.framework.model.language <> kenil constr
R40266:40271 CertiOS.framework.model.language <> kevent constr
R40197:40207 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R40307:40324 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R40307:40324 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R40375:40383 CertiOS.tactics.basetac.join_lib <> join_comm thm
R40375:40383 CertiOS.tactics.basetac.join_lib <> join_comm thm
R40402:40416 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R40402:40416 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R40451:40471 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R40451:40471 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R40489:40497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R40489:40497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R40541:40563 CertiOS.framework.proof.step_prop <> abs_delother_step_local thm
R40541:40563 CertiOS.framework.proof.step_prop <> abs_delother_step_local thm
R40581:40588 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R40581:40588 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R40601:40615 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R40601:40615 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R40634:40651 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R40634:40651 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R40698:40717 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R40698:40717 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R40737:40751 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R40737:40751 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R40764:40780 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R40764:40780 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R40799:40813 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R40799:40813 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R40832:40849 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R40832:40849 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R40898:40900 Coq.Init.Logic <> :type_scope:x_'='_x not
R40901:40905 CertiOS.framework.auxlibs.Maps <> merge meth
R40898:40900 Coq.Init.Logic <> :type_scope:x_'='_x not
R40901:40905 CertiOS.framework.auxlibs.Maps <> merge meth
R40925:40939 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R40925:40939 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R40970:40977 CertiOS.framework.auxlibs.Maps <> disjoint def
R40970:40977 CertiOS.framework.auxlibs.Maps <> disjoint def
R40998:41005 CertiOS.framework.auxlibs.Maps <> disjoint def
R40998:41005 CertiOS.framework.auxlibs.Maps <> disjoint def
R41027:41043 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R41027:41043 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R41062:41076 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R41062:41076 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R41095:41112 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R41095:41112 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R41159:41166 CertiOS.framework.auxlibs.Maps <> disjoint def
R41196:41196 Coq.Init.Logic <> :type_scope:x_'='_x not
R41208:41212 Coq.Init.Logic <> :type_scope:x_'='_x not
R41224:41224 Coq.Init.Logic <> :type_scope:x_'='_x not
R41197:41201 CertiOS.framework.auxlibs.Maps <> merge meth
R41213:41217 CertiOS.framework.auxlibs.Maps <> merge meth
R41196:41196 Coq.Init.Logic <> :type_scope:x_'='_x not
R41208:41212 Coq.Init.Logic <> :type_scope:x_'='_x not
R41224:41224 Coq.Init.Logic <> :type_scope:x_'='_x not
R41197:41201 CertiOS.framework.auxlibs.Maps <> merge meth
R41213:41217 CertiOS.framework.auxlibs.Maps <> merge meth
R41237:41254 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R41237:41254 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R41288:41305 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R41288:41305 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R41345:41352 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R41345:41352 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R41382:41388 CertiOS.framework.logic.assertion <> joinmem def
R41414:41414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41416:41417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41420:41421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41435:41436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41439:41440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41442:41442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41426 CertiOS.framework.auxlibs.Maps <> merge meth
R41390:41390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41392:41393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41396:41397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41400:41401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41404:41405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41407:41407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41382:41388 CertiOS.framework.logic.assertion <> joinmem def
R41414:41414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41416:41417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41420:41421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41435:41436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41439:41440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41442:41442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41426 CertiOS.framework.auxlibs.Maps <> merge meth
R41390:41390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41392:41393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41396:41397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41400:41401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41404:41405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41407:41407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41671:41685 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R41671:41685 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R41721:41724 CertiOS.framework.auxlibs.Maps <> join meth
R41735:41739 CertiOS.framework.auxlibs.Maps <> merge meth
R41721:41724 CertiOS.framework.auxlibs.Maps <> join meth
R41735:41739 CertiOS.framework.auxlibs.Maps <> merge meth
R41761:41775 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R41761:41775 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R41789:41796 CertiOS.framework.auxlibs.Maps <> disjoint def
R41789:41796 CertiOS.framework.auxlibs.Maps <> disjoint def
R41817:41824 CertiOS.framework.auxlibs.Maps <> disjoint def
R41817:41824 CertiOS.framework.auxlibs.Maps <> disjoint def
R41846:41862 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R41846:41862 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R41881:41895 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R41881:41895 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R41914:41931 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R41914:41931 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R41978:41985 CertiOS.framework.auxlibs.Maps <> disjoint def
R42014:42031 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42014:42031 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42014:42031 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42014:42031 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42057:42064 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42057:42064 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42076:42084 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42076:42084 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42104:42129 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R42104:42129 CertiOS.framework.proof.join_prop <> disj_merge_join_disj_intro thm
R42147:42154 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42147:42154 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42201:42208 CertiOS.framework.auxlibs.Maps <> disjoint def
R42201:42208 CertiOS.framework.auxlibs.Maps <> disjoint def
R42229:42236 CertiOS.framework.auxlibs.Maps <> disjoint def
R42229:42236 CertiOS.framework.auxlibs.Maps <> disjoint def
R42258:42274 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R42258:42274 CertiOS.framework.proof.step_prop <> abs_delother_disj thm
R42293:42307 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R42293:42307 CertiOS.framework.proof.step_prop <> hmstepstar_disj thm
R42326:42343 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R42326:42343 CertiOS.tactics.basetac.join_lib <> disj_merge_intro_r thm
R42390:42397 CertiOS.framework.auxlibs.Maps <> disjoint def
R42486:42486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42488:42489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42492:42493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42507:42508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42511:42512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42514:42514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42494:42498 CertiOS.framework.auxlibs.Maps <> merge meth
R42531:42535 CertiOS.framework.auxlibs.Maps <> merge meth
R42486:42486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42488:42489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42492:42493 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42507:42508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42511:42512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42514:42514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42494:42498 CertiOS.framework.auxlibs.Maps <> merge meth
R42531:42535 CertiOS.framework.auxlibs.Maps <> merge meth
R42562:42570 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42562:42570 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42590:42609 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R42590:42609 CertiOS.framework.proof.join_prop <> disj_join_join_merge thm
R42629:42646 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42629:42646 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42629:42646 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42629:42646 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R42670:42677 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42670:42677 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R42928:42948 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R42928:42948 CertiOS.framework.proof.join_prop <> join_join_join_merge' thm
R42966:42974 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42966:42974 CertiOS.tactics.basetac.join_lib <> join_comm thm
R42992:43013 CertiOS.framework.proof.step_prop <> int_inos_stkfree_still thm
R42992:43013 CertiOS.framework.proof.step_prop <> int_inos_stkfree_still thm
R43033:43038 CertiOS.framework.proof.simulation <> getmem def
R43078:43085 CertiOS.framework.auxlibs.Maps <> disjoint def
R43112:43126 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R43112:43126 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
prf 43170:43176 <> IntSeq'
R43201:43206 CertiOS.framework.model.language <> osspec def
R43330:43351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43377:43397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43421:43442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43464:43485 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43603:43625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43678:43701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43856:43877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43878:43878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43954:43976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43977:43977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44069:44091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44106:44127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44141:44162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44177:44198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44213:44234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44286:44307 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44308:44329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44787:44827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44848:44869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44895:44915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44916:44922 CertiOS.framework.proof.simulation <> TaskSim coind
R45159:45159 CertiOS.framework.proof.lemmasfortoptheo <> t var
R45157:45157 CertiOS.framework.proof.lemmasfortoptheo <> p var
R45155:45155 CertiOS.framework.proof.lemmasfortoptheo <> I var
R45149:45153 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R45137:45141 CertiOS.framework.auxlibs.Maps <> merge meth
R45145:45146 CertiOS.framework.proof.lemmasfortoptheo <> Oi var
R45143:45143 CertiOS.framework.proof.lemmasfortoptheo <> O var
R45084:45085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45105:45107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45134:45134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45086:45089 CertiOS.framework.model.language <> curs constr
R45092:45100 CertiOS.framework.model.language <> hapi_code constr
R45102:45103 CertiOS.framework.proof.lemmasfortoptheo <> sh var
R45108:45108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45114:45115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45133:45133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45109:45113 CertiOS.framework.model.language <> kenil constr
R45116:45121 CertiOS.framework.model.language <> kevent constr
R45130:45132 CertiOS.framework.proof.lemmasfortoptheo <> ksh var
R45126:45128 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R45123:45124 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R45077:45077 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45080:45080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45082:45082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45078:45079 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R45081:45081 CertiOS.framework.proof.lemmasfortoptheo <> A var
R45009:45009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45012:45013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45020:45021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45033:45034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45051:45052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45074:45074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45010:45011 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R45014:45019 CertiOS.framework.logic.assertion <> empenv syndef
R45022:45026 CertiOS.framework.auxlibs.Maps <> merge meth
R45031:45032 CertiOS.framework.proof.lemmasfortoptheo <> Mi var
R45028:45029 CertiOS.framework.proof.lemmasfortoptheo <> Mc var
R45035:45040 CertiOS.framework.model.language <> isrupd def
R45047:45050 Coq.Init.Datatypes <> true constr
R45045:45045 CertiOS.framework.proof.lemmasfortoptheo <> i var
R45042:45043 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R45053:45053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45059:45060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45068:45069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45073:45073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R45054:45058 Coq.Init.Datatypes <> false constr
R45062:45065 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R45061:45061 CertiOS.framework.proof.lemmasfortoptheo <> i var
R45066:45067 CertiOS.framework.proof.lemmasfortoptheo <> is var
R45070:45072 Coq.Init.Datatypes <> nil constr
R44940:44941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44948:44950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44979:44979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44942:44945 CertiOS.framework.model.language <> curs constr
R44947:44947 CertiOS.framework.proof.lemmasfortoptheo <> s var
R44951:44951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44957:44959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44977:44978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44952:44956 CertiOS.framework.model.language <> kenil constr
R44960:44963 CertiOS.framework.model.language <> kint constr
R44975:44976 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R44970:44973 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R44967:44968 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R44965:44965 CertiOS.framework.proof.lemmasfortoptheo <> c var
R44924:44924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44927:44927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44938:44938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44925:44926 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R44928:44928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44931:44931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44934:44934 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44937:44937 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44929:44930 CertiOS.framework.proof.lemmasfortoptheo <> po var
R44932:44933 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R44935:44936 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R44870:44875 CertiOS.framework.proof.auxdef <> goodks def
R44893:44894 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R44877:44877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44880:44880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44891:44891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44878:44879 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R44881:44881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44884:44884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44887:44887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44890:44890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44882:44883 CertiOS.framework.proof.lemmasfortoptheo <> po var
R44885:44886 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R44888:44889 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R44828:44834 CertiOS.framework.proof.auxdef <> eqdomOS def
R44847:44847 CertiOS.framework.proof.lemmasfortoptheo <> A var
R44836:44836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44839:44839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44842:44842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44845:44845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44837:44838 CertiOS.framework.proof.lemmasfortoptheo <> po var
R44840:44841 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R44843:44844 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R44340:44342 CertiOS.framework.model.language <> hid def
R44420:44471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44763:44786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44472:44479 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44492:44519 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44482:44486 CertiOS.framework.model.language <> stmts ind
R44533:44563 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44524:44526 Coq.Init.Logic <> :type_scope:x_'='_x not
R44520:44521 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R44523:44523 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44527:44530 Coq.Init.Datatypes <> Some constr
R44532:44532 CertiOS.framework.proof.lemmasfortoptheo <> s var
R44609:44639 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44565:44567 Coq.Init.Logic <> :type_scope:x_'='_x not
R44564:44564 CertiOS.framework.proof.lemmasfortoptheo <> p var
R44568:44575 CertiOS.framework.proof.auxdef <> ipreasrt def
R44607:44608 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R44605:44605 CertiOS.framework.proof.lemmasfortoptheo <> t var
R44599:44603 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R44597:44597 CertiOS.framework.proof.lemmasfortoptheo <> G var
R44595:44595 CertiOS.framework.proof.lemmasfortoptheo <> I var
R44589:44593 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R44586:44587 CertiOS.framework.proof.lemmasfortoptheo <> si var
R44579:44584 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R44577:44577 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44679:44708 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44641:44643 Coq.Init.Logic <> :type_scope:x_'='_x not
R44640:44640 CertiOS.framework.proof.lemmasfortoptheo <> r var
R44644:44651 CertiOS.framework.proof.auxdef <> iretasrt def
R44677:44678 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R44675:44675 CertiOS.framework.proof.lemmasfortoptheo <> t var
R44669:44673 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R44667:44667 CertiOS.framework.proof.lemmasfortoptheo <> G var
R44665:44665 CertiOS.framework.proof.lemmasfortoptheo <> I var
R44662:44663 CertiOS.framework.proof.lemmasfortoptheo <> si var
R44655:44660 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R44653:44653 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44709:44719 CertiOS.framework.proof.simulation <> MethSimAsrt def
R44762:44762 CertiOS.framework.proof.lemmasfortoptheo <> t var
R44755:44760 CertiOS.framework.logic.assertion <> Afalse constr
R44753:44753 CertiOS.framework.proof.lemmasfortoptheo <> s var
R44751:44751 CertiOS.framework.proof.lemmasfortoptheo <> p var
R44749:44749 CertiOS.framework.proof.lemmasfortoptheo <> r var
R44740:44747 CertiOS.framework.proof.auxdef <> retfalse def
R44738:44738 CertiOS.framework.proof.lemmasfortoptheo <> I var
R44732:44736 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R44725:44727 Coq.Init.Datatypes <> snd def
R44729:44729 CertiOS.framework.proof.lemmasfortoptheo <> A var
R44721:44722 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R44407:44409 Coq.Init.Logic <> :type_scope:x_'='_x not
R44393:44395 Coq.Init.Datatypes <> snd def
R44398:44400 Coq.Init.Datatypes <> fst def
R44402:44402 CertiOS.framework.proof.lemmasfortoptheo <> A var
R44406:44406 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44410:44413 Coq.Init.Datatypes <> Some constr
R44415:44419 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R44235:44238 CertiOS.framework.logic.inferules <> satp def
R44270:44276 CertiOS.framework.logic.inferules <> CurLINV def
R44284:44284 CertiOS.framework.proof.lemmasfortoptheo <> t var
R44278:44282 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R44267:44267 CertiOS.framework.proof.lemmasfortoptheo <> O var
R44240:44240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44251:44251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44254:44254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44265:44265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44241:44241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44244:44244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44247:44247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44250:44250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44242:44243 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R44245:44246 CertiOS.framework.proof.lemmasfortoptheo <> le var
R44248:44249 CertiOS.framework.proof.lemmasfortoptheo <> Mc var
R44252:44253 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R44255:44255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44258:44258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44261:44261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44264:44264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44256:44257 CertiOS.framework.proof.lemmasfortoptheo <> ie var
R44259:44260 CertiOS.framework.proof.lemmasfortoptheo <> is var
R44262:44263 CertiOS.framework.proof.lemmasfortoptheo <> cs var
R44199:44206 CertiOS.framework.auxlibs.Maps <> disjoint def
R44211:44212 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R44208:44209 CertiOS.framework.proof.lemmasfortoptheo <> Mc var
R44163:44166 CertiOS.framework.auxlibs.Maps <> join meth
R44175:44176 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R44171:44173 CertiOS.framework.proof.lemmasfortoptheo <> Ms' var
R44168:44169 CertiOS.framework.proof.lemmasfortoptheo <> Mi var
R44128:44135 CertiOS.framework.auxlibs.Maps <> disjoint def
R44139:44140 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R44137:44137 CertiOS.framework.proof.lemmasfortoptheo <> O var
R44092:44095 CertiOS.framework.auxlibs.Maps <> join meth
R44104:44105 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R44100:44102 CertiOS.framework.proof.lemmasfortoptheo <> Os' var
R44097:44098 CertiOS.framework.proof.lemmasfortoptheo <> Oi var
R43989:43991 CertiOS.framework.logic.assertion <> sat def
R44063:44065 CertiOS.framework.logic.assertion <> INV def
R44067:44067 CertiOS.framework.proof.lemmasfortoptheo <> I var
R43993:43993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44057:44057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44060:44060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43994:43994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44052:44052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44056:44056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43995:43995 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43998:43999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44006:44006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44010:44011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44028:44029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44051:44051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43996:43997 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R44000:44005 CertiOS.framework.logic.assertion <> empenv syndef
R44007:44009 CertiOS.framework.proof.lemmasfortoptheo <> Ms' var
R44012:44017 CertiOS.framework.model.language <> isrupd def
R44024:44027 Coq.Init.Datatypes <> true constr
R44022:44022 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44019:44020 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R44030:44030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44036:44037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44045:44046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44050:44050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44031:44035 Coq.Init.Datatypes <> false constr
R44039:44042 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R44038:44038 CertiOS.framework.proof.lemmasfortoptheo <> i var
R44043:44044 CertiOS.framework.proof.lemmasfortoptheo <> is var
R44047:44049 Coq.Init.Datatypes <> nil constr
R44053:44055 CertiOS.framework.proof.lemmasfortoptheo <> Os' var
R44058:44059 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R43890:43892 CertiOS.framework.logic.assertion <> sat def
R43948:43950 CertiOS.framework.logic.assertion <> INV def
R43952:43952 CertiOS.framework.proof.lemmasfortoptheo <> I var
R43894:43894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43942:43942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43945:43945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43895:43896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43937:43938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43941:43941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43897:43906 CertiOS.framework.logic.assertion <> substaskst def
R43935:43936 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R43909:43909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43919:43919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43922:43922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43933:43933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43910:43910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43913:43913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43916:43916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43918:43918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43911:43912 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43914:43915 CertiOS.framework.proof.lemmasfortoptheo <> le var
R43917:43917 CertiOS.framework.proof.lemmasfortoptheo <> m var
R43920:43921 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R43923:43923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43926:43926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43929:43929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43932:43932 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43924:43925 CertiOS.framework.proof.lemmasfortoptheo <> ie var
R43927:43928 CertiOS.framework.proof.lemmasfortoptheo <> is var
R43930:43931 CertiOS.framework.proof.lemmasfortoptheo <> cs var
R43939:43940 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R43943:43944 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R43702:43710 CertiOS.framework.proof.lemmasfortoptheo <> lintstep' ind
R43800:43800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43803:43804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43811:43812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43814:43815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43832:43833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43855:43855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43801:43802 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43805:43810 CertiOS.framework.logic.assertion <> empenv syndef
R43813:43813 CertiOS.framework.proof.lemmasfortoptheo <> m var
R43816:43821 CertiOS.framework.model.language <> isrupd def
R43828:43831 Coq.Init.Datatypes <> true constr
R43826:43826 CertiOS.framework.proof.lemmasfortoptheo <> i var
R43823:43824 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R43834:43834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43840:43841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43849:43850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43854:43854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43835:43839 Coq.Init.Datatypes <> false constr
R43843:43846 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R43842:43842 CertiOS.framework.proof.lemmasfortoptheo <> i var
R43847:43848 CertiOS.framework.proof.lemmasfortoptheo <> is var
R43851:43853 Coq.Init.Datatypes <> nil constr
R43758:43759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43766:43768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43798:43798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43760:43763 CertiOS.framework.model.language <> curs constr
R43765:43765 CertiOS.framework.proof.lemmasfortoptheo <> s var
R43769:43769 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43775:43777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43796:43797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43770:43774 CertiOS.framework.model.language <> kenil constr
R43778:43781 CertiOS.framework.model.language <> kint constr
R43794:43795 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R43788:43791 CertiOS.framework.proof.lemmasfortoptheo <> lenv var
R43785:43786 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R43783:43783 CertiOS.framework.proof.lemmasfortoptheo <> c var
R43732:43732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43742:43742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43745:43745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43756:43756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43733:43733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43736:43736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43739:43739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43741:43741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43734:43735 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43737:43738 CertiOS.framework.proof.lemmasfortoptheo <> le var
R43740:43740 CertiOS.framework.proof.lemmasfortoptheo <> m var
R43743:43744 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R43746:43746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43749:43749 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43752:43752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43755:43755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43747:43748 CertiOS.framework.proof.lemmasfortoptheo <> ie var
R43750:43751 CertiOS.framework.proof.lemmasfortoptheo <> is var
R43753:43754 CertiOS.framework.proof.lemmasfortoptheo <> cs var
R43717:43717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43719:43720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43729:43729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43718:43718 CertiOS.framework.proof.lemmasfortoptheo <> c var
R43721:43721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43724:43725 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43728:43728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43722:43723 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R43726:43727 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R43714:43715 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R43712:43712 CertiOS.framework.proof.lemmasfortoptheo <> i var
R43673:43675 Coq.Init.Logic <> :type_scope:x_'='_x not
R43626:43628 Coq.Init.Datatypes <> fst def
R43631:43633 Coq.Init.Datatypes <> fst def
R43636:43643 CertiOS.framework.model.language <> get_smem def
R43646:43646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43656:43656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43659:43659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43670:43670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43647:43647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43650:43650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43653:43653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43655:43655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43648:43649 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43651:43652 CertiOS.framework.proof.lemmasfortoptheo <> le var
R43654:43654 CertiOS.framework.proof.lemmasfortoptheo <> m var
R43657:43658 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R43660:43660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43663:43663 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43666:43666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43669:43669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43661:43662 CertiOS.framework.proof.lemmasfortoptheo <> ie var
R43664:43665 CertiOS.framework.proof.lemmasfortoptheo <> is var
R43667:43668 CertiOS.framework.proof.lemmasfortoptheo <> cs var
R43676:43677 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43486:43492 CertiOS.framework.proof.simulation <> TaskSim coind
R43602:43602 CertiOS.framework.proof.lemmasfortoptheo <> t var
R43600:43600 CertiOS.framework.proof.lemmasfortoptheo <> p var
R43598:43598 CertiOS.framework.proof.lemmasfortoptheo <> I var
R43592:43596 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R43590:43590 CertiOS.framework.proof.lemmasfortoptheo <> O var
R43575:43575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43578:43578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43588:43588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43576:43577 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R43579:43579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43583:43583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43587:43587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43580:43582 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R43584:43586 CertiOS.framework.proof.lemmasfortoptheo <> ksh var
R43568:43568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43571:43571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43573:43573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43569:43570 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R43572:43572 CertiOS.framework.proof.lemmasfortoptheo <> A var
R43526:43535 CertiOS.framework.logic.assertion <> substaskst def
R43564:43565 CertiOS.framework.proof.lemmasfortoptheo <> Mc var
R43538:43538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43548:43548 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43551:43551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43562:43562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43539:43539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43542:43542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43545:43545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43547:43547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43540:43541 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R43543:43544 CertiOS.framework.proof.lemmasfortoptheo <> le var
R43546:43546 CertiOS.framework.proof.lemmasfortoptheo <> m var
R43549:43550 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R43552:43552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43555:43555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43558:43558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43561:43561 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43553:43554 CertiOS.framework.proof.lemmasfortoptheo <> ie var
R43556:43557 CertiOS.framework.proof.lemmasfortoptheo <> is var
R43559:43560 CertiOS.framework.proof.lemmasfortoptheo <> cs var
R43510:43511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43513:43514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43523:43523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43512:43512 CertiOS.framework.proof.lemmasfortoptheo <> c var
R43515:43515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43518:43519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43522:43522 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43516:43517 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R43520:43521 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R43494:43494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43497:43497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43508:43508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43495:43496 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R43498:43498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43501:43501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43504:43504 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43507:43507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43499:43500 CertiOS.framework.proof.lemmasfortoptheo <> po var
R43502:43503 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R43505:43506 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R43443:43447 CertiOS.framework.logic.inferules <> GoodI def
R43459:43463 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R43452:43454 Coq.Init.Datatypes <> snd def
R43456:43456 CertiOS.framework.proof.lemmasfortoptheo <> A var
R43449:43449 CertiOS.framework.proof.lemmasfortoptheo <> I var
R43398:43411 CertiOS.framework.proof.auxdef <> no_call_api_os def
R43419:43420 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R43416:43417 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R43413:43414 CertiOS.framework.proof.lemmasfortoptheo <> po var
R43367:43369 Coq.Init.Logic <> :type_scope:x_'='_x not
R43353:43355 Coq.Init.Datatypes <> snd def
R43358:43360 Coq.Init.Datatypes <> fst def
R43362:43362 CertiOS.framework.proof.lemmasfortoptheo <> A var
R43366:43366 CertiOS.framework.proof.lemmasfortoptheo <> i var
R43370:43373 Coq.Init.Datatypes <> Some constr
R43375:43376 CertiOS.framework.proof.lemmasfortoptheo <> sh var
R43321:43323 Coq.Init.Logic <> :type_scope:x_'='_x not
R43317:43318 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R43320:43320 CertiOS.framework.proof.lemmasfortoptheo <> i var
R43324:43327 Coq.Init.Datatypes <> Some constr
R43329:43329 CertiOS.framework.proof.lemmasfortoptheo <> s var
R45259:45279 CertiOS.framework.proof.invariant_prop <> curlinv_p_local_trans thm
R45259:45279 CertiOS.framework.proof.invariant_prop <> curlinv_p_local_trans thm
R45418:45420 Coq.Init.Logic <> :type_scope:x_'='_x not
R45401:45404 CertiOS.framework.model.language <> kint constr
R45426:45429 CertiOS.framework.model.opsem <> ::x_'##'_x not
R45430:45433 CertiOS.framework.model.language <> kint constr
R45421:45425 CertiOS.framework.model.language <> kstop constr
R45418:45420 Coq.Init.Logic <> :type_scope:x_'='_x not
R45401:45404 CertiOS.framework.model.language <> kint constr
R45426:45429 CertiOS.framework.model.opsem <> ::x_'##'_x not
R45430:45433 CertiOS.framework.model.language <> kint constr
R45421:45425 CertiOS.framework.model.language <> kstop constr
R45491:45497 CertiOS.framework.proof.auxdef <> eqdomOS def
R45602:45608 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R45613:45613 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R45618:45620 Coq.Init.Logic <> :type_scope:x_'='_x not
R45621:45624 Coq.Init.Datatypes <> Some constr
R45602:45608 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R45613:45613 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R45618:45620 Coq.Init.Logic <> :type_scope:x_'='_x not
R45621:45624 Coq.Init.Datatypes <> Some constr
R45700:45707 CertiOS.framework.auxlibs.Maps <> disjoint def
R45700:45707 CertiOS.framework.auxlibs.Maps <> disjoint def
R45726:45733 CertiOS.framework.auxlibs.Maps <> disjoint def
R45772:45774 Coq.Init.Logic <> :type_scope:x_'='_x not
R45762:45766 CertiOS.framework.auxlibs.Maps <> merge meth
R45775:45779 CertiOS.framework.auxlibs.Maps <> merge meth
R45772:45774 Coq.Init.Logic <> :type_scope:x_'='_x not
R45762:45766 CertiOS.framework.auxlibs.Maps <> merge meth
R45775:45779 CertiOS.framework.auxlibs.Maps <> merge meth
R45797:45814 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45797:45814 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45849:45856 CertiOS.framework.auxlibs.Maps <> disjoint def
R45849:45856 CertiOS.framework.auxlibs.Maps <> disjoint def
R45876:45883 CertiOS.framework.auxlibs.Maps <> disjoint def
R45923:45925 Coq.Init.Logic <> :type_scope:x_'='_x not
R45912:45916 CertiOS.framework.auxlibs.Maps <> merge meth
R45926:45930 CertiOS.framework.auxlibs.Maps <> merge meth
R45923:45925 Coq.Init.Logic <> :type_scope:x_'='_x not
R45912:45916 CertiOS.framework.auxlibs.Maps <> merge meth
R45926:45930 CertiOS.framework.auxlibs.Maps <> merge meth
R45949:45966 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R45949:45966 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R46063:46067 CertiOS.framework.auxlibs.Maps <> merge meth
R46084:46084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46087:46088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46095:46096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46111:46112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46129:46130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46152:46152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46089:46094 CertiOS.framework.logic.assertion <> empenv syndef
R46097:46101 CertiOS.framework.auxlibs.Maps <> merge meth
R46113:46118 CertiOS.framework.model.language <> isrupd def
R46125:46128 Coq.Init.Datatypes <> true constr
R46131:46131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46137:46138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46146:46147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46151:46151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46132:46136 Coq.Init.Datatypes <> false constr
R46140:46143 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R46148:46150 Coq.Init.Datatypes <> nil constr
R46000:46007 CertiOS.framework.proof.lemmasfortoptheo <> IntSeq'' thm
R46063:46067 CertiOS.framework.auxlibs.Maps <> merge meth
R46084:46084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46087:46088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46095:46096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46111:46112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46129:46130 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46152:46152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46089:46094 CertiOS.framework.logic.assertion <> empenv syndef
R46097:46101 CertiOS.framework.auxlibs.Maps <> merge meth
R46113:46118 CertiOS.framework.model.language <> isrupd def
R46125:46128 Coq.Init.Datatypes <> true constr
R46131:46131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46137:46138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46146:46147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46151:46151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46132:46136 Coq.Init.Datatypes <> false constr
R46140:46143 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R46148:46150 Coq.Init.Datatypes <> nil constr
R46000:46007 CertiOS.framework.proof.lemmasfortoptheo <> IntSeq'' thm
R46251:46265 CertiOS.framework.proof.auxdef <> no_call_api_ipu def
R46314:46334 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R46314:46334 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R46352:46360 CertiOS.tactics.basetac.join_lib <> join_comm thm
R46352:46360 CertiOS.tactics.basetac.join_lib <> join_comm thm
R46377:46384 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R46377:46384 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R46402:46408 CertiOS.framework.logic.assertion <> joinmem def
R46451:46471 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R46451:46471 CertiOS.framework.proof.join_prop <> join_disj_merge_merge thm
R46489:46497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R46489:46497 CertiOS.tactics.basetac.join_lib <> join_comm thm
R46514:46521 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R46514:46521 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R46556:46568 CertiOS.framework.proof.invariant_prop <> p_local_exact thm
R46556:46568 CertiOS.framework.proof.invariant_prop <> p_local_exact thm
R46640:46649 CertiOS.tactics.basetac.join_lib <> join_merge thm
R46640:46649 CertiOS.tactics.basetac.join_lib <> join_merge thm
R46672:46681 CertiOS.tactics.basetac.join_lib <> join_merge thm
R46672:46681 CertiOS.tactics.basetac.join_lib <> join_merge thm
R46724:46742 CertiOS.framework.proof.lemmasfortoptheo <> higherint_update_eq thm
R46724:46742 CertiOS.framework.proof.lemmasfortoptheo <> higherint_update_eq thm
R46724:46742 CertiOS.framework.proof.lemmasfortoptheo <> higherint_update_eq thm
R46724:46742 CertiOS.framework.proof.lemmasfortoptheo <> higherint_update_eq thm
R46762:46772 CertiOS.framework.proof.simulation <> MethSimAsrt def
R46811:46813 Coq.Init.Logic <> :type_scope:x_'='_x not
R46814:46817 Coq.Init.Datatypes <> Some constr
R46811:46813 Coq.Init.Logic <> :type_scope:x_'='_x not
R46814:46817 Coq.Init.Datatypes <> Some constr
R46999:46999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47150:47154 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47109:47112 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47000:47000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47071:47086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47101:47104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47106:47108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47001:47001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47004:47005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47012:47014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47029:47032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47049:47050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47070:47070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47006:47011 CertiOS.framework.logic.assertion <> empenv syndef
R47015:47019 CertiOS.framework.auxlibs.Maps <> merge meth
R47033:47038 CertiOS.framework.model.language <> isrupd def
R47045:47048 Coq.Init.Datatypes <> true constr
R47051:47051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47057:47058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47064:47065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47069:47069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47052:47056 Coq.Init.Datatypes <> false constr
R47060:47061 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R47066:47068 Coq.Init.Datatypes <> nil constr
R47087:47091 CertiOS.framework.auxlibs.Maps <> merge meth
R47113:47120 CertiOS.framework.proof.auxdef <> ipreasrt def
R47155:47158 CertiOS.framework.logic.inferules <> satp def
R47250:47256 CertiOS.framework.logic.inferules <> CurLINV def
R47233:47237 CertiOS.framework.auxlibs.Maps <> merge meth
R47160:47160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47163:47164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47171:47173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47188:47191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47208:47209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47229:47229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47165:47170 CertiOS.framework.logic.assertion <> empenv syndef
R47174:47178 CertiOS.framework.auxlibs.Maps <> merge meth
R47192:47197 CertiOS.framework.model.language <> isrupd def
R47204:47207 Coq.Init.Datatypes <> true constr
R47210:47210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47216:47217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47223:47224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47228:47228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47211:47215 Coq.Init.Datatypes <> false constr
R47219:47220 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R47225:47227 Coq.Init.Datatypes <> nil constr
R46999:46999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47150:47154 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R47109:47112 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R47000:47000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47071:47086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47101:47104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47106:47108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47001:47001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47004:47005 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47012:47014 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47029:47032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47049:47050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47070:47070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47006:47011 CertiOS.framework.logic.assertion <> empenv syndef
R47015:47019 CertiOS.framework.auxlibs.Maps <> merge meth
R47033:47038 CertiOS.framework.model.language <> isrupd def
R47045:47048 Coq.Init.Datatypes <> true constr
R47051:47051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47057:47058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47064:47065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47069:47069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47052:47056 Coq.Init.Datatypes <> false constr
R47060:47061 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R47066:47068 Coq.Init.Datatypes <> nil constr
R47087:47091 CertiOS.framework.auxlibs.Maps <> merge meth
R47113:47120 CertiOS.framework.proof.auxdef <> ipreasrt def
R47155:47158 CertiOS.framework.logic.inferules <> satp def
R47250:47256 CertiOS.framework.logic.inferules <> CurLINV def
R47233:47237 CertiOS.framework.auxlibs.Maps <> merge meth
R47160:47160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47163:47164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47171:47173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47188:47191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47208:47209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47229:47229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47165:47170 CertiOS.framework.logic.assertion <> empenv syndef
R47174:47178 CertiOS.framework.auxlibs.Maps <> merge meth
R47192:47197 CertiOS.framework.model.language <> isrupd def
R47204:47207 Coq.Init.Datatypes <> true constr
R47210:47210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47216:47217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47223:47224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47228:47228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47211:47215 Coq.Init.Datatypes <> false constr
R47219:47220 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R47225:47227 Coq.Init.Datatypes <> nil constr
R47281:47290 CertiOS.framework.proof.invariant_prop <> en_int_inv thm
R47281:47290 CertiOS.framework.proof.invariant_prop <> en_int_inv thm
R47372:47379 CertiOS.framework.auxlibs.Maps <> disjoint def
R47407:47414 CertiOS.framework.auxlibs.Maps <> disjoint def
R47442:47451 CertiOS.framework.logic.assertion <> substaskst def
R47472:47485 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R47472:47485 CertiOS.framework.proof.rulesoundlib <> INV_irrev_prop thm
R47505:47522 CertiOS.framework.proof.invariant_prop <> p_local_ignore_int thm
R47505:47522 CertiOS.framework.proof.invariant_prop <> p_local_ignore_int thm
R47603:47610 CertiOS.framework.proof.auxdef <> retfalse def
R47628:47631 CertiOS.framework.logic.inferules <> lift def
R47651:47657 CertiOS.framework.model.opsem <> nilcont def
R47741:47744 CertiOS.framework.model.opsem <> InOS def
R47758:47761 CertiOS.framework.model.language <> curs constr
R47766:47770 CertiOS.framework.model.language <> kenil constr
R47778:47779 CertiOS.framework.model.opsem <> ::x_'##'_x not
R47780:47783 CertiOS.framework.model.language <> kint constr
R47773:47777 CertiOS.framework.model.language <> kstop constr
R47758:47761 CertiOS.framework.model.language <> curs constr
R47766:47770 CertiOS.framework.model.language <> kenil constr
R47778:47779 CertiOS.framework.model.opsem <> ::x_'##'_x not
R47780:47783 CertiOS.framework.model.language <> kint constr
R47773:47777 CertiOS.framework.model.language <> kstop constr
prf 48337:48345 <> inos_lift
R48429:48452 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48453:48454 Coq.Init.Logic <> :type_scope:'~'_x not
R48455:48458 CertiOS.framework.model.opsem <> InOS def
R48491:48497 CertiOS.framework.model.opsem <> pumerge def
R48502:48503 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R48499:48500 CertiOS.framework.proof.lemmasfortoptheo <> po var
R48460:48460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48475:48476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48488:48488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48461:48464 CertiOS.framework.model.language <> curs constr
R48467:48471 CertiOS.framework.model.language <> sskip constr
R48473:48473 CertiOS.framework.proof.lemmasfortoptheo <> v var
R48477:48477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48483:48484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48487:48487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48478:48482 CertiOS.framework.model.language <> kenil constr
R48485:48486 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R48387:48388 Coq.Init.Logic <> :type_scope:'~'_x not
R48389:48392 CertiOS.framework.model.opsem <> InOS def
R48415:48421 CertiOS.framework.model.opsem <> pumerge def
R48426:48427 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R48423:48424 CertiOS.framework.proof.lemmasfortoptheo <> po var
R48394:48394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48399:48400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48412:48412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48395:48398 CertiOS.framework.model.language <> ::'SKIP' not
R48401:48401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48407:48408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48411:48411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48402:48406 CertiOS.framework.model.language <> kenil constr
R48409:48410 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R48525:48528 CertiOS.framework.model.opsem <> InOS def
R48644:48647 CertiOS.framework.model.language <> ::'SKIP' not
R48649:48653 CertiOS.framework.model.language <> kenil constr
R48644:48647 CertiOS.framework.model.language <> ::'SKIP' not
R48649:48653 CertiOS.framework.model.language <> kenil constr
prf 48779:48799 <> GoodStmt_to_GoodStmt'
R48826:48828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R48829:48837 CertiOS.framework.logic.inferules <> GoodStmt' def
R48839:48839 CertiOS.framework.proof.lemmasfortoptheo <> s var
R48814:48821 CertiOS.framework.proof.oscorrectness <> GoodStmt def
R48825:48825 CertiOS.framework.proof.lemmasfortoptheo <> p var
R48823:48823 CertiOS.framework.proof.lemmasfortoptheo <> s var
prf 49048:49068 <> goodstmt'_n_dym_com_s
R49092:49095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49096:49106 CertiOS.framework.proof.rulesoundlib <> n_dym_com_s def
R49108:49108 CertiOS.framework.proof.lemmasfortoptheo <> s var
R49081:49089 CertiOS.framework.logic.inferules <> GoodStmt' def
R49091:49091 CertiOS.framework.proof.lemmasfortoptheo <> s var
prf 49163:49175 <> n_dym_ks_call
R49243:49246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49247:49265 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_scont def
R49267:49268 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R49197:49215 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_scont def
R49221:49222 CertiOS.framework.model.opsem <> ::x_'##'_x not
R49223:49227 CertiOS.framework.model.language <> kcall constr
R49240:49241 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R49233:49238 CertiOS.framework.logic.assertion <> empenv syndef
R49231:49231 CertiOS.framework.proof.lemmasfortoptheo <> s var
R49229:49229 CertiOS.framework.proof.lemmasfortoptheo <> f var
R49218:49220 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
prf 49512:49531 <> goodstmt_n_dym_com_s
R49559:49561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49562:49572 CertiOS.framework.proof.rulesoundlib <> n_dym_com_s def
R49574:49574 CertiOS.framework.proof.lemmasfortoptheo <> s var
R49547:49554 CertiOS.framework.proof.oscorrectness <> GoodStmt def
R49558:49558 CertiOS.framework.proof.lemmasfortoptheo <> p var
R49556:49556 CertiOS.framework.proof.lemmasfortoptheo <> s var
R49673:49693 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49673:49693 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49712:49732 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49712:49732 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49766:49786 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49766:49786 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49820:49840 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49820:49840 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49895:49915 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49895:49915 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49934:49954 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R49934:49954 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
prf 49980:49993 <> pumerge_get_ex
R50054:50057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50079:50081 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50061:50062 Coq.Init.Logic <> :type_scope:x_'='_x not
R50058:50058 CertiOS.framework.proof.lemmasfortoptheo <> p var
R50060:50060 CertiOS.framework.proof.lemmasfortoptheo <> f var
R50063:50066 Coq.Init.Datatypes <> Some constr
R50068:50068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50070:50070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50073:50073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50076:50076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50078:50078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50069:50069 CertiOS.framework.proof.lemmasfortoptheo <> t var
R50071:50072 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R50074:50075 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R50077:50077 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50086:50088 Coq.Init.Logic <> :type_scope:x_'='_x not
R50082:50083 CertiOS.framework.proof.lemmasfortoptheo <> p' var
R50085:50085 CertiOS.framework.proof.lemmasfortoptheo <> f var
R50089:50092 Coq.Init.Datatypes <> Some constr
R50094:50094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50096:50096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50099:50099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50102:50102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50104:50104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50095:50095 CertiOS.framework.proof.lemmasfortoptheo <> t var
R50097:50098 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R50100:50101 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R50103:50103 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50036:50037 Coq.Init.Logic <> :type_scope:x_'='_x not
R50021:50027 CertiOS.framework.model.opsem <> pumerge def
R50031:50032 CertiOS.framework.proof.lemmasfortoptheo <> p' var
R50029:50029 CertiOS.framework.proof.lemmasfortoptheo <> p var
R50035:50035 CertiOS.framework.proof.lemmasfortoptheo <> f var
R50038:50041 Coq.Init.Datatypes <> Some constr
R50043:50043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50045:50045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50048:50048 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50051:50051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50053:50053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50044:50044 CertiOS.framework.proof.lemmasfortoptheo <> t var
R50046:50047 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R50049:50050 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R50052:50052 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50136:50142 CertiOS.framework.model.opsem <> pumerge def
prf 50242:50257 <> callcont_ndymint
R50318:50321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50344:50347 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50348:50366 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_scont def
R50368:50370 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R50322:50340 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_scont def
R50342:50343 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R50292:50294 Coq.Init.Logic <> :type_scope:x_'='_x not
R50281:50288 CertiOS.framework.model.opsem <> callcont def
R50290:50291 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R50295:50298 Coq.Init.Datatypes <> Some constr
R50301:50305 CertiOS.framework.model.language <> kcall constr
R50314:50316 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R50311:50312 CertiOS.framework.proof.lemmasfortoptheo <> le var
R50309:50309 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50307:50307 CertiOS.framework.proof.lemmasfortoptheo <> f var
prf 50761:50783 <> ltstep_n_dym_com_int_cd
R50858:50858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50956:50965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50966:50966 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51064:51073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51093:51101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51179:51182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51217:51220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51221:51236 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R51238:51238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51242:51243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51257:51257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51239:51241 CertiOS.framework.proof.lemmasfortoptheo <> c'' var
R51244:51244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51249:51250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51255:51256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51245:51248 CertiOS.framework.proof.lemmasfortoptheo <> ke'' var
R51251:51254 CertiOS.framework.proof.lemmasfortoptheo <> ks'' var
R51183:51198 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R51200:51200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51203:51204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51216:51216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51201:51202 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R51205:51205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51209:51210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51214:51215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51206:51208 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R51211:51213 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R51102:51107 CertiOS.framework.model.opsem <> ltstep ind
R51177:51178 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R51172:51175 CertiOS.framework.proof.lemmasfortoptheo <> cst' var
R51151:51151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51155:51156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51170:51170 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51152:51154 CertiOS.framework.proof.lemmasfortoptheo <> c'' var
R51157:51157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51162:51163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51168:51169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51158:51161 CertiOS.framework.proof.lemmasfortoptheo <> ke'' var
R51164:51167 CertiOS.framework.proof.lemmasfortoptheo <> ks'' var
R51149:51149 CertiOS.framework.proof.lemmasfortoptheo <> o var
R51145:51147 CertiOS.framework.proof.lemmasfortoptheo <> cst var
R51127:51127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51130:51131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51143:51143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51128:51129 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R51132:51132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51136:51137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51141:51142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51133:51135 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R51138:51140 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R51125:51125 CertiOS.framework.proof.lemmasfortoptheo <> t var
R51109:51109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51112:51112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51123:51123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51110:51111 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R51113:51113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51116:51116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51119:51119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51122:51122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51114:51115 CertiOS.framework.proof.lemmasfortoptheo <> po var
R51117:51118 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R51120:51121 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R51074:51083 CertiOS.framework.proof.oscorrectness <> GoodClient def
R51091:51092 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R51088:51089 CertiOS.framework.proof.lemmasfortoptheo <> po var
R51085:51086 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R51010:51013 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51051:51052 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51044:51046 Coq.Init.Logic <> :type_scope:x_'='_x not
R51014:51026 CertiOS.framework.logic.inferules <> good_decllist def
R51029:51036 CertiOS.framework.model.opsem <> revlcons def
R51041:51042 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R51038:51039 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R51047:51050 Coq.Init.Datatypes <> true constr
R51053:51061 CertiOS.framework.logic.inferules <> GoodStmt' def
R51063:51063 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50991:50993 Coq.Init.Logic <> :type_scope:x_'='_x not
R50987:50988 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R50990:50990 CertiOS.framework.proof.lemmasfortoptheo <> f var
R50994:50997 Coq.Init.Datatypes <> Some constr
R50999:50999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51001:51001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51004:51004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51007:51007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51009:51009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51000:51000 CertiOS.framework.proof.lemmasfortoptheo <> t var
R51002:51003 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R51005:51006 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R51008:51008 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50902:50905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50943:50944 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50936:50938 Coq.Init.Logic <> :type_scope:x_'='_x not
R50906:50918 CertiOS.framework.logic.inferules <> good_decllist def
R50921:50928 CertiOS.framework.model.opsem <> revlcons def
R50933:50934 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R50930:50931 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R50939:50942 Coq.Init.Datatypes <> true constr
R50945:50953 CertiOS.framework.logic.inferules <> GoodStmt' def
R50955:50955 CertiOS.framework.proof.lemmasfortoptheo <> s var
R50883:50885 Coq.Init.Logic <> :type_scope:x_'='_x not
R50879:50880 CertiOS.framework.proof.lemmasfortoptheo <> po var
R50882:50882 CertiOS.framework.proof.lemmasfortoptheo <> f var
R50886:50889 Coq.Init.Datatypes <> Some constr
R50891:50891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50893:50893 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50896:50896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50899:50899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50901:50901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R50892:50892 CertiOS.framework.proof.lemmasfortoptheo <> t var
R50894:50895 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R50897:50898 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R50900:50900 CertiOS.framework.proof.lemmasfortoptheo <> s var
R51303:51305 CertiOS.framework.model.language <> fid def
R51313:51316 CertiOS.framework.model.memory <> type ind
R51326:51333 CertiOS.framework.model.memory <> decllist ind
R51341:51345 CertiOS.framework.model.language <> stmts ind
R51387:51390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51391:51399 CertiOS.framework.logic.inferules <> GoodStmt' def
R51401:51401 CertiOS.framework.proof.lemmasfortoptheo <> s var
R51367:51369 Coq.Init.Logic <> :type_scope:x_'='_x not
R51366:51366 CertiOS.framework.proof.lemmasfortoptheo <> f var
R51370:51373 Coq.Init.Datatypes <> Some constr
R51375:51375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51377:51378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51380:51381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51383:51384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51386:51386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51376:51376 CertiOS.framework.proof.lemmasfortoptheo <> a var
R51379:51379 CertiOS.framework.proof.lemmasfortoptheo <> b var
R51382:51382 CertiOS.framework.proof.lemmasfortoptheo <> c var
R51385:51385 CertiOS.framework.proof.lemmasfortoptheo <> s var
R51303:51305 CertiOS.framework.model.language <> fid def
R51313:51316 CertiOS.framework.model.memory <> type ind
R51326:51333 CertiOS.framework.model.memory <> decllist ind
R51341:51345 CertiOS.framework.model.language <> stmts ind
R51387:51390 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51391:51399 CertiOS.framework.logic.inferules <> GoodStmt' def
R51401:51401 CertiOS.framework.proof.lemmasfortoptheo <> s var
R51367:51369 Coq.Init.Logic <> :type_scope:x_'='_x not
R51366:51366 CertiOS.framework.proof.lemmasfortoptheo <> f var
R51370:51373 Coq.Init.Datatypes <> Some constr
R51375:51375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51377:51378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51380:51381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51383:51384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51386:51386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R51376:51376 CertiOS.framework.proof.lemmasfortoptheo <> a var
R51379:51379 CertiOS.framework.proof.lemmasfortoptheo <> b var
R51382:51382 CertiOS.framework.proof.lemmasfortoptheo <> c var
R51385:51385 CertiOS.framework.proof.lemmasfortoptheo <> s var
R51445:51465 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R51445:51465 CertiOS.framework.proof.lemmasfortoptheo <> GoodStmt_to_GoodStmt' thm
R51519:51534 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51896:51916 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R51951:51964 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get_ex thm
R51951:51964 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get_ex thm
R52115:52130 CertiOS.framework.proof.lemmasfortoptheo <> callcont_ndymint thm
R52115:52130 CertiOS.framework.proof.lemmasfortoptheo <> callcont_ndymint thm
R52177:52197 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R52177:52197 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R52313:52333 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R52313:52333 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
prf 52651:52667 <> int_ndymint_false
R52728:52731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52732:52733 Coq.Init.Logic <> :type_scope:'~'_x not
R52756:52756 Coq.Init.Logic <> :type_scope:'~'_x not
R52734:52752 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_scont def
R52754:52755 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R52702:52704 Coq.Init.Logic <> :type_scope:x_'='_x not
R52692:52698 CertiOS.framework.model.opsem <> intcont def
R52700:52701 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R52705:52708 Coq.Init.Datatypes <> Some constr
R52711:52714 CertiOS.framework.model.language <> kint constr
R52724:52726 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R52721:52722 CertiOS.framework.proof.lemmasfortoptheo <> le var
R52718:52719 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R52716:52716 CertiOS.framework.proof.lemmasfortoptheo <> c var
R52849:52858 Coq.Logic.Classical_Prop <> or_not_and thm
R52849:52858 Coq.Logic.Classical_Prop <> or_not_and thm
R52906:52915 Coq.Logic.Classical_Prop <> or_not_and thm
R52906:52915 Coq.Logic.Classical_Prop <> or_not_and thm
R52941:52950 Coq.Logic.Classical_Prop <> or_not_and thm
R52941:52950 Coq.Logic.Classical_Prop <> or_not_and thm
R53015:53024 Coq.Logic.Classical_Prop <> or_not_and thm
R53015:53024 Coq.Logic.Classical_Prop <> or_not_and thm
R52849:52858 Coq.Logic.Classical_Prop <> or_not_and thm
R52849:52858 Coq.Logic.Classical_Prop <> or_not_and thm
R52906:52915 Coq.Logic.Classical_Prop <> or_not_and thm
R52906:52915 Coq.Logic.Classical_Prop <> or_not_and thm
R52941:52950 Coq.Logic.Classical_Prop <> or_not_and thm
R52941:52950 Coq.Logic.Classical_Prop <> or_not_and thm
R53015:53024 Coq.Logic.Classical_Prop <> or_not_and thm
R53015:53024 Coq.Logic.Classical_Prop <> or_not_and thm
R53072:53088 CertiOS.framework.proof.lemmasfortoptheo <> int_ndymint_false thm
R53072:53088 CertiOS.framework.proof.lemmasfortoptheo <> int_ndymint_false thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53369:53389 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53424:53437 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get_ex thm
R53424:53437 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get_ex thm
R53547:53562 CertiOS.framework.proof.lemmasfortoptheo <> callcont_ndymint thm
R53547:53562 CertiOS.framework.proof.lemmasfortoptheo <> callcont_ndymint thm
R53609:53629 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53609:53629 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53747:53767 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R53747:53767 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
prf 53876:53900 <> ltstepev_n_dym_com_int_cd
R53978:53978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54076:54085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54086:54086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54184:54193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54213:54221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54304:54306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54341:54344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54345:54360 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R54362:54362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54366:54367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54381:54381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54363:54365 CertiOS.framework.proof.lemmasfortoptheo <> c'' var
R54368:54368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54373:54374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54379:54380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54369:54372 CertiOS.framework.proof.lemmasfortoptheo <> ke'' var
R54375:54378 CertiOS.framework.proof.lemmasfortoptheo <> ks'' var
R54307:54322 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R54324:54324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54327:54328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54340:54340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54325:54326 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R54329:54329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54333:54334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54338:54339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54330:54332 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R54335:54337 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R54222:54229 CertiOS.framework.model.opsem <> ltstepev ind
R54302:54303 CertiOS.framework.proof.lemmasfortoptheo <> ev var
R54299:54300 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R54294:54297 CertiOS.framework.proof.lemmasfortoptheo <> cst' var
R54273:54273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54277:54278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54292:54292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54274:54276 CertiOS.framework.proof.lemmasfortoptheo <> c'' var
R54279:54279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54284:54285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54290:54291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54280:54283 CertiOS.framework.proof.lemmasfortoptheo <> ke'' var
R54286:54289 CertiOS.framework.proof.lemmasfortoptheo <> ks'' var
R54271:54271 CertiOS.framework.proof.lemmasfortoptheo <> o var
R54267:54269 CertiOS.framework.proof.lemmasfortoptheo <> cst var
R54249:54249 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54252:54253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54265:54265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54250:54251 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R54254:54254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54258:54259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54263:54264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54255:54257 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R54260:54262 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R54247:54247 CertiOS.framework.proof.lemmasfortoptheo <> t var
R54231:54231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54234:54234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54245:54245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54232:54233 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R54235:54235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54238:54238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54241:54241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54244:54244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54236:54237 CertiOS.framework.proof.lemmasfortoptheo <> po var
R54239:54240 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R54242:54243 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R54194:54203 CertiOS.framework.proof.oscorrectness <> GoodClient def
R54211:54212 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R54208:54209 CertiOS.framework.proof.lemmasfortoptheo <> po var
R54205:54206 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R54130:54133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54171:54172 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54164:54166 Coq.Init.Logic <> :type_scope:x_'='_x not
R54134:54146 CertiOS.framework.logic.inferules <> good_decllist def
R54149:54156 CertiOS.framework.model.opsem <> revlcons def
R54161:54162 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54158:54159 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54167:54170 Coq.Init.Datatypes <> true constr
R54173:54181 CertiOS.framework.logic.inferules <> GoodStmt' def
R54183:54183 CertiOS.framework.proof.lemmasfortoptheo <> s var
R54111:54113 Coq.Init.Logic <> :type_scope:x_'='_x not
R54107:54108 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R54110:54110 CertiOS.framework.proof.lemmasfortoptheo <> f var
R54114:54117 Coq.Init.Datatypes <> Some constr
R54119:54119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54121:54121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54124:54124 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54127:54127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54129:54129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54120:54120 CertiOS.framework.proof.lemmasfortoptheo <> t var
R54122:54123 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54125:54126 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54128:54128 CertiOS.framework.proof.lemmasfortoptheo <> s var
R54022:54025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54063:54064 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54056:54058 Coq.Init.Logic <> :type_scope:x_'='_x not
R54026:54038 CertiOS.framework.logic.inferules <> good_decllist def
R54041:54048 CertiOS.framework.model.opsem <> revlcons def
R54053:54054 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54050:54051 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54059:54062 Coq.Init.Datatypes <> true constr
R54065:54073 CertiOS.framework.logic.inferules <> GoodStmt' def
R54075:54075 CertiOS.framework.proof.lemmasfortoptheo <> s var
R54003:54005 Coq.Init.Logic <> :type_scope:x_'='_x not
R53999:54000 CertiOS.framework.proof.lemmasfortoptheo <> po var
R54002:54002 CertiOS.framework.proof.lemmasfortoptheo <> f var
R54006:54009 Coq.Init.Datatypes <> Some constr
R54011:54011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54013:54013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54016:54016 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54019:54019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54021:54021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54012:54012 CertiOS.framework.proof.lemmasfortoptheo <> t var
R54014:54015 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54017:54018 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54020:54020 CertiOS.framework.proof.lemmasfortoptheo <> s var
prf 54525:54536 <> tlmatch_dec'
R54555:54561 CertiOS.framework.model.memory <> vallist def
R54612:54615 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54661:54661 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54565:54566 Coq.Init.Logic <> :type_scope:'~'_x not
R54611:54611 Coq.Init.Logic <> :type_scope:'~'_x not
R54580:54582 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54567:54573 CertiOS.framework.model.opsem <> tlmatch def
R54578:54579 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R54575:54576 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R54606:54606 Coq.Init.Logic <> :type_scope:x_'='_x not
R54583:54593 CertiOS.framework.logic.inferules <> dl_vl_match def
R54599:54601 Coq.Lists.List <> rev def
R54603:54604 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R54595:54596 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R54607:54610 Coq.Init.Datatypes <> true constr
R54629:54632 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54616:54622 CertiOS.framework.model.opsem <> tlmatch def
R54627:54628 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R54624:54625 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R54656:54656 Coq.Init.Logic <> :type_scope:x_'='_x not
R54633:54643 CertiOS.framework.logic.inferules <> dl_vl_match def
R54649:54651 Coq.Lists.List <> rev def
R54653:54654 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R54645:54646 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R54657:54660 Coq.Init.Datatypes <> true constr
R54694:54694 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54740:54755 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54708:54711 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54695:54701 CertiOS.framework.model.opsem <> tlmatch def
R54735:54735 Coq.Init.Logic <> :type_scope:x_'='_x not
R54712:54722 CertiOS.framework.logic.inferules <> dl_vl_match def
R54728:54730 Coq.Lists.List <> rev def
R54736:54739 Coq.Init.Datatypes <> true constr
R54756:54757 Coq.Init.Logic <> :type_scope:'~'_x not
R54803:54803 Coq.Init.Logic <> :type_scope:'~'_x not
R54771:54774 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54758:54764 CertiOS.framework.model.opsem <> tlmatch def
R54798:54798 Coq.Init.Logic <> :type_scope:x_'='_x not
R54775:54785 CertiOS.framework.logic.inferules <> dl_vl_match def
R54791:54793 Coq.Lists.List <> rev def
R54799:54802 Coq.Init.Datatypes <> true constr
R54694:54694 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54740:54755 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54708:54711 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54695:54701 CertiOS.framework.model.opsem <> tlmatch def
R54735:54735 Coq.Init.Logic <> :type_scope:x_'='_x not
R54712:54722 CertiOS.framework.logic.inferules <> dl_vl_match def
R54728:54730 Coq.Lists.List <> rev def
R54736:54739 Coq.Init.Datatypes <> true constr
R54756:54757 Coq.Init.Logic <> :type_scope:'~'_x not
R54803:54803 Coq.Init.Logic <> :type_scope:'~'_x not
R54771:54774 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54758:54764 CertiOS.framework.model.opsem <> tlmatch def
R54798:54798 Coq.Init.Logic <> :type_scope:x_'='_x not
R54775:54785 CertiOS.framework.logic.inferules <> dl_vl_match def
R54791:54793 Coq.Lists.List <> rev def
R54799:54802 Coq.Init.Datatypes <> true constr
R54817:54823 Coq.Logic.Classical_Prop <> classic prfax
R54817:54823 Coq.Logic.Classical_Prop <> classic prfax
prf 54891:54901 <> pumerge_get
R54955:54958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54976:54978 Coq.Init.Logic <> :type_scope:x_'='_x not
R54960:54966 CertiOS.framework.model.opsem <> pumerge def
R54971:54972 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R54968:54969 CertiOS.framework.proof.lemmasfortoptheo <> po var
R54975:54975 CertiOS.framework.proof.lemmasfortoptheo <> f var
R54979:54982 Coq.Init.Datatypes <> Some constr
R54984:54984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54986:54986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54989:54989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54992:54992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54994:54994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54985:54985 CertiOS.framework.proof.lemmasfortoptheo <> t var
R54987:54988 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54990:54991 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54993:54993 CertiOS.framework.proof.lemmasfortoptheo <> s var
R54934:54935 Coq.Init.Logic <> :type_scope:x_'='_x not
R54930:54931 CertiOS.framework.proof.lemmasfortoptheo <> po var
R54933:54933 CertiOS.framework.proof.lemmasfortoptheo <> f var
R54936:54939 Coq.Init.Datatypes <> Some constr
R54941:54941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54943:54944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54947:54948 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54951:54952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54954:54954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R54942:54942 CertiOS.framework.proof.lemmasfortoptheo <> t var
R54945:54946 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R54949:54950 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R54953:54953 CertiOS.framework.proof.lemmasfortoptheo <> s var
R55026:55032 CertiOS.framework.model.opsem <> pumerge def
prf 55075:55087 <> funbody'_inos
R55131:55133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55159:55162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55163:55166 CertiOS.framework.model.opsem <> InOS def
R55211:55217 CertiOS.framework.model.opsem <> pumerge def
R55222:55223 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R55219:55220 CertiOS.framework.proof.lemmasfortoptheo <> po var
R55168:55168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55175:55175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55208:55208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55169:55172 CertiOS.framework.model.language <> curs constr
R55174:55174 CertiOS.framework.proof.lemmasfortoptheo <> s var
R55176:55176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55182:55183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55207:55207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55177:55181 CertiOS.framework.model.language <> kenil constr
R55184:55188 CertiOS.framework.model.language <> kcall constr
R55202:55206 CertiOS.framework.model.language <> kstop constr
R55195:55200 CertiOS.framework.logic.assertion <> empenv syndef
R55192:55193 CertiOS.framework.proof.lemmasfortoptheo <> s' var
R55190:55190 CertiOS.framework.proof.lemmasfortoptheo <> f var
R55138:55140 Coq.Init.Logic <> :type_scope:x_'='_x not
R55134:55135 CertiOS.framework.proof.lemmasfortoptheo <> po var
R55137:55137 CertiOS.framework.proof.lemmasfortoptheo <> f var
R55141:55144 Coq.Init.Datatypes <> Some constr
R55146:55146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55149:55149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55152:55152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55155:55155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55158:55158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55147:55148 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R55150:55151 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R55153:55154 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R55156:55157 CertiOS.framework.proof.lemmasfortoptheo <> s' var
R55120:55128 CertiOS.framework.logic.inferules <> GoodStmt' def
R55130:55130 CertiOS.framework.proof.lemmasfortoptheo <> s var
R55256:55259 CertiOS.framework.model.opsem <> InOS def
R55273:55276 CertiOS.framework.model.language <> curs constr
R55281:55285 CertiOS.framework.model.language <> kenil constr
R55288:55292 CertiOS.framework.model.language <> kcall constr
R55306:55310 CertiOS.framework.model.language <> kstop constr
R55299:55304 CertiOS.framework.logic.assertion <> empenv syndef
R55273:55276 CertiOS.framework.model.language <> curs constr
R55281:55285 CertiOS.framework.model.language <> kenil constr
R55288:55292 CertiOS.framework.model.language <> kcall constr
R55306:55310 CertiOS.framework.model.language <> kstop constr
R55299:55304 CertiOS.framework.logic.assertion <> empenv syndef
R55369:55371 CertiOS.framework.model.memory <> env def
R55362:55367 CertiOS.framework.logic.assertion <> empenv syndef
R55374:55378 CertiOS.framework.model.language <> kstop constr
R55369:55371 CertiOS.framework.model.memory <> env def
R55362:55367 CertiOS.framework.logic.assertion <> empenv syndef
R55374:55378 CertiOS.framework.model.language <> kstop constr
R55438:55448 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
R55438:55448 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
prf 55475:55491 <> cstep_no_api_elim
R55564:55571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55629:55635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R55636:55640 CertiOS.framework.model.opsem <> cstep ind
R55678:55679 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R55661:55661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55664:55665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55676:55676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55662:55663 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R55666:55666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55670:55671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55675:55675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55667:55669 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R55672:55674 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R55659:55659 CertiOS.framework.proof.lemmasfortoptheo <> o var
R55645:55645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55647:55648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55657:55657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55646:55646 CertiOS.framework.proof.lemmasfortoptheo <> c var
R55649:55649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55652:55653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55656:55656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55650:55651 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R55654:55655 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R55642:55643 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R55572:55576 CertiOS.framework.model.opsem <> cstep ind
R55627:55628 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R55610:55610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55613:55614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55625:55625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55611:55612 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R55615:55615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55619:55620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55624:55624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55616:55618 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R55621:55623 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R55608:55608 CertiOS.framework.proof.lemmasfortoptheo <> o var
R55594:55594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55596:55597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55606:55606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55595:55595 CertiOS.framework.proof.lemmasfortoptheo <> c var
R55598:55598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55601:55602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55605:55605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55599:55600 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R55603:55604 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R55579:55585 CertiOS.framework.model.opsem <> pumerge def
R55590:55591 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R55587:55588 CertiOS.framework.proof.lemmasfortoptheo <> po var
R55538:55548 CertiOS.framework.proof.auxdef <> no_call_api def
R55562:55563 CertiOS.framework.proof.lemmasfortoptheo <> po var
R55550:55550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55552:55552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55560:55560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55551:55551 CertiOS.framework.proof.lemmasfortoptheo <> c var
R55553:55553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55556:55556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55559:55559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R55554:55555 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R55557:55558 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R55737:55745 CertiOS.framework.model.opsem <> expr_step constr
R55737:55745 CertiOS.framework.model.opsem <> expr_step constr
R55764:55772 CertiOS.framework.model.opsem <> stmt_step constr
R55764:55772 CertiOS.framework.model.opsem <> stmt_step constr
R55863:55869 CertiOS.framework.model.opsem <> pumerge def
R55897:55903 CertiOS.framework.model.opsem <> pumerge def
prf 55986:56005 <> loststep_no_api_elim
R56078:56085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56146:56152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56153:56160 CertiOS.framework.model.opsem <> loststep ind
R56198:56199 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R56181:56181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56184:56185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56196:56196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56182:56183 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R56186:56186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56190:56191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56195:56195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56187:56189 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R56192:56194 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R56179:56179 CertiOS.framework.proof.lemmasfortoptheo <> o var
R56165:56165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56167:56168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56177:56177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56166:56166 CertiOS.framework.proof.lemmasfortoptheo <> c var
R56169:56169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56172:56173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56176:56176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56170:56171 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R56174:56175 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R56162:56163 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R56086:56093 CertiOS.framework.model.opsem <> loststep ind
R56144:56145 CertiOS.framework.proof.lemmasfortoptheo <> o' var
R56127:56127 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56130:56131 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56142:56142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56128:56129 CertiOS.framework.proof.lemmasfortoptheo <> c' var
R56132:56132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56136:56137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56141:56141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56133:56135 CertiOS.framework.proof.lemmasfortoptheo <> ke' var
R56138:56140 CertiOS.framework.proof.lemmasfortoptheo <> ks' var
R56125:56125 CertiOS.framework.proof.lemmasfortoptheo <> o var
R56111:56111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56113:56114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56123:56123 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56112:56112 CertiOS.framework.proof.lemmasfortoptheo <> c var
R56115:56115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56118:56119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56122:56122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56116:56117 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R56120:56121 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R56096:56102 CertiOS.framework.model.opsem <> pumerge def
R56107:56108 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R56104:56105 CertiOS.framework.proof.lemmasfortoptheo <> po var
R56052:56062 CertiOS.framework.proof.auxdef <> no_call_api def
R56076:56077 CertiOS.framework.proof.lemmasfortoptheo <> po var
R56064:56064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56066:56066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56074:56074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56065:56065 CertiOS.framework.proof.lemmasfortoptheo <> c var
R56067:56067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56070:56070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56073:56073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56068:56069 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R56071:56072 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56250:56261 CertiOS.framework.model.opsem <> checkis_step constr
R56305:56321 CertiOS.framework.proof.lemmasfortoptheo <> cstep_no_api_elim thm
R56305:56321 CertiOS.framework.proof.lemmasfortoptheo <> cstep_no_api_elim thm
prf 56345:56348 <> XXXX
R56413:56416 Coq.Init.Logic <> :type_scope:x_'='_x not
R56379:56383 CertiOS.framework.model.opsem <> ::x_'##'_x not
R56412:56412 CertiOS.framework.model.opsem <> ::x_'##'_x not
R56406:56409 CertiOS.framework.model.opsem <> ::x_'##'_x not
R56410:56411 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R56384:56388 CertiOS.framework.model.language <> kcall constr
R56401:56405 CertiOS.framework.proof.lemmasfortoptheo <> kstop var
R56394:56399 CertiOS.framework.logic.assertion <> empenv syndef
R56392:56392 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56390:56390 CertiOS.framework.proof.lemmasfortoptheo <> f var
R56376:56378 CertiOS.framework.proof.lemmasfortoptheo <> ksx var
R56446:56449 CertiOS.framework.model.opsem <> ::x_'##'_x not
R56450:56451 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R56420:56423 CertiOS.framework.model.opsem <> ::x_'##'_x not
R56424:56428 CertiOS.framework.model.language <> kcall constr
R56441:56445 CertiOS.framework.proof.lemmasfortoptheo <> kstop var
R56434:56439 CertiOS.framework.logic.assertion <> empenv syndef
R56432:56432 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56430:56430 CertiOS.framework.proof.lemmasfortoptheo <> f var
R56417:56419 CertiOS.framework.proof.lemmasfortoptheo <> ksx var
prf 56594:56604 <> SmCTaskSim'
R56628:56635 CertiOS.framework.model.language <> progunit def
R56642:56648 CertiOS.framework.model.language <> intunit def
R56654:56659 CertiOS.framework.model.language <> osspec def
R56703:56705 CertiOS.framework.auxlibs.Modules <> tid def
R56742:56750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56768:56776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56800:56843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56848:56856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56857:56857 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56955:56964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56965:56965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57063:57072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57073:57081 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57483:57499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57500:57500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57708:57716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57717:57725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58894:58908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58909:58917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59070:59086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59087:59095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59341:59356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59357:59366 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60088:60104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60105:60113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60810:60835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60836:60844 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61271:61292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61293:61299 CertiOS.framework.proof.simulation <> TaskSim coind
R61399:61401 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R61377:61386 CertiOS.framework.proof.auxdef <> InitTaskSt def
R61394:61396 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R61388:61392 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R61374:61374 CertiOS.framework.proof.lemmasfortoptheo <> I var
R61368:61372 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R61366:61366 CertiOS.framework.proof.lemmasfortoptheo <> O var
R61352:61352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61355:61355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61364:61364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61353:61354 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R61356:61356 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61360:61360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61363:61363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61357:61359 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R61361:61362 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R61344:61344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61347:61348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61350:61350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61345:61346 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R61349:61349 CertiOS.framework.proof.lemmasfortoptheo <> A var
R61342:61342 CertiOS.framework.proof.lemmasfortoptheo <> o var
R61318:61318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61320:61320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61340:61340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61319:61319 CertiOS.framework.proof.lemmasfortoptheo <> c var
R61321:61321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61324:61324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61339:61339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61322:61323 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R61328:61330 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61338:61338 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61334:61335 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61336:61337 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R61331:61333 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R61325:61327 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R61301:61301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61304:61305 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61316:61316 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61302:61303 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R61306:61306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61309:61309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61312:61312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61315:61315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61307:61308 CertiOS.framework.proof.lemmasfortoptheo <> po var
R61310:61311 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R61313:61314 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R60856:60863 CertiOS.framework.model.memory <> freelist def
R60917:60920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60930:60933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60957:60960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60969:60982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61002:61006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61026:61029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61048:61060 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61100:61113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61114:61120 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R61122:61135 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R61270:61270 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R61170:61185 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61136:61141 CertiOS.framework.proof.rulesoundlib <> freels ind
R61147:61153 CertiOS.framework.model.opsem <> get_mem def
R61156:61163 CertiOS.framework.model.language <> get_smem def
R61165:61165 CertiOS.framework.proof.lemmasfortoptheo <> o var
R61143:61144 CertiOS.framework.proof.lemmasfortoptheo <> al var
R61239:61241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61186:61195 CertiOS.framework.proof.auxdef <> InitTaskSt def
R61207:61208 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61235:61236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61238:61238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61209:61217 CertiOS.framework.proof.auxdef <> emple_tst def
R61220:61229 CertiOS.framework.logic.assertion <> substaskst def
R61231:61231 CertiOS.framework.proof.lemmasfortoptheo <> o var
R61237:61237 CertiOS.framework.proof.lemmasfortoptheo <> O var
R61203:61205 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R61197:61201 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R61259:61260 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61244:61244 Coq.Init.Logic <> :type_scope:x_'='_x not
R61242:61243 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R61245:61248 CertiOS.framework.model.language <> curs constr
R61251:61255 CertiOS.framework.model.language <> sskip constr
R61257:61257 CertiOS.framework.proof.lemmasfortoptheo <> v var
R61264:61264 Coq.Init.Logic <> :type_scope:x_'='_x not
R61261:61263 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R61265:61269 CertiOS.framework.model.language <> kenil constr
R61061:61061 Coq.Init.Logic <> :type_scope:'~'_x not
R61062:61065 CertiOS.framework.model.opsem <> InOS def
R61086:61092 CertiOS.framework.model.opsem <> pumerge def
R61097:61098 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R61094:61095 CertiOS.framework.proof.lemmasfortoptheo <> po var
R61067:61067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61072:61072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61083:61083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61068:61071 CertiOS.framework.model.language <> ::'SKIP' not
R61073:61073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61079:61079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61082:61082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R61074:61078 CertiOS.framework.model.language <> kenil constr
R61080:61081 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R61041:61043 Coq.Init.Logic <> :type_scope:x_'='_x not
R61030:61036 CertiOS.framework.model.opsem <> intcont def
R61038:61040 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R61044:61047 Coq.Init.Datatypes <> None constr
R61019:61021 Coq.Init.Logic <> :type_scope:x_'='_x not
R61007:61014 CertiOS.framework.model.opsem <> callcont def
R61016:61018 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R61022:61025 Coq.Init.Datatypes <> None constr
R60984:60984 Coq.Init.Logic <> :type_scope:x_'='_x not
R60983:60983 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60985:60988 CertiOS.framework.model.language <> curs constr
R60991:60995 CertiOS.framework.model.language <> sfree constr
R61000:61000 CertiOS.framework.proof.lemmasfortoptheo <> v var
R60997:60998 CertiOS.framework.proof.lemmasfortoptheo <> al var
R60963:60963 Coq.Init.Logic <> :type_scope:x_'='_x not
R60961:60962 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R60964:60968 CertiOS.framework.model.language <> kenil constr
R60937:60937 Coq.Init.Logic <> :type_scope:x_'='_x not
R60934:60936 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R60938:60942 CertiOS.framework.model.language <> kcall constr
R60952:60956 CertiOS.framework.model.language <> kstop constr
R60948:60950 CertiOS.framework.auxlibs.Maps <> emp meth
R60946:60946 CertiOS.framework.proof.lemmasfortoptheo <> s var
R60944:60944 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60924:60924 Coq.Init.Logic <> :type_scope:x_'='_x not
R60921:60923 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R60925:60929 CertiOS.framework.model.language <> kenil constr
R60897:60899 Coq.Init.Logic <> :type_scope:x_'='_x not
R60893:60894 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60896:60896 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60900:60903 Coq.Init.Datatypes <> Some constr
R60905:60905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60908:60908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60911:60911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60914:60914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60916:60916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60906:60907 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R60909:60910 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R60912:60913 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R60915:60915 CertiOS.framework.proof.lemmasfortoptheo <> s var
R60175:60178 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60188:60191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60215:60227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60228:60228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60291:60303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60304:60304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60383:60395 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60435:60447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60478:60491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60799:60809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60492:60498 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R60500:60500 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R60504:60504 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R60507:60508 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R60563:60564 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60509:60512 CertiOS.framework.model.opsem <> InOS def
R60549:60555 CertiOS.framework.model.opsem <> pumerge def
R60560:60561 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R60557:60558 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60514:60514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60516:60516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60546:60546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60515:60515 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60517:60517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60520:60520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60545:60545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60518:60519 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R60524:60525 CertiOS.framework.model.opsem <> ::x_'##'_x not
R60526:60530 CertiOS.framework.model.language <> kcall constr
R60540:60544 CertiOS.framework.model.language <> kstop constr
R60536:60538 CertiOS.framework.auxlibs.Maps <> emp meth
R60534:60534 CertiOS.framework.proof.lemmasfortoptheo <> s var
R60532:60532 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60521:60523 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60589:60591 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60567:60569 Coq.Init.Logic <> :type_scope:x_'='_x not
R60565:60566 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R60570:60573 CertiOS.framework.model.language <> curs constr
R60576:60584 CertiOS.framework.model.language <> hapi_code constr
R60669:60672 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60598:60600 Coq.Init.Logic <> :type_scope:x_'='_x not
R60592:60595 Coq.Init.Datatypes <> Some constr
R60601:60609 CertiOS.framework.proof.auxdef <> BuildRetA def
R60662:60668 CertiOS.framework.logic.inferules <> init_lg def
R60658:60660 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R60652:60656 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R60629:60636 CertiOS.framework.model.opsem <> get_genv def
R60639:60646 CertiOS.framework.model.language <> get_smem def
R60648:60648 CertiOS.framework.proof.lemmasfortoptheo <> o var
R60616:60616 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60619:60619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60622:60622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60617:60618 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R60620:60621 CertiOS.framework.proof.lemmasfortoptheo <> tt var
R60614:60614 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60611:60612 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60700:60730 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60673:60683 CertiOS.framework.proof.auxdef <> no_call_api def
R60698:60699 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60685:60685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60687:60687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60696:60696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60686:60686 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60688:60688 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60691:60691 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60695:60695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60689:60690 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R60692:60694 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60731:60737 CertiOS.framework.proof.simulation <> MethSim coind
R60796:60798 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R60787:60794 CertiOS.framework.proof.auxdef <> retfalse def
R60780:60785 CertiOS.framework.logic.assertion <> Afalse constr
R60776:60776 CertiOS.framework.proof.lemmasfortoptheo <> I var
R60770:60774 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R60768:60768 CertiOS.framework.proof.lemmasfortoptheo <> O var
R60763:60763 CertiOS.framework.proof.lemmasfortoptheo <> o var
R60750:60750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60752:60752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60761:60761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60751:60751 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60753:60753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60756:60756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60760:60760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60754:60755 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R60757:60759 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60743:60745 Coq.Init.Datatypes <> snd def
R60747:60747 CertiOS.framework.proof.lemmasfortoptheo <> A var
R60739:60740 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R60463:60465 Coq.Init.Logic <> :type_scope:x_'='_x not
R60449:60451 Coq.Init.Datatypes <> fst def
R60454:60456 Coq.Init.Datatypes <> fst def
R60458:60458 CertiOS.framework.proof.lemmasfortoptheo <> A var
R60462:60462 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60466:60469 Coq.Init.Datatypes <> Some constr
R60471:60471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60474:60474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60477:60477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60472:60473 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R60475:60476 CertiOS.framework.proof.lemmasfortoptheo <> tt var
R60396:60396 Coq.Init.Logic <> :type_scope:'~'_x not
R60397:60400 CertiOS.framework.model.opsem <> InOS def
R60421:60427 CertiOS.framework.model.opsem <> pumerge def
R60432:60433 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R60429:60430 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60402:60402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60407:60407 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60418:60418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60403:60406 CertiOS.framework.model.language <> ::'SKIP' not
R60408:60408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60414:60414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60417:60417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60409:60413 CertiOS.framework.model.language <> kenil constr
R60415:60416 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R60319:60321 Coq.Init.Logic <> :type_scope:'~'_x not
R60382:60382 Coq.Init.Logic <> :type_scope:'~'_x not
R60341:60344 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60323:60323 Coq.Init.Logic <> :type_scope:x_'='_x not
R60322:60322 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60324:60327 CertiOS.framework.model.language <> curs constr
R60330:60334 CertiOS.framework.model.language <> sfree constr
R60339:60339 CertiOS.framework.proof.lemmasfortoptheo <> v var
R60336:60337 CertiOS.framework.proof.lemmasfortoptheo <> al var
R60364:60365 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60357:60359 Coq.Init.Logic <> :type_scope:x_'='_x not
R60345:60352 CertiOS.framework.model.opsem <> callcont def
R60354:60356 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60360:60363 Coq.Init.Datatypes <> None constr
R60377:60377 Coq.Init.Logic <> :type_scope:x_'='_x not
R60366:60372 CertiOS.framework.model.opsem <> intcont def
R60374:60376 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60378:60381 Coq.Init.Datatypes <> None constr
R60254:60255 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R60242:60242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60244:60244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60253:60253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60243:60243 CertiOS.framework.proof.lemmasfortoptheo <> c var
R60245:60245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60248:60248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60252:60252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60246:60247 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R60249:60251 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R60256:60256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60276:60276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60290:60290 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60257:60260 CertiOS.framework.model.language <> curs constr
R60263:60268 CertiOS.framework.model.language <> salloc constr
R60273:60274 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R60270:60271 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R60277:60277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60283:60283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60289:60289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60278:60282 CertiOS.framework.model.language <> kenil constr
R60284:60288 CertiOS.framework.model.language <> kstop constr
R60195:60195 Coq.Init.Logic <> :type_scope:x_'='_x not
R60192:60194 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R60196:60200 CertiOS.framework.model.language <> kcall constr
R60210:60214 CertiOS.framework.model.language <> kstop constr
R60206:60208 CertiOS.framework.auxlibs.Maps <> emp meth
R60204:60204 CertiOS.framework.proof.lemmasfortoptheo <> s var
R60202:60202 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60182:60182 Coq.Init.Logic <> :type_scope:x_'='_x not
R60179:60181 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R60183:60187 CertiOS.framework.model.language <> kenil constr
R60155:60157 Coq.Init.Logic <> :type_scope:x_'='_x not
R60151:60152 CertiOS.framework.proof.lemmasfortoptheo <> po var
R60154:60154 CertiOS.framework.proof.lemmasfortoptheo <> f var
R60158:60161 Coq.Init.Datatypes <> Some constr
R60163:60163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60166:60166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60169:60169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60172:60172 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60174:60174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R60164:60165 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R60167:60168 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R60170:60171 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R60173:60173 CertiOS.framework.proof.lemmasfortoptheo <> s var
R59436:59438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59461:59462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59471:59483 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59511:59523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59533:59536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59560:59573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59613:59640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R60087:60087 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59665:59668 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59641:59647 CertiOS.framework.model.opsem <> tlmatch def
R59663:59664 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R59650:59657 Coq.Lists.List <> rev def
R59659:59660 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R59693:59696 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59687:59688 Coq.Init.Logic <> :type_scope:x_'='_x not
R59669:59679 CertiOS.framework.model.opsem <> tl_vl_match def
R59684:59686 CertiOS.framework.proof.lemmasfortoptheo <> vlh var
R59681:59682 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R59689:59692 Coq.Init.Datatypes <> true constr
R59712:59715 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59697:59706 CertiOS.framework.proof.auxdef <> good_dl_le def
R59711:59711 CertiOS.framework.proof.lemmasfortoptheo <> o var
R59708:59709 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R59720:59769 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59716:59719 Coq.Init.Logic <> True ind
R59770:59776 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R59780:59780 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R59784:59784 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R59786:59803 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R59804:59804 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59833:59852 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59812:59815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59816:59824 CertiOS.framework.proof.auxdef <> length_eq def
R59807:59808 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R59805:59806 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R59809:59811 Coq.Init.Datatypes <> nil constr
R59881:59883 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59866:59866 Coq.Init.Logic <> :type_scope:x_'='_x not
R59853:59858 CertiOS.framework.proof.auxdef <> dl_add def
R59864:59865 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R59867:59874 CertiOS.framework.model.opsem <> revlcons def
R59879:59880 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R59876:59877 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R59899:59900 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59893:59895 Coq.Init.Logic <> :type_scope:x_'='_x not
R59887:59890 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59891:59892 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R59896:59898 CertiOS.framework.proof.lemmasfortoptheo <> vlh var
R59922:59940 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60086:60086 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59915:59915 Coq.Init.Logic <> :type_scope:x_'='_x not
R59901:59906 CertiOS.framework.logic.inferules <> buildp def
R59916:59919 Coq.Init.Datatypes <> Some constr
R59951:59953 CertiOS.framework.logic.assertion <> sat def
R59967:59967 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60054:60057 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R59969:59972 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R59998:60001 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R59973:59979 CertiOS.framework.logic.inferules <> p_local def
R59991:59997 CertiOS.framework.logic.inferules <> init_lg def
R59987:59989 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R59981:59985 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R60002:60002 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60011:60015 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60003:60005 CertiOS.framework.logic.assertion <> Aie constr
R60007:60010 Coq.Init.Datatypes <> true constr
R60016:60016 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60024:60027 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60017:60019 CertiOS.framework.logic.assertion <> Ais constr
R60021:60023 Coq.Init.Datatypes <> nil constr
R60028:60028 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60036:60041 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60053:60053 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R60029:60031 CertiOS.framework.logic.assertion <> Acs constr
R60033:60035 Coq.Init.Datatypes <> nil constr
R60042:60045 CertiOS.framework.logic.assertion <> Aisr constr
R60047:60052 CertiOS.framework.model.language <> empisr def
R60058:60067 CertiOS.framework.logic.assertion <> A_dom_lenv constr
R60070:60079 CertiOS.framework.logic.inferules <> getlenvdom def
R59955:59955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59961:59961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59964:59964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59956:59956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59958:59958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59960:59960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59957:59957 CertiOS.framework.proof.lemmasfortoptheo <> o var
R59959:59959 CertiOS.framework.proof.lemmasfortoptheo <> O var
R59962:59963 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R59574:59574 Coq.Init.Logic <> :type_scope:'~'_x not
R59575:59578 CertiOS.framework.model.opsem <> InOS def
R59599:59605 CertiOS.framework.model.opsem <> pumerge def
R59610:59611 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R59607:59608 CertiOS.framework.proof.lemmasfortoptheo <> po var
R59580:59580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59585:59585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59596:59596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59581:59584 CertiOS.framework.model.language <> ::'SKIP' not
R59586:59586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59592:59592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59595:59595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59587:59591 CertiOS.framework.model.language <> kenil constr
R59593:59594 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R59540:59540 Coq.Init.Logic <> :type_scope:x_'='_x not
R59537:59539 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R59541:59545 CertiOS.framework.model.language <> kcall constr
R59555:59559 CertiOS.framework.model.language <> kstop constr
R59551:59553 CertiOS.framework.auxlibs.Maps <> emp meth
R59549:59549 CertiOS.framework.proof.lemmasfortoptheo <> s var
R59547:59547 CertiOS.framework.proof.lemmasfortoptheo <> f var
R59527:59527 Coq.Init.Logic <> :type_scope:x_'='_x not
R59524:59526 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R59528:59532 CertiOS.framework.model.language <> kstop constr
R59486:59488 Coq.Init.Logic <> :type_scope:x_'='_x not
R59484:59485 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R59489:59492 CertiOS.framework.model.language <> curs constr
R59495:59500 CertiOS.framework.model.language <> sfexec constr
R59508:59509 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R59504:59506 CertiOS.framework.proof.lemmasfortoptheo <> vlh var
R59502:59502 CertiOS.framework.proof.lemmasfortoptheo <> f var
R59465:59465 Coq.Init.Logic <> :type_scope:x_'='_x not
R59463:59464 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R59466:59470 CertiOS.framework.model.language <> kenil constr
R59440:59441 Coq.Init.Logic <> :type_scope:x_'='_x not
R59439:59439 CertiOS.framework.proof.lemmasfortoptheo <> c var
R59442:59445 CertiOS.framework.model.language <> curs constr
R59448:59453 CertiOS.framework.model.language <> salloc constr
R59458:59459 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R59455:59456 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R59416:59418 Coq.Init.Logic <> :type_scope:x_'='_x not
R59412:59413 CertiOS.framework.proof.lemmasfortoptheo <> po var
R59415:59415 CertiOS.framework.proof.lemmasfortoptheo <> f var
R59419:59422 Coq.Init.Datatypes <> Some constr
R59424:59424 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59427:59427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59430:59430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59433:59433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59435:59435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59425:59426 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R59428:59429 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R59431:59432 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R59434:59434 CertiOS.framework.proof.lemmasfortoptheo <> s var
R59157:59159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59185:59188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59197:59200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59206:59209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59219:59230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59240:59243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59253:59257 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59297:59309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59310:59319 CertiOS.framework.proof.auxdef <> InitTaskSt def
R59332:59335 Coq.Init.Datatypes <> pair constr
R59339:59339 CertiOS.framework.proof.lemmasfortoptheo <> O var
R59337:59337 CertiOS.framework.proof.lemmasfortoptheo <> o var
R59327:59329 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R59321:59325 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R59258:59258 Coq.Init.Logic <> :type_scope:'~'_x not
R59259:59262 CertiOS.framework.model.opsem <> InOS def
R59283:59289 CertiOS.framework.model.opsem <> pumerge def
R59294:59295 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R59291:59292 CertiOS.framework.proof.lemmasfortoptheo <> po var
R59264:59264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59269:59269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59280:59280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59265:59268 CertiOS.framework.model.language <> ::'SKIP' not
R59270:59270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59276:59276 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59279:59279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59271:59275 CertiOS.framework.model.language <> kenil constr
R59277:59278 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R59247:59247 Coq.Init.Logic <> :type_scope:x_'='_x not
R59244:59246 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R59248:59252 CertiOS.framework.model.language <> kstop constr
R59234:59234 Coq.Init.Logic <> :type_scope:x_'='_x not
R59231:59233 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R59235:59239 CertiOS.framework.model.language <> kstop constr
R59213:59213 Coq.Init.Logic <> :type_scope:x_'='_x not
R59210:59212 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R59214:59218 CertiOS.framework.model.language <> kenil constr
R59203:59204 Coq.Init.Logic <> :type_scope:x_'='_x not
R59201:59202 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R59205:59205 CertiOS.framework.proof.lemmasfortoptheo <> c var
R59191:59191 Coq.Init.Logic <> :type_scope:x_'='_x not
R59189:59190 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R59192:59196 CertiOS.framework.model.language <> kenil constr
R59161:59163 Coq.Init.Logic <> :type_scope:x_'='_x not
R59160:59160 CertiOS.framework.proof.lemmasfortoptheo <> c var
R59164:59167 CertiOS.framework.model.language <> curs constr
R59170:59175 CertiOS.framework.model.language <> sfexec constr
R59182:59183 CertiOS.framework.proof.lemmasfortoptheo <> tl var
R59179:59180 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R59177:59177 CertiOS.framework.proof.lemmasfortoptheo <> f var
R59137:59139 Coq.Init.Logic <> :type_scope:x_'='_x not
R59133:59134 CertiOS.framework.proof.lemmasfortoptheo <> po var
R59136:59136 CertiOS.framework.proof.lemmasfortoptheo <> f var
R59140:59143 Coq.Init.Datatypes <> Some constr
R59145:59145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59148:59148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59151:59151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59154:59154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59156:59156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59146:59147 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R59149:59150 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R59152:59153 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R59155:59155 CertiOS.framework.proof.lemmasfortoptheo <> s var
R58951:58961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58966:58968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58975:58978 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58988:58991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59001:59011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R59043:59046 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R59012:59021 CertiOS.framework.proof.auxdef <> InitTaskSt def
R59034:59037 Coq.Init.Datatypes <> pair constr
R59041:59041 CertiOS.framework.proof.lemmasfortoptheo <> O var
R59039:59039 CertiOS.framework.proof.lemmasfortoptheo <> o var
R59029:59031 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R59023:59027 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R59047:59054 CertiOS.framework.proof.auxdef <> good_clt def
R59068:59069 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R59056:59056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59058:59058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59066:59066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59057:59057 CertiOS.framework.proof.lemmasfortoptheo <> c var
R59059:59059 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59062:59062 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59065:59065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59060:59061 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R59063:59064 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R58995:58995 Coq.Init.Logic <> :type_scope:x_'='_x not
R58992:58994 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R58996:59000 CertiOS.framework.model.language <> kstop constr
R58982:58982 Coq.Init.Logic <> :type_scope:x_'='_x not
R58979:58981 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58983:58987 CertiOS.framework.model.language <> kstop constr
R58971:58971 Coq.Init.Logic <> :type_scope:x_'='_x not
R58969:58970 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R58972:58974 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R58963:58963 Coq.Init.Logic <> :type_scope:x_'='_x not
R58962:58962 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58964:58965 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R58918:58918 Coq.Init.Logic <> :type_scope:'~'_x not
R58919:58922 CertiOS.framework.model.opsem <> InOS def
R58937:58943 CertiOS.framework.model.opsem <> pumerge def
R58948:58949 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R58945:58946 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58924:58924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58926:58926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58934:58934 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58925:58925 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58927:58927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58930:58930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58933:58933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58928:58929 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R58931:58932 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57726:57726 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57809:57823 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57760:57773 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57808:57808 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57727:57727 Coq.Init.Logic <> :type_scope:'~'_x not
R57728:57731 CertiOS.framework.model.opsem <> InOS def
R57746:57752 CertiOS.framework.model.opsem <> pumerge def
R57757:57758 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57754:57755 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57733:57733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57735:57735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57743:57743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57734:57734 CertiOS.framework.proof.lemmasfortoptheo <> c var
R57736:57736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57739:57739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57742:57742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57737:57738 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R57740:57741 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57778:57779 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57775:57775 Coq.Init.Logic <> :type_scope:x_'='_x not
R57774:57774 CertiOS.framework.proof.lemmasfortoptheo <> c var
R57776:57777 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R57786:57787 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57782:57782 Coq.Init.Logic <> :type_scope:x_'='_x not
R57780:57781 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R57783:57785 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R57797:57798 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57791:57791 Coq.Init.Logic <> :type_scope:x_'='_x not
R57788:57790 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R57792:57796 CertiOS.framework.model.language <> kstop constr
R57802:57802 Coq.Init.Logic <> :type_scope:x_'='_x not
R57799:57801 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R57803:57807 CertiOS.framework.model.language <> kstop constr
R57824:57824 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58020:58030 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R57825:57831 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57833:57833 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57836:57836 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57839:57839 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57841:57841 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57844:57844 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57847:57847 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57850:57862 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R57887:57889 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57867:57869 Coq.Init.Logic <> :type_scope:x_'='_x not
R57863:57864 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57870:57873 Coq.Init.Datatypes <> Some constr
R57875:57875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57878:57878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57881:57881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57884:57884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57886:57886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57915:57917 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57891:57893 Coq.Init.Logic <> :type_scope:x_'='_x not
R57890:57890 CertiOS.framework.proof.lemmasfortoptheo <> c var
R57894:57897 CertiOS.framework.model.language <> curs constr
R57900:57905 CertiOS.framework.model.language <> sfexec constr
R57926:57928 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57920:57920 Coq.Init.Logic <> :type_scope:x_'='_x not
R57918:57919 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R57921:57925 CertiOS.framework.model.language <> kenil constr
R57934:57936 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57931:57932 Coq.Init.Logic <> :type_scope:x_'='_x not
R57929:57930 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R57933:57933 CertiOS.framework.proof.lemmasfortoptheo <> c var
R57946:57958 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57940:57940 Coq.Init.Logic <> :type_scope:x_'='_x not
R57937:57939 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R57941:57945 CertiOS.framework.model.language <> kenil constr
R57968:57969 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57962:57962 Coq.Init.Logic <> :type_scope:x_'='_x not
R57959:57961 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R57963:57967 CertiOS.framework.model.language <> kstop constr
R57979:57980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57973:57973 Coq.Init.Logic <> :type_scope:x_'='_x not
R57970:57972 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R57974:57978 CertiOS.framework.model.language <> kstop constr
R57981:57981 Coq.Init.Logic <> :type_scope:'~'_x not
R57982:57985 CertiOS.framework.model.opsem <> InOS def
R58006:58012 CertiOS.framework.model.opsem <> pumerge def
R58017:58018 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R58014:58015 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57987:57987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57992:57992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58003:58003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57988:57991 CertiOS.framework.model.language <> ::'SKIP' not
R57993:57993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57999:57999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58002:58002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57994:57998 CertiOS.framework.model.language <> kenil constr
R58000:58001 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R58031:58031 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58296:58306 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58032:58038 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R58040:58040 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R58043:58045 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R58046:58052 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58055:58055 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58059:58059 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58061:58061 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58064:58064 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58067:58067 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58070:58070 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58073:58085 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_x_','_x not
R58110:58113 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58090:58092 Coq.Init.Logic <> :type_scope:x_'='_x not
R58086:58087 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58093:58096 Coq.Init.Datatypes <> Some constr
R58098:58098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58101:58101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58104:58104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58107:58107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58109:58109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58136:58137 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58115:58116 Coq.Init.Logic <> :type_scope:x_'='_x not
R58114:58114 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58117:58120 CertiOS.framework.model.language <> curs constr
R58123:58128 CertiOS.framework.model.language <> salloc constr
R58146:58158 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58140:58140 Coq.Init.Logic <> :type_scope:x_'='_x not
R58138:58139 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R58141:58145 CertiOS.framework.model.language <> kenil constr
R58186:58187 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58161:58163 Coq.Init.Logic <> :type_scope:x_'='_x not
R58159:58160 CertiOS.framework.proof.lemmasfortoptheo <> ch var
R58164:58167 CertiOS.framework.model.language <> curs constr
R58170:58175 CertiOS.framework.model.language <> sfexec constr
R58197:58209 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58191:58191 Coq.Init.Logic <> :type_scope:x_'='_x not
R58188:58190 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R58192:58196 CertiOS.framework.model.language <> kenil constr
R58219:58220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58213:58213 Coq.Init.Logic <> :type_scope:x_'='_x not
R58210:58212 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58214:58218 CertiOS.framework.model.language <> kstop constr
R58244:58256 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58224:58224 Coq.Init.Logic <> :type_scope:x_'='_x not
R58221:58223 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R58225:58229 CertiOS.framework.model.language <> kcall constr
R58239:58243 CertiOS.framework.model.language <> kstop constr
R58235:58237 CertiOS.framework.auxlibs.Maps <> emp meth
R58257:58257 Coq.Init.Logic <> :type_scope:'~'_x not
R58258:58261 CertiOS.framework.model.opsem <> InOS def
R58282:58288 CertiOS.framework.model.opsem <> pumerge def
R58293:58294 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R58290:58291 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58263:58263 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58268:58268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58279:58279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58264:58267 CertiOS.framework.model.language <> ::'SKIP' not
R58269:58269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58275:58275 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58278:58278 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58270:58274 CertiOS.framework.model.language <> kenil constr
R58276:58277 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R58307:58307 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58627:58646 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58893:58893 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R58308:58314 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58316:58316 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58318:58318 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58321:58321 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58324:58324 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58327:58339 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R58364:58366 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58344:58346 Coq.Init.Logic <> :type_scope:x_'='_x not
R58340:58341 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58347:58350 Coq.Init.Datatypes <> Some constr
R58352:58352 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58355:58355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58358:58358 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58361:58361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58363:58363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58376:58377 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58370:58370 Coq.Init.Logic <> :type_scope:x_'='_x not
R58367:58369 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R58371:58375 CertiOS.framework.model.language <> kenil constr
R58401:58415 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58381:58381 Coq.Init.Logic <> :type_scope:x_'='_x not
R58378:58380 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R58382:58386 CertiOS.framework.model.language <> kcall constr
R58396:58400 CertiOS.framework.model.language <> kstop constr
R58392:58394 CertiOS.framework.auxlibs.Maps <> emp meth
R58416:58416 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58479:58493 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58442:58443 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R58430:58430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58432:58432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58441:58441 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58431:58431 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58433:58433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58436:58436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58440:58440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58434:58435 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R58437:58439 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58444:58444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58464:58464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58478:58478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58445:58448 CertiOS.framework.model.language <> curs constr
R58451:58456 CertiOS.framework.model.language <> salloc constr
R58461:58462 CertiOS.framework.proof.lemmasfortoptheo <> dl var
R58458:58459 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R58465:58465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58471:58471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58477:58477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58466:58470 CertiOS.framework.model.language <> kenil constr
R58472:58476 CertiOS.framework.model.language <> kstop constr
R58494:58494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58573:58587 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58509:58511 Coq.Init.Logic <> :type_scope:'~'_x not
R58572:58572 Coq.Init.Logic <> :type_scope:'~'_x not
R58531:58534 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58513:58513 Coq.Init.Logic <> :type_scope:x_'='_x not
R58512:58512 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58514:58517 CertiOS.framework.model.language <> curs constr
R58520:58524 CertiOS.framework.model.language <> sfree constr
R58529:58529 CertiOS.framework.proof.lemmasfortoptheo <> v var
R58526:58527 CertiOS.framework.proof.lemmasfortoptheo <> al var
R58554:58555 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58547:58549 Coq.Init.Logic <> :type_scope:x_'='_x not
R58535:58542 CertiOS.framework.model.opsem <> callcont def
R58544:58546 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58550:58553 Coq.Init.Datatypes <> None constr
R58567:58567 Coq.Init.Logic <> :type_scope:x_'='_x not
R58556:58562 CertiOS.framework.model.opsem <> intcont def
R58564:58566 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58568:58571 Coq.Init.Datatypes <> None constr
R58588:58588 Coq.Init.Logic <> :type_scope:'~'_x not
R58589:58592 CertiOS.framework.model.opsem <> InOS def
R58613:58619 CertiOS.framework.model.opsem <> pumerge def
R58624:58625 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R58621:58622 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58594:58594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58599:58599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58610:58610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58595:58598 CertiOS.framework.model.language <> ::'SKIP' not
R58600:58600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58606:58606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58609:58609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58601:58605 CertiOS.framework.model.language <> kenil constr
R58607:58608 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R58647:58654 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58682:58693 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R58658:58665 CertiOS.framework.model.memory <> freelist def
R58718:58720 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58698:58700 Coq.Init.Logic <> :type_scope:x_'='_x not
R58694:58695 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58697:58697 CertiOS.framework.proof.lemmasfortoptheo <> f var
R58701:58704 Coq.Init.Datatypes <> Some constr
R58706:58706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58709:58709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58712:58712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58715:58715 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58717:58717 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58707:58708 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R58710:58711 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R58713:58714 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R58716:58716 CertiOS.framework.proof.lemmasfortoptheo <> s var
R58730:58731 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58724:58724 Coq.Init.Logic <> :type_scope:x_'='_x not
R58721:58723 CertiOS.framework.proof.lemmasfortoptheo <> keh var
R58725:58729 CertiOS.framework.model.language <> kenil constr
R58755:58757 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58735:58735 Coq.Init.Logic <> :type_scope:x_'='_x not
R58732:58734 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R58736:58740 CertiOS.framework.model.language <> kcall constr
R58750:58754 CertiOS.framework.model.language <> kstop constr
R58746:58748 CertiOS.framework.auxlibs.Maps <> emp meth
R58744:58744 CertiOS.framework.proof.lemmasfortoptheo <> s var
R58742:58742 CertiOS.framework.proof.lemmasfortoptheo <> f var
R58766:58778 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58760:58760 Coq.Init.Logic <> :type_scope:x_'='_x not
R58758:58759 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R58761:58765 CertiOS.framework.model.language <> kenil constr
R58798:58800 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58780:58780 Coq.Init.Logic <> :type_scope:x_'='_x not
R58779:58779 CertiOS.framework.proof.lemmasfortoptheo <> c var
R58781:58784 CertiOS.framework.model.language <> curs constr
R58787:58791 CertiOS.framework.model.language <> sfree constr
R58796:58796 CertiOS.framework.proof.lemmasfortoptheo <> v var
R58793:58794 CertiOS.framework.proof.lemmasfortoptheo <> al var
R58820:58823 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58813:58815 Coq.Init.Logic <> :type_scope:x_'='_x not
R58801:58808 CertiOS.framework.model.opsem <> callcont def
R58810:58812 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58816:58819 Coq.Init.Datatypes <> None constr
R58841:58853 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58835:58836 Coq.Init.Logic <> :type_scope:x_'='_x not
R58824:58830 CertiOS.framework.model.opsem <> intcont def
R58832:58834 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R58837:58840 Coq.Init.Datatypes <> None constr
R58854:58854 Coq.Init.Logic <> :type_scope:'~'_x not
R58855:58858 CertiOS.framework.model.opsem <> InOS def
R58879:58885 CertiOS.framework.model.opsem <> pumerge def
R58890:58891 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R58887:58888 CertiOS.framework.proof.lemmasfortoptheo <> po var
R58860:58860 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58865:58865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58876:58876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58861:58864 CertiOS.framework.model.language <> ::'SKIP' not
R58866:58866 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58872:58872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58875:58875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58867:58871 CertiOS.framework.model.language <> kenil constr
R58873:58874 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57521:57523 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57501:57507 CertiOS.framework.proof.auxdef <> eqdomOS def
R57520:57520 CertiOS.framework.proof.lemmasfortoptheo <> A var
R57509:57509 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57512:57512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57515:57515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57518:57518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57510:57511 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57513:57514 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57516:57517 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R57543:57545 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57524:57533 CertiOS.framework.proof.oscorrectness <> GoodClient def
R57541:57542 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57538:57539 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57535:57536 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R57585:57586 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57546:57551 CertiOS.framework.proof.auxdef <> goodks def
R57573:57575 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57583:57583 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57579:57580 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57581:57582 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57576:57578 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R57570:57572 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R57553:57553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57556:57556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57567:57567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57554:57555 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R57557:57557 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57560:57560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57563:57563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57566:57566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57558:57559 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57561:57562 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57564:57565 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R57627:57629 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57587:57602 CertiOS.framework.proof.rulesoundlib <> n_dym_com_int_cd def
R57604:57604 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57606:57606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57626:57626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57605:57605 CertiOS.framework.proof.lemmasfortoptheo <> c var
R57607:57607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57610:57610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57625:57625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57608:57609 CertiOS.framework.proof.lemmasfortoptheo <> ke var
R57614:57616 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57624:57624 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57620:57621 CertiOS.framework.model.opsem <> ::x_'##'_x not
R57622:57623 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57617:57619 CertiOS.framework.proof.lemmasfortoptheo <> ks2 var
R57611:57613 CertiOS.framework.proof.lemmasfortoptheo <> ks1 var
R57660:57703 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57630:57637 CertiOS.framework.proof.auxdef <> good_clt def
R57658:57659 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57639:57639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57644:57645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57656:57656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57640:57643 CertiOS.framework.model.language <> ::'SKIP' not
R57646:57646 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57652:57652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57655:57655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57647:57651 CertiOS.framework.model.language <> kenil constr
R57653:57654 CertiOS.framework.proof.lemmasfortoptheo <> ks var
R57704:57707 Coq.Init.Logic <> True ind
R57092:57094 CertiOS.framework.model.language <> fid def
R57158:57170 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57225:57237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57292:57316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57472:57482 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57317:57323 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R57325:57325 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R57328:57328 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R57331:57331 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R57333:57347 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R57374:57389 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57352:57354 Coq.Init.Logic <> :type_scope:x_'='_x not
R57348:57349 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57351:57351 CertiOS.framework.proof.lemmasfortoptheo <> f var
R57355:57358 Coq.Init.Datatypes <> Some constr
R57360:57360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57362:57363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57366:57367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57370:57371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57373:57373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57401:57417 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57390:57398 CertiOS.framework.logic.inferules <> GoodStmt' def
R57418:57428 CertiOS.framework.proof.simulation <> MethSimAsrt def
R57469:57471 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R57462:57467 CertiOS.framework.logic.assertion <> Afalse constr
R57458:57458 CertiOS.framework.proof.lemmasfortoptheo <> p var
R57451:57456 CertiOS.framework.logic.assertion <> Afalse constr
R57449:57449 CertiOS.framework.proof.lemmasfortoptheo <> r var
R57447:57447 CertiOS.framework.proof.lemmasfortoptheo <> I var
R57441:57445 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R57434:57436 Coq.Init.Datatypes <> snd def
R57438:57438 CertiOS.framework.proof.lemmasfortoptheo <> A var
R57430:57431 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R57244:57246 Coq.Init.Logic <> :type_scope:x_'='_x not
R57238:57241 Coq.Init.Datatypes <> Some constr
R57243:57243 CertiOS.framework.proof.lemmasfortoptheo <> r var
R57247:57255 CertiOS.framework.proof.auxdef <> BuildRetA def
R57285:57291 CertiOS.framework.logic.inferules <> init_lg def
R57281:57283 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R57275:57279 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R57273:57273 CertiOS.framework.proof.lemmasfortoptheo <> G var
R57270:57271 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R57262:57262 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57265:57265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57268:57268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57263:57264 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R57266:57267 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R57260:57260 CertiOS.framework.proof.lemmasfortoptheo <> f var
R57257:57258 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57177:57179 Coq.Init.Logic <> :type_scope:x_'='_x not
R57171:57174 Coq.Init.Datatypes <> Some constr
R57176:57176 CertiOS.framework.proof.lemmasfortoptheo <> p var
R57180:57188 CertiOS.framework.proof.auxdef <> BuildPreA def
R57218:57224 CertiOS.framework.logic.inferules <> init_lg def
R57214:57216 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R57208:57212 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R57206:57206 CertiOS.framework.proof.lemmasfortoptheo <> G var
R57203:57204 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R57195:57195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57198:57198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57201:57201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57196:57197 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R57199:57200 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R57193:57193 CertiOS.framework.proof.lemmasfortoptheo <> f var
R57190:57191 CertiOS.framework.proof.lemmasfortoptheo <> po var
R57143:57145 Coq.Init.Logic <> :type_scope:x_'='_x not
R57129:57131 Coq.Init.Datatypes <> fst def
R57134:57136 Coq.Init.Datatypes <> fst def
R57138:57138 CertiOS.framework.proof.lemmasfortoptheo <> A var
R57142:57142 CertiOS.framework.proof.lemmasfortoptheo <> f var
R57146:57149 Coq.Init.Datatypes <> Some constr
R57151:57151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57154:57154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57157:57157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57152:57153 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R57155:57156 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R57009:57012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57050:57051 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R57043:57045 Coq.Init.Logic <> :type_scope:x_'='_x not
R57013:57025 CertiOS.framework.logic.inferules <> good_decllist def
R57028:57035 CertiOS.framework.model.opsem <> revlcons def
R57040:57041 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R57037:57038 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R57046:57049 Coq.Init.Datatypes <> true constr
R57052:57060 CertiOS.framework.logic.inferules <> GoodStmt' def
R57062:57062 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56990:56992 Coq.Init.Logic <> :type_scope:x_'='_x not
R56986:56987 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R56989:56989 CertiOS.framework.proof.lemmasfortoptheo <> f var
R56993:56996 Coq.Init.Datatypes <> Some constr
R56998:56998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57000:57000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57003:57003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57006:57006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R57008:57008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56999:56999 CertiOS.framework.proof.lemmasfortoptheo <> t var
R57001:57002 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R57004:57005 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R57007:57007 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56901:56904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R56942:56943 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56935:56937 Coq.Init.Logic <> :type_scope:x_'='_x not
R56905:56917 CertiOS.framework.logic.inferules <> good_decllist def
R56920:56927 CertiOS.framework.model.opsem <> revlcons def
R56932:56933 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R56929:56930 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R56938:56941 Coq.Init.Datatypes <> true constr
R56944:56952 CertiOS.framework.logic.inferules <> GoodStmt' def
R56954:56954 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56882:56884 Coq.Init.Logic <> :type_scope:x_'='_x not
R56878:56879 CertiOS.framework.proof.lemmasfortoptheo <> po var
R56881:56881 CertiOS.framework.proof.lemmasfortoptheo <> f var
R56885:56888 Coq.Init.Datatypes <> Some constr
R56890:56890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56892:56892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56895:56895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56898:56898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56900:56900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56891:56891 CertiOS.framework.proof.lemmasfortoptheo <> t var
R56893:56894 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R56896:56897 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R56899:56899 CertiOS.framework.proof.lemmasfortoptheo <> s var
R56844:56847 Coq.Init.Logic <> True ind
R56777:56790 CertiOS.framework.proof.auxdef <> no_call_api_os def
R56798:56799 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R56795:56796 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R56792:56793 CertiOS.framework.proof.lemmasfortoptheo <> po var
R56751:56761 CertiOS.framework.proof.auxdef <> no_fun_same def
R56766:56767 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R56763:56764 CertiOS.framework.proof.lemmasfortoptheo <> po var
R56714:56717 CertiOS.framework.logic.inferules <> satp def
R56724:56730 CertiOS.framework.logic.inferules <> CurLINV def
R56738:56740 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R56732:56736 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R56721:56721 CertiOS.framework.proof.lemmasfortoptheo <> O var
R56719:56719 CertiOS.framework.proof.lemmasfortoptheo <> o var
R61794:61794 Coq.Init.Logic <> :type_scope:x_'='_x not
R61781:61783 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61793:61793 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61789:61790 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61784:61788 CertiOS.framework.model.language <> kstop constr
R61776:61780 CertiOS.framework.model.language <> kstop constr
R61794:61794 Coq.Init.Logic <> :type_scope:x_'='_x not
R61781:61783 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61793:61793 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61789:61790 CertiOS.framework.model.opsem <> ::x_'##'_x not
R61784:61788 CertiOS.framework.model.language <> kstop constr
R61776:61780 CertiOS.framework.model.language <> kstop constr
R61839:61846 CertiOS.framework.proof.simulation <> task_sim constr
R61839:61846 CertiOS.framework.proof.simulation <> task_sim constr
R61873:61873 Coq.Init.Logic <> :type_scope:x_'='_x not
R61873:61873 Coq.Init.Logic <> :type_scope:x_'='_x not
R61892:61902 CertiOS.framework.proof.step_prop <> cltstep_eqo thm
R61892:61902 CertiOS.framework.proof.step_prop <> cltstep_eqo thm
R61937:61952 CertiOS.framework.proof.step_prop <> step_to_inos_dec thm
R61937:61952 CertiOS.framework.proof.step_prop <> step_to_inos_dec thm
R62165:62165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62187:62188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62201:62201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62166:62169 CertiOS.framework.model.language <> curs constr
R62172:62177 CertiOS.framework.model.language <> sfexec constr
R62189:62189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62195:62196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62200:62200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62190:62194 CertiOS.framework.model.language <> kenil constr
R62165:62165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62187:62188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62201:62201 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62166:62169 CertiOS.framework.model.language <> curs constr
R62172:62177 CertiOS.framework.model.language <> sfexec constr
R62189:62189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62195:62196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62200:62200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62190:62194 CertiOS.framework.model.language <> kenil constr
R62264:62264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62286:62287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62300:62300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62265:62268 CertiOS.framework.model.language <> curs constr
R62271:62276 CertiOS.framework.model.language <> sfexec constr
R62288:62288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62294:62295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62299:62299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62289:62293 CertiOS.framework.model.language <> kenil constr
R62245:62252 CertiOS.framework.model.opsem <> ht_starS constr
R62264:62264 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62286:62287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62300:62300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62265:62268 CertiOS.framework.model.language <> curs constr
R62271:62276 CertiOS.framework.model.language <> sfexec constr
R62288:62288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62294:62295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62299:62299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R62289:62293 CertiOS.framework.model.language <> kenil constr
R62245:62252 CertiOS.framework.model.opsem <> ht_starS constr
R62325:62335 CertiOS.framework.proof.step_prop <> cltstep1_eq thm
R62325:62335 CertiOS.framework.proof.step_prop <> cltstep1_eq thm
R62376:62383 CertiOS.framework.model.opsem <> ht_starO constr
R62376:62383 CertiOS.framework.model.opsem <> ht_starO constr
R62400:62400 Coq.Init.Logic <> :type_scope:x_'='_x not
R62406:62408 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62419:62419 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62414:62415 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62409:62413 CertiOS.framework.model.language <> kstop constr
R62401:62405 CertiOS.framework.model.language <> kstop constr
R62400:62400 Coq.Init.Logic <> :type_scope:x_'='_x not
R62406:62408 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62419:62419 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62414:62415 CertiOS.framework.model.opsem <> ::x_'##'_x not
R62409:62413 CertiOS.framework.model.language <> kstop constr
R62401:62405 CertiOS.framework.model.language <> kstop constr
R62546:62558 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R62546:62558 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R62599:62621 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R62599:62621 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R62681:62697 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R62681:62697 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R62972:62987 CertiOS.framework.proof.step_prop <> step_fexec_ninos thm
R62972:62987 CertiOS.framework.proof.step_prop <> step_fexec_ninos thm
R63038:63054 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63038:63054 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63248:63255 CertiOS.framework.model.opsem <> ht_starS constr
R63268:63278 CertiOS.framework.proof.step_prop <> cltstep1_eq thm
R63297:63304 CertiOS.framework.model.opsem <> ht_starO constr
R63248:63255 CertiOS.framework.model.opsem <> ht_starS constr
R63268:63278 CertiOS.framework.proof.step_prop <> cltstep1_eq thm
R63268:63278 CertiOS.framework.proof.step_prop <> cltstep1_eq thm
R63297:63304 CertiOS.framework.model.opsem <> ht_starO constr
R63297:63304 CertiOS.framework.model.opsem <> ht_starO constr
R63378:63378 Coq.Init.Logic <> :type_scope:x_'='_x not
R63384:63387 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63398:63398 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63393:63394 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63388:63392 CertiOS.framework.model.language <> kstop constr
R63379:63383 CertiOS.framework.model.language <> kstop constr
R63378:63378 Coq.Init.Logic <> :type_scope:x_'='_x not
R63384:63387 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63398:63398 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63393:63394 CertiOS.framework.model.opsem <> ::x_'##'_x not
R63388:63392 CertiOS.framework.model.language <> kstop constr
R63379:63383 CertiOS.framework.model.language <> kstop constr
R63527:63539 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R63527:63539 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R63580:63602 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R63580:63602 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R63660:63676 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63660:63676 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63701:63708 CertiOS.framework.proof.auxdef <> good_clt def
R63886:63902 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63886:63902 CertiOS.framework.proof.step_prop <> clt_step_good_clt thm
R63984:63985 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63980:63980 Coq.Init.Logic <> :type_scope:x_'='_x not
R63989:63989 Coq.Init.Logic <> :type_scope:x_'='_x not
R63984:63985 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63980:63980 Coq.Init.Logic <> :type_scope:x_'='_x not
R63989:63989 Coq.Init.Logic <> :type_scope:x_'='_x not
R64067:64074 CertiOS.framework.model.opsem <> ltstepev ind
R64099:64099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64101:64102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64111:64111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64103:64103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64106:64107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64110:64110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64076:64076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64079:64080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64093:64093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64081:64081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64084:64085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64088:64089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64092:64092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64067:64074 CertiOS.framework.model.opsem <> ltstepev ind
R64099:64099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64101:64102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64111:64111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64103:64103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64106:64107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64110:64110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64076:64076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64079:64080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64093:64093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64081:64081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64084:64085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64088:64089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64092:64092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64164:64180 CertiOS.framework.proof.step_prop <> stepev_still_inos thm
R64164:64180 CertiOS.framework.proof.step_prop <> stepev_still_inos thm
R64300:64300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64302:64303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64312:64312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64304:64304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64307:64308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64311:64311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64275:64287 CertiOS.framework.model.opsem <> htev_stepstar constr
R64300:64300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64302:64303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64312:64312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64304:64304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64307:64308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64311:64311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64275:64287 CertiOS.framework.model.opsem <> htev_stepstar constr
R64351:64358 CertiOS.framework.model.opsem <> ht_starO constr
R64351:64358 CertiOS.framework.model.opsem <> ht_starO constr
R64373:64384 CertiOS.framework.proof.step_prop <> cltstepev_eq thm
R64373:64384 CertiOS.framework.proof.step_prop <> cltstepev_eq thm
R64402:64409 CertiOS.framework.model.opsem <> ht_starO constr
R64402:64409 CertiOS.framework.model.opsem <> ht_starO constr
R64461:64461 Coq.Init.Logic <> :type_scope:x_'='_x not
R64467:64470 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64481:64481 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64476:64477 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64471:64475 CertiOS.framework.model.language <> kstop constr
R64462:64466 CertiOS.framework.model.language <> kstop constr
R64461:64461 Coq.Init.Logic <> :type_scope:x_'='_x not
R64467:64470 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64481:64481 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64476:64477 CertiOS.framework.model.opsem <> ::x_'##'_x not
R64471:64475 CertiOS.framework.model.language <> kstop constr
R64462:64466 CertiOS.framework.model.language <> kstop constr
R64608:64622 CertiOS.framework.proof.step_prop <> ltstepev_goodks thm
R64608:64622 CertiOS.framework.proof.step_prop <> ltstepev_goodks thm
R64663:64687 CertiOS.framework.proof.lemmasfortoptheo <> ltstepev_n_dym_com_int_cd thm
R64663:64687 CertiOS.framework.proof.lemmasfortoptheo <> ltstepev_n_dym_com_int_cd thm
R64747:64765 CertiOS.framework.proof.step_prop <> clt_stepev_good_clt thm
R64747:64765 CertiOS.framework.proof.step_prop <> clt_stepev_good_clt thm
R64795:64802 CertiOS.framework.proof.auxdef <> good_clt def
R64967:64985 CertiOS.framework.proof.step_prop <> clt_stepev_good_clt thm
R64967:64985 CertiOS.framework.proof.step_prop <> clt_stepev_good_clt thm
R65087:65090 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65060:65069 CertiOS.framework.proof.auxdef <> InitTaskSt def
R65081:65081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65083:65084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65086:65086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65091:65098 CertiOS.framework.proof.auxdef <> good_clt def
R65100:65100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65102:65103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65112:65112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65104:65104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65107:65108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65111:65111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65087:65090 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R65060:65069 CertiOS.framework.proof.auxdef <> InitTaskSt def
R65081:65081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65083:65084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65086:65086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65091:65098 CertiOS.framework.proof.auxdef <> good_clt def
R65100:65100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65102:65103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65112:65112 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65104:65104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65107:65108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65111:65111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65234:65234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65236:65236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65244:65244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65237:65237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65240:65240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65243:65243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65234:65234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65236:65236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65244:65244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65237:65237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65240:65240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65243:65243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65286:65293 CertiOS.framework.model.opsem <> ht_starO constr
R65286:65293 CertiOS.framework.model.opsem <> ht_starO constr
R65338:65342 CertiOS.framework.model.opsem <> IsEnd def
R65360:65368 CertiOS.framework.model.opsem <> htabtstar constr
R65360:65368 CertiOS.framework.model.opsem <> htabtstar constr
R65381:65381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65383:65383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65391:65391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65384:65384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65387:65387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65390:65390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65381:65381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65383:65383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65391:65391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65384:65384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65387:65387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65390:65390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65427:65434 CertiOS.framework.model.opsem <> ht_starO constr
R65427:65434 CertiOS.framework.model.opsem <> ht_starO constr
R65479:65491 CertiOS.framework.proof.step_prop <> cltstep_eqabt thm
R65479:65491 CertiOS.framework.proof.step_prop <> cltstep_eqabt thm
R66203:66206 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66176:66185 CertiOS.framework.proof.auxdef <> InitTaskSt def
R66197:66197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66199:66200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66202:66202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66207:66214 CertiOS.framework.proof.auxdef <> good_clt def
R66216:66216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66218:66219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66228:66228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66220:66220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66223:66224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66227:66227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66203:66206 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66176:66185 CertiOS.framework.proof.auxdef <> InitTaskSt def
R66197:66197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66199:66200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66202:66202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66207:66214 CertiOS.framework.proof.auxdef <> good_clt def
R66216:66216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66218:66219 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66228:66228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66220:66220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66223:66224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66227:66227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66377:66380 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66350:66359 CertiOS.framework.proof.auxdef <> InitTaskSt def
R66371:66371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66373:66374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66376:66376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66381:66388 CertiOS.framework.proof.auxdef <> good_clt def
R66390:66390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66392:66393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66402:66402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66394:66394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66397:66398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66401:66401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66377:66380 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66350:66359 CertiOS.framework.proof.auxdef <> InitTaskSt def
R66371:66371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66373:66374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66376:66376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66381:66388 CertiOS.framework.proof.auxdef <> good_clt def
R66390:66390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66392:66393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66402:66402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66394:66394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66397:66398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66401:66401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66685:66696 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_dec' thm
R66699:66706 Coq.Lists.List <> rev def
R66685:66696 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_dec' thm
R66699:66706 Coq.Lists.List <> rev def
R66755:66762 CertiOS.framework.proof.simulation <> task_sim constr
R66755:66762 CertiOS.framework.proof.simulation <> task_sim constr
R66793:66805 CertiOS.framework.proof.step_prop <> n_tlmatch_abt thm
R66793:66805 CertiOS.framework.proof.step_prop <> n_tlmatch_abt thm
R67027:67031 CertiOS.framework.model.opsem <> IsEnd def
R67077:67085 CertiOS.framework.model.opsem <> htabtstar constr
R67077:67085 CertiOS.framework.model.opsem <> htabtstar constr
R67098:67098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67120:67121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67133:67133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67099:67102 CertiOS.framework.model.language <> curs constr
R67105:67110 CertiOS.framework.model.language <> sfexec constr
R67122:67122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67128:67129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67132:67132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67123:67127 CertiOS.framework.model.language <> kenil constr
R67098:67098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67120:67121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67133:67133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67099:67102 CertiOS.framework.model.language <> curs constr
R67105:67110 CertiOS.framework.model.language <> sfexec constr
R67122:67122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67128:67129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67132:67132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67123:67127 CertiOS.framework.model.language <> kenil constr
R67163:67170 CertiOS.framework.model.opsem <> ht_starO constr
R67163:67170 CertiOS.framework.model.opsem <> ht_starO constr
R67216:67222 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67225:67225 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67228:67228 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67231:67232 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67256:67257 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R67236:67238 Coq.Init.Logic <> :type_scope:x_'='_x not
R67239:67242 Coq.Init.Datatypes <> Some constr
R67244:67244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67247:67247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67255:67255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67248:67248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67251:67251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67254:67254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67258:67264 CertiOS.framework.model.opsem <> tlmatch def
R67216:67222 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67225:67225 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67228:67228 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67231:67232 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R67256:67257 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R67236:67238 Coq.Init.Logic <> :type_scope:x_'='_x not
R67239:67242 Coq.Init.Datatypes <> Some constr
R67244:67244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67247:67247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67255:67255 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67248:67248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67251:67251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67254:67254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R67258:67264 CertiOS.framework.model.opsem <> tlmatch def
R67286:67296 CertiOS.framework.proof.lemmasfortoptheo <> api_tlmatch thm
R67286:67296 CertiOS.framework.proof.lemmasfortoptheo <> api_tlmatch thm
R67363:67365 Coq.Init.Logic <> :type_scope:x_'='_x not
R67366:67369 Coq.Init.Datatypes <> None constr
R67363:67365 Coq.Init.Logic <> :type_scope:x_'='_x not
R67366:67369 Coq.Init.Datatypes <> None constr
R67394:67403 CertiOS.framework.proof.oscorrectness <> GoodClient def
R67461:67464 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R67465:67468 Coq.Init.Datatypes <> None constr
R67461:67464 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R67465:67468 Coq.Init.Datatypes <> None constr
R67594:67607 CertiOS.framework.proof.step_prop <> hn_tlmatch_abt thm
R67594:67607 CertiOS.framework.proof.step_prop <> hn_tlmatch_abt thm
R67725:67734 CertiOS.framework.proof.rulesoundlib <> tl_vl_dl'' thm
R67725:67734 CertiOS.framework.proof.rulesoundlib <> tl_vl_dl'' thm
R67829:67836 CertiOS.framework.proof.simulation <> task_sim constr
R67829:67836 CertiOS.framework.proof.simulation <> task_sim constr
R67951:67954 CertiOS.framework.model.opsem <> InOS def
R67968:67971 CertiOS.framework.model.language <> curs constr
R67974:67979 CertiOS.framework.model.language <> sfexec constr
R67991:67995 CertiOS.framework.model.language <> kenil constr
R67968:67971 CertiOS.framework.model.language <> curs constr
R67974:67979 CertiOS.framework.model.language <> sfexec constr
R67991:67995 CertiOS.framework.model.language <> kenil constr
R68072:68072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68075:68076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68079:68080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68083:68084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68086:68086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68072:68072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68075:68076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68079:68080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68083:68084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68086:68086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68113:68123 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
R68113:68123 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
R68324:68329 CertiOS.framework.proof.simulation <> joinm2 def
R68386:68392 CertiOS.framework.logic.assertion <> joinmem def
R68528:68534 CertiOS.framework.logic.assertion <> joinmem def
R68673:68673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68695:68696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68708:68708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68674:68677 CertiOS.framework.model.language <> curs constr
R68680:68685 CertiOS.framework.model.language <> sfexec constr
R68697:68697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68703:68704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68707:68707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68698:68702 CertiOS.framework.model.language <> kenil constr
R68714:68714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68719:68720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68728:68729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68732:68732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68735:68735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68739:68739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68725:68727 CertiOS.framework.model.memory <> env def
R68721:68723 CertiOS.framework.auxlibs.Maps <> emp meth
R68673:68673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68695:68696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68708:68708 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68674:68677 CertiOS.framework.model.language <> curs constr
R68680:68685 CertiOS.framework.model.language <> sfexec constr
R68697:68697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68703:68704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68707:68707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68698:68702 CertiOS.framework.model.language <> kenil constr
R68714:68714 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68719:68720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68728:68729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68732:68732 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68735:68735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68739:68739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R68725:68727 CertiOS.framework.model.memory <> env def
R68721:68723 CertiOS.framework.auxlibs.Maps <> emp meth
R68991:68998 CertiOS.framework.model.opsem <> ht_starO constr
R68991:68998 CertiOS.framework.model.opsem <> ht_starO constr
R69011:69016 CertiOS.framework.proof.simulation <> joinm2 def
R69029:69029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69034:69036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69044:69046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69049:69050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69053:69054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69058:69058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69041:69043 CertiOS.framework.model.memory <> env def
R69037:69039 CertiOS.framework.auxlibs.Maps <> emp meth
R69029:69029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69034:69036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69044:69046 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69049:69050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69053:69054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69058:69058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69041:69043 CertiOS.framework.model.memory <> env def
R69037:69039 CertiOS.framework.auxlibs.Maps <> emp meth
R69077:69083 CertiOS.framework.logic.assertion <> joinmem def
R69107:69109 CertiOS.framework.model.memory <> env def
R69103:69105 CertiOS.framework.auxlibs.Maps <> emp meth
R69107:69109 CertiOS.framework.model.memory <> env def
R69103:69105 CertiOS.framework.auxlibs.Maps <> emp meth
R69160:69162 CertiOS.framework.model.memory <> env def
R69156:69158 CertiOS.framework.auxlibs.Maps <> emp meth
R69160:69162 CertiOS.framework.model.memory <> env def
R69156:69158 CertiOS.framework.auxlibs.Maps <> emp meth
R69204:69221 CertiOS.framework.proof.invariant_prop <> inv_substask_emple thm
R69204:69221 CertiOS.framework.proof.invariant_prop <> inv_substask_emple thm
R69240:69257 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R69240:69257 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R69298:69300 Coq.Init.Logic <> :type_scope:x_'='_x not
R69279:69283 CertiOS.framework.model.language <> kcall constr
R69306:69309 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69338:69338 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69331:69334 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69310:69314 CertiOS.framework.model.language <> kcall constr
R69326:69330 CertiOS.framework.model.language <> kstop constr
R69301:69305 CertiOS.framework.model.language <> kstop constr
R69298:69300 Coq.Init.Logic <> :type_scope:x_'='_x not
R69279:69283 CertiOS.framework.model.language <> kcall constr
R69306:69309 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69338:69338 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69331:69334 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69310:69314 CertiOS.framework.model.language <> kcall constr
R69326:69330 CertiOS.framework.model.language <> kstop constr
R69301:69305 CertiOS.framework.model.language <> kstop constr
R69389:69391 Coq.Init.Logic <> :type_scope:x_'='_x not
R69392:69395 Coq.Init.Datatypes <> Some constr
R69397:69397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69400:69400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69403:69403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69406:69406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69408:69408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69389:69391 Coq.Init.Logic <> :type_scope:x_'='_x not
R69392:69395 Coq.Init.Datatypes <> Some constr
R69397:69397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69400:69400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69403:69403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69406:69406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69408:69408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69426:69436 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
R69426:69436 CertiOS.framework.proof.lemmasfortoptheo <> pumerge_get thm
R69529:69538 CertiOS.framework.proof.auxdef <> InitTaskSt def
R69550:69550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69555:69556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69561:69562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69565:69566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69569:69570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69574:69575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69577:69577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69529:69538 CertiOS.framework.proof.auxdef <> InitTaskSt def
R69550:69550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69555:69556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69561:69562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69565:69566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69569:69570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69574:69575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69577:69577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69660:69660 Coq.Init.Logic <> :type_scope:x_'='_x not
R69614:69616 Coq.Init.Datatypes <> snd def
R69619:69621 Coq.Init.Datatypes <> fst def
R69624:69631 CertiOS.framework.model.language <> get_smem def
R69633:69633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69638:69639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69644:69645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69648:69649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69652:69653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69657:69657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69661:69663 CertiOS.framework.auxlibs.Maps <> emp meth
R69660:69660 Coq.Init.Logic <> :type_scope:x_'='_x not
R69614:69616 Coq.Init.Datatypes <> snd def
R69619:69621 Coq.Init.Datatypes <> fst def
R69624:69631 CertiOS.framework.model.language <> get_smem def
R69633:69633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69638:69639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69644:69645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69648:69649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69652:69653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69657:69657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R69661:69663 CertiOS.framework.auxlibs.Maps <> emp meth
R69679:69688 CertiOS.framework.proof.lemmasfortoptheo <> init_emple thm
R69679:69688 CertiOS.framework.proof.lemmasfortoptheo <> init_emple thm
R69835:69837 Coq.Init.Logic <> :type_scope:x_'='_x not
R69800:69804 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69834:69834 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69827:69830 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69805:69809 CertiOS.framework.model.language <> kcall constr
R69822:69826 CertiOS.framework.model.language <> kstop constr
R69815:69820 CertiOS.framework.logic.assertion <> empenv syndef
R69795:69799 CertiOS.framework.model.language <> kstop constr
R69838:69842 CertiOS.framework.model.language <> kcall constr
R69848:69853 CertiOS.framework.logic.assertion <> empenv syndef
R69835:69837 Coq.Init.Logic <> :type_scope:x_'='_x not
R69800:69804 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69834:69834 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69827:69830 CertiOS.framework.model.opsem <> ::x_'##'_x not
R69805:69809 CertiOS.framework.model.language <> kcall constr
R69822:69826 CertiOS.framework.model.language <> kstop constr
R69815:69820 CertiOS.framework.logic.assertion <> empenv syndef
R69795:69799 CertiOS.framework.model.language <> kstop constr
R69838:69842 CertiOS.framework.model.language <> kcall constr
R69848:69853 CertiOS.framework.logic.assertion <> empenv syndef
R69923:69935 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R69923:69935 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R69976:69998 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R69976:69998 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R70130:70137 CertiOS.framework.model.opsem <> revlcons def
R70130:70137 CertiOS.framework.model.opsem <> revlcons def
R70350:70365 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_init' thm
R70350:70365 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_init' thm
R70436:70439 CertiOS.framework.model.memory <> dnil constr
R70446:70452 CertiOS.framework.model.memory <> vallist def
R70442:70444 Coq.Init.Datatypes <> nil constr
R70455:70458 CertiOS.framework.logic.assertion <> Aemp constr
R70436:70439 CertiOS.framework.model.memory <> dnil constr
R70446:70452 CertiOS.framework.model.memory <> vallist def
R70442:70444 Coq.Init.Datatypes <> nil constr
R70455:70458 CertiOS.framework.logic.assertion <> Aemp constr
R70499:70506 CertiOS.framework.proof.lemmasfortoptheo <> InitAemp thm
R70499:70506 CertiOS.framework.proof.lemmasfortoptheo <> InitAemp thm
R70535:70542 CertiOS.framework.model.opsem <> revlcons def
R70535:70542 CertiOS.framework.model.opsem <> revlcons def
R70828:70832 CertiOS.framework.model.opsem <> IsEnd def
R70884:70895 CertiOS.framework.proof.step_prop <> fexec_abt_eq thm
R70884:70895 CertiOS.framework.proof.step_prop <> fexec_abt_eq thm
R71169:71169 Coq.Init.Logic <> :type_scope:x_'='_x not
R71139:71141 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71168:71168 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71164:71165 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71142:71146 CertiOS.framework.model.language <> kcall constr
R71159:71163 CertiOS.framework.model.language <> kstop constr
R71152:71157 CertiOS.framework.logic.assertion <> empenv syndef
R71134:71138 CertiOS.framework.model.language <> kstop constr
R71170:71174 CertiOS.framework.model.language <> kcall constr
R71180:71185 CertiOS.framework.logic.assertion <> empenv syndef
R71169:71169 Coq.Init.Logic <> :type_scope:x_'='_x not
R71139:71141 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71168:71168 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71164:71165 CertiOS.framework.model.opsem <> ::x_'##'_x not
R71142:71146 CertiOS.framework.model.language <> kcall constr
R71159:71163 CertiOS.framework.model.language <> kstop constr
R71152:71157 CertiOS.framework.logic.assertion <> empenv syndef
R71134:71138 CertiOS.framework.model.language <> kstop constr
R71170:71174 CertiOS.framework.model.language <> kcall constr
R71180:71185 CertiOS.framework.logic.assertion <> empenv syndef
R71266:71273 CertiOS.framework.proof.simulation <> task_sim constr
R71266:71273 CertiOS.framework.proof.simulation <> task_sim constr
R71305:71318 CertiOS.framework.proof.step_prop <> alloc_locality thm
R71305:71318 CertiOS.framework.proof.step_prop <> alloc_locality thm
R71431:71441 CertiOS.framework.proof.step_prop <> alloc_trans thm
R71431:71441 CertiOS.framework.proof.step_prop <> alloc_trans thm
R71720:71720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71743:71744 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71756:71756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71721:71724 CertiOS.framework.model.language <> curs constr
R71727:71732 CertiOS.framework.model.language <> sfexec constr
R71745:71745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71751:71752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71755:71755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71746:71750 CertiOS.framework.model.language <> kenil constr
R71720:71720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71743:71744 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71756:71756 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71721:71724 CertiOS.framework.model.language <> curs constr
R71727:71732 CertiOS.framework.model.language <> sfexec constr
R71745:71745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71751:71752 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71755:71755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R71746:71750 CertiOS.framework.model.language <> kenil constr
R71818:71825 CertiOS.framework.model.opsem <> ht_starO constr
R71818:71825 CertiOS.framework.model.opsem <> ht_starO constr
R71841:71854 CertiOS.framework.proof.lemmasfortoptheo <> emple_subs_inv thm
R71841:71854 CertiOS.framework.proof.lemmasfortoptheo <> emple_subs_inv thm
R71875:71892 CertiOS.framework.proof.invariant_prop <> alloc_curlinv_hold thm
R71875:71892 CertiOS.framework.proof.invariant_prop <> alloc_curlinv_hold thm
R72045:72047 Coq.Init.Logic <> :type_scope:x_'='_x not
R72026:72030 CertiOS.framework.model.language <> kcall constr
R72036:72041 CertiOS.framework.logic.assertion <> empenv syndef
R72053:72055 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72084:72084 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72078:72081 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72056:72060 CertiOS.framework.model.language <> kcall constr
R72073:72077 CertiOS.framework.model.language <> kstop constr
R72066:72071 CertiOS.framework.logic.assertion <> empenv syndef
R72048:72052 CertiOS.framework.model.language <> kstop constr
R72045:72047 Coq.Init.Logic <> :type_scope:x_'='_x not
R72026:72030 CertiOS.framework.model.language <> kcall constr
R72036:72041 CertiOS.framework.logic.assertion <> empenv syndef
R72053:72055 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72084:72084 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72078:72081 CertiOS.framework.model.opsem <> ::x_'##'_x not
R72056:72060 CertiOS.framework.model.language <> kcall constr
R72073:72077 CertiOS.framework.model.language <> kstop constr
R72066:72071 CertiOS.framework.logic.assertion <> empenv syndef
R72048:72052 CertiOS.framework.model.language <> kstop constr
R72166:72183 CertiOS.framework.proof.invariant_prop <> alloc_curlinv_hold thm
R72166:72183 CertiOS.framework.proof.invariant_prop <> alloc_curlinv_hold thm
R72528:72537 CertiOS.framework.proof.auxdef <> good_dl_le def
R72528:72537 CertiOS.framework.proof.auxdef <> good_dl_le def
R72558:72565 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R72558:72565 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R72586:72600 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R72586:72600 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R72624:72638 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R72624:72638 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R72665:72672 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R72665:72672 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R72706:72721 CertiOS.framework.proof.step_prop <> good_dl_le_step' thm
R72706:72721 CertiOS.framework.proof.step_prop <> good_dl_le_step' thm
R72812:72817 CertiOS.framework.proof.simulation <> joinm2 def
R72909:72915 CertiOS.framework.logic.assertion <> joinmem def
R73328:73329 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R73330:73332 Coq.Init.Datatypes <> nil constr
R73328:73329 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R73330:73332 Coq.Init.Datatypes <> nil constr
R73957:73957 Coq.Init.Logic <> :type_scope:x_'='_x not
R73961:73962 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R73963:73965 Coq.Init.Datatypes <> nil constr
R73957:73957 Coq.Init.Logic <> :type_scope:x_'='_x not
R73961:73962 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R73963:73965 Coq.Init.Datatypes <> nil constr
R73979:73994 Coq.Lists.List <> app_nil_end thm
R73979:73994 Coq.Lists.List <> app_nil_end thm
R74038:74054 Coq.Lists.List <> app_inv_tail thm
R74038:74054 Coq.Lists.List <> app_inv_tail thm
R74106:74118 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_nil_eq thm
R74106:74118 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_nil_eq thm
R74106:74118 CertiOS.framework.proof.lemmasfortoptheo <> dl_add_nil_eq thm
R74159:74172 CertiOS.framework.proof.invariant_prop <> build_api_asrt thm
R74159:74172 CertiOS.framework.proof.invariant_prop <> build_api_asrt thm
R74197:74206 CertiOS.framework.proof.rulesoundlib <> tl_vl_dl'' thm
R74197:74206 CertiOS.framework.proof.rulesoundlib <> tl_vl_dl'' thm
R74434:74444 CertiOS.framework.proof.simulation <> MethSimAsrt def
R74500:74504 CertiOS.framework.proof.lemmasfortoptheo <> eq_tp thm
R74500:74504 CertiOS.framework.proof.lemmasfortoptheo <> eq_tp thm
R74563:74575 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_trans thm
R74563:74575 CertiOS.framework.proof.lemmasfortoptheo <> tlmatch_trans thm
R74633:74638 CertiOS.framework.proof.invariant_prop <> bp_bpa thm
R74633:74638 CertiOS.framework.proof.invariant_prop <> bp_bpa thm
R74739:74739 Coq.Init.Logic <> :type_scope:x_'='_x not
R74739:74739 Coq.Init.Logic <> :type_scope:x_'='_x not
R74920:74920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74953:74954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74966:74966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74921:74924 CertiOS.framework.model.language <> curs constr
R74927:74935 CertiOS.framework.model.language <> hapi_code constr
R74942:74944 Coq.Lists.List <> rev def
R74955:74955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74961:74962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74965:74965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74956:74960 CertiOS.framework.model.language <> kenil constr
R74920:74920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74953:74954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74966:74966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74921:74924 CertiOS.framework.model.language <> curs constr
R74927:74935 CertiOS.framework.model.language <> hapi_code constr
R74942:74944 Coq.Lists.List <> rev def
R74955:74955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74961:74962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74965:74965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R74956:74960 CertiOS.framework.model.language <> kenil constr
R75027:75034 CertiOS.framework.model.opsem <> ht_starS constr
R75027:75034 CertiOS.framework.model.opsem <> ht_starS constr
R75048:75055 CertiOS.framework.model.opsem <> ht_starO constr
R75048:75055 CertiOS.framework.model.opsem <> ht_starO constr
R75070:75078 CertiOS.framework.model.opsem <> hapi_step constr
R75070:75078 CertiOS.framework.model.opsem <> hapi_step constr
R75151:75153 Coq.Lists.List <> rev def
R75126:75139 CertiOS.framework.model.opsem <> hapienter_step constr
R75151:75153 Coq.Lists.List <> rev def
R75126:75139 CertiOS.framework.model.opsem <> hapienter_step constr
R75183:75197 CertiOS.framework.proof.rulesoundlib <> tl_vl_rev_match thm
R75183:75197 CertiOS.framework.proof.rulesoundlib <> tl_vl_rev_match thm
R75183:75197 CertiOS.framework.proof.rulesoundlib <> tl_vl_rev_match thm
R75222:75240 Coq.Lists.List <> rev_involutive thm
R75222:75240 Coq.Lists.List <> rev_involutive thm
R75222:75240 Coq.Lists.List <> rev_involutive thm
R75254:75272 Coq.Lists.List <> rev_involutive thm
R75254:75272 Coq.Lists.List <> rev_involutive thm
R75254:75272 Coq.Lists.List <> rev_involutive thm
R75314:75316 Coq.Init.Logic <> :type_scope:x_'='_x not
R75295:75299 CertiOS.framework.model.language <> kcall constr
R75305:75310 CertiOS.framework.logic.assertion <> empenv syndef
R75322:75326 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75354:75354 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75349:75351 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75327:75331 CertiOS.framework.model.language <> kcall constr
R75344:75348 CertiOS.framework.model.language <> kstop constr
R75337:75342 CertiOS.framework.logic.assertion <> empenv syndef
R75317:75321 CertiOS.framework.model.language <> kstop constr
R75314:75316 Coq.Init.Logic <> :type_scope:x_'='_x not
R75295:75299 CertiOS.framework.model.language <> kcall constr
R75305:75310 CertiOS.framework.logic.assertion <> empenv syndef
R75322:75326 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75354:75354 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75349:75351 CertiOS.framework.model.opsem <> ::x_'##'_x not
R75327:75331 CertiOS.framework.model.language <> kcall constr
R75344:75348 CertiOS.framework.model.language <> kstop constr
R75337:75342 CertiOS.framework.logic.assertion <> empenv syndef
R75317:75321 CertiOS.framework.model.language <> kstop constr
R75544:75564 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R75544:75564 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt'_n_dym_com_s thm
R75951:75957 CertiOS.framework.model.opsem <> nilcont def
R76119:76121 Coq.Lists.List <> rev def
R76119:76121 Coq.Lists.List <> rev def
R76205:76207 Coq.Init.Logic <> :type_scope:x_'='_x not
R76181:76182 CertiOS.framework.model.opsem <> ::x_'##'_x not
R76183:76187 CertiOS.framework.model.language <> kcall constr
R76200:76204 CertiOS.framework.model.language <> kstop constr
R76193:76198 CertiOS.framework.logic.assertion <> empenv syndef
R76176:76180 CertiOS.framework.model.language <> kstop constr
R76208:76212 CertiOS.framework.model.language <> kcall constr
R76225:76229 CertiOS.framework.model.language <> kstop constr
R76218:76223 CertiOS.framework.logic.assertion <> empenv syndef
R76205:76207 Coq.Init.Logic <> :type_scope:x_'='_x not
R76181:76182 CertiOS.framework.model.opsem <> ::x_'##'_x not
R76183:76187 CertiOS.framework.model.language <> kcall constr
R76200:76204 CertiOS.framework.model.language <> kstop constr
R76193:76198 CertiOS.framework.logic.assertion <> empenv syndef
R76176:76180 CertiOS.framework.model.language <> kstop constr
R76208:76212 CertiOS.framework.model.language <> kcall constr
R76225:76229 CertiOS.framework.model.language <> kstop constr
R76218:76223 CertiOS.framework.logic.assertion <> empenv syndef
R76276:76288 CertiOS.framework.proof.lemmasfortoptheo <> funbody'_inos thm
R76276:76288 CertiOS.framework.proof.lemmasfortoptheo <> funbody'_inos thm
R76353:76366 CertiOS.framework.proof.auxdef <> no_call_api_os def
R76606:76610 CertiOS.framework.model.opsem <> IsEnd def
R76680:76682 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R76676:76676 Coq.Init.Logic <> :type_scope:x_'='_x not
R76677:76679 Coq.Init.Datatypes <> nil constr
R76683:76689 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76691:76691 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76693:76693 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76697:76698 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76701:76701 Coq.Init.Logic <> :type_scope:x_'='_x not
R76702:76706 CertiOS.framework.model.memory <> dcons constr
R76680:76682 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R76676:76676 Coq.Init.Logic <> :type_scope:x_'='_x not
R76677:76679 Coq.Init.Datatypes <> nil constr
R76683:76689 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76691:76691 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76693:76693 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76697:76698 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R76701:76701 Coq.Init.Logic <> :type_scope:x_'='_x not
R76702:76706 CertiOS.framework.model.memory <> dcons constr
R76879:76880 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R76875:76876 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R76881:76883 Coq.Init.Datatypes <> nil constr
R76879:76880 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R76875:76876 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R76881:76883 Coq.Init.Datatypes <> nil constr
R76945:76953 CertiOS.framework.proof.auxdef <> length_eq def
R76945:76953 CertiOS.framework.proof.auxdef <> length_eq def
R76976:76986 CertiOS.framework.proof.lemmasfortoptheo <> tl_dl_vl_eq thm
R76976:76986 CertiOS.framework.proof.lemmasfortoptheo <> tl_dl_vl_eq thm
R77005:77021 CertiOS.framework.proof.rulesoundlib <> tl_vl_match_leneq thm
R77005:77021 CertiOS.framework.proof.rulesoundlib <> tl_vl_match_leneq thm
R77041:77041 Coq.Init.Logic <> :type_scope:'~'_x not
R77042:77050 CertiOS.framework.proof.auxdef <> length_eq def
R77041:77041 Coq.Init.Logic <> :type_scope:'~'_x not
R77042:77050 CertiOS.framework.proof.auxdef <> length_eq def
R77074:77084 CertiOS.framework.proof.lemmasfortoptheo <> sub_len_neq thm
R77074:77084 CertiOS.framework.proof.lemmasfortoptheo <> sub_len_neq thm
R77150:77165 CertiOS.framework.proof.step_prop <> tstep_alloc_nabt thm
R77150:77165 CertiOS.framework.proof.step_prop <> tstep_alloc_nabt thm
R77251:77258 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R77251:77258 CertiOS.framework.proof.lemmasfortoptheo <> join_eqe thm
R77278:77292 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R77278:77292 CertiOS.framework.proof.lemmasfortoptheo <> good_dl_le_care thm
R77559:77561 Coq.Init.Logic <> :type_scope:x_'='_x not
R77525:77529 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77558:77558 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77552:77555 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77530:77534 CertiOS.framework.model.language <> kcall constr
R77547:77551 CertiOS.framework.model.language <> kstop constr
R77540:77545 CertiOS.framework.logic.assertion <> empenv syndef
R77565:77568 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77569:77573 CertiOS.framework.model.language <> kcall constr
R77579:77584 CertiOS.framework.logic.assertion <> empenv syndef
R77559:77561 Coq.Init.Logic <> :type_scope:x_'='_x not
R77525:77529 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77558:77558 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77552:77555 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77530:77534 CertiOS.framework.model.language <> kcall constr
R77547:77551 CertiOS.framework.model.language <> kstop constr
R77540:77545 CertiOS.framework.logic.assertion <> empenv syndef
R77565:77568 CertiOS.framework.model.opsem <> ::x_'##'_x not
R77569:77573 CertiOS.framework.model.language <> kcall constr
R77579:77584 CertiOS.framework.logic.assertion <> empenv syndef
R77662:77672 CertiOS.framework.proof.lemmasfortoptheo <> api_tlmatch thm
R77662:77672 CertiOS.framework.proof.lemmasfortoptheo <> api_tlmatch thm
R77924:77930 CertiOS.framework.proof.lemmasfortoptheo <> ret_dec thm
R77924:77930 CertiOS.framework.proof.lemmasfortoptheo <> ret_dec thm
R77957:77964 CertiOS.framework.proof.lemmasfortoptheo <> retv_dec thm
R77957:77964 CertiOS.framework.proof.lemmasfortoptheo <> retv_dec thm
R78028:78042 CertiOS.framework.proof.step_prop <> tstep_to_osstep thm
R78028:78042 CertiOS.framework.proof.step_prop <> tstep_to_osstep thm
R78220:78239 CertiOS.framework.proof.lemmasfortoptheo <> loststep_no_api_elim thm
R78220:78239 CertiOS.framework.proof.lemmasfortoptheo <> loststep_no_api_elim thm
R78421:78424 CertiOS.framework.logic.inferules <> satp def
R78451:78453 CertiOS.framework.logic.assertion <> INV def
R78427:78436 CertiOS.framework.logic.assertion <> substaskst def
R78421:78424 CertiOS.framework.logic.inferules <> satp def
R78451:78453 CertiOS.framework.logic.assertion <> INV def
R78427:78436 CertiOS.framework.logic.assertion <> substaskst def
R78486:78496 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R78486:78496 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R78626:78628 Coq.Init.Logic <> :type_scope:x_'='_x not
R78603:78605 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78625:78625 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78606:78610 CertiOS.framework.model.language <> kcall constr
R78616:78621 CertiOS.framework.logic.assertion <> empenv syndef
R78633:78637 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78666:78666 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78660:78663 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78638:78642 CertiOS.framework.model.language <> kcall constr
R78655:78659 CertiOS.framework.model.language <> kstop constr
R78648:78653 CertiOS.framework.logic.assertion <> empenv syndef
R78626:78628 Coq.Init.Logic <> :type_scope:x_'='_x not
R78603:78605 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78625:78625 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78606:78610 CertiOS.framework.model.language <> kcall constr
R78616:78621 CertiOS.framework.logic.assertion <> empenv syndef
R78633:78637 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78666:78666 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78660:78663 CertiOS.framework.model.opsem <> ::x_'##'_x not
R78638:78642 CertiOS.framework.model.language <> kcall constr
R78655:78659 CertiOS.framework.model.language <> kstop constr
R78648:78653 CertiOS.framework.logic.assertion <> empenv syndef
R78753:78765 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R78753:78765 CertiOS.framework.proof.step_prop <> ltstep_goodks thm
R78806:78828 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R78806:78828 CertiOS.framework.proof.lemmasfortoptheo <> ltstep_n_dym_com_int_cd thm
R79309:79323 CertiOS.framework.proof.step_prop <> inos_step_still thm
R79309:79323 CertiOS.framework.proof.step_prop <> inos_step_still thm
R79389:79398 CertiOS.framework.proof.step_prop <> ltstep_eqg thm
R79389:79398 CertiOS.framework.proof.step_prop <> ltstep_eqg thm
R79418:79418 Coq.Init.Logic <> :type_scope:x_'='_x not
R79440:79444 Coq.Init.Logic <> :type_scope:x_'='_x not
R79467:79467 Coq.Init.Logic <> :type_scope:x_'='_x not
R79419:79426 CertiOS.framework.model.opsem <> get_genv def
R79429:79436 CertiOS.framework.model.language <> get_smem def
R79445:79452 CertiOS.framework.model.opsem <> get_genv def
R79455:79462 CertiOS.framework.model.language <> get_smem def
R79418:79418 Coq.Init.Logic <> :type_scope:x_'='_x not
R79440:79444 Coq.Init.Logic <> :type_scope:x_'='_x not
R79467:79467 Coq.Init.Logic <> :type_scope:x_'='_x not
R79419:79426 CertiOS.framework.model.opsem <> get_genv def
R79429:79436 CertiOS.framework.model.language <> get_smem def
R79445:79452 CertiOS.framework.model.opsem <> get_genv def
R79455:79462 CertiOS.framework.model.language <> get_smem def
R79505:79510 CertiOS.framework.proof.simulation <> joinm2 def
R79534:79540 CertiOS.framework.logic.assertion <> joinmem def
R79653:79678 CertiOS.framework.proof.step_prop <> no_call_api_loststep_still thm
R79653:79678 CertiOS.framework.proof.step_prop <> no_call_api_loststep_still thm
R79697:79717 CertiOS.framework.proof.step_prop <> loststep_no_api_local thm
R79697:79717 CertiOS.framework.proof.step_prop <> loststep_no_api_local thm
R79998:80005 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R79998:80005 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R80095:80101 CertiOS.framework.logic.assertion <> joinmem def
R80125:80130 CertiOS.framework.proof.simulation <> getmem def
R80238:80238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80260:80260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80271:80271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80239:80242 CertiOS.framework.model.language <> curs constr
R80245:80249 CertiOS.framework.model.language <> sskip constr
R80252:80255 Coq.Init.Datatypes <> Some constr
R80261:80261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80267:80267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80270:80270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80262:80266 CertiOS.framework.model.language <> kenil constr
R80238:80238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80260:80260 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80271:80271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80239:80242 CertiOS.framework.model.language <> curs constr
R80245:80249 CertiOS.framework.model.language <> sskip constr
R80252:80255 Coq.Init.Datatypes <> Some constr
R80261:80261 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80267:80267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80270:80270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80262:80266 CertiOS.framework.model.language <> kenil constr
R80309:80310 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80306:80306 Coq.Init.Logic <> :type_scope:x_'='_x not
R80319:80321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80315:80315 Coq.Init.Logic <> :type_scope:x_'='_x not
R80325:80327 Coq.Init.Logic <> :type_scope:x_'='_x not
R80328:80328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80386:80386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80421:80421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80329:80332 CertiOS.framework.model.language <> curs constr
R80335:80339 CertiOS.framework.model.language <> sfree constr
R80378:80381 Coq.Init.Datatypes <> Some constr
R80342:80348 CertiOS.framework.model.opsem <> getaddr def
R80351:80353 Coq.Init.Datatypes <> snd def
R80356:80358 Coq.Init.Datatypes <> fst def
R80361:80368 CertiOS.framework.model.language <> get_smem def
R80387:80387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80393:80393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80420:80420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80388:80392 CertiOS.framework.model.language <> kenil constr
R80397:80400 CertiOS.framework.model.opsem <> ::x_'##'_x not
R80401:80405 CertiOS.framework.model.language <> kcall constr
R80411:80416 CertiOS.framework.logic.assertion <> empenv syndef
R80309:80310 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80306:80306 Coq.Init.Logic <> :type_scope:x_'='_x not
R80319:80321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R80315:80315 Coq.Init.Logic <> :type_scope:x_'='_x not
R80325:80327 Coq.Init.Logic <> :type_scope:x_'='_x not
R80328:80328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80386:80386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80421:80421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80329:80332 CertiOS.framework.model.language <> curs constr
R80335:80339 CertiOS.framework.model.language <> sfree constr
R80378:80381 Coq.Init.Datatypes <> Some constr
R80342:80348 CertiOS.framework.model.opsem <> getaddr def
R80351:80353 Coq.Init.Datatypes <> snd def
R80356:80358 Coq.Init.Datatypes <> fst def
R80361:80368 CertiOS.framework.model.language <> get_smem def
R80387:80387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80393:80393 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80420:80420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80388:80392 CertiOS.framework.model.language <> kenil constr
R80397:80400 CertiOS.framework.model.opsem <> ::x_'##'_x not
R80401:80405 CertiOS.framework.model.language <> kcall constr
R80411:80416 CertiOS.framework.logic.assertion <> empenv syndef
R80437:80445 CertiOS.framework.proof.step_prop <> retv_step thm
R80437:80445 CertiOS.framework.proof.step_prop <> retv_step thm
R80562:80572 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R80562:80572 CertiOS.framework.proof.step_prop <> osapi_lift' thm
prf 80604:80612 <> hret_spec
R80632:80637 CertiOS.framework.model.language <> taskst def
R80645:80650 CertiOS.framework.model.language <> osabst def
R80659:80663 CertiOS.framework.model.language <> osapi def
R80673:80677 CertiOS.framework.logic.assertion <> absop def
R80698:80704 CertiOS.framework.logic.assertion <> retasrt def
R80713:80719 CertiOS.framework.model.memory <> vallist def
R80728:80735 CertiOS.framework.model.language <> progunit def
R80758:80760 CertiOS.framework.model.language <> fid def
R80828:80837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80856:80866 Coq.Init.Logic <> :type_scope:x_'->'_x not
R80870:80872 Coq.Init.Logic <> :type_scope:x_'='_x not
R80867:80869 CertiOS.framework.proof.lemmasfortoptheo <> abs var
R80873:80881 CertiOS.framework.model.language <> spec_done constr
R80883:80883 CertiOS.framework.proof.lemmasfortoptheo <> v var
R80849:80852 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R80838:80838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80840:80841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80843:80844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80848:80848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R80839:80839 CertiOS.framework.proof.lemmasfortoptheo <> o var
R80842:80842 CertiOS.framework.proof.lemmasfortoptheo <> O var
R80845:80847 CertiOS.framework.proof.lemmasfortoptheo <> abs var
R80853:80853 CertiOS.framework.proof.lemmasfortoptheo <> R var
R80855:80855 CertiOS.framework.proof.lemmasfortoptheo <> v var
R80787:80789 Coq.Init.Logic <> :type_scope:x_'='_x not
R80781:80784 Coq.Init.Datatypes <> Some constr
R80786:80786 CertiOS.framework.proof.lemmasfortoptheo <> R var
R80790:80798 CertiOS.framework.proof.auxdef <> BuildRetA def
R80821:80827 CertiOS.framework.logic.inferules <> init_lg def
R80819:80819 CertiOS.framework.proof.lemmasfortoptheo <> t var
R80813:80817 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R80811:80811 CertiOS.framework.proof.lemmasfortoptheo <> G var
R80808:80809 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R80805:80806 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R80803:80803 CertiOS.framework.proof.lemmasfortoptheo <> f var
R80800:80801 CertiOS.framework.proof.lemmasfortoptheo <> po var
R81026:81031 CertiOS.framework.logic.inferules <> buildq def
R81034:81041 CertiOS.framework.model.opsem <> revlcons def
R81026:81031 CertiOS.framework.logic.inferules <> buildq def
R81034:81041 CertiOS.framework.model.opsem <> revlcons def
R81026:81031 CertiOS.framework.logic.inferules <> buildq def
R81034:81041 CertiOS.framework.model.opsem <> revlcons def
R81026:81031 CertiOS.framework.logic.inferules <> buildq def
R81034:81041 CertiOS.framework.model.opsem <> revlcons def
R81177:81185 CertiOS.framework.proof.lemmasfortoptheo <> hret_spec thm
R81177:81185 CertiOS.framework.proof.lemmasfortoptheo <> hret_spec thm
R81225:81247 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R81225:81247 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R81266:81274 CertiOS.framework.model.opsem <> hapi_step constr
R81266:81274 CertiOS.framework.model.opsem <> hapi_step constr
R81293:81305 CertiOS.framework.model.opsem <> hapiexit_step constr
R81293:81305 CertiOS.framework.model.opsem <> hapiexit_step constr
R81351:81353 Coq.Init.Logic <> :type_scope:x_'='_x not
R81328:81331 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81332:81336 CertiOS.framework.model.language <> kcall constr
R81342:81347 CertiOS.framework.logic.assertion <> empenv syndef
R81357:81361 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81390:81390 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81384:81387 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81362:81366 CertiOS.framework.model.language <> kcall constr
R81379:81383 CertiOS.framework.model.language <> kstop constr
R81372:81377 CertiOS.framework.logic.assertion <> empenv syndef
R81351:81353 Coq.Init.Logic <> :type_scope:x_'='_x not
R81328:81331 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81332:81336 CertiOS.framework.model.language <> kcall constr
R81342:81347 CertiOS.framework.logic.assertion <> empenv syndef
R81357:81361 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81390:81390 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81384:81387 CertiOS.framework.model.opsem <> ::x_'##'_x not
R81362:81366 CertiOS.framework.model.language <> kcall constr
R81379:81383 CertiOS.framework.model.language <> kstop constr
R81372:81377 CertiOS.framework.logic.assertion <> empenv syndef
R81564:81570 CertiOS.framework.model.opsem <> getaddr def
R81573:81575 Coq.Init.Datatypes <> snd def
R81578:81580 Coq.Init.Datatypes <> fst def
R81583:81590 CertiOS.framework.model.language <> get_smem def
R81564:81570 CertiOS.framework.model.opsem <> getaddr def
R81573:81575 Coq.Init.Datatypes <> snd def
R81578:81580 Coq.Init.Datatypes <> fst def
R81583:81590 CertiOS.framework.model.language <> get_smem def
R81626:81629 Coq.Init.Datatypes <> Some constr
R81626:81629 Coq.Init.Datatypes <> Some constr
R81705:81708 Coq.Init.Datatypes <> Some constr
R81669:81675 CertiOS.framework.model.opsem <> getaddr def
R81678:81680 Coq.Init.Datatypes <> snd def
R81683:81685 Coq.Init.Datatypes <> fst def
R81688:81695 CertiOS.framework.model.language <> get_smem def
R81705:81708 Coq.Init.Datatypes <> Some constr
R81669:81675 CertiOS.framework.model.opsem <> getaddr def
R81678:81680 Coq.Init.Datatypes <> snd def
R81683:81685 Coq.Init.Datatypes <> fst def
R81688:81695 CertiOS.framework.model.language <> get_smem def
R81802:81802 Coq.Init.Logic <> :type_scope:x_'='_x not
R81826:81828 Coq.Init.Logic <> :type_scope:x_'='_x not
R81851:81851 Coq.Init.Logic <> :type_scope:x_'='_x not
R81803:81805 Coq.Init.Datatypes <> snd def
R81808:81810 Coq.Init.Datatypes <> fst def
R81813:81820 CertiOS.framework.model.language <> get_smem def
R81829:81831 Coq.Init.Datatypes <> snd def
R81834:81836 Coq.Init.Datatypes <> fst def
R81839:81846 CertiOS.framework.model.language <> get_smem def
R81802:81802 Coq.Init.Logic <> :type_scope:x_'='_x not
R81826:81828 Coq.Init.Logic <> :type_scope:x_'='_x not
R81851:81851 Coq.Init.Logic <> :type_scope:x_'='_x not
R81803:81805 Coq.Init.Datatypes <> snd def
R81808:81810 Coq.Init.Datatypes <> fst def
R81813:81820 CertiOS.framework.model.language <> get_smem def
R81829:81831 Coq.Init.Datatypes <> snd def
R81834:81836 Coq.Init.Datatypes <> fst def
R81839:81846 CertiOS.framework.model.language <> get_smem def
R81866:81875 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R81866:81875 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R81896:81913 CertiOS.framework.proof.lemmasfortoptheo <> join_tst_wo_mem_eq thm
R81896:81913 CertiOS.framework.proof.lemmasfortoptheo <> join_tst_wo_mem_eq thm
R81932:81941 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R81961:81968 CertiOS.framework.model.language <> get_smem def
R82084:82092 CertiOS.framework.proof.invariant_prop <> retv_spec thm
R82084:82092 CertiOS.framework.proof.invariant_prop <> retv_spec thm
R82397:82402 CertiOS.framework.proof.simulation <> joinm2 def
R82427:82433 CertiOS.framework.logic.assertion <> joinmem def
R82461:82466 CertiOS.framework.proof.simulation <> getmem def
R82579:82579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82584:82584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82595:82595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82580:82583 CertiOS.framework.model.language <> ::'SKIP' not
R82585:82585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82591:82591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82594:82594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82586:82590 CertiOS.framework.model.language <> kenil constr
R82579:82579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82584:82584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82595:82595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82580:82583 CertiOS.framework.model.language <> ::'SKIP' not
R82585:82585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82591:82591 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82594:82594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82586:82590 CertiOS.framework.model.language <> kenil constr
R82631:82632 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82628:82628 Coq.Init.Logic <> :type_scope:x_'='_x not
R82641:82643 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82637:82637 Coq.Init.Logic <> :type_scope:x_'='_x not
R82647:82649 Coq.Init.Logic <> :type_scope:x_'='_x not
R82650:82650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82705:82705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82740:82740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82651:82654 CertiOS.framework.model.language <> curs constr
R82657:82661 CertiOS.framework.model.language <> sfree constr
R82699:82702 Coq.Init.Datatypes <> None constr
R82664:82670 CertiOS.framework.model.opsem <> getaddr def
R82673:82675 Coq.Init.Datatypes <> snd def
R82678:82680 Coq.Init.Datatypes <> fst def
R82683:82690 CertiOS.framework.model.language <> get_smem def
R82706:82706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82712:82712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82739:82739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82707:82711 CertiOS.framework.model.language <> kenil constr
R82716:82719 CertiOS.framework.model.opsem <> ::x_'##'_x not
R82720:82724 CertiOS.framework.model.language <> kcall constr
R82730:82735 CertiOS.framework.logic.assertion <> empenv syndef
R82631:82632 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82628:82628 Coq.Init.Logic <> :type_scope:x_'='_x not
R82641:82643 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R82637:82637 Coq.Init.Logic <> :type_scope:x_'='_x not
R82647:82649 Coq.Init.Logic <> :type_scope:x_'='_x not
R82650:82650 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82705:82705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82740:82740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82651:82654 CertiOS.framework.model.language <> curs constr
R82657:82661 CertiOS.framework.model.language <> sfree constr
R82699:82702 Coq.Init.Datatypes <> None constr
R82664:82670 CertiOS.framework.model.opsem <> getaddr def
R82673:82675 Coq.Init.Datatypes <> snd def
R82678:82680 Coq.Init.Datatypes <> fst def
R82683:82690 CertiOS.framework.model.language <> get_smem def
R82706:82706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82712:82712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82739:82739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R82707:82711 CertiOS.framework.model.language <> kenil constr
R82716:82719 CertiOS.framework.model.opsem <> ::x_'##'_x not
R82720:82724 CertiOS.framework.model.language <> kcall constr
R82730:82735 CertiOS.framework.logic.assertion <> empenv syndef
R82756:82763 CertiOS.framework.proof.step_prop <> ret_step thm
R82756:82763 CertiOS.framework.proof.step_prop <> ret_step thm
R82864:82874 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R82864:82874 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R82896:82904 CertiOS.framework.proof.lemmasfortoptheo <> hret_spec thm
R82896:82904 CertiOS.framework.proof.lemmasfortoptheo <> hret_spec thm
R82942:82964 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R82942:82964 CertiOS.framework.proof.step_prop <> htstepstar_compose_tail thm
R82983:82991 CertiOS.framework.model.opsem <> hapi_step constr
R82983:82991 CertiOS.framework.model.opsem <> hapi_step constr
R83010:83022 CertiOS.framework.model.opsem <> hapiexit_step constr
R83010:83022 CertiOS.framework.model.opsem <> hapiexit_step constr
R83068:83070 Coq.Init.Logic <> :type_scope:x_'='_x not
R83045:83048 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83049:83053 CertiOS.framework.model.language <> kcall constr
R83059:83064 CertiOS.framework.logic.assertion <> empenv syndef
R83074:83078 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83107:83107 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83101:83104 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83079:83083 CertiOS.framework.model.language <> kcall constr
R83096:83100 CertiOS.framework.model.language <> kstop constr
R83089:83094 CertiOS.framework.logic.assertion <> empenv syndef
R83068:83070 Coq.Init.Logic <> :type_scope:x_'='_x not
R83045:83048 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83049:83053 CertiOS.framework.model.language <> kcall constr
R83059:83064 CertiOS.framework.logic.assertion <> empenv syndef
R83074:83078 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83107:83107 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83101:83104 CertiOS.framework.model.opsem <> ::x_'##'_x not
R83079:83083 CertiOS.framework.model.language <> kcall constr
R83096:83100 CertiOS.framework.model.language <> kstop constr
R83089:83094 CertiOS.framework.logic.assertion <> empenv syndef
R83244:83250 CertiOS.framework.model.opsem <> getaddr def
R83253:83255 Coq.Init.Datatypes <> snd def
R83258:83260 Coq.Init.Datatypes <> fst def
R83263:83270 CertiOS.framework.model.language <> get_smem def
R83244:83250 CertiOS.framework.model.opsem <> getaddr def
R83253:83255 Coq.Init.Datatypes <> snd def
R83258:83260 Coq.Init.Datatypes <> fst def
R83263:83270 CertiOS.framework.model.language <> get_smem def
R83311:83316 Coq.Init.Datatypes <> option ind
R83318:83320 CertiOS.framework.model.memory <> val ind
R83305:83308 Coq.Init.Datatypes <> None constr
R83311:83316 Coq.Init.Datatypes <> option ind
R83318:83320 CertiOS.framework.model.memory <> val ind
R83305:83308 Coq.Init.Datatypes <> None constr
R83393:83396 Coq.Init.Datatypes <> None constr
R83358:83364 CertiOS.framework.model.opsem <> getaddr def
R83367:83369 Coq.Init.Datatypes <> snd def
R83372:83374 Coq.Init.Datatypes <> fst def
R83377:83384 CertiOS.framework.model.language <> get_smem def
R83393:83396 Coq.Init.Datatypes <> None constr
R83358:83364 CertiOS.framework.model.opsem <> getaddr def
R83367:83369 Coq.Init.Datatypes <> snd def
R83372:83374 Coq.Init.Datatypes <> fst def
R83377:83384 CertiOS.framework.model.language <> get_smem def
R83484:83484 Coq.Init.Logic <> :type_scope:x_'='_x not
R83508:83510 Coq.Init.Logic <> :type_scope:x_'='_x not
R83533:83533 Coq.Init.Logic <> :type_scope:x_'='_x not
R83485:83487 Coq.Init.Datatypes <> snd def
R83490:83492 Coq.Init.Datatypes <> fst def
R83495:83502 CertiOS.framework.model.language <> get_smem def
R83511:83513 Coq.Init.Datatypes <> snd def
R83516:83518 Coq.Init.Datatypes <> fst def
R83521:83528 CertiOS.framework.model.language <> get_smem def
R83484:83484 Coq.Init.Logic <> :type_scope:x_'='_x not
R83508:83510 Coq.Init.Logic <> :type_scope:x_'='_x not
R83533:83533 Coq.Init.Logic <> :type_scope:x_'='_x not
R83485:83487 Coq.Init.Datatypes <> snd def
R83490:83492 Coq.Init.Datatypes <> fst def
R83495:83502 CertiOS.framework.model.language <> get_smem def
R83511:83513 Coq.Init.Datatypes <> snd def
R83516:83518 Coq.Init.Datatypes <> fst def
R83521:83528 CertiOS.framework.model.language <> get_smem def
R83548:83557 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R83548:83557 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R83576:83593 CertiOS.framework.proof.lemmasfortoptheo <> join_tst_wo_mem_eq thm
R83576:83593 CertiOS.framework.proof.lemmasfortoptheo <> join_tst_wo_mem_eq thm
R83612:83621 CertiOS.framework.proof.auxdef <> TStWoMemEq def
R83641:83648 CertiOS.framework.model.language <> get_smem def
R83828:83835 CertiOS.framework.proof.invariant_prop <> ret_spec thm
R83828:83835 CertiOS.framework.proof.invariant_prop <> ret_spec thm
R84086:84102 CertiOS.framework.proof.step_prop <> tstepev_osstepabt thm
R84086:84102 CertiOS.framework.proof.step_prop <> tstepev_osstepabt thm
R84567:84567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84607:84607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84618:84618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84568:84571 CertiOS.framework.model.language <> curs constr
R84574:84582 CertiOS.framework.model.language <> hapi_code constr
R84585:84592 CertiOS.framework.model.language <> spec_seq constr
R84594:84598 CertiOS.framework.model.language <> sched constr
R84608:84608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84614:84614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84617:84617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84609:84613 CertiOS.framework.model.language <> kenil constr
R84626:84626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84632:84633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84636:84636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84627:84631 CertiOS.framework.model.language <> kenil constr
R84567:84567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84607:84607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84618:84618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84568:84571 CertiOS.framework.model.language <> curs constr
R84574:84582 CertiOS.framework.model.language <> hapi_code constr
R84585:84592 CertiOS.framework.model.language <> spec_seq constr
R84594:84598 CertiOS.framework.model.language <> sched constr
R84608:84608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84614:84614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84617:84617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84609:84613 CertiOS.framework.model.language <> kenil constr
R84626:84626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84632:84633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84636:84636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R84627:84631 CertiOS.framework.model.language <> kenil constr
R84725:84735 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R84725:84735 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R84868:84875 CertiOS.framework.proof.simulation <> getsched def
R84975:84978 Coq.Init.Logic <> :type_scope:x_'='_x not
R85016:85016 Coq.Init.Logic <> :type_scope:x_'='_x not
R84954:84955 CertiOS.framework.model.opsem <> ::x_'##'_x not
R84956:84960 CertiOS.framework.model.language <> kcall constr
R84966:84971 CertiOS.framework.logic.assertion <> empenv syndef
R84982:84986 CertiOS.framework.model.opsem <> ::x_'##'_x not
R85015:85015 CertiOS.framework.model.opsem <> ::x_'##'_x not
R85009:85012 CertiOS.framework.model.opsem <> ::x_'##'_x not
R84987:84991 CertiOS.framework.model.language <> kcall constr
R85004:85008 CertiOS.framework.model.language <> kstop constr
R84997:85002 CertiOS.framework.logic.assertion <> empenv syndef
R84975:84978 Coq.Init.Logic <> :type_scope:x_'='_x not
R85016:85016 Coq.Init.Logic <> :type_scope:x_'='_x not
R84954:84955 CertiOS.framework.model.opsem <> ::x_'##'_x not
R84956:84960 CertiOS.framework.model.language <> kcall constr
R84966:84971 CertiOS.framework.logic.assertion <> empenv syndef
R84982:84986 CertiOS.framework.model.opsem <> ::x_'##'_x not
R85015:85015 CertiOS.framework.model.opsem <> ::x_'##'_x not
R85009:85012 CertiOS.framework.model.opsem <> ::x_'##'_x not
R84987:84991 CertiOS.framework.model.language <> kcall constr
R85004:85008 CertiOS.framework.model.language <> kstop constr
R84997:85002 CertiOS.framework.logic.assertion <> empenv syndef
R85227:85235 CertiOS.framework.model.language <> spec_done constr
R85237:85240 Coq.Init.Datatypes <> None constr
R85227:85235 CertiOS.framework.model.language <> spec_done constr
R85237:85240 Coq.Init.Datatypes <> None constr
R85254:85271 CertiOS.framework.proof.rulesoundlib <> joinmem_swinv_linv thm
R85254:85271 CertiOS.framework.proof.rulesoundlib <> joinmem_swinv_linv thm
R85655:85667 CertiOS.framework.proof.step_prop <> inos_sw_still thm
R85655:85667 CertiOS.framework.proof.step_prop <> inos_sw_still thm
R85687:85687 Coq.Init.Logic <> :type_scope:x_'='_x not
R85709:85713 Coq.Init.Logic <> :type_scope:x_'='_x not
R85736:85736 Coq.Init.Logic <> :type_scope:x_'='_x not
R85688:85695 CertiOS.framework.model.opsem <> get_genv def
R85698:85705 CertiOS.framework.model.language <> get_smem def
R85714:85721 CertiOS.framework.model.opsem <> get_genv def
R85724:85731 CertiOS.framework.model.language <> get_smem def
R85687:85687 Coq.Init.Logic <> :type_scope:x_'='_x not
R85709:85713 Coq.Init.Logic <> :type_scope:x_'='_x not
R85736:85736 Coq.Init.Logic <> :type_scope:x_'='_x not
R85688:85695 CertiOS.framework.model.opsem <> get_genv def
R85698:85705 CertiOS.framework.model.language <> get_smem def
R85714:85721 CertiOS.framework.model.opsem <> get_genv def
R85724:85731 CertiOS.framework.model.language <> get_smem def
R85773:85779 CertiOS.framework.logic.assertion <> joinmem def
R85880:85887 CertiOS.framework.proof.simulation <> getsched def
R86072:86076 CertiOS.framework.model.opsem <> IsEnd def
R86149:86159 CertiOS.framework.model.opsem <> AddKsToTail def
R86354:86361 CertiOS.framework.auxlibs.Maps <> disjoint def
R86354:86361 CertiOS.framework.auxlibs.Maps <> disjoint def
R86449:86457 CertiOS.framework.proof.step_prop <> nabt_lift thm
R86449:86457 CertiOS.framework.proof.step_prop <> nabt_lift thm
R86511:86518 CertiOS.framework.proof.simulation <> notabort def
R86552:86559 CertiOS.framework.model.opsem <> IsSwitch def
R86636:86639 CertiOS.framework.model.opsem <> ::x_'##'_x not
R86640:86644 CertiOS.framework.model.language <> kcall constr
R86650:86655 CertiOS.framework.logic.assertion <> empenv syndef
R86636:86639 CertiOS.framework.model.opsem <> ::x_'##'_x not
R86640:86644 CertiOS.framework.model.language <> kcall constr
R86650:86655 CertiOS.framework.logic.assertion <> empenv syndef
R86720:86724 CertiOS.framework.model.opsem <> IsEnd def
R86767:86774 CertiOS.framework.auxlibs.Maps <> disjoint def
R86777:86782 CertiOS.framework.proof.simulation <> getmem def
R86767:86774 CertiOS.framework.auxlibs.Maps <> disjoint def
R86777:86782 CertiOS.framework.proof.simulation <> getmem def
R86817:86822 CertiOS.framework.proof.simulation <> joinm2 def
R86850:86856 CertiOS.framework.logic.assertion <> joinmem def
R86884:86889 CertiOS.framework.proof.simulation <> getmem def
R86902:86909 CertiOS.framework.auxlibs.Maps <> disjoint def
R87032:87039 CertiOS.framework.proof.auxdef <> retfalse def
R87059:87061 CertiOS.framework.logic.assertion <> sat def
R87120:87129 CertiOS.framework.proof.step_prop <> isret_nabt thm
R87120:87129 CertiOS.framework.proof.step_prop <> isret_nabt thm
R87176:87186 CertiOS.framework.proof.step_prop <> isrete_nabt thm
R87176:87186 CertiOS.framework.proof.step_prop <> isrete_nabt thm
R87233:87238 CertiOS.framework.model.opsem <> IsIRet def
R87286:87293 CertiOS.framework.auxlibs.Maps <> disjoint def
R87296:87301 CertiOS.framework.proof.simulation <> getmem def
R87286:87293 CertiOS.framework.auxlibs.Maps <> disjoint def
R87296:87301 CertiOS.framework.proof.simulation <> getmem def
R87336:87341 CertiOS.framework.proof.simulation <> joinm2 def
R87369:87375 CertiOS.framework.logic.assertion <> joinmem def
R87403:87408 CertiOS.framework.proof.simulation <> getmem def
R87421:87428 CertiOS.framework.auxlibs.Maps <> disjoint def
R87548:87556 CertiOS.framework.model.opsem <> IsStkInit def
R87650:87653 CertiOS.framework.model.opsem <> ::x_'##'_x not
R87654:87658 CertiOS.framework.model.language <> kcall constr
R87664:87669 CertiOS.framework.logic.assertion <> empenv syndef
R87650:87653 CertiOS.framework.model.opsem <> ::x_'##'_x not
R87654:87658 CertiOS.framework.model.language <> kcall constr
R87664:87669 CertiOS.framework.logic.assertion <> empenv syndef
R87724:87732 CertiOS.framework.model.opsem <> IsStkFree def
R87813:87816 CertiOS.framework.model.opsem <> ::x_'##'_x not
R87817:87821 CertiOS.framework.model.language <> kcall constr
R87827:87832 CertiOS.framework.logic.assertion <> empenv syndef
R87813:87816 CertiOS.framework.model.opsem <> ::x_'##'_x not
R87817:87821 CertiOS.framework.model.language <> kcall constr
R87827:87832 CertiOS.framework.logic.assertion <> empenv syndef
R88214:88214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88220:88220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88223:88223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88215:88219 CertiOS.framework.model.language <> kenil constr
R88214:88214 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88220:88220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88223:88223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R88215:88219 CertiOS.framework.model.language <> kenil constr
R88318:88328 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R88318:88328 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R88389:88392 Coq.Init.Logic <> :type_scope:x_'='_x not
R88430:88430 Coq.Init.Logic <> :type_scope:x_'='_x not
R88368:88369 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88370:88374 CertiOS.framework.model.language <> kcall constr
R88380:88385 CertiOS.framework.logic.assertion <> empenv syndef
R88396:88400 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88429:88429 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88423:88426 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88401:88405 CertiOS.framework.model.language <> kcall constr
R88418:88422 CertiOS.framework.model.language <> kstop constr
R88411:88416 CertiOS.framework.logic.assertion <> empenv syndef
R88389:88392 Coq.Init.Logic <> :type_scope:x_'='_x not
R88430:88430 Coq.Init.Logic <> :type_scope:x_'='_x not
R88368:88369 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88370:88374 CertiOS.framework.model.language <> kcall constr
R88380:88385 CertiOS.framework.logic.assertion <> empenv syndef
R88396:88400 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88429:88429 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88423:88426 CertiOS.framework.model.opsem <> ::x_'##'_x not
R88401:88405 CertiOS.framework.model.language <> kcall constr
R88418:88422 CertiOS.framework.model.language <> kstop constr
R88411:88416 CertiOS.framework.logic.assertion <> empenv syndef
R88729:88746 CertiOS.framework.proof.step_prop <> inos_stkinit_still thm
R88729:88746 CertiOS.framework.proof.step_prop <> inos_stkinit_still thm
R88836:88836 Coq.Init.Logic <> :type_scope:x_'='_x not
R88859:88863 Coq.Init.Logic <> :type_scope:x_'='_x not
R88885:88885 Coq.Init.Logic <> :type_scope:x_'='_x not
R88837:88844 CertiOS.framework.model.opsem <> get_genv def
R88847:88854 CertiOS.framework.model.language <> get_smem def
R88864:88871 CertiOS.framework.model.opsem <> get_genv def
R88874:88881 CertiOS.framework.model.language <> get_smem def
R88836:88836 Coq.Init.Logic <> :type_scope:x_'='_x not
R88859:88863 Coq.Init.Logic <> :type_scope:x_'='_x not
R88885:88885 Coq.Init.Logic <> :type_scope:x_'='_x not
R88837:88844 CertiOS.framework.model.opsem <> get_genv def
R88847:88854 CertiOS.framework.model.language <> get_smem def
R88864:88871 CertiOS.framework.model.opsem <> get_genv def
R88874:88881 CertiOS.framework.model.language <> get_smem def
R88941:88947 CertiOS.framework.logic.assertion <> joinmem def
R89306:89306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89312:89312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89315:89315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89307:89311 CertiOS.framework.model.language <> kenil constr
R89306:89306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89312:89312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89315:89315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R89307:89311 CertiOS.framework.model.language <> kenil constr
R89386:89396 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R89386:89396 CertiOS.framework.proof.step_prop <> osapi_lift' thm
R89481:89484 Coq.Init.Logic <> :type_scope:x_'='_x not
R89522:89522 Coq.Init.Logic <> :type_scope:x_'='_x not
R89460:89461 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89462:89466 CertiOS.framework.model.language <> kcall constr
R89472:89477 CertiOS.framework.logic.assertion <> empenv syndef
R89488:89492 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89521:89521 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89515:89518 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89493:89497 CertiOS.framework.model.language <> kcall constr
R89510:89514 CertiOS.framework.model.language <> kstop constr
R89503:89508 CertiOS.framework.logic.assertion <> empenv syndef
R89481:89484 Coq.Init.Logic <> :type_scope:x_'='_x not
R89522:89522 Coq.Init.Logic <> :type_scope:x_'='_x not
R89460:89461 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89462:89466 CertiOS.framework.model.language <> kcall constr
R89472:89477 CertiOS.framework.logic.assertion <> empenv syndef
R89488:89492 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89521:89521 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89515:89518 CertiOS.framework.model.opsem <> ::x_'##'_x not
R89493:89497 CertiOS.framework.model.language <> kcall constr
R89510:89514 CertiOS.framework.model.language <> kstop constr
R89503:89508 CertiOS.framework.logic.assertion <> empenv syndef
R89815:89832 CertiOS.framework.proof.step_prop <> inos_stkfree_still thm
R89815:89832 CertiOS.framework.proof.step_prop <> inos_stkfree_still thm
R90027:90030 Coq.Init.Logic <> :type_scope:x_'='_x not
R90068:90068 Coq.Init.Logic <> :type_scope:x_'='_x not
R90006:90007 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90008:90012 CertiOS.framework.model.language <> kcall constr
R90018:90023 CertiOS.framework.logic.assertion <> empenv syndef
R90034:90038 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90067:90067 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90061:90064 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90039:90043 CertiOS.framework.model.language <> kcall constr
R90056:90060 CertiOS.framework.model.language <> kstop constr
R90049:90054 CertiOS.framework.logic.assertion <> empenv syndef
R90027:90030 Coq.Init.Logic <> :type_scope:x_'='_x not
R90068:90068 Coq.Init.Logic <> :type_scope:x_'='_x not
R90006:90007 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90008:90012 CertiOS.framework.model.language <> kcall constr
R90018:90023 CertiOS.framework.logic.assertion <> empenv syndef
R90034:90038 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90067:90067 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90061:90064 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90039:90043 CertiOS.framework.model.language <> kcall constr
R90056:90060 CertiOS.framework.model.language <> kstop constr
R90049:90054 CertiOS.framework.logic.assertion <> empenv syndef
R90148:90166 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R90148:90166 CertiOS.framework.proof.rulesoundlib <> join_satp_local_inv thm
R90394:90411 CertiOS.framework.proof.step_prop <> inos_stkfree_still thm
R90394:90411 CertiOS.framework.proof.step_prop <> inos_stkfree_still thm
R90495:90495 Coq.Init.Logic <> :type_scope:x_'='_x not
R90518:90522 Coq.Init.Logic <> :type_scope:x_'='_x not
R90544:90544 Coq.Init.Logic <> :type_scope:x_'='_x not
R90496:90503 CertiOS.framework.model.opsem <> get_genv def
R90506:90513 CertiOS.framework.model.language <> get_smem def
R90523:90530 CertiOS.framework.model.opsem <> get_genv def
R90533:90540 CertiOS.framework.model.language <> get_smem def
R90495:90495 Coq.Init.Logic <> :type_scope:x_'='_x not
R90518:90522 Coq.Init.Logic <> :type_scope:x_'='_x not
R90544:90544 Coq.Init.Logic <> :type_scope:x_'='_x not
R90496:90503 CertiOS.framework.model.opsem <> get_genv def
R90506:90513 CertiOS.framework.model.language <> get_smem def
R90523:90530 CertiOS.framework.model.opsem <> get_genv def
R90533:90540 CertiOS.framework.model.language <> get_smem def
R90906:90907 Coq.Init.Logic <> :type_scope:x_'='_x not
R90872:90876 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90905:90905 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90899:90902 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90877:90881 CertiOS.framework.model.language <> kcall constr
R90894:90898 CertiOS.framework.model.language <> kstop constr
R90887:90892 CertiOS.framework.logic.assertion <> empenv syndef
R90911:90914 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90915:90919 CertiOS.framework.model.language <> kcall constr
R90925:90930 CertiOS.framework.logic.assertion <> empenv syndef
R90906:90907 Coq.Init.Logic <> :type_scope:x_'='_x not
R90872:90876 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90905:90905 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90899:90902 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90877:90881 CertiOS.framework.model.language <> kcall constr
R90894:90898 CertiOS.framework.model.language <> kstop constr
R90887:90892 CertiOS.framework.logic.assertion <> empenv syndef
R90911:90914 CertiOS.framework.model.opsem <> ::x_'##'_x not
R90915:90919 CertiOS.framework.model.language <> kcall constr
R90925:90930 CertiOS.framework.logic.assertion <> empenv syndef
R91044:91051 CertiOS.framework.proof.simulation <> task_sim constr
R91044:91051 CertiOS.framework.proof.simulation <> task_sim constr
R91078:91083 CertiOS.framework.model.opsem <> ltstep ind
R91119:91119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91137:91138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91174:91174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91120:91123 CertiOS.framework.model.language <> curs constr
R91126:91130 CertiOS.framework.model.language <> sfree constr
R91139:91139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91145:91146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91173:91173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91140:91144 CertiOS.framework.model.language <> kenil constr
R91150:91153 CertiOS.framework.model.opsem <> ::x_'##'_x not
R91154:91158 CertiOS.framework.model.language <> kcall constr
R91164:91169 CertiOS.framework.logic.assertion <> empenv syndef
R91085:91085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91088:91089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91102:91102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91090:91090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91093:91094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91097:91098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91101:91101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91078:91083 CertiOS.framework.model.opsem <> ltstep ind
R91119:91119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91137:91138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91174:91174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91120:91123 CertiOS.framework.model.language <> curs constr
R91126:91130 CertiOS.framework.model.language <> sfree constr
R91139:91139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91145:91146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91173:91173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91140:91144 CertiOS.framework.model.language <> kenil constr
R91150:91153 CertiOS.framework.model.opsem <> ::x_'##'_x not
R91154:91158 CertiOS.framework.model.language <> kcall constr
R91164:91169 CertiOS.framework.logic.assertion <> empenv syndef
R91085:91085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91088:91089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91102:91102 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91090:91090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91093:91094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91097:91098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91101:91101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91235:91243 CertiOS.framework.proof.step_prop <> free_step thm
R91235:91243 CertiOS.framework.proof.step_prop <> free_step thm
R91410:91413 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91396:91397 Coq.Init.Logic <> :type_scope:x_'='_x not
R91398:91406 CertiOS.framework.proof.auxdef <> emple_tst def
R91423:91426 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91418:91419 Coq.Init.Logic <> :type_scope:x_'='_x not
R91461:91462 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91430:91432 Coq.Init.Logic <> :type_scope:x_'='_x not
R91433:91433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91448:91449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91460:91460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91434:91437 CertiOS.framework.model.language <> curs constr
R91440:91444 CertiOS.framework.model.language <> sskip constr
R91450:91450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91456:91456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91459:91459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91451:91455 CertiOS.framework.model.language <> kenil constr
R91463:91468 CertiOS.framework.proof.rulesoundlib <> freels ind
R91475:91481 CertiOS.framework.model.opsem <> get_mem def
R91484:91491 CertiOS.framework.model.language <> get_smem def
R91470:91472 Coq.Init.Datatypes <> nil constr
R91410:91413 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91396:91397 Coq.Init.Logic <> :type_scope:x_'='_x not
R91398:91406 CertiOS.framework.proof.auxdef <> emple_tst def
R91423:91426 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91418:91419 Coq.Init.Logic <> :type_scope:x_'='_x not
R91461:91462 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91430:91432 Coq.Init.Logic <> :type_scope:x_'='_x not
R91433:91433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91448:91449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91460:91460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91434:91437 CertiOS.framework.model.language <> curs constr
R91440:91444 CertiOS.framework.model.language <> sskip constr
R91450:91450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91456:91456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91459:91459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91451:91455 CertiOS.framework.model.language <> kenil constr
R91463:91468 CertiOS.framework.proof.rulesoundlib <> freels ind
R91475:91481 CertiOS.framework.model.opsem <> get_mem def
R91484:91491 CertiOS.framework.model.language <> get_smem def
R91470:91472 Coq.Init.Datatypes <> nil constr
R91577:91577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91592:91592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91603:91603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91578:91581 CertiOS.framework.model.language <> curs constr
R91584:91588 CertiOS.framework.model.language <> sskip constr
R91593:91593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91599:91599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91602:91602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91594:91598 CertiOS.framework.model.language <> kenil constr
R91609:91617 CertiOS.framework.proof.auxdef <> emple_tst def
R91577:91577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91592:91592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91603:91603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91578:91581 CertiOS.framework.model.language <> curs constr
R91584:91588 CertiOS.framework.model.language <> sskip constr
R91593:91593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91599:91599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91602:91602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91594:91598 CertiOS.framework.model.language <> kenil constr
R91609:91617 CertiOS.framework.proof.auxdef <> emple_tst def
R91656:91663 CertiOS.framework.model.opsem <> ht_starO constr
R91656:91663 CertiOS.framework.model.opsem <> ht_starO constr
R91713:91718 CertiOS.framework.proof.simulation <> joinm2 def
R91753:91761 CertiOS.framework.proof.auxdef <> emple_tst def
R91753:91761 CertiOS.framework.proof.auxdef <> emple_tst def
R91777:91783 CertiOS.framework.logic.assertion <> joinmem def
R91920:91928 CertiOS.framework.proof.auxdef <> emple_tst def
R91941:91952 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R91941:91952 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R91998:92006 CertiOS.framework.proof.auxdef <> emple_tst def
R92019:92036 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R92019:92036 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R92062:92063 Coq.Init.Logic <> :type_scope:x_'='_x not
R92069:92073 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92084:92084 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92079:92081 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92074:92078 CertiOS.framework.model.language <> kstop constr
R92064:92068 CertiOS.framework.model.language <> kstop constr
R92062:92063 Coq.Init.Logic <> :type_scope:x_'='_x not
R92069:92073 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92084:92084 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92079:92081 CertiOS.framework.model.opsem <> ::x_'##'_x not
R92074:92078 CertiOS.framework.model.language <> kstop constr
R92064:92068 CertiOS.framework.model.language <> kstop constr
R92196:92204 CertiOS.framework.proof.auxdef <> emple_tst def
R92217:92234 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R92217:92234 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R92302:92311 CertiOS.framework.proof.lemmasfortoptheo <> fun_goodks thm
R92302:92311 CertiOS.framework.proof.lemmasfortoptheo <> fun_goodks thm
R92399:92411 CertiOS.framework.proof.lemmasfortoptheo <> n_dym_ks_call thm
R92399:92411 CertiOS.framework.proof.lemmasfortoptheo <> n_dym_ks_call thm
R92476:92484 CertiOS.framework.proof.lemmasfortoptheo <> inos_lift thm
R92476:92484 CertiOS.framework.proof.lemmasfortoptheo <> inos_lift thm
R92696:92696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92711:92711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92722:92722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92697:92700 CertiOS.framework.model.language <> curs constr
R92703:92707 CertiOS.framework.model.language <> sskip constr
R92712:92712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92718:92718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92721:92721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92713:92717 CertiOS.framework.model.language <> kenil constr
R92696:92696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92711:92711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92722:92722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92697:92700 CertiOS.framework.model.language <> curs constr
R92703:92707 CertiOS.framework.model.language <> sskip constr
R92712:92712 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92718:92718 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92721:92721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92713:92717 CertiOS.framework.model.language <> kenil constr
R92764:92771 CertiOS.framework.model.opsem <> ht_starO constr
R92764:92771 CertiOS.framework.model.opsem <> ht_starO constr
R92881:92890 CertiOS.framework.proof.auxdef <> InitTaskSt def
R92917:92920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92910:92910 Coq.Init.Logic <> :type_scope:x_'='_x not
R92911:92916 CertiOS.framework.model.language <> empisr def
R92941:92944 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92922:92924 Coq.Init.Logic <> :type_scope:x_'='_x not
R92925:92925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92930:92931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92935:92936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92940:92940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92926:92929 Coq.Init.Datatypes <> true constr
R92932:92934 Coq.Init.Datatypes <> nil constr
R92937:92939 Coq.Init.Datatypes <> nil constr
R92954:92957 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92947:92947 Coq.Init.Logic <> :type_scope:x_'='_x not
R92948:92953 CertiOS.framework.model.language <> empisr def
R92960:92960 Coq.Init.Logic <> :type_scope:x_'='_x not
R92961:92961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92966:92967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92971:92972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92976:92976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92962:92965 Coq.Init.Datatypes <> true constr
R92968:92970 Coq.Init.Datatypes <> nil constr
R92973:92975 Coq.Init.Datatypes <> nil constr
R92917:92920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92910:92910 Coq.Init.Logic <> :type_scope:x_'='_x not
R92911:92916 CertiOS.framework.model.language <> empisr def
R92941:92944 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92922:92924 Coq.Init.Logic <> :type_scope:x_'='_x not
R92925:92925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92930:92931 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92935:92936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92940:92940 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92926:92929 Coq.Init.Datatypes <> true constr
R92932:92934 Coq.Init.Datatypes <> nil constr
R92937:92939 Coq.Init.Datatypes <> nil constr
R92954:92957 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92947:92947 Coq.Init.Logic <> :type_scope:x_'='_x not
R92948:92953 CertiOS.framework.model.language <> empisr def
R92960:92960 Coq.Init.Logic <> :type_scope:x_'='_x not
R92961:92961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92966:92967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92971:92972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92976:92976 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R92962:92965 Coq.Init.Datatypes <> true constr
R92968:92970 Coq.Init.Datatypes <> nil constr
R92973:92975 Coq.Init.Datatypes <> nil constr
R93037:93040 CertiOS.framework.logic.inferules <> satp def
R93062:93070 CertiOS.framework.model.language <> spec_done constr
R93072:93075 Coq.Init.Datatypes <> None constr
R93062:93070 CertiOS.framework.model.language <> spec_done constr
R93072:93075 Coq.Init.Datatypes <> None constr
R93094:93102 CertiOS.framework.model.language <> spec_done constr
R93104:93107 Coq.Init.Datatypes <> None constr
R93094:93102 CertiOS.framework.model.language <> spec_done constr
R93104:93107 Coq.Init.Datatypes <> None constr
R93370:93379 CertiOS.framework.proof.step_prop <> ltstep_eqg thm
R93370:93379 CertiOS.framework.proof.step_prop <> ltstep_eqg thm
R93415:93415 Coq.Init.Logic <> :type_scope:x_'='_x not
R93415:93415 Coq.Init.Logic <> :type_scope:x_'='_x not
R93467:93472 CertiOS.framework.proof.simulation <> joinm2 def
R93490:93496 CertiOS.framework.logic.assertion <> joinmem def
R93533:93544 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R93533:93544 CertiOS.framework.proof.invariant_prop <> inv_ncare_le thm
R93569:93586 CertiOS.framework.proof.invariant_prop <> free_curlinv_still thm
R93569:93586 CertiOS.framework.proof.invariant_prop <> free_curlinv_still thm
R93635:93637 Coq.Init.Logic <> :type_scope:x_'='_x not
R93612:93615 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93616:93620 CertiOS.framework.model.language <> kcall constr
R93626:93631 CertiOS.framework.logic.assertion <> empenv syndef
R93641:93645 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93674:93674 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93668:93671 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93646:93650 CertiOS.framework.model.language <> kcall constr
R93663:93667 CertiOS.framework.model.language <> kstop constr
R93656:93661 CertiOS.framework.logic.assertion <> empenv syndef
R93635:93637 Coq.Init.Logic <> :type_scope:x_'='_x not
R93612:93615 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93616:93620 CertiOS.framework.model.language <> kcall constr
R93626:93631 CertiOS.framework.logic.assertion <> empenv syndef
R93641:93645 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93674:93674 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93668:93671 CertiOS.framework.model.opsem <> ::x_'##'_x not
R93646:93650 CertiOS.framework.model.language <> kcall constr
R93663:93667 CertiOS.framework.model.language <> kstop constr
R93656:93661 CertiOS.framework.logic.assertion <> empenv syndef
R93766:93783 CertiOS.framework.proof.invariant_prop <> free_curlinv_still thm
R93766:93783 CertiOS.framework.proof.invariant_prop <> free_curlinv_still thm
R94167:94171 CertiOS.framework.model.opsem <> IsEnd def
R94241:94249 CertiOS.framework.proof.step_prop <> free_nabt thm
R94241:94249 CertiOS.framework.proof.step_prop <> free_nabt thm
prf 94369:94378 <> SmCTaskSim
R94401:94406 CertiOS.framework.model.language <> osspec def
R94472:94539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94599:94607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94608:94608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94719:94728 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94729:94729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94840:94849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94850:94858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95297:95313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95314:95314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95375:95384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95414:95422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95423:95423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95484:95524 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95525:95531 CertiOS.framework.proof.simulation <> TaskSim coind
R95589:95589 CertiOS.framework.proof.lemmasfortoptheo <> t var
R95569:95578 CertiOS.framework.proof.auxdef <> InitTaskSt def
R95586:95586 CertiOS.framework.proof.lemmasfortoptheo <> t var
R95580:95584 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R95566:95566 CertiOS.framework.proof.lemmasfortoptheo <> I var
R95560:95564 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R95558:95558 CertiOS.framework.proof.lemmasfortoptheo <> O var
R95556:95556 CertiOS.framework.proof.lemmasfortoptheo <> C var
R95547:95548 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95551:95552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95554:95554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95549:95550 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R95553:95553 CertiOS.framework.proof.lemmasfortoptheo <> A var
R95545:95545 CertiOS.framework.proof.lemmasfortoptheo <> o var
R95543:95543 CertiOS.framework.proof.lemmasfortoptheo <> C var
R95533:95533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95536:95537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95541:95541 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95534:95535 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R95538:95540 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95424:95430 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R95432:95433 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R95446:95449 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R95435:95436 Coq.Init.Logic <> :type_scope:x_'='_x not
R95434:95434 CertiOS.framework.proof.lemmasfortoptheo <> C var
R95437:95443 CertiOS.framework.model.opsem <> nilcont def
R95476:95479 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R95450:95457 CertiOS.framework.proof.oscorrectness <> GoodStmt def
R95462:95464 Coq.Init.Datatypes <> snd def
R95467:95469 Coq.Init.Datatypes <> fst def
R95471:95473 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95480:95483 Coq.Init.Logic <> True ind
R95385:95394 CertiOS.framework.proof.auxdef <> InitTaskSt def
R95405:95408 Coq.Init.Datatypes <> pair constr
R95412:95412 CertiOS.framework.proof.lemmasfortoptheo <> O var
R95410:95410 CertiOS.framework.proof.lemmasfortoptheo <> o var
R95402:95402 CertiOS.framework.proof.lemmasfortoptheo <> t var
R95396:95400 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R95360:95361 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R95315:95324 CertiOS.framework.proof.oscorrectness <> GoodClient def
R95346:95348 Coq.Init.Datatypes <> snd def
R95351:95353 Coq.Init.Datatypes <> fst def
R95355:95357 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95330:95332 Coq.Init.Datatypes <> fst def
R95335:95337 Coq.Init.Datatypes <> fst def
R95339:95341 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95326:95327 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R95362:95368 CertiOS.framework.proof.auxdef <> eqdomOS def
R95374:95374 CertiOS.framework.proof.lemmasfortoptheo <> A var
R95370:95372 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94869:94871 CertiOS.framework.model.language <> fid def
R94934:94946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95014:95025 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95093:95117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95286:95296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R95118:95125 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R95127:95127 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R95130:95130 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R95133:95133 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R95135:95149 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R95189:95191 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R95167:95169 Coq.Init.Logic <> :type_scope:x_'='_x not
R95151:95153 Coq.Init.Datatypes <> fst def
R95156:95158 Coq.Init.Datatypes <> fst def
R95160:95162 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95166:95166 CertiOS.framework.proof.lemmasfortoptheo <> f var
R95170:95173 Coq.Init.Datatypes <> Some constr
R95175:95175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95177:95178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95181:95182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95185:95186 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95188:95188 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95176:95176 CertiOS.framework.proof.lemmasfortoptheo <> t var
R95203:95218 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R95192:95200 CertiOS.framework.logic.inferules <> GoodStmt' def
R95219:95229 CertiOS.framework.proof.simulation <> MethSimAsrt def
R95283:95285 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R95276:95281 CertiOS.framework.logic.assertion <> Afalse constr
R95272:95272 CertiOS.framework.proof.lemmasfortoptheo <> p var
R95265:95270 CertiOS.framework.logic.assertion <> Afalse constr
R95263:95263 CertiOS.framework.proof.lemmasfortoptheo <> r var
R95261:95261 CertiOS.framework.proof.lemmasfortoptheo <> I var
R95255:95259 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R95248:95250 Coq.Init.Datatypes <> snd def
R95252:95252 CertiOS.framework.proof.lemmasfortoptheo <> A var
R95232:95234 Coq.Init.Datatypes <> snd def
R95237:95239 Coq.Init.Datatypes <> fst def
R95241:95243 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95032:95034 Coq.Init.Logic <> :type_scope:x_'='_x not
R95026:95029 Coq.Init.Datatypes <> Some constr
R95031:95031 CertiOS.framework.proof.lemmasfortoptheo <> r var
R95035:95043 CertiOS.framework.proof.auxdef <> BuildRetA def
R95086:95092 CertiOS.framework.logic.inferules <> init_lg def
R95082:95084 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R95076:95080 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R95074:95074 CertiOS.framework.proof.lemmasfortoptheo <> G var
R95071:95072 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R95063:95063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95066:95066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95069:95069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R95064:95065 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R95067:95068 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R95061:95061 CertiOS.framework.proof.lemmasfortoptheo <> f var
R95046:95048 Coq.Init.Datatypes <> fst def
R95051:95053 Coq.Init.Datatypes <> fst def
R95055:95057 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94953:94955 Coq.Init.Logic <> :type_scope:x_'='_x not
R94947:94950 Coq.Init.Datatypes <> Some constr
R94952:94952 CertiOS.framework.proof.lemmasfortoptheo <> p var
R94956:94964 CertiOS.framework.proof.auxdef <> BuildPreA def
R95007:95013 CertiOS.framework.logic.inferules <> init_lg def
R95003:95005 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R94997:95001 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R94995:94995 CertiOS.framework.proof.lemmasfortoptheo <> G var
R94992:94993 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R94984:94984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94987:94987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94990:94990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94985:94986 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R94988:94989 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R94982:94982 CertiOS.framework.proof.lemmasfortoptheo <> f var
R94967:94969 Coq.Init.Datatypes <> fst def
R94972:94974 Coq.Init.Datatypes <> fst def
R94976:94978 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94919:94921 Coq.Init.Logic <> :type_scope:x_'='_x not
R94905:94907 Coq.Init.Datatypes <> fst def
R94910:94912 Coq.Init.Datatypes <> fst def
R94914:94914 CertiOS.framework.proof.lemmasfortoptheo <> A var
R94918:94918 CertiOS.framework.proof.lemmasfortoptheo <> f var
R94922:94925 Coq.Init.Datatypes <> Some constr
R94927:94927 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94930:94930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94933:94933 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94928:94929 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R94931:94932 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R94786:94789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94827:94828 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R94820:94822 Coq.Init.Logic <> :type_scope:x_'='_x not
R94790:94802 CertiOS.framework.logic.inferules <> good_decllist def
R94805:94812 CertiOS.framework.model.opsem <> revlcons def
R94817:94818 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R94814:94815 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R94823:94826 Coq.Init.Datatypes <> true constr
R94829:94837 CertiOS.framework.logic.inferules <> GoodStmt' def
R94839:94839 CertiOS.framework.proof.lemmasfortoptheo <> s var
R94767:94769 Coq.Init.Logic <> :type_scope:x_'='_x not
R94751:94753 Coq.Init.Datatypes <> snd def
R94756:94758 Coq.Init.Datatypes <> fst def
R94760:94762 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94766:94766 CertiOS.framework.proof.lemmasfortoptheo <> f var
R94770:94773 Coq.Init.Datatypes <> Some constr
R94775:94775 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94777:94777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94780:94780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94783:94783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94785:94785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94776:94776 CertiOS.framework.proof.lemmasfortoptheo <> t var
R94778:94779 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R94781:94782 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R94784:94784 CertiOS.framework.proof.lemmasfortoptheo <> s var
R94665:94668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R94706:94707 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R94699:94701 Coq.Init.Logic <> :type_scope:x_'='_x not
R94669:94681 CertiOS.framework.logic.inferules <> good_decllist def
R94684:94691 CertiOS.framework.model.opsem <> revlcons def
R94696:94697 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R94693:94694 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R94702:94705 Coq.Init.Datatypes <> true constr
R94708:94716 CertiOS.framework.logic.inferules <> GoodStmt' def
R94718:94718 CertiOS.framework.proof.lemmasfortoptheo <> s var
R94646:94648 Coq.Init.Logic <> :type_scope:x_'='_x not
R94630:94632 Coq.Init.Datatypes <> fst def
R94635:94637 Coq.Init.Datatypes <> fst def
R94639:94641 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94645:94645 CertiOS.framework.proof.lemmasfortoptheo <> f var
R94649:94652 Coq.Init.Datatypes <> Some constr
R94654:94654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94656:94656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94659:94659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94662:94662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94664:94664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R94655:94655 CertiOS.framework.proof.lemmasfortoptheo <> t var
R94657:94658 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R94660:94661 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R94663:94663 CertiOS.framework.proof.lemmasfortoptheo <> s var
R94540:94553 CertiOS.framework.proof.auxdef <> no_call_api_os def
R94586:94593 CertiOS.framework.proof.auxdef <> get_lint def
R94595:94597 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94571:94578 CertiOS.framework.proof.auxdef <> get_ifun def
R94580:94582 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94556:94563 CertiOS.framework.proof.auxdef <> get_afun def
R94565:94567 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94431:94441 CertiOS.framework.proof.auxdef <> no_fun_same def
R94459:94466 CertiOS.framework.proof.auxdef <> get_ifun def
R94468:94470 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R94444:94451 CertiOS.framework.proof.auxdef <> get_afun def
R94453:94455 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R95765:95771 CertiOS.framework.model.opsem <> nilcont def
R95790:95791 Coq.Init.Logic <> :type_scope:x_'='_x not
R95785:95789 CertiOS.framework.model.language <> kstop constr
R95797:95800 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95813:95813 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95806:95807 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95808:95812 CertiOS.framework.model.language <> kstop constr
R95801:95805 CertiOS.framework.model.language <> kstop constr
R95792:95796 CertiOS.framework.model.language <> kstop constr
R95790:95791 Coq.Init.Logic <> :type_scope:x_'='_x not
R95785:95789 CertiOS.framework.model.language <> kstop constr
R95797:95800 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95813:95813 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95806:95807 CertiOS.framework.model.opsem <> ::x_'##'_x not
R95808:95812 CertiOS.framework.model.language <> kstop constr
R95801:95805 CertiOS.framework.model.language <> kstop constr
R95792:95796 CertiOS.framework.model.language <> kstop constr
R95915:95925 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim' thm
R95915:95925 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim' thm
R95999:96005 CertiOS.framework.logic.inferules <> CurLINV def
R96018:96024 CertiOS.framework.logic.inferules <> init_lg def
R96018:96024 CertiOS.framework.logic.inferules <> init_lg def
R96236:96255 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt_n_dym_com_s thm
R96236:96255 CertiOS.framework.proof.lemmasfortoptheo <> goodstmt_n_dym_com_s thm
R96316:96319 CertiOS.framework.model.opsem <> InOS def
R96711:96718 CertiOS.framework.proof.auxdef <> good_clt def
R96747:96768 CertiOS.framework.proof.step_prop <> Goodstmt_good_clt_stmt thm
R96747:96768 CertiOS.framework.proof.step_prop <> Goodstmt_good_clt_stmt thm
prf 96823:96832 <> GoodP_to_S
R96879:96881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96902:96904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R96905:96912 CertiOS.framework.proof.oscorrectness <> GoodStmt def
R96916:96917 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R96914:96914 CertiOS.framework.proof.lemmasfortoptheo <> s var
R96885:96887 Coq.Init.Logic <> :type_scope:x_'='_x not
R96882:96882 CertiOS.framework.proof.lemmasfortoptheo <> p var
R96884:96884 CertiOS.framework.proof.lemmasfortoptheo <> f var
R96888:96891 Coq.Init.Datatypes <> Some constr
R96893:96893 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R96895:96895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R96897:96897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R96899:96899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R96901:96901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R96894:96894 CertiOS.framework.proof.lemmasfortoptheo <> a var
R96896:96896 CertiOS.framework.proof.lemmasfortoptheo <> b var
R96898:96898 CertiOS.framework.proof.lemmasfortoptheo <> c var
R96900:96900 CertiOS.framework.proof.lemmasfortoptheo <> s var
R96861:96870 CertiOS.framework.proof.oscorrectness <> GoodClient def
R96877:96878 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R96874:96875 CertiOS.framework.proof.lemmasfortoptheo <> po var
R96872:96872 CertiOS.framework.proof.lemmasfortoptheo <> p var
R96939:96948 CertiOS.framework.proof.oscorrectness <> GoodClient def
prf 96996:97011 <> projs_steq_projs
R97075:97083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97135:97143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97206:97214 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97228:97236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97259:97262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R97275:97277 Coq.Init.Logic <> :type_scope:x_'='_x not
R97263:97267 CertiOS.framework.model.opsem <> projS def
R97272:97274 CertiOS.framework.proof.lemmasfortoptheo <> t'0 var
R97269:97270 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R97278:97281 Coq.Init.Datatypes <> Some constr
R97283:97283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97296:97297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97310:97311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97318:97318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97284:97286 Coq.Init.Datatypes <> fst def
R97289:97291 Coq.Init.Datatypes <> fst def
R97293:97294 CertiOS.framework.proof.lemmasfortoptheo <> or var
R97298:97300 Coq.Init.Datatypes <> snd def
R97303:97305 Coq.Init.Datatypes <> fst def
R97307:97308 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R97312:97314 Coq.Init.Datatypes <> snd def
R97316:97317 CertiOS.framework.proof.lemmasfortoptheo <> or var
R97249:97251 Coq.Init.Logic <> :type_scope:x_'='_x not
R97237:97241 CertiOS.framework.model.opsem <> projS def
R97246:97248 CertiOS.framework.proof.lemmasfortoptheo <> t'0 var
R97243:97244 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R97252:97255 Coq.Init.Datatypes <> Some constr
R97257:97258 CertiOS.framework.proof.lemmasfortoptheo <> or var
R97215:97218 CertiOS.framework.model.opsem <> Steq def
R97226:97227 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R97223:97224 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R97220:97221 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R97155:97157 Coq.Init.Logic <> :type_scope:x_'='_x not
R97144:97148 CertiOS.framework.model.opsem <> projS def
R97153:97154 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R97150:97151 CertiOS.framework.proof.lemmasfortoptheo <> S' var
R97158:97161 Coq.Init.Datatypes <> Some constr
R97163:97163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97166:97167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97174:97175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97177:97178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97182:97183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97205:97205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97164:97165 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R97168:97173 CertiOS.framework.logic.assertion <> empenv syndef
R97176:97176 CertiOS.framework.proof.lemmasfortoptheo <> m var
R97179:97181 CertiOS.framework.proof.lemmasfortoptheo <> ir' var
R97184:97184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97190:97191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97199:97200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97204:97204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97185:97189 Coq.Init.Datatypes <> false constr
R97193:97196 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R97192:97192 CertiOS.framework.proof.lemmasfortoptheo <> i var
R97197:97198 CertiOS.framework.proof.lemmasfortoptheo <> si var
R97201:97203 Coq.Init.Datatypes <> nil constr
R97095:97097 Coq.Init.Logic <> :type_scope:x_'='_x not
R97084:97088 CertiOS.framework.model.opsem <> projS def
R97093:97094 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R97090:97091 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R97098:97101 Coq.Init.Datatypes <> Some constr
R97103:97103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97106:97107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97110:97111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97113:97114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97117:97118 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97134:97134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97104:97105 CertiOS.framework.proof.lemmasfortoptheo <> ge var
R97108:97109 CertiOS.framework.proof.lemmasfortoptheo <> le var
R97112:97112 CertiOS.framework.proof.lemmasfortoptheo <> m var
R97115:97116 CertiOS.framework.proof.lemmasfortoptheo <> ir var
R97119:97119 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97124:97125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97128:97129 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97133:97133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97120:97123 Coq.Init.Datatypes <> true constr
R97126:97127 CertiOS.framework.proof.lemmasfortoptheo <> si var
R97130:97132 Coq.Init.Datatypes <> nil constr
R97069:97072 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R97066:97068 CertiOS.framework.proof.lemmasfortoptheo <> t'0 var
R97073:97074 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R97339:97341 CertiOS.framework.auxlibs.Modules <> tid def
R97444:97448 CertiOS.framework.model.opsem <> projS def
R97466:97469 CertiOS.framework.model.opsem <> Steq def
R97504:97507 CertiOS.framework.model.opsem <> Dteq def
R97526:97530 CertiOS.framework.model.opsem <> Piteq def
R97613:97617 CertiOS.framework.model.opsem <> projD def
R97619:97619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97622:97623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97626:97627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97630:97630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97613:97617 CertiOS.framework.model.opsem <> projD def
R97619:97619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97622:97623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97626:97627 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97630:97630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97653:97655 CertiOS.framework.auxlibs.Modules <> tid def
R97700:97702 CertiOS.framework.auxlibs.Maps <> get meth
R97700:97702 CertiOS.framework.auxlibs.Maps <> get meth
R97755:97759 CertiOS.framework.model.opsem <> projD def
R97761:97761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97763:97764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97766:97767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97770:97770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97755:97759 CertiOS.framework.model.opsem <> projD def
R97761:97761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97763:97764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97766:97767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97770:97770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97793:97795 CertiOS.framework.auxlibs.Modules <> tid def
R97841:97843 CertiOS.framework.auxlibs.Maps <> get meth
R97841:97843 CertiOS.framework.auxlibs.Maps <> get meth
R97896:97900 CertiOS.framework.model.opsem <> projD def
R97902:97902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97904:97905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97907:97908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97911:97911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97896:97900 CertiOS.framework.model.opsem <> projD def
R97902:97902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97904:97905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97907:97908 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97911:97911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R97965:97967 CertiOS.framework.auxlibs.Maps <> get meth
R97965:97967 CertiOS.framework.auxlibs.Maps <> get meth
R98062:98066 CertiOS.framework.model.opsem <> projD def
R98068:98068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98071:98072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98075:98076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98079:98079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98062:98066 CertiOS.framework.model.opsem <> projD def
R98068:98068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98071:98072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98075:98076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98079:98079 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98128:98130 CertiOS.framework.auxlibs.Maps <> get meth
R98128:98130 CertiOS.framework.auxlibs.Maps <> get meth
R98269:98273 CertiOS.framework.model.opsem <> projD def
R98291:98293 CertiOS.framework.auxlibs.Modules <> tid def
R98427:98429 CertiOS.framework.auxlibs.Maps <> get meth
R98427:98429 CertiOS.framework.auxlibs.Maps <> get meth
R98478:98480 CertiOS.framework.auxlibs.Maps <> get meth
R98478:98480 CertiOS.framework.auxlibs.Maps <> get meth
R98529:98531 CertiOS.framework.auxlibs.Maps <> get meth
R98529:98531 CertiOS.framework.auxlibs.Maps <> get meth
R98715:98719 CertiOS.framework.model.opsem <> projD def
R98721:98721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98723:98724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98726:98727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98730:98730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98715:98719 CertiOS.framework.model.opsem <> projD def
R98721:98721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98723:98724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98726:98727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98730:98730 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R98760:98762 CertiOS.framework.auxlibs.Maps <> get meth
R98760:98762 CertiOS.framework.auxlibs.Maps <> get meth
R98864:98868 CertiOS.framework.model.opsem <> projD def
R98886:98888 CertiOS.framework.auxlibs.Modules <> tid def
R98933:98935 CertiOS.framework.auxlibs.Maps <> get meth
R98933:98935 CertiOS.framework.auxlibs.Maps <> get meth
prf 99335:99351 <> tasks_set_get_neq
R99376:99379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99416:99419 Coq.Init.Logic <> :type_scope:x_'='_x not
R99380:99391 CertiOS.framework.model.language TasksMod get def
R99414:99415 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R99394:99405 CertiOS.framework.model.language TasksMod set def
R99411:99411 CertiOS.framework.proof.lemmasfortoptheo <> a var
R99409:99409 CertiOS.framework.proof.lemmasfortoptheo <> t var
R99407:99407 CertiOS.framework.proof.lemmasfortoptheo <> T var
R99420:99431 CertiOS.framework.model.language TasksMod get def
R99435:99436 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R99433:99433 CertiOS.framework.proof.lemmasfortoptheo <> T var
R99372:99373 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R99371:99371 CertiOS.framework.proof.lemmasfortoptheo <> t var
R99374:99375 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R99467:99487 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R99467:99487 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R99499:99519 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R99499:99519 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
prf 99549:99560 <> eqdomTO_setT
R99619:99622 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99634:99642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99667:99675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R99676:99682 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R99687:99687 CertiOS.framework.proof.lemmasfortoptheo <> O var
R99684:99685 CertiOS.framework.proof.lemmasfortoptheo <> T' var
R99662:99664 Coq.Init.Logic <> :type_scope:x_'='_x not
R99643:99654 CertiOS.framework.model.language TasksMod set def
R99660:99661 CertiOS.framework.proof.lemmasfortoptheo <> C' var
R99658:99658 CertiOS.framework.proof.lemmasfortoptheo <> t var
R99656:99656 CertiOS.framework.proof.lemmasfortoptheo <> T var
R99665:99666 CertiOS.framework.proof.lemmasfortoptheo <> T' var
R99623:99629 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R99633:99633 CertiOS.framework.proof.lemmasfortoptheo <> O var
R99631:99631 CertiOS.framework.proof.lemmasfortoptheo <> T var
R99610:99612 Coq.Init.Logic <> :type_scope:x_'='_x not
R99594:99605 CertiOS.framework.model.language TasksMod get def
R99609:99609 CertiOS.framework.proof.lemmasfortoptheo <> t var
R99607:99607 CertiOS.framework.proof.lemmasfortoptheo <> T var
R99613:99616 Coq.Init.Datatypes <> Some constr
R99618:99618 CertiOS.framework.proof.lemmasfortoptheo <> C var
R99719:99725 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R99826:99836 CertiOS.framework.auxlibs.Modules tidspec beq def
R99826:99836 CertiOS.framework.auxlibs.Modules tidspec beq def
R99869:99887 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R99869:99887 CertiOS.framework.auxlibs.Modules tidspec beq_true_eq thm
R99917:99923 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R99926:99927 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R99943:99945 Coq.Init.Logic <> :type_scope:x_'='_x not
R99928:99937 CertiOS.framework.model.language TcbMod get def
R99946:99949 Coq.Init.Datatypes <> Some constr
R99917:99923 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R99926:99927 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R99943:99945 Coq.Init.Logic <> :type_scope:x_'='_x not
R99928:99937 CertiOS.framework.model.language TcbMod get def
R99946:99949 Coq.Init.Datatypes <> Some constr
R100023:100042 CertiOS.framework.model.language TasksMod set_a_get_a thm
R100023:100042 CertiOS.framework.model.language TasksMod set_a_get_a thm
R100061:100081 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R100061:100081 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R100061:100081 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R100061:100081 CertiOS.framework.model.language TasksMod set_a_get_a' thm
prf 100137:100154 <> change_tstm_trans'
R100202:100204 Coq.Init.Logic <> :type_scope:x_'='_x not
R100172:100181 CertiOS.framework.logic.assertion <> substaskst def
R100200:100201 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R100184:100193 CertiOS.framework.logic.assertion <> substaskst def
R100197:100197 CertiOS.framework.proof.lemmasfortoptheo <> M var
R100195:100195 CertiOS.framework.proof.lemmasfortoptheo <> o var
R100205:100214 CertiOS.framework.logic.assertion <> substaskst def
R100218:100219 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R100216:100216 CertiOS.framework.proof.lemmasfortoptheo <> o var
R100240:100249 CertiOS.framework.logic.assertion <> substaskst def
prf 100356:100377 <> repl_change_tstm_trans
R100425:100427 Coq.Init.Logic <> :type_scope:x_'='_x not
R100395:100404 CertiOS.framework.logic.assertion <> substaskst def
R100423:100424 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R100407:100416 CertiOS.framework.logic.assertion <> substaskst def
R100420:100420 CertiOS.framework.proof.lemmasfortoptheo <> M var
R100418:100418 CertiOS.framework.proof.lemmasfortoptheo <> o var
R100428:100437 CertiOS.framework.logic.assertion <> substaskst def
R100441:100442 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R100439:100439 CertiOS.framework.proof.lemmasfortoptheo <> o var
R100462:100479 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R100462:100479 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
prf 100507:100516 <> tsimtopsim
R100589:100596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100597:100605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103883:103895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103896:103902 CertiOS.framework.proof.simulation <> ProgSim coind
R103925:103925 CertiOS.framework.proof.lemmasfortoptheo <> t var
R103921:103923 CertiOS.framework.proof.lemmasfortoptheo <> cst var
R103919:103919 CertiOS.framework.proof.lemmasfortoptheo <> O var
R103916:103917 CertiOS.framework.proof.lemmasfortoptheo <> Th var
R103913:103914 CertiOS.framework.proof.lemmasfortoptheo <> ph var
R103910:103911 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R103907:103908 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R103904:103905 CertiOS.framework.proof.lemmasfortoptheo <> pl var
R100606:100613 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R100672:100683 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R100617:100624 CertiOS.framework.model.language <> progunit def
R100630:100635 CertiOS.framework.model.language <> osspec def
R100701:100712 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100684:100694 CertiOS.framework.proof.auxdef <> no_fun_same def
R100699:100700 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R100696:100697 CertiOS.framework.proof.lemmasfortoptheo <> po var
R100717:100768 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100713:100716 Coq.Init.Logic <> True ind
R100792:100805 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100769:100782 CertiOS.framework.proof.auxdef <> no_call_api_os def
R100790:100791 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R100787:100788 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R100784:100785 CertiOS.framework.proof.lemmasfortoptheo <> po var
R100806:100806 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100904:100908 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100850:100853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100891:100892 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100884:100886 Coq.Init.Logic <> :type_scope:x_'='_x not
R100854:100866 CertiOS.framework.logic.inferules <> good_decllist def
R100869:100876 CertiOS.framework.model.opsem <> revlcons def
R100881:100882 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R100878:100879 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R100887:100890 Coq.Init.Datatypes <> true constr
R100893:100901 CertiOS.framework.logic.inferules <> GoodStmt' def
R100903:100903 CertiOS.framework.proof.lemmasfortoptheo <> s var
R100831:100833 Coq.Init.Logic <> :type_scope:x_'='_x not
R100827:100828 CertiOS.framework.proof.lemmasfortoptheo <> po var
R100830:100830 CertiOS.framework.proof.lemmasfortoptheo <> f var
R100834:100837 Coq.Init.Datatypes <> Some constr
R100839:100839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100841:100841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100844:100844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100847:100847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100849:100849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100840:100840 CertiOS.framework.proof.lemmasfortoptheo <> t var
R100842:100843 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R100845:100846 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R100848:100848 CertiOS.framework.proof.lemmasfortoptheo <> s var
R100909:100909 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101007:101020 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100953:100956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R100994:100995 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R100987:100989 Coq.Init.Logic <> :type_scope:x_'='_x not
R100957:100969 CertiOS.framework.logic.inferules <> good_decllist def
R100972:100979 CertiOS.framework.model.opsem <> revlcons def
R100984:100985 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R100981:100982 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R100990:100993 Coq.Init.Datatypes <> true constr
R100996:101004 CertiOS.framework.logic.inferules <> GoodStmt' def
R101006:101006 CertiOS.framework.proof.lemmasfortoptheo <> s var
R100934:100936 Coq.Init.Logic <> :type_scope:x_'='_x not
R100930:100931 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R100933:100933 CertiOS.framework.proof.lemmasfortoptheo <> f var
R100937:100940 Coq.Init.Datatypes <> Some constr
R100942:100942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100944:100944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100947:100947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100950:100950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100952:100952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R100943:100943 CertiOS.framework.proof.lemmasfortoptheo <> t var
R100945:100946 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R100948:100949 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R100951:100951 CertiOS.framework.proof.lemmasfortoptheo <> s var
R101045:101048 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101023:101025 Coq.Init.Logic <> :type_scope:x_'='_x not
R101021:101022 CertiOS.framework.proof.lemmasfortoptheo <> pl var
R101026:101026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101029:101030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101044:101044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101027:101028 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R101031:101032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101035:101036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101039:101040 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101043:101043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101033:101034 CertiOS.framework.proof.lemmasfortoptheo <> po var
R101037:101038 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R101041:101042 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R101061:101064 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101051:101053 Coq.Init.Logic <> :type_scope:x_'='_x not
R101049:101050 CertiOS.framework.proof.lemmasfortoptheo <> ph var
R101054:101054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101057:101058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101060:101060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101055:101056 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R101059:101059 CertiOS.framework.proof.lemmasfortoptheo <> A var
R101065:101065 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101150:101199 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101085:101087 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101066:101075 CertiOS.framework.proof.oscorrectness <> GoodClient def
R101083:101084 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R101080:101081 CertiOS.framework.proof.lemmasfortoptheo <> po var
R101077:101078 CertiOS.framework.proof.lemmasfortoptheo <> pc var
R101092:101095 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101088:101091 Coq.Init.Logic <> True ind
R101111:101114 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101096:101104 CertiOS.framework.proof.auxdef <> good_t_ks def
R101109:101110 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R101106:101107 CertiOS.framework.proof.lemmasfortoptheo <> pl var
R101127:101128 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101115:101123 CertiOS.framework.proof.auxdef <> good_is_S def
R101125:101126 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R101129:101133 CertiOS.framework.logic.inferules <> GoodI def
R101145:101149 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R101138:101140 Coq.Init.Datatypes <> snd def
R101142:101142 CertiOS.framework.proof.lemmasfortoptheo <> A var
R101135:101135 CertiOS.framework.proof.lemmasfortoptheo <> I var
R101231:101257 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101200:101203 CertiOS.framework.auxlibs.Maps <> join meth
R101212:101214 Coq.Init.Datatypes <> snd def
R101217:101219 Coq.Init.Datatypes <> fst def
R101222:101224 Coq.Init.Datatypes <> fst def
R101226:101227 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R101208:101209 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R101205:101206 CertiOS.framework.proof.lemmasfortoptheo <> Ml var
R101272:101315 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101258:101262 CertiOS.framework.proof.auxdef <> partM ind
R101270:101271 CertiOS.framework.proof.lemmasfortoptheo <> Tm var
R101267:101268 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R101264:101265 CertiOS.framework.proof.lemmasfortoptheo <> Ml var
R101328:101342 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101316:101319 CertiOS.framework.auxlibs.Maps <> join meth
R101327:101327 CertiOS.framework.proof.lemmasfortoptheo <> O var
R101324:101325 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R101321:101322 CertiOS.framework.proof.lemmasfortoptheo <> Ol var
R101357:101382 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101343:101347 CertiOS.framework.proof.auxdef <> partO ind
R101355:101356 CertiOS.framework.proof.lemmasfortoptheo <> To var
R101352:101353 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R101349:101350 CertiOS.framework.proof.lemmasfortoptheo <> Ol var
R101383:101383 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101486:101529 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101384:101390 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R101392:101392 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R101395:101396 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R101416:101419 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101407:101409 Coq.Init.Logic <> :type_scope:x_'='_x not
R101397:101401 CertiOS.framework.model.opsem <> projS def
R101406:101406 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101403:101404 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R101410:101413 Coq.Init.Datatypes <> Some constr
R101440:101443 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101484:101485 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101435:101437 Coq.Init.Logic <> :type_scope:x_'='_x not
R101420:101429 CertiOS.framework.logic.assertion <> substaskst def
R101433:101434 CertiOS.framework.proof.lemmasfortoptheo <> Ms var
R101455:101457 CertiOS.framework.logic.assertion <> sat def
R101478:101480 CertiOS.framework.logic.assertion <> INV def
R101482:101482 CertiOS.framework.proof.lemmasfortoptheo <> I var
R101459:101460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101471:101472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101475:101475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R101461:101464 Coq.Init.Datatypes <> pair constr
R101469:101470 CertiOS.framework.proof.lemmasfortoptheo <> Os var
R101473:101474 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R101530:101542 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101885:101931 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101543:101549 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101551:101551 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101554:101554 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101557:101557 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101560:101560 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101563:101563 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101566:101580 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_x_','_x not
R101606:101622 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101581:101597 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R101602:101602 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101599:101600 CertiOS.framework.proof.lemmasfortoptheo <> Tm var
R101648:101664 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101623:101639 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R101644:101644 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101641:101642 CertiOS.framework.proof.lemmasfortoptheo <> To var
R101684:101687 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101675:101677 Coq.Init.Logic <> :type_scope:x_'='_x not
R101665:101669 CertiOS.framework.model.opsem <> projS def
R101674:101674 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101671:101672 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R101678:101681 Coq.Init.Datatypes <> Some constr
R101708:101725 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101703:101705 Coq.Init.Logic <> :type_scope:x_'='_x not
R101688:101697 CertiOS.framework.logic.assertion <> substaskst def
R101744:101747 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101734:101736 Coq.Init.Logic <> :type_scope:x_'='_x not
R101726:101728 CertiOS.framework.auxlibs.Maps <> get meth
R101733:101733 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101730:101731 CertiOS.framework.proof.lemmasfortoptheo <> Th var
R101737:101740 Coq.Init.Datatypes <> Some constr
R101766:101782 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101756:101758 Coq.Init.Logic <> :type_scope:x_'='_x not
R101748:101750 CertiOS.framework.auxlibs.Maps <> get meth
R101755:101755 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101752:101753 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R101759:101762 Coq.Init.Datatypes <> Some constr
R101811:101828 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101783:101786 CertiOS.framework.logic.inferules <> satp def
R101795:101801 CertiOS.framework.logic.inferules <> CurLINV def
R101809:101809 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101803:101807 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R101829:101835 CertiOS.framework.proof.simulation <> TaskSim coind
R101884:101884 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101864:101873 CertiOS.framework.proof.auxdef <> InitTaskSt def
R101881:101881 CertiOS.framework.proof.lemmasfortoptheo <> t var
R101875:101879 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R101861:101861 CertiOS.framework.proof.lemmasfortoptheo <> I var
R101855:101859 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R101846:101847 CertiOS.framework.proof.lemmasfortoptheo <> ph var
R101837:101838 CertiOS.framework.proof.lemmasfortoptheo <> pl var
R101932:101944 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102909:102933 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R101979:101995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102015:102031 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102049:102082 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102857:102908 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102083:102089 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R102091:102091 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R102094:102094 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R102097:102097 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R102100:102119 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R102146:102166 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102120:102136 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R102141:102142 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102138:102139 CertiOS.framework.proof.lemmasfortoptheo <> Tm var
R102193:102213 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102167:102183 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R102188:102189 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102185:102186 CertiOS.framework.proof.lemmasfortoptheo <> To var
R102234:102254 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102225:102227 Coq.Init.Logic <> :type_scope:x_'='_x not
R102214:102218 CertiOS.framework.model.opsem <> projS def
R102223:102224 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102220:102221 CertiOS.framework.proof.lemmasfortoptheo <> Sl var
R102228:102231 Coq.Init.Datatypes <> Some constr
R102315:102335 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102255:102258 CertiOS.framework.logic.inferules <> satp def
R102282:102284 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R102287:102288 CertiOS.framework.logic.assertion <> ::'EX'_x_'..'_x_','_x not
R102305:102308 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R102289:102292 CertiOS.framework.logic.inferules <> LINV def
R102303:102304 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R102300:102301 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102294:102298 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R102309:102313 CertiOS.framework.logic.assertion <> Atrue constr
R102261:102270 CertiOS.framework.logic.assertion <> substaskst def
R102355:102395 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102838:102856 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102345:102347 Coq.Init.Logic <> :type_scope:x_'='_x not
R102336:102338 CertiOS.framework.auxlibs.Maps <> get meth
R102343:102344 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102340:102341 CertiOS.framework.proof.lemmasfortoptheo <> Tl var
R102348:102351 Coq.Init.Datatypes <> Some constr
R102585:102634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102815:102837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R102635:102641 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R102645:102671 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R102688:102717 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102675:102676 Coq.Init.Logic <> :type_scope:x_'='_x not
R102677:102681 CertiOS.framework.auxlibs.Maps <> merge meth
R102683:102684 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R102718:102724 CertiOS.framework.proof.simulation <> TaskSim coind
R102813:102814 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102792:102801 CertiOS.framework.proof.auxdef <> InitTaskSt def
R102809:102810 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102803:102807 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R102789:102789 CertiOS.framework.proof.lemmasfortoptheo <> I var
R102783:102787 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R102770:102774 CertiOS.framework.auxlibs.Maps <> merge meth
R102776:102777 CertiOS.framework.proof.lemmasfortoptheo <> Or var
R102766:102767 CertiOS.framework.proof.lemmasfortoptheo <> Ch var
R102763:102764 CertiOS.framework.proof.lemmasfortoptheo <> ph var
R102733:102741 CertiOS.framework.proof.auxdef <> RdyChange def
R102744:102753 CertiOS.framework.logic.assertion <> substaskst def
R102726:102727 CertiOS.framework.proof.lemmasfortoptheo <> pl var
R102432:102432 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102506:102531 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102444:102446 CertiOS.framework.logic.assertion <> sat def
R102494:102499 CertiOS.framework.logic.assertion <> RDYINV def
R102503:102504 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102501:102501 CertiOS.framework.proof.lemmasfortoptheo <> I var
R102448:102449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102487:102488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102491:102491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102450:102453 Coq.Init.Datatypes <> pair constr
R102485:102486 CertiOS.framework.proof.lemmasfortoptheo <> Or var
R102456:102464 CertiOS.framework.proof.auxdef <> RdyChange def
R102467:102476 CertiOS.framework.logic.assertion <> substaskst def
R102480:102481 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R102489:102490 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R102546:102570 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102532:102539 CertiOS.framework.auxlibs.Maps <> disjoint def
R102541:102542 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R102571:102578 CertiOS.framework.auxlibs.Maps <> disjoint def
R102580:102581 CertiOS.framework.proof.lemmasfortoptheo <> Or var
R102032:102043 CertiOS.framework.proof.step_prop <> task_no_dead def
R102047:102048 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102045:102045 CertiOS.framework.proof.lemmasfortoptheo <> O var
R102005:102007 Coq.Init.Logic <> :type_scope:x_'='_x not
R101996:101998 CertiOS.framework.auxlibs.Maps <> get meth
R102003:102004 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R102000:102001 CertiOS.framework.proof.lemmasfortoptheo <> Th var
R102008:102011 Coq.Init.Datatypes <> Some constr
R102013:102014 CertiOS.framework.proof.lemmasfortoptheo <> Ch var
R101972:101973 Coq.Init.Logic <> :type_scope:'~'_x not
R101978:101978 Coq.Init.Logic <> :type_scope:'~'_x not
R101976:101976 Coq.Init.Logic <> :type_scope:x_'='_x not
R101974:101975 CertiOS.framework.proof.lemmasfortoptheo <> t' var
R101977:101977 CertiOS.framework.proof.lemmasfortoptheo <> t var
R102946:102950 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102934:102940 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R102945:102945 CertiOS.framework.proof.lemmasfortoptheo <> O var
R102942:102943 CertiOS.framework.proof.lemmasfortoptheo <> Th var
R102973:103005 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R102951:102957 CertiOS.framework.proof.auxdef <> eqdomOS def
R102972:102972 CertiOS.framework.proof.lemmasfortoptheo <> A var
R102959:102959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102962:102963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102966:102967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102970:102970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R102960:102961 CertiOS.framework.proof.lemmasfortoptheo <> po var
R102964:102965 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R102968:102969 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R103006:103018 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103438:103481 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103873:103882 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103029:103031 CertiOS.framework.model.language <> fid def
R103099:103114 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103169:103184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103239:103271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103423:103437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103272:103278 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R103280:103280 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R103283:103283 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R103286:103286 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R103288:103306 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R103333:103335 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103311:103313 Coq.Init.Logic <> :type_scope:x_'='_x not
R103307:103308 CertiOS.framework.proof.lemmasfortoptheo <> po var
R103310:103310 CertiOS.framework.proof.lemmasfortoptheo <> f var
R103314:103317 Coq.Init.Datatypes <> Some constr
R103319:103319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103321:103322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103325:103326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103329:103330 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103332:103332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103320:103320 CertiOS.framework.proof.lemmasfortoptheo <> t var
R103347:103368 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103336:103344 CertiOS.framework.logic.inferules <> GoodStmt' def
R103369:103379 CertiOS.framework.proof.simulation <> MethSimAsrt def
R103420:103422 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103413:103418 CertiOS.framework.logic.assertion <> Afalse constr
R103409:103409 CertiOS.framework.proof.lemmasfortoptheo <> p var
R103402:103407 CertiOS.framework.logic.assertion <> Afalse constr
R103400:103400 CertiOS.framework.proof.lemmasfortoptheo <> r var
R103398:103398 CertiOS.framework.proof.lemmasfortoptheo <> I var
R103392:103396 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103385:103387 Coq.Init.Datatypes <> snd def
R103389:103389 CertiOS.framework.proof.lemmasfortoptheo <> A var
R103381:103382 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R103191:103193 Coq.Init.Logic <> :type_scope:x_'='_x not
R103185:103188 Coq.Init.Datatypes <> Some constr
R103190:103190 CertiOS.framework.proof.lemmasfortoptheo <> r var
R103194:103202 CertiOS.framework.proof.auxdef <> BuildRetA def
R103232:103238 CertiOS.framework.logic.inferules <> init_lg def
R103228:103230 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103222:103226 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103220:103220 CertiOS.framework.proof.lemmasfortoptheo <> G var
R103217:103218 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R103209:103209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103212:103212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103215:103215 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103210:103211 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R103213:103214 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R103207:103207 CertiOS.framework.proof.lemmasfortoptheo <> f var
R103204:103205 CertiOS.framework.proof.lemmasfortoptheo <> po var
R103121:103123 Coq.Init.Logic <> :type_scope:x_'='_x not
R103115:103118 Coq.Init.Datatypes <> Some constr
R103120:103120 CertiOS.framework.proof.lemmasfortoptheo <> p var
R103124:103132 CertiOS.framework.proof.auxdef <> BuildPreA def
R103162:103168 CertiOS.framework.logic.inferules <> init_lg def
R103158:103160 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103152:103156 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103150:103150 CertiOS.framework.proof.lemmasfortoptheo <> G var
R103147:103148 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R103139:103139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103142:103142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103145:103145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103140:103141 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R103143:103144 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R103137:103137 CertiOS.framework.proof.lemmasfortoptheo <> f var
R103134:103135 CertiOS.framework.proof.lemmasfortoptheo <> po var
R103083:103085 Coq.Init.Logic <> :type_scope:x_'='_x not
R103069:103071 Coq.Init.Datatypes <> fst def
R103074:103076 Coq.Init.Datatypes <> fst def
R103078:103078 CertiOS.framework.proof.lemmasfortoptheo <> A var
R103082:103082 CertiOS.framework.proof.lemmasfortoptheo <> f var
R103086:103089 Coq.Init.Datatypes <> Some constr
R103091:103091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103094:103094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103097:103098 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R103092:103093 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R103095:103096 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R103492:103494 CertiOS.framework.model.language <> hid def
R103565:103598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103862:103872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R103599:103606 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R103619:103637 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R103609:103613 CertiOS.framework.model.language <> stmts ind
R103651:103672 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103642:103644 Coq.Init.Logic <> :type_scope:x_'='_x not
R103638:103639 CertiOS.framework.proof.lemmasfortoptheo <> ip var
R103641:103641 CertiOS.framework.proof.lemmasfortoptheo <> i var
R103645:103648 Coq.Init.Datatypes <> Some constr
R103650:103650 CertiOS.framework.proof.lemmasfortoptheo <> s var
R103723:103743 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103674:103676 Coq.Init.Logic <> :type_scope:x_'='_x not
R103673:103673 CertiOS.framework.proof.lemmasfortoptheo <> p var
R103677:103684 CertiOS.framework.proof.auxdef <> ipreasrt def
R103721:103722 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R103717:103719 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103711:103715 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103709:103709 CertiOS.framework.proof.lemmasfortoptheo <> G var
R103707:103707 CertiOS.framework.proof.lemmasfortoptheo <> I var
R103699:103703 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R103695:103696 CertiOS.framework.proof.lemmasfortoptheo <> si var
R103688:103693 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R103686:103686 CertiOS.framework.proof.lemmasfortoptheo <> i var
R103785:103805 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R103745:103747 Coq.Init.Logic <> :type_scope:x_'='_x not
R103744:103744 CertiOS.framework.proof.lemmasfortoptheo <> r var
R103748:103755 CertiOS.framework.proof.auxdef <> iretasrt def
R103783:103784 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R103779:103781 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103773:103777 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103771:103771 CertiOS.framework.proof.lemmasfortoptheo <> G var
R103769:103769 CertiOS.framework.proof.lemmasfortoptheo <> I var
R103766:103767 CertiOS.framework.proof.lemmasfortoptheo <> si var
R103759:103764 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R103757:103757 CertiOS.framework.proof.lemmasfortoptheo <> i var
R103806:103816 CertiOS.framework.proof.simulation <> MethSimAsrt def
R103859:103861 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R103852:103857 CertiOS.framework.logic.assertion <> Afalse constr
R103850:103850 CertiOS.framework.proof.lemmasfortoptheo <> s var
R103848:103848 CertiOS.framework.proof.lemmasfortoptheo <> p var
R103846:103846 CertiOS.framework.proof.lemmasfortoptheo <> r var
R103837:103844 CertiOS.framework.proof.auxdef <> retfalse def
R103835:103835 CertiOS.framework.proof.lemmasfortoptheo <> I var
R103829:103833 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R103822:103824 Coq.Init.Datatypes <> snd def
R103826:103826 CertiOS.framework.proof.lemmasfortoptheo <> A var
R103818:103819 CertiOS.framework.proof.lemmasfortoptheo <> pi var
R103552:103554 Coq.Init.Logic <> :type_scope:x_'='_x not
R103538:103540 Coq.Init.Datatypes <> snd def
R103543:103545 Coq.Init.Datatypes <> fst def
R103547:103547 CertiOS.framework.proof.lemmasfortoptheo <> A var
R103551:103551 CertiOS.framework.proof.lemmasfortoptheo <> i var
R103555:103558 Coq.Init.Datatypes <> Some constr
R103560:103564 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R100571:100573 Coq.Init.Logic <> :type_scope:x_'='_x not
R100559:100561 CertiOS.framework.auxlibs.Maps <> get meth
R100565:100570 CertiOS.framework.model.language <> curtid constr
R100563:100563 CertiOS.framework.proof.lemmasfortoptheo <> O var
R100574:100577 Coq.Init.Datatypes <> Some constr
R100580:100585 CertiOS.framework.model.language <> oscurt constr
R100587:100587 CertiOS.framework.proof.lemmasfortoptheo <> t var
R104397:104404 CertiOS.framework.proof.simulation <> prog_sim constr
R104397:104404 CertiOS.framework.proof.simulation <> prog_sim constr
R104789:104795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R104800:104801 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R104811:104813 Coq.Init.Logic <> :type_scope:x_'='_x not
R104814:104817 Coq.Init.Datatypes <> Some constr
R104789:104795 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R104800:104801 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R104811:104813 Coq.Init.Logic <> :type_scope:x_'='_x not
R104814:104817 Coq.Init.Datatypes <> Some constr
R104836:104842 CertiOS.framework.proof.auxdef <> eqdomOS def
R105042:105053 CertiOS.framework.model.language TasksMod set def
R105061:105061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105083:105083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105109:105109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105062:105065 CertiOS.framework.model.language <> curs constr
R105068:105076 CertiOS.framework.model.language <> hapi_code constr
R105084:105084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105090:105090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105108:105108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105085:105089 CertiOS.framework.model.language <> kenil constr
R105091:105096 CertiOS.framework.model.language <> kevent constr
R105042:105053 CertiOS.framework.model.language TasksMod set def
R105061:105061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105083:105083 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105109:105109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105062:105065 CertiOS.framework.model.language <> curs constr
R105068:105076 CertiOS.framework.model.language <> hapi_code constr
R105084:105084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105090:105090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105108:105108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105085:105089 CertiOS.framework.model.language <> kenil constr
R105091:105096 CertiOS.framework.model.language <> kevent constr
R105145:105152 CertiOS.framework.model.opsem <> hp_stepS constr
R105145:105152 CertiOS.framework.model.opsem <> hp_stepS constr
R105166:105173 CertiOS.framework.model.opsem <> hp_stepO constr
R105166:105173 CertiOS.framework.model.opsem <> hp_stepO constr
R105186:105192 CertiOS.framework.model.opsem <> hi_step constr
R105186:105192 CertiOS.framework.model.opsem <> hi_step constr
R105265:105265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105283:105283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105286:105286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105266:105266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105274:105274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105282:105282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105265:105265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105283:105283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105286:105286 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105266:105266 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105274:105274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105282:105282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105312:105319 CertiOS.framework.model.opsem <> lintstep ind
R105427:105427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105430:105431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105438:105439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105441:105442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105459:105460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105482:105482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105432:105437 CertiOS.framework.logic.assertion <> empenv syndef
R105443:105448 CertiOS.framework.model.language <> isrupd def
R105455:105458 Coq.Init.Datatypes <> true constr
R105461:105461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105467:105468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105476:105477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105481:105481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105462:105466 Coq.Init.Datatypes <> false constr
R105470:105473 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R105478:105480 Coq.Init.Datatypes <> nil constr
R105382:105382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105389:105390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105415:105415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105383:105386 CertiOS.framework.model.language <> curs constr
R105391:105391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105397:105398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105414:105414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105392:105396 CertiOS.framework.model.language <> kenil constr
R105399:105402 CertiOS.framework.model.language <> kint constr
R105339:105339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105342:105343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105346:105347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105349:105350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105353:105354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105370:105370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105355:105355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105360:105361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105364:105365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105369:105369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105356:105359 Coq.Init.Datatypes <> true constr
R105366:105368 Coq.Init.Datatypes <> nil constr
R105325:105325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105327:105328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105337:105337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105329:105329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105332:105333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105336:105336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105312:105319 CertiOS.framework.model.opsem <> lintstep ind
R105427:105427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105430:105431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105438:105439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105441:105442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105459:105460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105482:105482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105432:105437 CertiOS.framework.logic.assertion <> empenv syndef
R105443:105448 CertiOS.framework.model.language <> isrupd def
R105455:105458 Coq.Init.Datatypes <> true constr
R105461:105461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105467:105468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105476:105477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105481:105481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105462:105466 Coq.Init.Datatypes <> false constr
R105470:105473 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R105478:105480 Coq.Init.Datatypes <> nil constr
R105382:105382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105389:105390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105415:105415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105383:105386 CertiOS.framework.model.language <> curs constr
R105391:105391 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105397:105398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105414:105414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105392:105396 CertiOS.framework.model.language <> kenil constr
R105399:105402 CertiOS.framework.model.language <> kint constr
R105339:105339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105342:105343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105346:105347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105349:105350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105353:105354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105370:105370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105355:105355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105360:105361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105364:105365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105369:105369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105356:105359 Coq.Init.Datatypes <> true constr
R105366:105368 Coq.Init.Datatypes <> nil constr
R105325:105325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105327:105328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105337:105337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105329:105329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105332:105333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105336:105336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105516:105528 CertiOS.framework.proof.invariant_prop <> int_mem_trans thm
R105516:105528 CertiOS.framework.proof.invariant_prop <> int_mem_trans thm
R105650:105662 CertiOS.framework.proof.auxdef TMSpecMod put def
R105671:105675 CertiOS.framework.auxlibs.Maps <> merge meth
R105650:105662 CertiOS.framework.proof.auxdef TMSpecMod put def
R105671:105675 CertiOS.framework.auxlibs.Maps <> merge meth
R105698:105710 CertiOS.framework.proof.auxdef TOSpecMod put def
R105719:105723 CertiOS.framework.auxlibs.Maps <> merge meth
R105698:105710 CertiOS.framework.proof.auxdef TOSpecMod put def
R105719:105723 CertiOS.framework.auxlibs.Maps <> merge meth
R105746:105750 CertiOS.framework.auxlibs.Maps <> merge meth
R105769:105773 CertiOS.framework.auxlibs.Maps <> merge meth
R105746:105750 CertiOS.framework.auxlibs.Maps <> merge meth
R105769:105773 CertiOS.framework.auxlibs.Maps <> merge meth
R105879:105891 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R105879:105891 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R105910:105925 CertiOS.framework.proof.step_prop <> lpstep_good_is_S thm
R105910:105925 CertiOS.framework.proof.step_prop <> lpstep_good_is_S thm
R105947:105947 Coq.Init.Logic <> :type_scope:x_'='_x not
R105966:105970 Coq.Init.Logic <> :type_scope:x_'='_x not
R106048:106048 Coq.Init.Logic <> :type_scope:x_'='_x not
R105948:105950 Coq.Init.Datatypes <> snd def
R105953:105955 Coq.Init.Datatypes <> fst def
R105958:105960 Coq.Init.Datatypes <> fst def
R105971:105973 Coq.Init.Datatypes <> snd def
R105976:105978 Coq.Init.Datatypes <> fst def
R105981:105983 Coq.Init.Datatypes <> fst def
R105985:105985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105988:105989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105996:105997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105999:106000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106017:106018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106045:106045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105990:105995 CertiOS.framework.logic.assertion <> empenv syndef
R106001:106006 CertiOS.framework.model.language <> isrupd def
R106013:106016 Coq.Init.Datatypes <> true constr
R106019:106019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106025:106026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106034:106036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106043:106044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106020:106024 Coq.Init.Datatypes <> false constr
R106028:106031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106041:106042 CertiOS.framework.model.language <> cs def
R106037:106039 Coq.Init.Datatypes <> nil constr
R105947:105947 Coq.Init.Logic <> :type_scope:x_'='_x not
R105966:105970 Coq.Init.Logic <> :type_scope:x_'='_x not
R106048:106048 Coq.Init.Logic <> :type_scope:x_'='_x not
R105948:105950 Coq.Init.Datatypes <> snd def
R105953:105955 Coq.Init.Datatypes <> fst def
R105958:105960 Coq.Init.Datatypes <> fst def
R105971:105973 Coq.Init.Datatypes <> snd def
R105976:105978 Coq.Init.Datatypes <> fst def
R105981:105983 Coq.Init.Datatypes <> fst def
R105985:105985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105988:105989 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105996:105997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105999:106000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106017:106018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106045:106045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R105990:105995 CertiOS.framework.logic.assertion <> empenv syndef
R106001:106006 CertiOS.framework.model.language <> isrupd def
R106013:106016 Coq.Init.Datatypes <> true constr
R106019:106019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106025:106026 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106034:106036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106043:106044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106020:106024 Coq.Init.Datatypes <> false constr
R106028:106031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106041:106042 CertiOS.framework.model.language <> cs def
R106037:106039 Coq.Init.Datatypes <> nil constr
R106067:106075 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R106067:106075 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R106106:106106 Coq.Init.Logic <> :type_scope:x_'='_x not
R106125:106129 Coq.Init.Logic <> :type_scope:x_'='_x not
R106183:106183 Coq.Init.Logic <> :type_scope:x_'='_x not
R106107:106109 Coq.Init.Datatypes <> snd def
R106112:106114 Coq.Init.Datatypes <> fst def
R106117:106119 Coq.Init.Datatypes <> fst def
R106130:106132 Coq.Init.Datatypes <> snd def
R106135:106137 Coq.Init.Datatypes <> fst def
R106140:106142 Coq.Init.Datatypes <> fst def
R106144:106144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106147:106148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106151:106152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106154:106155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106158:106159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106180:106180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106160:106160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106165:106166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106169:106171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106178:106179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106161:106164 Coq.Init.Datatypes <> true constr
R106176:106177 CertiOS.framework.model.language <> cs def
R106172:106174 Coq.Init.Datatypes <> nil constr
R106106:106106 Coq.Init.Logic <> :type_scope:x_'='_x not
R106125:106129 Coq.Init.Logic <> :type_scope:x_'='_x not
R106183:106183 Coq.Init.Logic <> :type_scope:x_'='_x not
R106107:106109 Coq.Init.Datatypes <> snd def
R106112:106114 Coq.Init.Datatypes <> fst def
R106117:106119 Coq.Init.Datatypes <> fst def
R106130:106132 Coq.Init.Datatypes <> snd def
R106135:106137 Coq.Init.Datatypes <> fst def
R106140:106142 Coq.Init.Datatypes <> fst def
R106144:106144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106147:106148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106151:106152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106154:106155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106158:106159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106180:106180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106160:106160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106165:106166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106169:106171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106178:106179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106161:106164 Coq.Init.Datatypes <> true constr
R106176:106177 CertiOS.framework.model.language <> cs def
R106172:106174 Coq.Init.Datatypes <> nil constr
R106197:106205 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R106197:106205 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R106310:106329 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R106310:106329 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R106384:106395 CertiOS.framework.proof.invariant_prop <> part_merge_m thm
R106384:106395 CertiOS.framework.proof.invariant_prop <> part_merge_m thm
R106520:106539 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R106520:106539 CertiOS.tactics.basetac.join_lib <> join_join_join_merge thm
R106589:106600 CertiOS.framework.proof.invariant_prop <> part_merge_o thm
R106589:106600 CertiOS.framework.proof.invariant_prop <> part_merge_o thm
R106799:106799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106802:106804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106815:106817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106819:106820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106837:106838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106865:106865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106812:106814 CertiOS.framework.model.memory <> env def
R106805:106810 CertiOS.framework.logic.assertion <> empenv syndef
R106821:106826 CertiOS.framework.model.language <> isrupd def
R106833:106836 Coq.Init.Datatypes <> true constr
R106839:106839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106845:106846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106854:106856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106863:106864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106840:106844 Coq.Init.Datatypes <> false constr
R106848:106851 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106861:106862 CertiOS.framework.model.language <> cs def
R106857:106859 Coq.Init.Datatypes <> nil constr
R106868:106877 CertiOS.framework.logic.assertion <> substaskst def
R106948:106952 CertiOS.framework.auxlibs.Maps <> merge meth
R106879:106879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106882:106884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106895:106897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106899:106900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106917:106918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106945:106945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106892:106894 CertiOS.framework.model.memory <> env def
R106885:106890 CertiOS.framework.logic.assertion <> empenv syndef
R106901:106906 CertiOS.framework.model.language <> isrupd def
R106913:106916 Coq.Init.Datatypes <> true constr
R106919:106919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106925:106926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106934:106936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106943:106944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106920:106924 Coq.Init.Datatypes <> false constr
R106928:106931 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106941:106942 CertiOS.framework.model.language <> cs def
R106937:106939 Coq.Init.Datatypes <> nil constr
R106964:106968 CertiOS.framework.auxlibs.Maps <> merge meth
R106979:106983 CertiOS.framework.auxlibs.Maps <> merge meth
R106993:106994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107001:107003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107031:107031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106995:106998 CertiOS.framework.model.language <> curs constr
R107004:107004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107010:107013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107029:107030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107005:107009 CertiOS.framework.model.language <> kenil constr
R107014:107017 CertiOS.framework.model.language <> kint constr
R107033:107033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107054:107055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107082:107082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107034:107037 CertiOS.framework.model.language <> curs constr
R107040:107048 CertiOS.framework.model.language <> hapi_code constr
R107056:107056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107062:107063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107081:107081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107057:107061 CertiOS.framework.model.language <> kenil constr
R107064:107069 CertiOS.framework.model.language <> kevent constr
R106799:106799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106802:106804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106815:106817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106819:106820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106837:106838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106865:106865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106812:106814 CertiOS.framework.model.memory <> env def
R106805:106810 CertiOS.framework.logic.assertion <> empenv syndef
R106821:106826 CertiOS.framework.model.language <> isrupd def
R106833:106836 Coq.Init.Datatypes <> true constr
R106839:106839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106845:106846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106854:106856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106863:106864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106840:106844 Coq.Init.Datatypes <> false constr
R106848:106851 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106861:106862 CertiOS.framework.model.language <> cs def
R106857:106859 Coq.Init.Datatypes <> nil constr
R106868:106877 CertiOS.framework.logic.assertion <> substaskst def
R106948:106952 CertiOS.framework.auxlibs.Maps <> merge meth
R106879:106879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106882:106884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106895:106897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106899:106900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106917:106918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106945:106945 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106892:106894 CertiOS.framework.model.memory <> env def
R106885:106890 CertiOS.framework.logic.assertion <> empenv syndef
R106901:106906 CertiOS.framework.model.language <> isrupd def
R106913:106916 Coq.Init.Datatypes <> true constr
R106919:106919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106925:106926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106934:106936 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106943:106944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106920:106924 Coq.Init.Datatypes <> false constr
R106928:106931 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R106941:106942 CertiOS.framework.model.language <> cs def
R106937:106939 Coq.Init.Datatypes <> nil constr
R106964:106968 CertiOS.framework.auxlibs.Maps <> merge meth
R106979:106983 CertiOS.framework.auxlibs.Maps <> merge meth
R106993:106994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107001:107003 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107031:107031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R106995:106998 CertiOS.framework.model.language <> curs constr
R107004:107004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107010:107013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107029:107030 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107005:107009 CertiOS.framework.model.language <> kenil constr
R107014:107017 CertiOS.framework.model.language <> kint constr
R107033:107033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107054:107055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107082:107082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107034:107037 CertiOS.framework.model.language <> curs constr
R107040:107048 CertiOS.framework.model.language <> hapi_code constr
R107056:107056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107062:107063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107081:107081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107057:107061 CertiOS.framework.model.language <> kenil constr
R107064:107069 CertiOS.framework.model.language <> kevent constr
R107106:107125 CertiOS.framework.proof.auxdef TMSpecMod ext_mapsto thm
R107106:107125 CertiOS.framework.proof.auxdef TMSpecMod ext_mapsto thm
R107165:107184 CertiOS.framework.model.language TasksMod set_a_get_a thm
R107165:107184 CertiOS.framework.model.language TasksMod set_a_get_a thm
R107197:107207 CertiOS.framework.auxlibs.Modules tidspec beq def
R107219:107237 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R107219:107237 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R107259:107278 CertiOS.framework.model.language TasksMod set_a_get_a thm
R107259:107278 CertiOS.framework.model.language TasksMod set_a_get_a thm
R107291:107301 CertiOS.framework.auxlibs.Modules tidspec beq def
R107313:107331 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R107313:107331 CertiOS.framework.auxlibs.Modules tidspec eq_beq_true thm
R107454:107471 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R107454:107471 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R107485:107492 CertiOS.framework.auxlibs.Maps <> disjoint def
R107485:107492 CertiOS.framework.auxlibs.Maps <> disjoint def
R107512:107521 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R107512:107521 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R107614:107621 CertiOS.framework.auxlibs.Maps <> disjoint def
R107654:107661 CertiOS.framework.auxlibs.Maps <> disjoint def
R107654:107661 CertiOS.framework.auxlibs.Maps <> disjoint def
R107681:107690 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R107681:107690 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R107785:107792 CertiOS.framework.auxlibs.Maps <> disjoint def
R107824:107841 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R107824:107841 CertiOS.framework.proof.invariant_prop <> CurLINV_ignore_int thm
R107871:107872 Coq.Init.Logic <> :type_scope:x_'='_x not
R107873:107873 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107875:107876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107885:107885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107877:107877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107880:107881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107884:107884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107871:107872 Coq.Init.Logic <> :type_scope:x_'='_x not
R107873:107873 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107875:107876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107885:107885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107877:107877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107880:107881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107884:107884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R107910:107912 CertiOS.framework.auxlibs.Modules <> tid def
R108157:108165 CertiOS.framework.proof.lemmasfortoptheo <> lintstep' ind
R108287:108287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108290:108291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108298:108299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108301:108302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108319:108320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108342:108342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108292:108297 CertiOS.framework.logic.assertion <> empenv syndef
R108303:108308 CertiOS.framework.model.language <> isrupd def
R108315:108318 Coq.Init.Datatypes <> true constr
R108321:108321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108327:108328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108336:108337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108341:108341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108322:108326 Coq.Init.Datatypes <> false constr
R108330:108333 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108338:108340 Coq.Init.Datatypes <> nil constr
R108236:108236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108243:108244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108269:108269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108237:108240 CertiOS.framework.model.language <> curs constr
R108245:108245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108251:108252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108268:108268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108246:108250 CertiOS.framework.model.language <> kenil constr
R108253:108256 CertiOS.framework.model.language <> kint constr
R108187:108187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108190:108191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108194:108195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108197:108198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108201:108202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108218:108218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108203:108203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108208:108209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108212:108213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108217:108217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108204:108207 Coq.Init.Datatypes <> true constr
R108214:108216 Coq.Init.Datatypes <> nil constr
R108173:108173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108175:108176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108185:108185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108177:108177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108180:108181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108184:108184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108157:108165 CertiOS.framework.proof.lemmasfortoptheo <> lintstep' ind
R108287:108287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108290:108291 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108298:108299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108301:108302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108319:108320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108342:108342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108292:108297 CertiOS.framework.logic.assertion <> empenv syndef
R108303:108308 CertiOS.framework.model.language <> isrupd def
R108315:108318 Coq.Init.Datatypes <> true constr
R108321:108321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108327:108328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108336:108337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108341:108341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108322:108326 Coq.Init.Datatypes <> false constr
R108330:108333 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R108338:108340 Coq.Init.Datatypes <> nil constr
R108236:108236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108243:108244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108269:108269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108237:108240 CertiOS.framework.model.language <> curs constr
R108245:108245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108251:108252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108268:108268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108246:108250 CertiOS.framework.model.language <> kenil constr
R108253:108256 CertiOS.framework.model.language <> kint constr
R108187:108187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108190:108191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108194:108195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108197:108198 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108201:108202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108218:108218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108203:108203 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108208:108209 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108212:108213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108217:108217 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108204:108207 Coq.Init.Datatypes <> true constr
R108214:108216 Coq.Init.Datatypes <> nil constr
R108173:108173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108175:108176 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108185:108185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108177:108177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108180:108181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108184:108184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R108366:108372 CertiOS.framework.proof.lemmasfortoptheo <> li_step constr
R108366:108372 CertiOS.framework.proof.lemmasfortoptheo <> li_step constr
R108498:108507 CertiOS.framework.proof.auxdef <> InitTaskSt def
R108393:108399 CertiOS.framework.proof.lemmasfortoptheo <> IntSeq' thm
R108498:108507 CertiOS.framework.proof.auxdef <> InitTaskSt def
R108393:108399 CertiOS.framework.proof.lemmasfortoptheo <> IntSeq' thm
R108800:108809 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R108800:108809 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R108864:108873 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R108864:108873 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R108946:108947 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R108946:108947 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R109143:109144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109157:109159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109172:109174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109181:109182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109145:109147 Coq.Init.Datatypes <> fst def
R109150:109152 Coq.Init.Datatypes <> fst def
R109160:109162 Coq.Init.Datatypes <> snd def
R109165:109167 Coq.Init.Datatypes <> fst def
R109175:109177 Coq.Init.Datatypes <> snd def
R109143:109144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109157:109159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109172:109174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109181:109182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109145:109147 Coq.Init.Datatypes <> fst def
R109150:109152 Coq.Init.Datatypes <> fst def
R109160:109162 Coq.Init.Datatypes <> snd def
R109165:109167 Coq.Init.Datatypes <> fst def
R109175:109177 Coq.Init.Datatypes <> snd def
R109258:109262 CertiOS.framework.auxlibs.Maps <> merge meth
R109226:109239 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R109258:109262 CertiOS.framework.auxlibs.Maps <> merge meth
R109226:109239 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R109319:109323 CertiOS.framework.auxlibs.Maps <> merge meth
R109287:109300 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R109319:109323 CertiOS.framework.auxlibs.Maps <> merge meth
R109287:109300 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R109366:109381 CertiOS.framework.proof.lemmasfortoptheo <> projs_steq_projs thm
R109366:109381 CertiOS.framework.proof.lemmasfortoptheo <> projs_steq_projs thm
R109460:109474 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R109460:109474 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R109498:109514 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R109498:109514 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R109498:109514 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R109498:109514 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R109600:109601 Coq.Init.Logic <> :type_scope:x_'='_x not
R109572:109580 CertiOS.framework.proof.auxdef <> RdyChange def
R109583:109592 CertiOS.framework.logic.assertion <> substaskst def
R109602:109610 CertiOS.framework.proof.auxdef <> RdyChange def
R109613:109622 CertiOS.framework.logic.assertion <> substaskst def
R109624:109624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109637:109638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109651:109652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109659:109659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109625:109627 Coq.Init.Datatypes <> fst def
R109630:109632 Coq.Init.Datatypes <> fst def
R109639:109641 Coq.Init.Datatypes <> snd def
R109644:109646 Coq.Init.Datatypes <> fst def
R109653:109655 Coq.Init.Datatypes <> snd def
R109600:109601 Coq.Init.Logic <> :type_scope:x_'='_x not
R109572:109580 CertiOS.framework.proof.auxdef <> RdyChange def
R109583:109592 CertiOS.framework.logic.assertion <> substaskst def
R109602:109610 CertiOS.framework.proof.auxdef <> RdyChange def
R109613:109622 CertiOS.framework.logic.assertion <> substaskst def
R109624:109624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109637:109638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109651:109652 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109659:109659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109625:109627 Coq.Init.Datatypes <> fst def
R109630:109632 Coq.Init.Datatypes <> fst def
R109639:109641 Coq.Init.Datatypes <> snd def
R109644:109646 Coq.Init.Datatypes <> fst def
R109653:109655 Coq.Init.Datatypes <> snd def
R109850:109851 Coq.Init.Logic <> :type_scope:x_'='_x not
R109811:109819 CertiOS.framework.proof.auxdef <> RdyChange def
R109822:109831 CertiOS.framework.logic.assertion <> substaskst def
R109837:109841 CertiOS.framework.auxlibs.Maps <> merge meth
R109852:109860 CertiOS.framework.proof.auxdef <> RdyChange def
R109863:109872 CertiOS.framework.logic.assertion <> substaskst def
R109912:109916 CertiOS.framework.auxlibs.Maps <> merge meth
R109874:109874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109887:109888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109901:109902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109909:109909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109875:109877 Coq.Init.Datatypes <> fst def
R109880:109882 Coq.Init.Datatypes <> fst def
R109889:109891 Coq.Init.Datatypes <> snd def
R109894:109896 Coq.Init.Datatypes <> fst def
R109903:109905 Coq.Init.Datatypes <> snd def
R109850:109851 Coq.Init.Logic <> :type_scope:x_'='_x not
R109811:109819 CertiOS.framework.proof.auxdef <> RdyChange def
R109822:109831 CertiOS.framework.logic.assertion <> substaskst def
R109837:109841 CertiOS.framework.auxlibs.Maps <> merge meth
R109852:109860 CertiOS.framework.proof.auxdef <> RdyChange def
R109863:109872 CertiOS.framework.logic.assertion <> substaskst def
R109912:109916 CertiOS.framework.auxlibs.Maps <> merge meth
R109874:109874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109887:109888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109901:109902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109909:109909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R109875:109877 Coq.Init.Datatypes <> fst def
R109880:109882 Coq.Init.Datatypes <> fst def
R109889:109891 Coq.Init.Datatypes <> snd def
R109894:109896 Coq.Init.Datatypes <> fst def
R109903:109905 Coq.Init.Datatypes <> snd def
R110015:110035 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R110015:110035 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R110015:110035 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R110015:110035 CertiOS.framework.model.language TasksMod set_a_get_a' thm
R110063:110083 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R110063:110083 CertiOS.framework.auxlibs.Modules tidspec neq_beq_false thm
R110136:110147 CertiOS.framework.proof.lemmasfortoptheo <> eqdomTO_setT thm
R110136:110147 CertiOS.framework.proof.lemmasfortoptheo <> eqdomTO_setT thm
R110249:110257 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R110249:110257 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R110775:110775 Coq.Init.Logic <> :type_scope:x_'='_x not
R110775:110775 Coq.Init.Logic <> :type_scope:x_'='_x not
R110864:110866 CertiOS.framework.auxlibs.Modules <> tid def
R111100:111102 Coq.Init.Logic <> :type_scope:x_'='_x not
R111069:111078 CertiOS.framework.logic.assertion <> substaskst def
R111081:111090 CertiOS.framework.logic.assertion <> substaskst def
R111100:111102 Coq.Init.Logic <> :type_scope:x_'='_x not
R111069:111078 CertiOS.framework.logic.assertion <> substaskst def
R111081:111090 CertiOS.framework.logic.assertion <> substaskst def
R111146:111167 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R111146:111167 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R111216:111219 CertiOS.framework.logic.inferules <> satp def
R111330:111334 CertiOS.framework.auxlibs.Maps <> minus meth
R111348:111352 CertiOS.framework.auxlibs.Maps <> merge meth
R111330:111334 CertiOS.framework.auxlibs.Maps <> minus meth
R111348:111352 CertiOS.framework.auxlibs.Maps <> merge meth
R111503:111507 CertiOS.framework.auxlibs.Maps <> minus meth
R111472:111489 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R111503:111507 CertiOS.framework.auxlibs.Maps <> minus meth
R111472:111489 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R111560:111562 CertiOS.framework.auxlibs.Maps <> set meth
R111560:111562 CertiOS.framework.auxlibs.Maps <> set meth
R111599:111615 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R111599:111615 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R111692:111709 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R111692:111709 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R111738:111744 CertiOS.framework.model.opsem <> tidsame def
R111768:111770 CertiOS.framework.auxlibs.Maps <> get meth
R111906:111918 CertiOS.framework.proof.auxdef TMSpecMod put def
R111927:111933 CertiOS.framework.model.opsem <> get_mem def
R111936:111943 CertiOS.framework.model.language <> get_smem def
R111906:111918 CertiOS.framework.proof.auxdef TMSpecMod put def
R111927:111933 CertiOS.framework.model.opsem <> get_mem def
R111936:111943 CertiOS.framework.model.language <> get_smem def
R111975:111987 CertiOS.framework.proof.auxdef TOSpecMod put def
R112000:112004 CertiOS.framework.auxlibs.Maps <> minus meth
R112022:112026 CertiOS.framework.auxlibs.Maps <> minus meth
R112029:112035 CertiOS.framework.model.opsem <> get_mem def
R112038:112045 CertiOS.framework.model.language <> get_smem def
R111975:111987 CertiOS.framework.proof.auxdef TOSpecMod put def
R112000:112004 CertiOS.framework.auxlibs.Maps <> minus meth
R112022:112026 CertiOS.framework.auxlibs.Maps <> minus meth
R112029:112035 CertiOS.framework.model.opsem <> get_mem def
R112038:112045 CertiOS.framework.model.language <> get_smem def
R112177:112189 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R112177:112189 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R112208:112223 CertiOS.framework.proof.step_prop <> lpstep_good_is_S thm
R112208:112223 CertiOS.framework.proof.step_prop <> lpstep_good_is_S thm
R112265:112267 Coq.Init.Logic <> :type_scope:x_'='_x not
R112247:112249 Coq.Init.Datatypes <> snd def
R112252:112254 Coq.Init.Datatypes <> fst def
R112257:112259 Coq.Init.Datatypes <> fst def
R112268:112270 Coq.Init.Datatypes <> snd def
R112273:112275 Coq.Init.Datatypes <> fst def
R112278:112280 Coq.Init.Datatypes <> fst def
R112282:112282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112284:112285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112288:112289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112291:112292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112294:112295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112297:112297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112265:112267 Coq.Init.Logic <> :type_scope:x_'='_x not
R112247:112249 Coq.Init.Datatypes <> snd def
R112252:112254 Coq.Init.Datatypes <> fst def
R112257:112259 Coq.Init.Datatypes <> fst def
R112268:112270 Coq.Init.Datatypes <> snd def
R112273:112275 Coq.Init.Datatypes <> fst def
R112278:112280 Coq.Init.Datatypes <> fst def
R112282:112282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112284:112285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112288:112289 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112291:112292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112294:112295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112297:112297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112312:112320 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R112312:112320 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R112379:112395 CertiOS.framework.proof.joinmemLib <> joinm2_minus_join thm
R112379:112395 CertiOS.framework.proof.joinmemLib <> joinm2_minus_join thm
R112424:112441 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R112424:112441 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R112462:112473 CertiOS.framework.proof.invariant_prop <> partM_normal thm
R112462:112473 CertiOS.framework.proof.invariant_prop <> partM_normal thm
R112492:112506 CertiOS.tactics.basetac.join_lib <> join_join_minus thm
R112492:112506 CertiOS.tactics.basetac.join_lib <> join_join_minus thm
R112529:112546 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R112529:112546 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R112565:112576 CertiOS.framework.proof.invariant_prop <> partO_normal thm
R112565:112576 CertiOS.framework.proof.invariant_prop <> partO_normal thm
R112602:112602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112604:112605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112608:112609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112611:112612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112614:112615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112617:112617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112619:112619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112621:112622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112625:112626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112630:112631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112633:112634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112636:112636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112602:112602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112604:112605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112608:112609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112611:112612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112614:112615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112617:112617 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112619:112619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112621:112622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112625:112626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112630:112631 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112633:112634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112636:112636 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112687:112688 Coq.Init.Logic <> :type_scope:x_'='_x not
R112670:112679 CertiOS.framework.logic.assertion <> substaskst def
R112689:112689 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112691:112692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112695:112696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112700:112701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112703:112704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112706:112706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112687:112688 Coq.Init.Logic <> :type_scope:x_'='_x not
R112670:112679 CertiOS.framework.logic.assertion <> substaskst def
R112689:112689 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112691:112692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112695:112696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112700:112701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112703:112704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112706:112706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112786:112792 CertiOS.framework.logic.assertion <> joinmem def
R112877:112877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112879:112880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112883:112884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112886:112887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112889:112890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112892:112892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112908:112914 CertiOS.framework.model.opsem <> get_mem def
R112917:112924 CertiOS.framework.model.language <> get_smem def
R112877:112877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112879:112880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112883:112884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112886:112887 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112889:112890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112892:112892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R112908:112914 CertiOS.framework.model.opsem <> get_mem def
R112917:112924 CertiOS.framework.model.language <> get_smem def
R113020:113026 CertiOS.framework.logic.assertion <> joinmem def
R113072:113082 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R113072:113082 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R113094:113104 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R113094:113104 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R113182:113183 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R113182:113183 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R113323:113323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113373:113374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113387:113401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113408:113409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113324:113325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113335:113337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113359:113361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113371:113372 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113326:113331 CertiOS.framework.model.opsem <> gets_g def
R113338:113344 CertiOS.framework.model.opsem <> get_env def
R113347:113354 CertiOS.framework.model.language <> get_smem def
R113362:113367 CertiOS.framework.model.opsem <> gets_m def
R113375:113377 Coq.Init.Datatypes <> snd def
R113380:113382 Coq.Init.Datatypes <> fst def
R113402:113404 Coq.Init.Datatypes <> snd def
R113323:113323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113373:113374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113387:113401 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113408:113409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113324:113325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113335:113337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113359:113361 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113371:113372 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113326:113331 CertiOS.framework.model.opsem <> gets_g def
R113338:113344 CertiOS.framework.model.opsem <> get_env def
R113347:113354 CertiOS.framework.model.language <> get_smem def
R113362:113367 CertiOS.framework.model.opsem <> gets_m def
R113375:113377 Coq.Init.Datatypes <> snd def
R113380:113382 Coq.Init.Datatypes <> fst def
R113402:113404 Coq.Init.Datatypes <> snd def
R113481:113487 CertiOS.framework.model.opsem <> get_mem def
R113490:113497 CertiOS.framework.model.language <> get_smem def
R113449:113462 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R113481:113487 CertiOS.framework.model.opsem <> get_mem def
R113490:113497 CertiOS.framework.model.language <> get_smem def
R113449:113462 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R113519:113532 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R113519:113532 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R113576:113588 CertiOS.framework.proof.lemmasfortoptheo <> proj_stneq_ex thm
R113576:113588 CertiOS.framework.proof.lemmasfortoptheo <> proj_stneq_ex thm
R113631:113647 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R113631:113647 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R113631:113647 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R113631:113647 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R113676:113690 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R113676:113690 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R113799:113801 Coq.Init.Logic <> :type_scope:x_'='_x not
R113704:113713 CertiOS.framework.logic.assertion <> substaskst def
R113728:113728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113738:113739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113761:113762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113772:113773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113786:113787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113794:113794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113729:113734 CertiOS.framework.model.opsem <> gets_g def
R113740:113746 CertiOS.framework.model.opsem <> get_env def
R113749:113756 CertiOS.framework.model.language <> get_smem def
R113763:113768 CertiOS.framework.model.opsem <> gets_m def
R113774:113776 Coq.Init.Datatypes <> snd def
R113779:113781 Coq.Init.Datatypes <> fst def
R113788:113790 Coq.Init.Datatypes <> snd def
R113802:113811 CertiOS.framework.logic.assertion <> substaskst def
R113799:113801 Coq.Init.Logic <> :type_scope:x_'='_x not
R113704:113713 CertiOS.framework.logic.assertion <> substaskst def
R113728:113728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113738:113739 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113761:113762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113772:113773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113786:113787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113794:113794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R113729:113734 CertiOS.framework.model.opsem <> gets_g def
R113740:113746 CertiOS.framework.model.opsem <> get_env def
R113749:113756 CertiOS.framework.model.language <> get_smem def
R113763:113768 CertiOS.framework.model.opsem <> gets_m def
R113774:113776 Coq.Init.Datatypes <> snd def
R113779:113781 Coq.Init.Datatypes <> fst def
R113788:113790 Coq.Init.Datatypes <> snd def
R113802:113811 CertiOS.framework.logic.assertion <> substaskst def
R113949:113954 CertiOS.framework.model.opsem <> gets_g def
R113956:113962 CertiOS.framework.model.opsem <> get_env def
R113990:113992 CertiOS.framework.auxlibs.Modules <> tid def
R114013:114015 CertiOS.framework.auxlibs.Maps <> get meth
R114013:114015 CertiOS.framework.auxlibs.Maps <> get meth
R114067:114069 CertiOS.framework.auxlibs.Maps <> get meth
R114067:114069 CertiOS.framework.auxlibs.Maps <> get meth
R114158:114160 Coq.Init.Logic <> :type_scope:x_'='_x not
R114149:114154 CertiOS.framework.model.opsem <> gets_g def
R114161:114166 CertiOS.framework.model.opsem <> gets_g def
R114183:114193 CertiOS.framework.proof.step_prop <> ge_n_change thm
R114158:114160 Coq.Init.Logic <> :type_scope:x_'='_x not
R114149:114154 CertiOS.framework.model.opsem <> gets_g def
R114161:114166 CertiOS.framework.model.opsem <> gets_g def
R114183:114193 CertiOS.framework.proof.step_prop <> ge_n_change thm
R114303:114305 Coq.Init.Logic <> :type_scope:x_'='_x not
R114294:114299 CertiOS.framework.model.opsem <> gets_g def
R114306:114311 CertiOS.framework.model.opsem <> gets_g def
R114328:114338 CertiOS.framework.proof.step_prop <> ge_n_change thm
R114303:114305 Coq.Init.Logic <> :type_scope:x_'='_x not
R114294:114299 CertiOS.framework.model.opsem <> gets_g def
R114306:114311 CertiOS.framework.model.opsem <> gets_g def
R114328:114338 CertiOS.framework.proof.step_prop <> ge_n_change thm
R114508:114510 Coq.Init.Logic <> :type_scope:x_'='_x not
R114369:114377 CertiOS.framework.proof.auxdef <> RdyChange def
R114393:114402 CertiOS.framework.logic.assertion <> substaskst def
R114505:114506 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R114420:114420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114430:114431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114453:114471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114481:114482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114495:114496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114503:114503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114421:114426 CertiOS.framework.model.opsem <> gets_g def
R114432:114438 CertiOS.framework.model.opsem <> get_env def
R114441:114448 CertiOS.framework.model.language <> get_smem def
R114472:114477 CertiOS.framework.model.opsem <> gets_m def
R114483:114485 Coq.Init.Datatypes <> snd def
R114488:114490 Coq.Init.Datatypes <> fst def
R114497:114499 Coq.Init.Datatypes <> snd def
R114511:114519 CertiOS.framework.proof.auxdef <> RdyChange def
R114522:114531 CertiOS.framework.logic.assertion <> substaskst def
R114536:114537 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R114508:114510 Coq.Init.Logic <> :type_scope:x_'='_x not
R114369:114377 CertiOS.framework.proof.auxdef <> RdyChange def
R114393:114402 CertiOS.framework.logic.assertion <> substaskst def
R114505:114506 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R114420:114420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114430:114431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114453:114471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114481:114482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114495:114496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114503:114503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R114421:114426 CertiOS.framework.model.opsem <> gets_g def
R114432:114438 CertiOS.framework.model.opsem <> get_env def
R114441:114448 CertiOS.framework.model.language <> get_smem def
R114472:114477 CertiOS.framework.model.opsem <> gets_m def
R114483:114485 Coq.Init.Datatypes <> snd def
R114488:114490 Coq.Init.Datatypes <> fst def
R114497:114499 Coq.Init.Datatypes <> snd def
R114511:114519 CertiOS.framework.proof.auxdef <> RdyChange def
R114522:114531 CertiOS.framework.logic.assertion <> substaskst def
R114536:114537 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R114682:114687 CertiOS.framework.model.opsem <> gets_g def
R114689:114695 CertiOS.framework.model.opsem <> get_env def
R114728:114730 CertiOS.framework.auxlibs.Modules <> tid def
R114751:114753 CertiOS.framework.auxlibs.Maps <> get meth
R114751:114753 CertiOS.framework.auxlibs.Maps <> get meth
R114805:114807 CertiOS.framework.auxlibs.Maps <> get meth
R114805:114807 CertiOS.framework.auxlibs.Maps <> get meth
R115041:115057 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R115041:115057 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R115075:115097 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R115075:115097 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R115179:115179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115182:115182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115184:115184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115116:115129 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R115179:115179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115182:115182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115184:115184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R115116:115129 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R115203:115219 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R115203:115219 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R115252:115267 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R115252:115267 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R115286:115294 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R115286:115294 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R115315:115332 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R115315:115332 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R115353:115353 Coq.Init.Logic <> :type_scope:x_'='_x not
R115372:115376 Coq.Init.Logic <> :type_scope:x_'='_x not
R115394:115395 Coq.Init.Logic <> :type_scope:x_'='_x not
R115354:115356 Coq.Init.Datatypes <> snd def
R115359:115361 Coq.Init.Datatypes <> fst def
R115364:115366 Coq.Init.Datatypes <> fst def
R115377:115379 Coq.Init.Datatypes <> snd def
R115382:115384 Coq.Init.Datatypes <> fst def
R115387:115389 Coq.Init.Datatypes <> fst def
R115353:115353 Coq.Init.Logic <> :type_scope:x_'='_x not
R115372:115376 Coq.Init.Logic <> :type_scope:x_'='_x not
R115394:115395 Coq.Init.Logic <> :type_scope:x_'='_x not
R115354:115356 Coq.Init.Datatypes <> snd def
R115359:115361 Coq.Init.Datatypes <> fst def
R115364:115366 Coq.Init.Datatypes <> fst def
R115377:115379 Coq.Init.Datatypes <> snd def
R115382:115384 Coq.Init.Datatypes <> fst def
R115387:115389 Coq.Init.Datatypes <> fst def
R115408:115416 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R115408:115416 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R115551:115558 CertiOS.framework.proof.invariant_prop <> part_sub thm
R115551:115558 CertiOS.framework.proof.invariant_prop <> part_sub thm
R115576:115590 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R115576:115590 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R115603:115612 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R115603:115612 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R116098:116100 Coq.Init.Logic <> :type_scope:x_'='_x not
R116070:116074 CertiOS.framework.model.opsem <> projS def
R116076:116076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116079:116080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116084:116085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116087:116088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116091:116092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116095:116095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116101:116104 Coq.Init.Datatypes <> Some constr
R116098:116100 Coq.Init.Logic <> :type_scope:x_'='_x not
R116070:116074 CertiOS.framework.model.opsem <> projS def
R116076:116076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116079:116080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116084:116085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116087:116088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116091:116092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116095:116095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116101:116104 Coq.Init.Datatypes <> Some constr
R116304:116305 Coq.Init.Logic <> :type_scope:x_'='_x not
R116306:116306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116330:116331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116343:116343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116307:116310 CertiOS.framework.model.language <> curs constr
R116313:116317 CertiOS.framework.model.language <> sprim constr
R116320:116325 CertiOS.framework.model.language <> switch constr
R116332:116332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116338:116339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116342:116342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116333:116337 CertiOS.framework.model.language <> kenil constr
R116304:116305 Coq.Init.Logic <> :type_scope:x_'='_x not
R116306:116306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116330:116331 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116343:116343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116307:116310 CertiOS.framework.model.language <> curs constr
R116313:116317 CertiOS.framework.model.language <> sprim constr
R116320:116325 CertiOS.framework.model.language <> switch constr
R116332:116332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116338:116339 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116342:116342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116333:116337 CertiOS.framework.model.language <> kenil constr
R116357:116359 CertiOS.framework.auxlibs.Modules <> tid def
R116377:116379 CertiOS.framework.auxlibs.Maps <> get meth
R116416:116418 CertiOS.framework.auxlibs.Maps <> get meth
R116513:116517 CertiOS.framework.auxlibs.Maps <> merge meth
R116513:116517 CertiOS.framework.auxlibs.Maps <> merge meth
R116762:116766 CertiOS.framework.auxlibs.Maps <> minus meth
R116731:116748 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R116762:116766 CertiOS.framework.auxlibs.Maps <> minus meth
R116731:116748 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R116832:116847 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R116832:116847 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R116866:116874 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R116866:116874 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R116910:116931 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R116910:116931 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R116910:116931 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R116950:116952 CertiOS.framework.auxlibs.Maps <> set meth
R116959:116959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116982:116983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116985:116985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116960:116963 CertiOS.framework.model.language <> curs constr
R116966:116974 CertiOS.framework.model.language <> hapi_code constr
R116989:116991 CertiOS.framework.auxlibs.Maps <> set meth
R117004:117009 CertiOS.framework.model.language <> oscurt constr
R116996:117001 CertiOS.framework.model.language <> curtid constr
R116950:116952 CertiOS.framework.auxlibs.Maps <> set meth
R116959:116959 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116982:116983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116985:116985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R116960:116963 CertiOS.framework.model.language <> curs constr
R116966:116974 CertiOS.framework.model.language <> hapi_code constr
R116989:116991 CertiOS.framework.auxlibs.Maps <> set meth
R117004:117009 CertiOS.framework.model.language <> oscurt constr
R116996:117001 CertiOS.framework.model.language <> curtid constr
R117216:117220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R117044:117049 CertiOS.framework.model.opsem <> hpstep ind
R117190:117192 CertiOS.framework.auxlibs.Maps <> set meth
R117205:117210 CertiOS.framework.model.language <> oscurt constr
R117197:117202 CertiOS.framework.model.language <> curtid constr
R117137:117148 CertiOS.framework.model.language TasksMod set def
R117155:117155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117178:117179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117181:117181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117156:117159 CertiOS.framework.model.language <> curs constr
R117162:117170 CertiOS.framework.model.language <> hapi_code constr
R117060:117062 CertiOS.framework.auxlibs.Maps <> set meth
R117069:117069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117102:117103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117105:117105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117070:117073 CertiOS.framework.model.language <> curs constr
R117076:117084 CertiOS.framework.model.language <> hapi_code constr
R117092:117094 CertiOS.framework.model.language <> ::x_';;'_x not
R117087:117091 CertiOS.framework.model.language <> sched constr
R117051:117051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117054:117055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117057:117057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117246:117249 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R117232:117232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117236:117237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117240:117242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117245:117245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117243:117244 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R117267:117270 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R117250:117255 CertiOS.framework.logic.assertion <> AHprio constr
R117258:117260 Coq.Init.Datatypes <> snd def
R117271:117275 CertiOS.framework.logic.assertion <> Atrue constr
R117216:117220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R117044:117049 CertiOS.framework.model.opsem <> hpstep ind
R117190:117192 CertiOS.framework.auxlibs.Maps <> set meth
R117205:117210 CertiOS.framework.model.language <> oscurt constr
R117197:117202 CertiOS.framework.model.language <> curtid constr
R117137:117148 CertiOS.framework.model.language TasksMod set def
R117155:117155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117178:117179 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117181:117181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117156:117159 CertiOS.framework.model.language <> curs constr
R117162:117170 CertiOS.framework.model.language <> hapi_code constr
R117060:117062 CertiOS.framework.auxlibs.Maps <> set meth
R117069:117069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117102:117103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117105:117105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117070:117073 CertiOS.framework.model.language <> curs constr
R117076:117084 CertiOS.framework.model.language <> hapi_code constr
R117092:117094 CertiOS.framework.model.language <> ::x_';;'_x not
R117087:117091 CertiOS.framework.model.language <> sched constr
R117051:117051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117054:117055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117057:117057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117246:117249 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R117232:117232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117236:117237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117240:117242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117245:117245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R117243:117244 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R117267:117270 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R117250:117255 CertiOS.framework.logic.assertion <> AHprio constr
R117258:117260 Coq.Init.Datatypes <> snd def
R117271:117275 CertiOS.framework.logic.assertion <> Atrue constr
R117292:117300 CertiOS.framework.proof.invariant_prop <> sw_same_t thm
R117292:117300 CertiOS.framework.proof.invariant_prop <> sw_same_t thm
R117411:117428 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R117411:117428 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R117582:117589 CertiOS.framework.proof.simulation <> getsched def
R117636:117639 CertiOS.framework.logic.inferules <> satp def
R117660:117669 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R117660:117669 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R117713:117723 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R117797:117805 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R117797:117805 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R117894:117901 CertiOS.framework.proof.invariant_prop <> part_sub thm
R117894:117901 CertiOS.framework.proof.invariant_prop <> part_sub thm
R117944:117955 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R117944:117955 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R117999:118005 CertiOS.framework.logic.assertion <> joinmem def
R118060:118067 CertiOS.framework.auxlibs.Maps <> sub def
R118105:118115 CertiOS.framework.proof.auxdef TMSpecMod B def
R118133:118146 CertiOS.framework.proof.auxdef mmapspec image def
R118229:118239 CertiOS.framework.proof.auxdef TOSpecMod B def
R118257:118270 CertiOS.framework.proof.auxdef omapspec image def
R118302:118311 CertiOS.framework.model.opsem <> hpstepstar ind
R118398:118400 CertiOS.framework.auxlibs.Maps <> set meth
R118413:118418 CertiOS.framework.model.language <> oscurt constr
R118405:118410 CertiOS.framework.model.language <> curtid constr
R118354:118356 CertiOS.framework.auxlibs.Maps <> set meth
R118363:118363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118386:118387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118389:118389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118364:118367 CertiOS.framework.model.language <> curs constr
R118370:118378 CertiOS.framework.model.language <> hapi_code constr
R118313:118313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118316:118317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118319:118319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118302:118311 CertiOS.framework.model.opsem <> hpstepstar ind
R118398:118400 CertiOS.framework.auxlibs.Maps <> set meth
R118413:118418 CertiOS.framework.model.language <> oscurt constr
R118405:118410 CertiOS.framework.model.language <> curtid constr
R118354:118356 CertiOS.framework.auxlibs.Maps <> set meth
R118363:118363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118386:118387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118389:118389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118364:118367 CertiOS.framework.model.language <> curs constr
R118370:118378 CertiOS.framework.model.language <> hapi_code constr
R118313:118313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118316:118317 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118319:118319 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118457:118466 CertiOS.framework.model.opsem <> hpstepstar ind
R118554:118556 CertiOS.framework.auxlibs.Maps <> set meth
R118569:118574 CertiOS.framework.model.language <> oscurt constr
R118561:118566 CertiOS.framework.model.language <> curtid constr
R118510:118512 CertiOS.framework.auxlibs.Maps <> set meth
R118519:118519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118542:118543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118545:118545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118520:118523 CertiOS.framework.model.language <> curs constr
R118526:118534 CertiOS.framework.model.language <> hapi_code constr
R118468:118468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118471:118472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118474:118474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118457:118466 CertiOS.framework.model.opsem <> hpstepstar ind
R118554:118556 CertiOS.framework.auxlibs.Maps <> set meth
R118569:118574 CertiOS.framework.model.language <> oscurt constr
R118561:118566 CertiOS.framework.model.language <> curtid constr
R118510:118512 CertiOS.framework.auxlibs.Maps <> set meth
R118519:118519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118542:118543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118545:118545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118520:118523 CertiOS.framework.model.language <> curs constr
R118526:118534 CertiOS.framework.model.language <> hapi_code constr
R118468:118468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118471:118472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118474:118474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118608:118617 CertiOS.framework.model.opsem <> hpstepstar ind
R118660:118662 CertiOS.framework.auxlibs.Maps <> set meth
R118669:118669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118703:118704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118706:118706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118670:118673 CertiOS.framework.model.language <> curs constr
R118676:118684 CertiOS.framework.model.language <> hapi_code constr
R118693:118695 CertiOS.framework.model.language <> ::x_';;'_x not
R118688:118692 CertiOS.framework.model.language <> sched constr
R118619:118619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118622:118623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118625:118625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118608:118617 CertiOS.framework.model.opsem <> hpstepstar ind
R118660:118662 CertiOS.framework.auxlibs.Maps <> set meth
R118669:118669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118703:118704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118706:118706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118670:118673 CertiOS.framework.model.language <> curs constr
R118676:118684 CertiOS.framework.model.language <> hapi_code constr
R118693:118695 CertiOS.framework.model.language <> ::x_';;'_x not
R118688:118692 CertiOS.framework.model.language <> sched constr
R118619:118619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118622:118623 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118625:118625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118728:118744 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R118728:118744 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R118800:118802 CertiOS.framework.auxlibs.Maps <> set meth
R118809:118809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118843:118844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118846:118846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118810:118813 CertiOS.framework.model.language <> curs constr
R118816:118824 CertiOS.framework.model.language <> hapi_code constr
R118833:118835 CertiOS.framework.model.language <> ::x_';;'_x not
R118828:118832 CertiOS.framework.model.language <> sched constr
R118777:118787 CertiOS.framework.proof.step_prop <> hpstep_star thm
R118800:118802 CertiOS.framework.auxlibs.Maps <> set meth
R118809:118809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118843:118844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118846:118846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R118810:118813 CertiOS.framework.model.language <> curs constr
R118816:118824 CertiOS.framework.model.language <> hapi_code constr
R118833:118835 CertiOS.framework.model.language <> ::x_';;'_x not
R118828:118832 CertiOS.framework.model.language <> sched constr
R118777:118787 CertiOS.framework.proof.step_prop <> hpstep_star thm
R119038:119041 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R119011:119011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119028:119029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119033:119034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119037:119037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119012:119021 CertiOS.framework.logic.assertion <> substaskst def
R119035:119036 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R119059:119062 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R119042:119047 CertiOS.framework.logic.assertion <> AHprio constr
R119050:119052 Coq.Init.Datatypes <> snd def
R119063:119067 CertiOS.framework.logic.assertion <> Atrue constr
R119038:119041 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R119011:119011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119028:119029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119033:119034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119037:119037 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119012:119021 CertiOS.framework.logic.assertion <> substaskst def
R119035:119036 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R119059:119062 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R119042:119047 CertiOS.framework.logic.assertion <> AHprio constr
R119050:119052 Coq.Init.Datatypes <> snd def
R119063:119067 CertiOS.framework.logic.assertion <> Atrue constr
R119081:119096 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp thm
R119081:119096 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp thm
R119192:119202 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R119294:119304 CertiOS.framework.proof.auxdef TOSpecMod B def
R119322:119335 CertiOS.framework.proof.auxdef omapspec image def
R119430:119440 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R119430:119440 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R119456:119465 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R119456:119465 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R119550:119550 Coq.Init.Logic <> :type_scope:x_'='_x not
R119550:119550 Coq.Init.Logic <> :type_scope:x_'='_x not
R119668:119674 CertiOS.framework.logic.assertion <> joinmem def
R119824:119833 CertiOS.framework.logic.assertion <> substaskst def
R119851:119858 CertiOS.framework.model.language <> get_smem def
R119875:119882 CertiOS.framework.model.opsem <> get_genv def
R119901:119909 CertiOS.framework.proof.invariant_prop <> projs_eqg thm
R119901:119909 CertiOS.framework.proof.invariant_prop <> projs_eqg thm
R120010:120013 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R119966:119966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119987:119988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119992:119993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120008:120009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119967:119967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119970:119971 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119974:119975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119979:119980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119982:119983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119986:119986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119994:120002 CertiOS.framework.model.language <> spec_done constr
R120004:120007 Coq.Init.Datatypes <> None constr
R120014:120018 CertiOS.framework.logic.assertion <> SWPRE def
R120021:120023 Coq.Init.Datatypes <> snd def
R120010:120013 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R119966:119966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119987:119988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119992:119993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R120008:120009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119967:119967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119970:119971 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119974:119975 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119979:119980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119982:119983 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119986:119986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R119994:120002 CertiOS.framework.model.language <> spec_done constr
R120004:120007 Coq.Init.Datatypes <> None constr
R120014:120018 CertiOS.framework.logic.assertion <> SWPRE def
R120021:120023 Coq.Init.Datatypes <> snd def
R120067:120070 CertiOS.framework.model.language <> ::'END'_x not
R120071:120074 Coq.Init.Datatypes <> None constr
R120067:120070 CertiOS.framework.model.language <> ::'END'_x not
R120071:120074 Coq.Init.Datatypes <> None constr
R120088:120098 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R120169:120172 CertiOS.framework.model.memory <> Tptr constr
R120139:120149 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R120169:120172 CertiOS.framework.model.memory <> Tptr constr
R120139:120149 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R120251:120261 CertiOS.framework.proof.memory_prop <> join_store' thm
R120251:120261 CertiOS.framework.proof.memory_prop <> join_store' thm
R120321:120335 CertiOS.framework.proof.invariant_prop <> part_store_part thm
R120321:120335 CertiOS.framework.proof.invariant_prop <> part_store_part thm
R120436:120438 Coq.Init.Logic <> :type_scope:x_'='_x not
R120412:120414 CertiOS.framework.auxlibs.Maps <> set meth
R120427:120432 CertiOS.framework.model.language <> oscurt constr
R120419:120424 CertiOS.framework.model.language <> curtid constr
R120436:120438 Coq.Init.Logic <> :type_scope:x_'='_x not
R120412:120414 CertiOS.framework.auxlibs.Maps <> set meth
R120427:120432 CertiOS.framework.model.language <> oscurt constr
R120419:120424 CertiOS.framework.model.language <> curtid constr
R120528:120536 CertiOS.framework.model.language <> spec_done constr
R120538:120541 Coq.Init.Datatypes <> None constr
R120528:120536 CertiOS.framework.model.language <> spec_done constr
R120538:120541 Coq.Init.Datatypes <> None constr
R120605:120618 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R120605:120618 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R120647:120658 CertiOS.tactics.basetac.join_lib <> get_set_same thm
R120647:120658 CertiOS.tactics.basetac.join_lib <> get_set_same thm
R120691:120703 CertiOS.framework.proof.auxdef TMSpecMod put def
R120691:120703 CertiOS.framework.proof.auxdef TMSpecMod put def
R120727:120739 CertiOS.framework.proof.auxdef TOSpecMod put def
R120751:120755 CertiOS.framework.auxlibs.Maps <> merge meth
R120761:120765 CertiOS.framework.auxlibs.Maps <> minus meth
R120727:120739 CertiOS.framework.proof.auxdef TOSpecMod put def
R120751:120755 CertiOS.framework.auxlibs.Maps <> merge meth
R120761:120765 CertiOS.framework.auxlibs.Maps <> minus meth
R120864:120876 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R120864:120876 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R120915:120923 CertiOS.framework.proof.auxdef <> good_is_S def
R121073:121075 Coq.Init.Logic <> :type_scope:x_'='_x not
R121045:121049 CertiOS.framework.model.opsem <> projS def
R121051:121051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121054:121055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121059:121060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121062:121063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121066:121067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121070:121070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121076:121079 Coq.Init.Datatypes <> Some constr
R121081:121081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121083:121084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121087:121088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121090:121091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121093:121094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121106:121106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121095:121095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121098:121099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121102:121103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121105:121105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121073:121075 Coq.Init.Logic <> :type_scope:x_'='_x not
R121045:121049 CertiOS.framework.model.opsem <> projS def
R121051:121051 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121054:121055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121059:121060 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121062:121063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121066:121067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121070:121070 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121076:121079 Coq.Init.Datatypes <> Some constr
R121081:121081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121083:121084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121087:121088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121090:121091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121093:121094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121106:121106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121095:121095 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121098:121099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121102:121103 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121105:121105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121120:121124 CertiOS.framework.model.opsem <> projS def
R121142:121146 CertiOS.framework.model.opsem <> projD def
R121164:121166 CertiOS.framework.auxlibs.Modules <> tid def
R121187:121189 CertiOS.framework.auxlibs.Maps <> get meth
R121187:121189 CertiOS.framework.auxlibs.Maps <> get meth
R121226:121228 CertiOS.framework.auxlibs.Maps <> get meth
R121226:121228 CertiOS.framework.auxlibs.Maps <> get meth
R121323:121331 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121323:121331 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121344:121358 CertiOS.framework.proof.memory_prop <> join_store_join thm
R121344:121358 CertiOS.framework.proof.memory_prop <> join_store_join thm
R121377:121385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121377:121385 CertiOS.tactics.basetac.join_lib <> join_comm thm
R121404:121421 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R121404:121421 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R121439:121456 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R121439:121456 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R121476:121482 CertiOS.framework.model.opsem <> tidsame def
R121502:121504 CertiOS.framework.auxlibs.Maps <> get meth
R121606:121608 CertiOS.framework.auxlibs.Modules <> tid def
R121648:121671 CertiOS.framework.proof.join_prop <> join_join_join_merge_set thm
R121648:121671 CertiOS.framework.proof.join_prop <> join_join_join_merge_set thm
R121692:121709 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R121692:121709 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R121732:121741 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R121732:121741 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R121782:121797 CertiOS.tactics.basetac.join_lib <> join_join_disj_l thm
R121782:121797 CertiOS.tactics.basetac.join_lib <> join_join_disj_l thm
R121879:121879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121881:121882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121885:121886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121889:121890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121893:121894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121897:121897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121899:121899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121901:121902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121905:121906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121909:121910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121913:121914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121917:121917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121879:121879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121881:121882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121885:121886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121889:121890 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121893:121894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121897:121897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121899:121899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121901:121902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121905:121906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121909:121910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121913:121914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121917:121917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R121994:121998 CertiOS.framework.model.opsem <> projS def
R122016:122020 CertiOS.framework.model.opsem <> projD def
R122038:122040 CertiOS.framework.auxlibs.Modules <> tid def
R122061:122063 CertiOS.framework.auxlibs.Maps <> get meth
R122061:122063 CertiOS.framework.auxlibs.Maps <> get meth
R122095:122097 CertiOS.framework.auxlibs.Maps <> get meth
R122095:122097 CertiOS.framework.auxlibs.Maps <> get meth
R122148:122148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122151:122152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122155:122156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122159:122160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122162:122163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122166:122166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122168:122168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122171:122171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122174:122174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122178:122178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122180:122180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122183:122183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122193:122193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122198:122199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122211:122211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122194:122197 CertiOS.framework.model.language <> ::'SKIP' not
R122200:122200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122206:122207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122210:122210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122201:122205 CertiOS.framework.model.language <> kenil constr
R122213:122213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122236:122237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122239:122239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122214:122217 CertiOS.framework.model.language <> curs constr
R122220:122228 CertiOS.framework.model.language <> hapi_code constr
R122148:122148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122151:122152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122155:122156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122159:122160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122162:122163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122166:122166 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122168:122168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122171:122171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122174:122174 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122178:122178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122180:122180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122183:122183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122193:122193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122198:122199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122211:122211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122194:122197 CertiOS.framework.model.language <> ::'SKIP' not
R122200:122200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122206:122207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122210:122210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122201:122205 CertiOS.framework.model.language <> kenil constr
R122213:122213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122236:122237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122239:122239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R122214:122217 CertiOS.framework.model.language <> curs constr
R122220:122228 CertiOS.framework.model.language <> hapi_code constr
R122282:122286 CertiOS.framework.model.opsem <> projS def
R122304:122308 CertiOS.framework.model.opsem <> projD def
R122326:122328 CertiOS.framework.auxlibs.Modules <> tid def
R122349:122351 CertiOS.framework.auxlibs.Maps <> get meth
R122349:122351 CertiOS.framework.auxlibs.Maps <> get meth
R122383:122385 CertiOS.framework.auxlibs.Maps <> get meth
R122383:122385 CertiOS.framework.auxlibs.Maps <> get meth
R122433:122443 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R122433:122443 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R122455:122465 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R122455:122465 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R122480:122498 CertiOS.framework.proof.invariant_prop <> curlinv_switch_self thm
R122480:122498 CertiOS.framework.proof.invariant_prop <> curlinv_switch_self thm
R122559:122569 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R122660:122666 CertiOS.framework.logic.assertion <> joinmem def
R122709:122723 CertiOS.framework.proof.memory_prop <> join_store_join thm
R122709:122723 CertiOS.framework.proof.memory_prop <> join_store_join thm
R122772:122788 CertiOS.framework.proof.invariant_prop <> goodI_swinv_samet thm
R122772:122788 CertiOS.framework.proof.invariant_prop <> goodI_swinv_samet thm
R123061:123062 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R123061:123062 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R123197:123206 CertiOS.framework.logic.assertion <> substaskst def
R123197:123206 CertiOS.framework.logic.assertion <> substaskst def
R123254:123267 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R123254:123267 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R123286:123299 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R123286:123299 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R123346:123355 CertiOS.framework.logic.assertion <> substaskst def
R123386:123390 CertiOS.framework.model.opsem <> projS def
R123408:123412 CertiOS.framework.model.opsem <> projD def
R123448:123450 CertiOS.framework.auxlibs.Maps <> get meth
R123448:123450 CertiOS.framework.auxlibs.Maps <> get meth
R123485:123487 CertiOS.framework.auxlibs.Maps <> get meth
R123485:123487 CertiOS.framework.auxlibs.Maps <> get meth
R123545:123561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123545:123561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123545:123561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123545:123561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123658:123667 CertiOS.framework.logic.assertion <> substaskst def
R123690:123706 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123690:123706 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123690:123706 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123690:123706 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R123731:123753 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R123731:123753 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R123844:123855 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R123844:123855 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R123844:123855 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R123844:123855 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R123873:123886 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R123873:123886 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R123976:123982 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R123984:123985 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R124049:124051 Coq.Init.Logic <> :type_scope:x_'='_x not
R123986:123997 CertiOS.framework.model.language TasksMod get def
R124000:124011 CertiOS.framework.model.language TasksMod set def
R124018:124018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124041:124042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124044:124044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124019:124022 CertiOS.framework.model.language <> curs constr
R124025:124033 CertiOS.framework.model.language <> hapi_code constr
R124052:124055 Coq.Init.Datatypes <> Some constr
R123976:123982 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R123984:123985 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R124049:124051 Coq.Init.Logic <> :type_scope:x_'='_x not
R123986:123997 CertiOS.framework.model.language TasksMod get def
R124000:124011 CertiOS.framework.model.language TasksMod set def
R124018:124018 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124041:124042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124044:124044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R124019:124022 CertiOS.framework.model.language <> curs constr
R124025:124033 CertiOS.framework.model.language <> hapi_code constr
R124052:124055 Coq.Init.Datatypes <> Some constr
R124103:124106 CertiOS.framework.model.memory <> Tptr constr
R124144:124146 Coq.Init.Datatypes <> snd def
R124073:124083 CertiOS.framework.proof.invariant_prop <> sw_has_code thm
R124103:124106 CertiOS.framework.model.memory <> Tptr constr
R124144:124146 Coq.Init.Datatypes <> snd def
R124073:124083 CertiOS.framework.proof.invariant_prop <> sw_has_code thm
R124213:124213 Coq.Init.Logic <> :type_scope:x_'='_x not
R124213:124213 Coq.Init.Logic <> :type_scope:x_'='_x not
R124302:124311 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R124302:124311 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R124381:124391 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R124433:124440 CertiOS.framework.auxlibs.Maps <> sub def
R124433:124440 CertiOS.framework.auxlibs.Maps <> sub def
R124459:124466 CertiOS.framework.proof.invariant_prop <> part_sub thm
R124459:124466 CertiOS.framework.proof.invariant_prop <> part_sub thm
R124603:124605 CertiOS.framework.auxlibs.Maps <> get meth
R124603:124605 CertiOS.framework.auxlibs.Maps <> get meth
R124637:124639 CertiOS.framework.auxlibs.Maps <> get meth
R124637:124639 CertiOS.framework.auxlibs.Maps <> get meth
R124781:124794 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R124781:124794 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R124826:124832 CertiOS.framework.proof.oscorrectness <> eqdomTO def
prf 124905:124920 <> abst_set_get_neq
R124951:124955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R124997:124999 Coq.Init.Logic <> :type_scope:x_'='_x not
R124956:124968 CertiOS.framework.model.language OSAbstMod get def
R124994:124996 CertiOS.framework.proof.lemmasfortoptheo <> id1 var
R124971:124983 CertiOS.framework.model.language OSAbstMod set def
R124991:124991 CertiOS.framework.proof.lemmasfortoptheo <> y var
R124987:124989 CertiOS.framework.proof.lemmasfortoptheo <> id2 var
R124985:124985 CertiOS.framework.proof.lemmasfortoptheo <> O var
R125000:125012 CertiOS.framework.model.language OSAbstMod get def
R125016:125018 CertiOS.framework.proof.lemmasfortoptheo <> id1 var
R125014:125014 CertiOS.framework.proof.lemmasfortoptheo <> O var
R124946:124947 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R124943:124945 CertiOS.framework.proof.lemmasfortoptheo <> id1 var
R124948:124950 CertiOS.framework.proof.lemmasfortoptheo <> id2 var
R125055:125076 CertiOS.framework.model.language OSAbstMod set_a_get_a' thm
R125055:125076 CertiOS.framework.model.language OSAbstMod set_a_get_a' thm
R125090:125116 CertiOS.framework.model.language absdataidspec neq_beq_false thm
R125090:125116 CertiOS.framework.model.language absdataidspec neq_beq_false thm
R125055:125076 CertiOS.framework.model.language OSAbstMod set_a_get_a' thm
R125055:125076 CertiOS.framework.model.language OSAbstMod set_a_get_a' thm
R125090:125116 CertiOS.framework.model.language absdataidspec neq_beq_false thm
R125090:125116 CertiOS.framework.model.language absdataidspec neq_beq_false thm
R125149:125164 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R125149:125164 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R125149:125164 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R125149:125164 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R125221:125237 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R125221:125237 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R125221:125237 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R125221:125237 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R125281:125283 Coq.Init.Logic <> :type_scope:x_'='_x not
R125263:125274 CertiOS.framework.model.language TasksMod get def
R125284:125287 Coq.Init.Datatypes <> Some constr
R125281:125283 Coq.Init.Logic <> :type_scope:x_'='_x not
R125263:125274 CertiOS.framework.model.language TasksMod get def
R125284:125287 Coq.Init.Datatypes <> Some constr
R125418:125425 CertiOS.framework.auxlibs.Maps <> disjoint def
R125418:125425 CertiOS.framework.auxlibs.Maps <> disjoint def
R125557:125563 CertiOS.framework.logic.assertion <> joinmem def
R125592:125599 CertiOS.framework.auxlibs.Maps <> disjoint def
R125592:125599 CertiOS.framework.auxlibs.Maps <> disjoint def
R125619:125628 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R125619:125628 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R125770:125776 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R125780:125780 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R125818:125820 Coq.Init.Logic <> :type_scope:x_'='_x not
R125781:125785 CertiOS.framework.model.memory <> store def
R125810:125813 CertiOS.framework.model.memory <> Vptr constr
R125801:125801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125803:125803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125807:125807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125788:125791 CertiOS.framework.model.memory <> Tptr constr
R125821:125824 Coq.Init.Datatypes <> Some constr
R125770:125776 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R125780:125780 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R125818:125820 Coq.Init.Logic <> :type_scope:x_'='_x not
R125781:125785 CertiOS.framework.model.memory <> store def
R125810:125813 CertiOS.framework.model.memory <> Vptr constr
R125801:125801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125803:125803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125807:125807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125788:125791 CertiOS.framework.model.memory <> Tptr constr
R125821:125824 Coq.Init.Datatypes <> Some constr
R125865:125874 CertiOS.framework.logic.assertion <> substaskst def
R125940:125943 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R125898:125898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125900:125901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125904:125905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125909:125910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125912:125913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125916:125917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125921:125923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125938:125939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125924:125932 CertiOS.framework.model.language <> spec_done constr
R125934:125937 Coq.Init.Datatypes <> None constr
R125944:125948 CertiOS.framework.logic.assertion <> SWPRE def
R125951:125953 Coq.Init.Datatypes <> snd def
R125940:125943 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R125898:125898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125900:125901 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125904:125905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125909:125910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125912:125913 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125916:125917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125921:125923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125938:125939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R125924:125932 CertiOS.framework.model.language <> spec_done constr
R125934:125937 Coq.Init.Datatypes <> None constr
R125944:125948 CertiOS.framework.logic.assertion <> SWPRE def
R125951:125953 Coq.Init.Datatypes <> snd def
R125988:125991 CertiOS.framework.model.language <> ::'END'_x not
R125992:125995 Coq.Init.Datatypes <> None constr
R125988:125991 CertiOS.framework.model.language <> ::'END'_x not
R125992:125995 Coq.Init.Datatypes <> None constr
R126009:126019 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R126082:126090 CertiOS.framework.model.language <> spec_done constr
R126092:126095 Coq.Init.Datatypes <> None constr
R126060:126070 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R126082:126090 CertiOS.framework.model.language <> spec_done constr
R126092:126095 Coq.Init.Datatypes <> None constr
R126060:126070 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R126171:126173 CertiOS.framework.auxlibs.Maps <> get meth
R126171:126173 CertiOS.framework.auxlibs.Maps <> get meth
R126205:126207 CertiOS.framework.auxlibs.Maps <> get meth
R126205:126207 CertiOS.framework.auxlibs.Maps <> get meth
R126253:126255 CertiOS.framework.auxlibs.Maps <> get meth
R126379:126383 CertiOS.framework.auxlibs.Maps <> merge meth
R126421:126421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126424:126425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126429:126430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126432:126433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126436:126437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126440:126440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126484:126486 Coq.Init.Datatypes <> snd def
R126326:126340 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv'''' thm
R126379:126383 CertiOS.framework.auxlibs.Maps <> merge meth
R126421:126421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126424:126425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126429:126430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126432:126433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126436:126437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126440:126440 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R126484:126486 Coq.Init.Datatypes <> snd def
R126326:126340 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv'''' thm
R126631:126643 CertiOS.framework.proof.auxdef TMSpecMod put def
R126685:126689 CertiOS.framework.auxlibs.Maps <> merge meth
R126646:126658 CertiOS.framework.proof.auxdef TMSpecMod put def
R126666:126670 CertiOS.framework.auxlibs.Maps <> minus meth
R126712:126724 CertiOS.framework.proof.auxdef TOSpecMod put def
R126755:126759 CertiOS.framework.auxlibs.Maps <> merge meth
R126727:126739 CertiOS.framework.proof.auxdef TOSpecMod put def
R126783:126787 CertiOS.framework.auxlibs.Maps <> merge meth
R126807:126811 CertiOS.framework.auxlibs.Maps <> minus meth
R126790:126794 CertiOS.framework.auxlibs.Maps <> merge meth
R126631:126643 CertiOS.framework.proof.auxdef TMSpecMod put def
R126685:126689 CertiOS.framework.auxlibs.Maps <> merge meth
R126646:126658 CertiOS.framework.proof.auxdef TMSpecMod put def
R126666:126670 CertiOS.framework.auxlibs.Maps <> minus meth
R126712:126724 CertiOS.framework.proof.auxdef TOSpecMod put def
R126755:126759 CertiOS.framework.auxlibs.Maps <> merge meth
R126727:126739 CertiOS.framework.proof.auxdef TOSpecMod put def
R126783:126787 CertiOS.framework.auxlibs.Maps <> merge meth
R126807:126811 CertiOS.framework.auxlibs.Maps <> minus meth
R126790:126794 CertiOS.framework.auxlibs.Maps <> merge meth
R126843:126847 CertiOS.framework.auxlibs.Maps <> merge meth
R126850:126854 CertiOS.framework.auxlibs.Maps <> minus meth
R126843:126847 CertiOS.framework.auxlibs.Maps <> merge meth
R126850:126854 CertiOS.framework.auxlibs.Maps <> minus meth
R126890:126897 CertiOS.framework.auxlibs.Maps <> sub def
R126890:126897 CertiOS.framework.auxlibs.Maps <> sub def
R126963:126969 CertiOS.framework.logic.assertion <> joinmem def
R127036:127043 CertiOS.framework.auxlibs.Maps <> sub def
R127066:127073 CertiOS.framework.auxlibs.Maps <> sub def
R127066:127073 CertiOS.framework.auxlibs.Maps <> sub def
R127093:127100 CertiOS.framework.proof.invariant_prop <> part_sub thm
R127093:127100 CertiOS.framework.proof.invariant_prop <> part_sub thm
R127159:127167 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R127159:127167 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R127236:127248 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R127236:127248 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R127287:127295 CertiOS.framework.proof.auxdef <> good_is_S def
R127445:127447 Coq.Init.Logic <> :type_scope:x_'='_x not
R127417:127421 CertiOS.framework.model.opsem <> projS def
R127423:127423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127426:127427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127431:127432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127434:127435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127438:127439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127442:127442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127448:127451 Coq.Init.Datatypes <> Some constr
R127453:127453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127455:127456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127459:127460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127462:127463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127465:127466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127478:127478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127467:127467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127470:127471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127474:127475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127477:127477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127445:127447 Coq.Init.Logic <> :type_scope:x_'='_x not
R127417:127421 CertiOS.framework.model.opsem <> projS def
R127423:127423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127426:127427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127431:127432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127434:127435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127438:127439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127442:127442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127448:127451 Coq.Init.Datatypes <> Some constr
R127453:127453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127455:127456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127459:127460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127462:127463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127465:127466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127478:127478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127467:127467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127470:127471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127474:127475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127477:127477 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R127492:127496 CertiOS.framework.model.opsem <> projS def
R127514:127518 CertiOS.framework.model.opsem <> projD def
R127553:127555 CertiOS.framework.auxlibs.Maps <> get meth
R127553:127555 CertiOS.framework.auxlibs.Maps <> get meth
R127592:127594 CertiOS.framework.auxlibs.Maps <> get meth
R127592:127594 CertiOS.framework.auxlibs.Maps <> get meth
R127695:127726 CertiOS.framework.proof.memory_prop <> mem_join_merge_minus_join_store' thm
R127695:127726 CertiOS.framework.proof.memory_prop <> mem_join_merge_minus_join_store' thm
R127804:127821 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R127804:127821 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R127841:127856 CertiOS.framework.proof.invariant_prop <> partm_merge_disj thm
R127841:127856 CertiOS.framework.proof.invariant_prop <> partm_merge_disj thm
R127870:127877 CertiOS.framework.auxlibs.Maps <> sub def
R127885:127889 CertiOS.framework.auxlibs.Maps <> merge meth
R127870:127877 CertiOS.framework.auxlibs.Maps <> sub def
R127885:127889 CertiOS.framework.auxlibs.Maps <> merge meth
R127914:127924 CertiOS.framework.proof.join_prop <> sub_merge_l thm
R127914:127924 CertiOS.framework.proof.join_prop <> sub_merge_l thm
R127973:127990 CertiOS.framework.proof.memory_prop <> store_sub_minus_eq thm
R127973:127990 CertiOS.framework.proof.memory_prop <> store_sub_minus_eq thm
R127973:127990 CertiOS.framework.proof.memory_prop <> store_sub_minus_eq thm
R127973:127990 CertiOS.framework.proof.memory_prop <> store_sub_minus_eq thm
R127973:127990 CertiOS.framework.proof.memory_prop <> store_sub_minus_eq thm
R128012:128030 CertiOS.framework.proof.memory_prop <> store_sub_disj_disj thm
R128012:128030 CertiOS.framework.proof.memory_prop <> store_sub_disj_disj thm
R128133:128149 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R128162:128174 CertiOS.framework.proof.auxdef TMSpecMod put def
R128189:128203 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R128189:128203 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R128225:128241 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R128269:128283 CertiOS.framework.proof.invariant_prop <> partm_minus_sub thm
R128269:128283 CertiOS.framework.proof.invariant_prop <> partm_minus_sub thm
R128318:128320 Coq.Init.Logic <> :type_scope:x_'='_x not
R128304:128306 CertiOS.framework.auxlibs.Maps <> get meth
R128312:128317 CertiOS.framework.model.language <> curtid constr
R128321:128324 Coq.Init.Datatypes <> Some constr
R128327:128332 CertiOS.framework.model.language <> oscurt constr
R128318:128320 Coq.Init.Logic <> :type_scope:x_'='_x not
R128304:128306 CertiOS.framework.auxlibs.Maps <> get meth
R128312:128317 CertiOS.framework.model.language <> curtid constr
R128321:128324 Coq.Init.Datatypes <> Some constr
R128327:128332 CertiOS.framework.model.language <> oscurt constr
R128437:128445 CertiOS.framework.model.language <> spec_done constr
R128447:128450 Coq.Init.Datatypes <> None constr
R128437:128445 CertiOS.framework.model.language <> spec_done constr
R128447:128450 Coq.Init.Datatypes <> None constr
R128503:128514 CertiOS.framework.proof.join_prop <> join_complex thm
R128503:128514 CertiOS.framework.proof.join_prop <> join_complex thm
R128550:128552 Coq.Init.Logic <> :type_scope:x_'='_x not
R128536:128538 CertiOS.framework.auxlibs.Maps <> get meth
R128544:128549 CertiOS.framework.model.language <> curtid constr
R128553:128556 Coq.Init.Datatypes <> Some constr
R128559:128564 CertiOS.framework.model.language <> oscurt constr
R128550:128552 Coq.Init.Logic <> :type_scope:x_'='_x not
R128536:128538 CertiOS.framework.auxlibs.Maps <> get meth
R128544:128549 CertiOS.framework.model.language <> curtid constr
R128553:128556 Coq.Init.Datatypes <> Some constr
R128559:128564 CertiOS.framework.model.language <> oscurt constr
R128669:128677 CertiOS.framework.model.language <> spec_done constr
R128679:128682 Coq.Init.Datatypes <> None constr
R128669:128677 CertiOS.framework.model.language <> spec_done constr
R128679:128682 Coq.Init.Datatypes <> None constr
R128735:128752 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R128735:128752 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R128773:128785 CertiOS.framework.proof.invariant_prop <> parto_complex thm
R128773:128785 CertiOS.framework.proof.invariant_prop <> parto_complex thm
R128804:128815 CertiOS.framework.proof.join_prop <> disj_complex thm
R128804:128815 CertiOS.framework.proof.join_prop <> disj_complex thm
R128852:128864 CertiOS.framework.proof.join_prop <> disj_complex' thm
R128852:128864 CertiOS.framework.proof.join_prop <> disj_complex' thm
R128888:128897 CertiOS.framework.logic.assertion <> substaskst def
R128907:128916 CertiOS.framework.logic.assertion <> substaskst def
R128888:128897 CertiOS.framework.logic.assertion <> substaskst def
R128907:128916 CertiOS.framework.logic.assertion <> substaskst def
R128999:129003 CertiOS.framework.model.opsem <> projS def
R129017:129021 CertiOS.framework.model.opsem <> projD def
R129056:129058 CertiOS.framework.auxlibs.Maps <> get meth
R129056:129058 CertiOS.framework.auxlibs.Maps <> get meth
R129091:129093 CertiOS.framework.auxlibs.Maps <> get meth
R129091:129093 CertiOS.framework.auxlibs.Maps <> get meth
R129155:129176 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R129155:129176 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R129231:129233 Coq.Init.Logic <> :type_scope:x_'='_x not
R129217:129219 CertiOS.framework.auxlibs.Maps <> get meth
R129225:129230 CertiOS.framework.model.language <> curtid constr
R129234:129237 Coq.Init.Datatypes <> Some constr
R129240:129245 CertiOS.framework.model.language <> oscurt constr
R129231:129233 Coq.Init.Logic <> :type_scope:x_'='_x not
R129217:129219 CertiOS.framework.auxlibs.Maps <> get meth
R129225:129230 CertiOS.framework.model.language <> curtid constr
R129234:129237 Coq.Init.Datatypes <> Some constr
R129240:129245 CertiOS.framework.model.language <> oscurt constr
R129350:129358 CertiOS.framework.model.language <> spec_done constr
R129360:129363 Coq.Init.Datatypes <> None constr
R129350:129358 CertiOS.framework.model.language <> spec_done constr
R129360:129363 Coq.Init.Datatypes <> None constr
R129417:129426 CertiOS.framework.logic.assertion <> substaskst def
R129437:129446 CertiOS.framework.logic.assertion <> substaskst def
R129452:129456 CertiOS.framework.auxlibs.Maps <> merge meth
R129469:129473 CertiOS.framework.auxlibs.Maps <> merge meth
R129485:129489 CertiOS.framework.auxlibs.Maps <> merge meth
R129417:129426 CertiOS.framework.logic.assertion <> substaskst def
R129437:129446 CertiOS.framework.logic.assertion <> substaskst def
R129452:129456 CertiOS.framework.auxlibs.Maps <> merge meth
R129469:129473 CertiOS.framework.auxlibs.Maps <> merge meth
R129485:129489 CertiOS.framework.auxlibs.Maps <> merge meth
R129552:129556 CertiOS.framework.model.opsem <> projS def
R129570:129574 CertiOS.framework.model.opsem <> projD def
R129609:129611 CertiOS.framework.auxlibs.Maps <> get meth
R129609:129611 CertiOS.framework.auxlibs.Maps <> get meth
R129644:129646 CertiOS.framework.auxlibs.Maps <> get meth
R129644:129646 CertiOS.framework.auxlibs.Maps <> get meth
R129749:129765 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129749:129765 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129749:129765 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129749:129765 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129784:129800 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129784:129800 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129784:129800 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129784:129800 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R129836:129846 CertiOS.framework.proof.invariant_prop <> switch_linv thm
R129836:129846 CertiOS.framework.proof.invariant_prop <> switch_linv thm
R129922:129935 CertiOS.framework.proof.invariant_prop <> disj_complex'' thm
R129922:129935 CertiOS.framework.proof.invariant_prop <> disj_complex'' thm
R130046:130060 CertiOS.framework.proof.invariant_prop <> disj_complex''' thm
R130046:130060 CertiOS.framework.proof.invariant_prop <> disj_complex''' thm
R130101:130101 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130159:130176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130241:130241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130114:130118 CertiOS.framework.logic.assertion <> absop def
R130150:130153 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130121:130121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130139:130140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130145:130146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130149:130149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130122:130131 CertiOS.framework.logic.assertion <> substaskst def
R130147:130148 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130154:130156 CertiOS.framework.logic.assertion <> INV def
R130189:130193 CertiOS.framework.logic.assertion <> absop def
R130226:130229 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130196:130196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130215:130216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130221:130222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130225:130225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130197:130206 CertiOS.framework.logic.assertion <> substaskst def
R130223:130224 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130230:130235 CertiOS.framework.logic.assertion <> RDYINV def
R130101:130101 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130159:130176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130241:130241 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130114:130118 CertiOS.framework.logic.assertion <> absop def
R130150:130153 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130121:130121 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130139:130140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130145:130146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130149:130149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130122:130131 CertiOS.framework.logic.assertion <> substaskst def
R130147:130148 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130154:130156 CertiOS.framework.logic.assertion <> INV def
R130189:130193 CertiOS.framework.logic.assertion <> absop def
R130226:130229 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130196:130196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130215:130216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130221:130222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130225:130225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130197:130206 CertiOS.framework.logic.assertion <> substaskst def
R130223:130224 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130230:130235 CertiOS.framework.logic.assertion <> RDYINV def
R130288:130288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130365:130369 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130301:130305 CertiOS.framework.logic.assertion <> absop def
R130350:130353 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130308:130308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130339:130340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130345:130346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130349:130349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130309:130317 CertiOS.framework.proof.auxdef <> RdyChange def
R130320:130329 CertiOS.framework.logic.assertion <> substaskst def
R130347:130348 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130354:130359 CertiOS.framework.logic.assertion <> RDYINV def
R130386:130389 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130370:130377 CertiOS.framework.auxlibs.Maps <> disjoint def
R130390:130397 CertiOS.framework.auxlibs.Maps <> disjoint def
R130288:130288 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130365:130369 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130301:130305 CertiOS.framework.logic.assertion <> absop def
R130350:130353 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R130308:130308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130339:130340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130345:130346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130349:130349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130309:130317 CertiOS.framework.proof.auxdef <> RdyChange def
R130320:130329 CertiOS.framework.logic.assertion <> substaskst def
R130347:130348 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R130354:130359 CertiOS.framework.logic.assertion <> RDYINV def
R130386:130389 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130370:130377 CertiOS.framework.auxlibs.Maps <> disjoint def
R130390:130397 CertiOS.framework.auxlibs.Maps <> disjoint def
R130460:130460 Coq.Init.Logic <> :type_scope:x_'='_x not
R130430:130438 CertiOS.framework.proof.auxdef <> RdyChange def
R130441:130450 CertiOS.framework.logic.assertion <> substaskst def
R130461:130470 CertiOS.framework.logic.assertion <> substaskst def
R130460:130460 Coq.Init.Logic <> :type_scope:x_'='_x not
R130430:130438 CertiOS.framework.proof.auxdef <> RdyChange def
R130441:130450 CertiOS.framework.logic.assertion <> substaskst def
R130461:130470 CertiOS.framework.logic.assertion <> substaskst def
R130494:130506 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R130494:130506 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R130643:130656 CertiOS.framework.proof.invariant_prop <> disj_complex'' thm
R130643:130656 CertiOS.framework.proof.invariant_prop <> disj_complex'' thm
R130756:130770 CertiOS.framework.proof.invariant_prop <> disj_complex''' thm
R130756:130770 CertiOS.framework.proof.invariant_prop <> disj_complex''' thm
R130790:130796 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R130800:130814 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R130834:130850 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130818:130820 Coq.Init.Logic <> :type_scope:x_'='_x not
R130821:130825 CertiOS.framework.auxlibs.Maps <> merge meth
R130851:130857 CertiOS.framework.proof.simulation <> TaskSim coind
R130971:130980 CertiOS.framework.proof.auxdef <> InitTaskSt def
R130947:130951 CertiOS.framework.auxlibs.Maps <> merge meth
R130935:130935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130938:130939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130941:130941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130883:130891 CertiOS.framework.proof.auxdef <> RdyChange def
R130894:130903 CertiOS.framework.logic.assertion <> substaskst def
R130859:130859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130862:130863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130876:130876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130864:130864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130867:130868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130871:130872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130875:130875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130790:130796 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R130800:130814 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R130834:130850 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R130818:130820 Coq.Init.Logic <> :type_scope:x_'='_x not
R130821:130825 CertiOS.framework.auxlibs.Maps <> merge meth
R130851:130857 CertiOS.framework.proof.simulation <> TaskSim coind
R130971:130980 CertiOS.framework.proof.auxdef <> InitTaskSt def
R130947:130951 CertiOS.framework.auxlibs.Maps <> merge meth
R130935:130935 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130938:130939 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130941:130941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130883:130891 CertiOS.framework.proof.auxdef <> RdyChange def
R130894:130903 CertiOS.framework.logic.assertion <> substaskst def
R130859:130859 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130862:130863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130876:130876 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130864:130864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130867:130868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130871:130872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R130875:130875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131147:131147 Coq.Init.Logic <> :type_scope:x_'='_x not
R131106:131114 CertiOS.framework.proof.auxdef <> RdyChange def
R131117:131126 CertiOS.framework.logic.assertion <> substaskst def
R131132:131136 CertiOS.framework.auxlibs.Maps <> merge meth
R131148:131157 CertiOS.framework.logic.assertion <> substaskst def
R131163:131167 CertiOS.framework.auxlibs.Maps <> merge meth
R131147:131147 Coq.Init.Logic <> :type_scope:x_'='_x not
R131106:131114 CertiOS.framework.proof.auxdef <> RdyChange def
R131117:131126 CertiOS.framework.logic.assertion <> substaskst def
R131132:131136 CertiOS.framework.auxlibs.Maps <> merge meth
R131148:131157 CertiOS.framework.logic.assertion <> substaskst def
R131163:131167 CertiOS.framework.auxlibs.Maps <> merge meth
R131190:131202 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R131190:131202 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R131312:131314 Coq.Init.Logic <> :type_scope:x_'='_x not
R131299:131303 CertiOS.framework.auxlibs.Maps <> merge meth
R131315:131319 CertiOS.framework.auxlibs.Maps <> merge meth
R131312:131314 Coq.Init.Logic <> :type_scope:x_'='_x not
R131299:131303 CertiOS.framework.auxlibs.Maps <> merge meth
R131315:131319 CertiOS.framework.auxlibs.Maps <> merge meth
R131342:131359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131342:131359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131342:131359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131342:131359 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131391:131394 Coq.Init.Logic <> :type_scope:x_'='_x not
R131408:131408 Coq.Init.Logic <> :type_scope:x_'='_x not
R131378:131382 CertiOS.framework.auxlibs.Maps <> merge meth
R131395:131399 CertiOS.framework.auxlibs.Maps <> merge meth
R131391:131394 Coq.Init.Logic <> :type_scope:x_'='_x not
R131408:131408 Coq.Init.Logic <> :type_scope:x_'='_x not
R131378:131382 CertiOS.framework.auxlibs.Maps <> merge meth
R131395:131399 CertiOS.framework.auxlibs.Maps <> merge meth
R131423:131440 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131423:131440 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131423:131440 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131423:131440 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R131563:131572 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R131563:131572 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R131651:131653 Coq.Init.Logic <> :type_scope:x_'='_x not
R131607:131609 CertiOS.framework.auxlibs.Maps <> get meth
R131612:131614 CertiOS.framework.auxlibs.Maps <> set meth
R131621:131621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131644:131645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131647:131647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131622:131625 CertiOS.framework.model.language <> curs constr
R131628:131636 CertiOS.framework.model.language <> hapi_code constr
R131654:131657 Coq.Init.Datatypes <> Some constr
R131659:131659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131682:131683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131685:131685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131660:131663 CertiOS.framework.model.language <> curs constr
R131666:131674 CertiOS.framework.model.language <> hapi_code constr
R131651:131653 Coq.Init.Logic <> :type_scope:x_'='_x not
R131607:131609 CertiOS.framework.auxlibs.Maps <> get meth
R131612:131614 CertiOS.framework.auxlibs.Maps <> set meth
R131621:131621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131644:131645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131647:131647 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131622:131625 CertiOS.framework.model.language <> curs constr
R131628:131636 CertiOS.framework.model.language <> hapi_code constr
R131654:131657 Coq.Init.Datatypes <> Some constr
R131659:131659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131682:131683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131685:131685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131660:131663 CertiOS.framework.model.language <> curs constr
R131666:131674 CertiOS.framework.model.language <> hapi_code constr
R131699:131709 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R131699:131709 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R131722:131725 CertiOS.framework.model.language <> code def
R131783:131792 CertiOS.framework.logic.assertion <> substaskst def
R131801:131805 CertiOS.framework.auxlibs.Maps <> minus meth
R131815:131815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131820:131821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131832:131832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131816:131819 CertiOS.framework.model.language <> ::'SKIP' not
R131822:131822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131828:131828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131831:131831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131823:131827 CertiOS.framework.model.language <> kenil constr
R131783:131792 CertiOS.framework.logic.assertion <> substaskst def
R131801:131805 CertiOS.framework.auxlibs.Maps <> minus meth
R131815:131815 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131820:131821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131832:131832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131816:131819 CertiOS.framework.model.language <> ::'SKIP' not
R131822:131822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131828:131828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131831:131831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R131823:131827 CertiOS.framework.model.language <> kenil constr
R131865:131881 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R131894:131906 CertiOS.framework.proof.auxdef TMSpecMod put def
R131922:131936 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R131922:131936 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R131967:131981 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R131967:131981 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R132022:132038 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R132051:132063 CertiOS.framework.proof.auxdef TOSpecMod put def
R132079:132093 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R132079:132093 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R132124:132138 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R132124:132138 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R132219:132223 CertiOS.framework.model.opsem <> projS def
R132237:132241 CertiOS.framework.model.opsem <> projD def
R132276:132278 CertiOS.framework.auxlibs.Maps <> get meth
R132276:132278 CertiOS.framework.auxlibs.Maps <> get meth
R132310:132312 CertiOS.framework.auxlibs.Maps <> get meth
R132310:132312 CertiOS.framework.auxlibs.Maps <> get meth
R132376:132397 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132376:132397 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132376:132397 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132414:132437 CertiOS.framework.proof.join_prop <> joinmem_substaskst_minus thm
R132414:132437 CertiOS.framework.proof.join_prop <> joinmem_substaskst_minus thm
R132414:132437 CertiOS.framework.proof.join_prop <> joinmem_substaskst_minus thm
R132414:132437 CertiOS.framework.proof.join_prop <> joinmem_substaskst_minus thm
R132455:132465 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R132455:132465 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R132551:132555 CertiOS.framework.logic.assertion <> absop def
R132609:132612 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R132572:132572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132600:132601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132604:132605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132608:132608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132573:132581 CertiOS.framework.proof.auxdef <> RdyChange def
R132584:132593 CertiOS.framework.logic.assertion <> substaskst def
R132606:132607 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R132613:132618 CertiOS.framework.logic.assertion <> SWINVt def
R132551:132555 CertiOS.framework.logic.assertion <> absop def
R132609:132612 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R132572:132572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132600:132601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132604:132605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132608:132608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R132573:132581 CertiOS.framework.proof.auxdef <> RdyChange def
R132584:132593 CertiOS.framework.logic.assertion <> substaskst def
R132606:132607 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R132613:132618 CertiOS.framework.logic.assertion <> SWINVt def
R132638:132651 CertiOS.framework.proof.invariant_prop <> swi_rdy_eq_swi thm
R132638:132651 CertiOS.framework.proof.invariant_prop <> swi_rdy_eq_swi thm
R132693:132714 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132693:132714 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132693:132714 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R132768:132768 Coq.Init.Logic <> :type_scope:x_'='_x not
R132741:132749 CertiOS.framework.proof.auxdef <> RdyChange def
R132752:132761 CertiOS.framework.logic.assertion <> substaskst def
R132769:132778 CertiOS.framework.logic.assertion <> substaskst def
R132768:132768 Coq.Init.Logic <> :type_scope:x_'='_x not
R132741:132749 CertiOS.framework.proof.auxdef <> RdyChange def
R132752:132761 CertiOS.framework.logic.assertion <> substaskst def
R132769:132778 CertiOS.framework.logic.assertion <> substaskst def
R132796:132807 CertiOS.framework.proof.invariant_prop <> swinv_isremp thm
R132796:132807 CertiOS.framework.proof.invariant_prop <> swinv_isremp thm
R132974:132974 Coq.Init.Logic <> :type_scope:x_'='_x not
R132947:132955 CertiOS.framework.proof.auxdef <> RdyChange def
R132958:132967 CertiOS.framework.logic.assertion <> substaskst def
R132975:132984 CertiOS.framework.logic.assertion <> substaskst def
R132987:132996 CertiOS.framework.logic.assertion <> substaskst def
R132974:132974 Coq.Init.Logic <> :type_scope:x_'='_x not
R132947:132955 CertiOS.framework.proof.auxdef <> RdyChange def
R132958:132967 CertiOS.framework.logic.assertion <> substaskst def
R132975:132984 CertiOS.framework.logic.assertion <> substaskst def
R132987:132996 CertiOS.framework.logic.assertion <> substaskst def
R133018:133029 CertiOS.framework.proof.invariant_prop <> swinv_isremp thm
R133018:133029 CertiOS.framework.proof.invariant_prop <> swinv_isremp thm
R133172:133181 CertiOS.framework.logic.assertion <> substaskst def
R133186:133190 CertiOS.framework.auxlibs.Maps <> merge meth
R133196:133200 CertiOS.framework.auxlibs.Maps <> minus meth
R133219:133223 CertiOS.framework.auxlibs.Maps <> merge meth
R133172:133181 CertiOS.framework.logic.assertion <> substaskst def
R133186:133190 CertiOS.framework.auxlibs.Maps <> merge meth
R133196:133200 CertiOS.framework.auxlibs.Maps <> minus meth
R133219:133223 CertiOS.framework.auxlibs.Maps <> merge meth
R133252:133256 CertiOS.framework.auxlibs.Maps <> merge meth
R133262:133266 CertiOS.framework.auxlibs.Maps <> minus meth
R133252:133256 CertiOS.framework.auxlibs.Maps <> merge meth
R133262:133266 CertiOS.framework.auxlibs.Maps <> minus meth
R133370:133372 Coq.Init.Logic <> :type_scope:x_'='_x not
R133304:133312 CertiOS.framework.proof.auxdef <> RdyChange def
R133315:133324 CertiOS.framework.logic.assertion <> substaskst def
R133345:133349 CertiOS.framework.auxlibs.Maps <> merge meth
R133355:133359 CertiOS.framework.auxlibs.Maps <> minus meth
R133327:133336 CertiOS.framework.logic.assertion <> substaskst def
R133373:133382 CertiOS.framework.logic.assertion <> substaskst def
R133387:133391 CertiOS.framework.auxlibs.Maps <> merge meth
R133397:133401 CertiOS.framework.auxlibs.Maps <> minus meth
R133370:133372 Coq.Init.Logic <> :type_scope:x_'='_x not
R133304:133312 CertiOS.framework.proof.auxdef <> RdyChange def
R133315:133324 CertiOS.framework.logic.assertion <> substaskst def
R133345:133349 CertiOS.framework.auxlibs.Maps <> merge meth
R133355:133359 CertiOS.framework.auxlibs.Maps <> minus meth
R133327:133336 CertiOS.framework.logic.assertion <> substaskst def
R133373:133382 CertiOS.framework.logic.assertion <> substaskst def
R133387:133391 CertiOS.framework.auxlibs.Maps <> merge meth
R133397:133401 CertiOS.framework.auxlibs.Maps <> minus meth
R133552:133558 CertiOS.framework.logic.assertion <> joinmem def
R133674:133683 CertiOS.framework.proof.join_prop <> join_minus thm
R133674:133683 CertiOS.framework.proof.join_prop <> join_minus thm
R133735:133743 CertiOS.tactics.basetac.join_lib <> join_comm thm
R133735:133743 CertiOS.tactics.basetac.join_lib <> join_comm thm
R133755:133769 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R133755:133769 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R133786:133794 CertiOS.tactics.basetac.join_lib <> join_comm thm
R133786:133794 CertiOS.tactics.basetac.join_lib <> join_comm thm
R133806:133820 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R133806:133820 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R133848:133849 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R133848:133849 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R133985:133994 CertiOS.framework.logic.assertion <> substaskst def
R133985:133994 CertiOS.framework.logic.assertion <> substaskst def
R134042:134058 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R134061:134073 CertiOS.framework.proof.auxdef TMSpecMod put def
R134088:134102 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R134088:134102 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R134131:134145 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R134131:134145 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R134172:134188 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R134191:134203 CertiOS.framework.proof.auxdef TOSpecMod put def
R134218:134232 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R134218:134232 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R134261:134275 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R134261:134275 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R134352:134356 CertiOS.framework.model.opsem <> projS def
R134370:134374 CertiOS.framework.model.opsem <> projD def
R134409:134411 CertiOS.framework.auxlibs.Maps <> get meth
R134441:134443 CertiOS.framework.auxlibs.Maps <> get meth
R134409:134411 CertiOS.framework.auxlibs.Maps <> get meth
R134441:134443 CertiOS.framework.auxlibs.Maps <> get meth
R134505:134526 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R134505:134526 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R134505:134526 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R134545:134561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134545:134561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134545:134561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134545:134561 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134623:134624 Coq.Init.Logic <> :type_scope:x_'='_x not
R134591:134600 CertiOS.framework.logic.assertion <> substaskst def
R134603:134612 CertiOS.framework.logic.assertion <> substaskst def
R134625:134634 CertiOS.framework.logic.assertion <> substaskst def
R134623:134624 Coq.Init.Logic <> :type_scope:x_'='_x not
R134591:134600 CertiOS.framework.logic.assertion <> substaskst def
R134603:134612 CertiOS.framework.logic.assertion <> substaskst def
R134625:134634 CertiOS.framework.logic.assertion <> substaskst def
R134653:134670 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R134653:134670 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R134803:134804 Coq.Init.Logic <> :type_scope:x_'='_x not
R134771:134780 CertiOS.framework.logic.assertion <> substaskst def
R134783:134792 CertiOS.framework.logic.assertion <> substaskst def
R134805:134814 CertiOS.framework.logic.assertion <> substaskst def
R134803:134804 Coq.Init.Logic <> :type_scope:x_'='_x not
R134771:134780 CertiOS.framework.logic.assertion <> substaskst def
R134783:134792 CertiOS.framework.logic.assertion <> substaskst def
R134805:134814 CertiOS.framework.logic.assertion <> substaskst def
R134833:134850 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R134833:134850 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R134897:134913 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134897:134913 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134897:134913 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134897:134913 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R134938:134960 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R134938:134960 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R135057:135068 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R135057:135068 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R135057:135068 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R135057:135068 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R135086:135099 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R135086:135099 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R135130:135144 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R135130:135144 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R135287:135289 CertiOS.framework.auxlibs.Maps <> get meth
R135287:135289 CertiOS.framework.auxlibs.Maps <> get meth
R135321:135323 CertiOS.framework.auxlibs.Maps <> get meth
R135321:135323 CertiOS.framework.auxlibs.Maps <> get meth
R135378:135400 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R135378:135400 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R135421:135432 CertiOS.framework.proof.invariant_prop <> AHprio_local thm
R135421:135432 CertiOS.framework.proof.invariant_prop <> AHprio_local thm
R135468:135480 CertiOS.framework.proof.invariant_prop <> ahprio_nodead thm
R135468:135480 CertiOS.framework.proof.invariant_prop <> ahprio_nodead thm
R135603:135624 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R135603:135624 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R135603:135624 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R135730:135735 CertiOS.framework.proof.simulation <> getmem def
R135754:135763 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R135754:135763 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R135887:135901 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R135887:135901 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R135914:135923 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R135914:135923 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R136101:136105 CertiOS.framework.auxlibs.Maps <> minus meth
R136070:136087 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R136101:136105 CertiOS.framework.auxlibs.Maps <> minus meth
R136070:136087 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R136171:136186 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R136171:136186 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R136205:136213 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R136205:136213 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R136251:136272 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R136251:136272 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R136251:136272 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R136291:136293 CertiOS.framework.auxlibs.Maps <> set meth
R136300:136300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136323:136324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136326:136326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136301:136304 CertiOS.framework.model.language <> curs constr
R136307:136315 CertiOS.framework.model.language <> hapi_code constr
R136330:136332 CertiOS.framework.auxlibs.Maps <> set meth
R136345:136350 CertiOS.framework.model.language <> oscurt constr
R136337:136342 CertiOS.framework.model.language <> curtid constr
R136291:136293 CertiOS.framework.auxlibs.Maps <> set meth
R136300:136300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136323:136324 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136326:136326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136301:136304 CertiOS.framework.model.language <> curs constr
R136307:136315 CertiOS.framework.model.language <> hapi_code constr
R136330:136332 CertiOS.framework.auxlibs.Maps <> set meth
R136345:136350 CertiOS.framework.model.language <> oscurt constr
R136337:136342 CertiOS.framework.model.language <> curtid constr
R136555:136559 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R136383:136388 CertiOS.framework.model.opsem <> hpstep ind
R136529:136531 CertiOS.framework.auxlibs.Maps <> set meth
R136544:136549 CertiOS.framework.model.language <> oscurt constr
R136536:136541 CertiOS.framework.model.language <> curtid constr
R136476:136487 CertiOS.framework.model.language TasksMod set def
R136494:136494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136517:136518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136520:136520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136495:136498 CertiOS.framework.model.language <> curs constr
R136501:136509 CertiOS.framework.model.language <> hapi_code constr
R136399:136401 CertiOS.framework.auxlibs.Maps <> set meth
R136408:136408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136441:136442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136444:136444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136409:136412 CertiOS.framework.model.language <> curs constr
R136415:136423 CertiOS.framework.model.language <> hapi_code constr
R136431:136433 CertiOS.framework.model.language <> ::x_';;'_x not
R136426:136430 CertiOS.framework.model.language <> sched constr
R136390:136390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136393:136394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136396:136396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136585:136588 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R136571:136571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136575:136576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136579:136581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136584:136584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136582:136583 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R136606:136609 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R136589:136594 CertiOS.framework.logic.assertion <> AHprio constr
R136597:136599 Coq.Init.Datatypes <> snd def
R136610:136614 CertiOS.framework.logic.assertion <> Atrue constr
R136555:136559 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R136383:136388 CertiOS.framework.model.opsem <> hpstep ind
R136529:136531 CertiOS.framework.auxlibs.Maps <> set meth
R136544:136549 CertiOS.framework.model.language <> oscurt constr
R136536:136541 CertiOS.framework.model.language <> curtid constr
R136476:136487 CertiOS.framework.model.language TasksMod set def
R136494:136494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136517:136518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136520:136520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136495:136498 CertiOS.framework.model.language <> curs constr
R136501:136509 CertiOS.framework.model.language <> hapi_code constr
R136399:136401 CertiOS.framework.auxlibs.Maps <> set meth
R136408:136408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136441:136442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136444:136444 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136409:136412 CertiOS.framework.model.language <> curs constr
R136415:136423 CertiOS.framework.model.language <> hapi_code constr
R136431:136433 CertiOS.framework.model.language <> ::x_';;'_x not
R136426:136430 CertiOS.framework.model.language <> sched constr
R136390:136390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136393:136394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136396:136396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136585:136588 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R136571:136571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136575:136576 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136579:136581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136584:136584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R136582:136583 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R136606:136609 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R136589:136594 CertiOS.framework.logic.assertion <> AHprio constr
R136597:136599 Coq.Init.Datatypes <> snd def
R136610:136614 CertiOS.framework.logic.assertion <> Atrue constr
R136630:136638 CertiOS.framework.proof.invariant_prop <> sw_same_t thm
R136630:136638 CertiOS.framework.proof.invariant_prop <> sw_same_t thm
R136749:136766 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R136749:136766 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R136922:136929 CertiOS.framework.proof.simulation <> getsched def
R136970:136973 CertiOS.framework.logic.inferules <> satp def
R136995:137004 CertiOS.framework.logic.inferules <> SWPRE_DEAD def
R137066:137078 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R137038:137038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137055:137056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137060:137061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137065:137065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137039:137048 CertiOS.framework.logic.assertion <> substaskst def
R137062:137064 CertiOS.framework.proof.lemmasfortoptheo <> aop var
R137079:137083 CertiOS.framework.logic.assertion <> SWPRE def
R137086:137088 Coq.Init.Datatypes <> snd def
R137066:137078 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R137038:137038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137055:137056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137060:137061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137065:137065 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137039:137048 CertiOS.framework.logic.assertion <> substaskst def
R137062:137064 CertiOS.framework.proof.lemmasfortoptheo <> aop var
R137079:137083 CertiOS.framework.logic.assertion <> SWPRE def
R137086:137088 Coq.Init.Datatypes <> snd def
R137161:137170 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R137161:137170 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R137206:137214 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R137206:137214 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R137303:137310 CertiOS.framework.proof.invariant_prop <> part_sub thm
R137303:137310 CertiOS.framework.proof.invariant_prop <> part_sub thm
R137353:137364 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R137353:137364 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R137408:137414 CertiOS.framework.logic.assertion <> joinmem def
R137469:137476 CertiOS.framework.auxlibs.Maps <> sub def
R137514:137524 CertiOS.framework.proof.auxdef TMSpecMod B def
R137542:137555 CertiOS.framework.proof.auxdef mmapspec image def
R137638:137648 CertiOS.framework.proof.auxdef TOSpecMod B def
R137666:137679 CertiOS.framework.proof.auxdef omapspec image def
R137711:137720 CertiOS.framework.model.opsem <> hpstepstar ind
R137807:137809 CertiOS.framework.auxlibs.Maps <> set meth
R137822:137827 CertiOS.framework.model.language <> oscurt constr
R137814:137819 CertiOS.framework.model.language <> curtid constr
R137763:137765 CertiOS.framework.auxlibs.Maps <> set meth
R137772:137772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137795:137796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137798:137798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137773:137776 CertiOS.framework.model.language <> curs constr
R137779:137787 CertiOS.framework.model.language <> hapi_code constr
R137722:137722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137725:137726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137728:137728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137711:137720 CertiOS.framework.model.opsem <> hpstepstar ind
R137807:137809 CertiOS.framework.auxlibs.Maps <> set meth
R137822:137827 CertiOS.framework.model.language <> oscurt constr
R137814:137819 CertiOS.framework.model.language <> curtid constr
R137763:137765 CertiOS.framework.auxlibs.Maps <> set meth
R137772:137772 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137795:137796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137798:137798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137773:137776 CertiOS.framework.model.language <> curs constr
R137779:137787 CertiOS.framework.model.language <> hapi_code constr
R137722:137722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137725:137726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137728:137728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137866:137875 CertiOS.framework.model.opsem <> hpstepstar ind
R137963:137965 CertiOS.framework.auxlibs.Maps <> set meth
R137978:137983 CertiOS.framework.model.language <> oscurt constr
R137970:137975 CertiOS.framework.model.language <> curtid constr
R137919:137921 CertiOS.framework.auxlibs.Maps <> set meth
R137928:137928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137951:137952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137954:137954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137929:137932 CertiOS.framework.model.language <> curs constr
R137935:137943 CertiOS.framework.model.language <> hapi_code constr
R137877:137877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137880:137881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137883:137883 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137866:137875 CertiOS.framework.model.opsem <> hpstepstar ind
R137963:137965 CertiOS.framework.auxlibs.Maps <> set meth
R137978:137983 CertiOS.framework.model.language <> oscurt constr
R137970:137975 CertiOS.framework.model.language <> curtid constr
R137919:137921 CertiOS.framework.auxlibs.Maps <> set meth
R137928:137928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137951:137952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137954:137954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137929:137932 CertiOS.framework.model.language <> curs constr
R137935:137943 CertiOS.framework.model.language <> hapi_code constr
R137877:137877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137880:137881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R137883:137883 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138017:138026 CertiOS.framework.model.opsem <> hpstepstar ind
R138069:138071 CertiOS.framework.auxlibs.Maps <> set meth
R138078:138078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138112:138113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138115:138115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138079:138082 CertiOS.framework.model.language <> curs constr
R138085:138093 CertiOS.framework.model.language <> hapi_code constr
R138102:138104 CertiOS.framework.model.language <> ::x_';;'_x not
R138097:138101 CertiOS.framework.model.language <> sched constr
R138028:138028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138031:138032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138034:138034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138017:138026 CertiOS.framework.model.opsem <> hpstepstar ind
R138069:138071 CertiOS.framework.auxlibs.Maps <> set meth
R138078:138078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138112:138113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138115:138115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138079:138082 CertiOS.framework.model.language <> curs constr
R138085:138093 CertiOS.framework.model.language <> hapi_code constr
R138102:138104 CertiOS.framework.model.language <> ::x_';;'_x not
R138097:138101 CertiOS.framework.model.language <> sched constr
R138028:138028 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138031:138032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138034:138034 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138137:138153 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R138137:138153 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R138207:138209 CertiOS.framework.auxlibs.Maps <> set meth
R138216:138216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138250:138251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138253:138253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138217:138220 CertiOS.framework.model.language <> curs constr
R138223:138231 CertiOS.framework.model.language <> hapi_code constr
R138240:138242 CertiOS.framework.model.language <> ::x_';;'_x not
R138235:138239 CertiOS.framework.model.language <> sched constr
R138184:138194 CertiOS.framework.proof.step_prop <> hpstep_star thm
R138207:138209 CertiOS.framework.auxlibs.Maps <> set meth
R138216:138216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138250:138251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138253:138253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138217:138220 CertiOS.framework.model.language <> curs constr
R138223:138231 CertiOS.framework.model.language <> hapi_code constr
R138240:138242 CertiOS.framework.model.language <> ::x_';;'_x not
R138235:138239 CertiOS.framework.model.language <> sched constr
R138184:138194 CertiOS.framework.proof.step_prop <> hpstep_star thm
R138443:138472 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R138415:138415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138432:138433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138437:138438 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138442:138442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138416:138425 CertiOS.framework.logic.assertion <> substaskst def
R138439:138441 CertiOS.framework.proof.lemmasfortoptheo <> aop var
R138473:138477 CertiOS.framework.logic.assertion <> SWPRE def
R138480:138482 Coq.Init.Datatypes <> snd def
R138443:138472 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R138415:138415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138432:138433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138437:138438 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138442:138442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138416:138425 CertiOS.framework.logic.assertion <> substaskst def
R138439:138441 CertiOS.framework.proof.lemmasfortoptheo <> aop var
R138473:138477 CertiOS.framework.logic.assertion <> SWPRE def
R138480:138482 Coq.Init.Datatypes <> snd def
R138597:138600 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R138570:138570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138587:138588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138592:138593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138596:138596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138571:138580 CertiOS.framework.logic.assertion <> substaskst def
R138594:138595 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R138618:138621 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R138601:138606 CertiOS.framework.logic.assertion <> AHprio constr
R138609:138611 Coq.Init.Datatypes <> snd def
R138622:138626 CertiOS.framework.logic.assertion <> Atrue constr
R138597:138600 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R138570:138570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138587:138588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138592:138593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138596:138596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R138571:138580 CertiOS.framework.logic.assertion <> substaskst def
R138594:138595 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R138618:138621 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R138601:138606 CertiOS.framework.logic.assertion <> AHprio constr
R138609:138611 Coq.Init.Datatypes <> snd def
R138622:138626 CertiOS.framework.logic.assertion <> Atrue constr
R138640:138655 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp thm
R138640:138655 CertiOS.framework.proof.invariant_prop <> lemma_trans_temp thm
R138769:138779 CertiOS.framework.proof.auxdef TOSpecMod B def
R138797:138810 CertiOS.framework.proof.auxdef omapspec image def
R138905:138915 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R138905:138915 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R138931:138940 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R138931:138940 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R139016:139034 CertiOS.framework.proof.invariant_prop <> swdead_ahprio_false thm
R139016:139034 CertiOS.framework.proof.invariant_prop <> swdead_ahprio_false thm
R139116:139122 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R139124:139125 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R139189:139191 Coq.Init.Logic <> :type_scope:x_'='_x not
R139126:139137 CertiOS.framework.model.language TasksMod get def
R139140:139151 CertiOS.framework.model.language TasksMod set def
R139158:139158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139181:139182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139184:139184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139159:139162 CertiOS.framework.model.language <> curs constr
R139165:139173 CertiOS.framework.model.language <> hapi_code constr
R139192:139195 Coq.Init.Datatypes <> Some constr
R139116:139122 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R139124:139125 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R139189:139191 Coq.Init.Logic <> :type_scope:x_'='_x not
R139126:139137 CertiOS.framework.model.language TasksMod get def
R139140:139151 CertiOS.framework.model.language TasksMod set def
R139158:139158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139181:139182 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139184:139184 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R139159:139162 CertiOS.framework.model.language <> curs constr
R139165:139173 CertiOS.framework.model.language <> hapi_code constr
R139192:139195 Coq.Init.Datatypes <> Some constr
R139244:139247 CertiOS.framework.model.memory <> Tptr constr
R139285:139287 Coq.Init.Datatypes <> snd def
R139214:139224 CertiOS.framework.proof.invariant_prop <> sw_has_code thm
R139244:139247 CertiOS.framework.model.memory <> Tptr constr
R139285:139287 Coq.Init.Datatypes <> snd def
R139214:139224 CertiOS.framework.proof.invariant_prop <> sw_has_code thm
R139354:139354 Coq.Init.Logic <> :type_scope:x_'='_x not
R139354:139354 Coq.Init.Logic <> :type_scope:x_'='_x not
R139443:139452 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R139443:139452 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R139490:139497 CertiOS.framework.auxlibs.Maps <> sub def
R139490:139497 CertiOS.framework.auxlibs.Maps <> sub def
R139516:139523 CertiOS.framework.proof.invariant_prop <> part_sub thm
R139516:139523 CertiOS.framework.proof.invariant_prop <> part_sub thm
R139660:139662 CertiOS.framework.auxlibs.Maps <> get meth
R139660:139662 CertiOS.framework.auxlibs.Maps <> get meth
R139694:139696 CertiOS.framework.auxlibs.Maps <> get meth
R139694:139696 CertiOS.framework.auxlibs.Maps <> get meth
R139832:139845 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R139832:139845 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R139877:139883 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R139961:139976 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R139961:139976 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R139961:139976 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R139961:139976 CertiOS.framework.proof.lemmasfortoptheo <> abst_set_get_neq thm
R140033:140049 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R140033:140049 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R140033:140049 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R140033:140049 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R140093:140095 Coq.Init.Logic <> :type_scope:x_'='_x not
R140075:140086 CertiOS.framework.model.language TasksMod get def
R140096:140099 Coq.Init.Datatypes <> Some constr
R140093:140095 Coq.Init.Logic <> :type_scope:x_'='_x not
R140075:140086 CertiOS.framework.model.language TasksMod get def
R140096:140099 Coq.Init.Datatypes <> Some constr
R140230:140237 CertiOS.framework.auxlibs.Maps <> disjoint def
R140230:140237 CertiOS.framework.auxlibs.Maps <> disjoint def
R140369:140375 CertiOS.framework.logic.assertion <> joinmem def
R140404:140411 CertiOS.framework.auxlibs.Maps <> disjoint def
R140404:140411 CertiOS.framework.auxlibs.Maps <> disjoint def
R140431:140440 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R140431:140440 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R140582:140588 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R140592:140592 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R140630:140632 Coq.Init.Logic <> :type_scope:x_'='_x not
R140593:140597 CertiOS.framework.model.memory <> store def
R140622:140625 CertiOS.framework.model.memory <> Vptr constr
R140613:140613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140615:140615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140619:140619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140600:140603 CertiOS.framework.model.memory <> Tptr constr
R140633:140636 Coq.Init.Datatypes <> Some constr
R140582:140588 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R140592:140592 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R140630:140632 Coq.Init.Logic <> :type_scope:x_'='_x not
R140593:140597 CertiOS.framework.model.memory <> store def
R140622:140625 CertiOS.framework.model.memory <> Vptr constr
R140613:140613 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140615:140615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140619:140619 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140600:140603 CertiOS.framework.model.memory <> Tptr constr
R140633:140636 Coq.Init.Datatypes <> Some constr
R140705:140714 CertiOS.framework.logic.assertion <> substaskst def
R140780:140783 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R140738:140738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140740:140741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140744:140745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140749:140750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140752:140753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140756:140757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140761:140763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140778:140779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140764:140772 CertiOS.framework.model.language <> spec_done constr
R140774:140777 Coq.Init.Datatypes <> None constr
R140784:140788 CertiOS.framework.logic.assertion <> SWPRE def
R140791:140793 Coq.Init.Datatypes <> snd def
R140780:140783 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R140738:140738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140740:140741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140744:140745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140749:140750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140752:140753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140756:140757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140761:140763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140778:140779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R140764:140772 CertiOS.framework.model.language <> spec_done constr
R140774:140777 Coq.Init.Datatypes <> None constr
R140784:140788 CertiOS.framework.logic.assertion <> SWPRE def
R140791:140793 Coq.Init.Datatypes <> snd def
R140841:140849 CertiOS.framework.model.language <> spec_done constr
R140851:140854 Coq.Init.Datatypes <> None constr
R140819:140829 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R140841:140849 CertiOS.framework.model.language <> spec_done constr
R140851:140854 Coq.Init.Datatypes <> None constr
R140819:140829 CertiOS.framework.proof.invariant_prop <> swpre_store thm
R140930:140932 CertiOS.framework.auxlibs.Maps <> get meth
R140930:140932 CertiOS.framework.auxlibs.Maps <> get meth
R140964:140966 CertiOS.framework.auxlibs.Maps <> get meth
R140964:140966 CertiOS.framework.auxlibs.Maps <> get meth
R141012:141014 CertiOS.framework.auxlibs.Maps <> get meth
R141088:141096 CertiOS.framework.proof.invariant_prop <> aux_atrue thm
R141088:141096 CertiOS.framework.proof.invariant_prop <> aux_atrue thm
R141227:141231 CertiOS.framework.auxlibs.Maps <> merge meth
R141268:141268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141271:141272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141276:141277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141279:141280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141283:141284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141287:141287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141340:141342 Coq.Init.Datatypes <> snd def
R141173:141188 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv_dead thm
R141227:141231 CertiOS.framework.auxlibs.Maps <> merge meth
R141268:141268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141271:141272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141276:141277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141279:141280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141283:141284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141287:141287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R141340:141342 Coq.Init.Datatypes <> snd def
R141173:141188 CertiOS.framework.proof.invariant_prop <> swi_rdy_inv_dead thm
R141544:141556 CertiOS.framework.proof.auxdef TMSpecMod put def
R141586:141590 CertiOS.framework.auxlibs.Maps <> merge meth
R141559:141571 CertiOS.framework.proof.auxdef TMSpecMod put def
R141613:141625 CertiOS.framework.proof.auxdef TOSpecMod put def
R141655:141659 CertiOS.framework.auxlibs.Maps <> merge meth
R141628:141640 CertiOS.framework.proof.auxdef TOSpecMod put def
R141683:141687 CertiOS.framework.auxlibs.Maps <> merge meth
R141706:141710 CertiOS.framework.auxlibs.Maps <> minus meth
R141690:141694 CertiOS.framework.auxlibs.Maps <> merge meth
R141544:141556 CertiOS.framework.proof.auxdef TMSpecMod put def
R141586:141590 CertiOS.framework.auxlibs.Maps <> merge meth
R141559:141571 CertiOS.framework.proof.auxdef TMSpecMod put def
R141613:141625 CertiOS.framework.proof.auxdef TOSpecMod put def
R141655:141659 CertiOS.framework.auxlibs.Maps <> merge meth
R141628:141640 CertiOS.framework.proof.auxdef TOSpecMod put def
R141683:141687 CertiOS.framework.auxlibs.Maps <> merge meth
R141706:141710 CertiOS.framework.auxlibs.Maps <> minus meth
R141690:141694 CertiOS.framework.auxlibs.Maps <> merge meth
R141742:141746 CertiOS.framework.auxlibs.Maps <> merge meth
R141749:141753 CertiOS.framework.auxlibs.Maps <> merge meth
R141756:141760 CertiOS.framework.auxlibs.Maps <> minus meth
R141742:141746 CertiOS.framework.auxlibs.Maps <> merge meth
R141749:141753 CertiOS.framework.auxlibs.Maps <> merge meth
R141756:141760 CertiOS.framework.auxlibs.Maps <> minus meth
R141799:141806 CertiOS.framework.auxlibs.Maps <> sub def
R141799:141806 CertiOS.framework.auxlibs.Maps <> sub def
R141872:141878 CertiOS.framework.logic.assertion <> joinmem def
R141945:141952 CertiOS.framework.auxlibs.Maps <> sub def
R141975:141982 CertiOS.framework.auxlibs.Maps <> sub def
R141975:141982 CertiOS.framework.auxlibs.Maps <> sub def
R142002:142009 CertiOS.framework.proof.invariant_prop <> part_sub thm
R142002:142009 CertiOS.framework.proof.invariant_prop <> part_sub thm
R142070:142078 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R142070:142078 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R142147:142159 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R142147:142159 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R142198:142206 CertiOS.framework.proof.auxdef <> good_is_S def
R142356:142358 Coq.Init.Logic <> :type_scope:x_'='_x not
R142328:142332 CertiOS.framework.model.opsem <> projS def
R142334:142334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142337:142338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142342:142343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142345:142346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142349:142350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142353:142353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142359:142362 Coq.Init.Datatypes <> Some constr
R142364:142364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142366:142367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142370:142371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142373:142374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142376:142377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142389:142389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142378:142378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142381:142382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142385:142386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142388:142388 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142356:142358 Coq.Init.Logic <> :type_scope:x_'='_x not
R142328:142332 CertiOS.framework.model.opsem <> projS def
R142334:142334 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142337:142338 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142342:142343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142345:142346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142349:142350 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142353:142353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142359:142362 Coq.Init.Datatypes <> Some constr
R142364:142364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142366:142367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142370:142371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142373:142374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142376:142377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142389:142389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142378:142378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142381:142382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142385:142386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142388:142388 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R142403:142407 CertiOS.framework.model.opsem <> projS def
R142425:142429 CertiOS.framework.model.opsem <> projD def
R142464:142466 CertiOS.framework.auxlibs.Maps <> get meth
R142464:142466 CertiOS.framework.auxlibs.Maps <> get meth
R142503:142505 CertiOS.framework.auxlibs.Maps <> get meth
R142503:142505 CertiOS.framework.auxlibs.Maps <> get meth
R142603:142635 CertiOS.framework.proof.invariant_prop <> mem_join_merge_minus_join_store'f thm
R142603:142635 CertiOS.framework.proof.invariant_prop <> mem_join_merge_minus_join_store'f thm
R142710:142727 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R142710:142727 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R142745:142760 CertiOS.framework.proof.invariant_prop <> partm_merge_disj thm
R142745:142760 CertiOS.framework.proof.invariant_prop <> partm_merge_disj thm
R142775:142780 CertiOS.framework.proof.invariant_prop <> disj'f thm
R142775:142780 CertiOS.framework.proof.invariant_prop <> disj'f thm
R143110:143126 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R143139:143151 CertiOS.framework.proof.auxdef TMSpecMod put def
R143166:143180 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R143166:143180 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R143202:143218 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R143243:143258 CertiOS.framework.proof.invariant_prop <> partm_minus_subf thm
R143243:143258 CertiOS.framework.proof.invariant_prop <> partm_minus_subf thm
R143372:143378 CertiOS.framework.logic.assertion <> joinmem def
R143451:143453 Coq.Init.Logic <> :type_scope:x_'='_x not
R143437:143439 CertiOS.framework.auxlibs.Maps <> get meth
R143445:143450 CertiOS.framework.model.language <> curtid constr
R143454:143457 Coq.Init.Datatypes <> Some constr
R143460:143465 CertiOS.framework.model.language <> oscurt constr
R143451:143453 Coq.Init.Logic <> :type_scope:x_'='_x not
R143437:143439 CertiOS.framework.auxlibs.Maps <> get meth
R143445:143450 CertiOS.framework.model.language <> curtid constr
R143454:143457 Coq.Init.Datatypes <> Some constr
R143460:143465 CertiOS.framework.model.language <> oscurt constr
R143570:143578 CertiOS.framework.model.language <> spec_done constr
R143580:143583 Coq.Init.Datatypes <> None constr
R143570:143578 CertiOS.framework.model.language <> spec_done constr
R143580:143583 Coq.Init.Datatypes <> None constr
R143642:143654 CertiOS.framework.proof.invariant_prop <> join_complexf thm
R143642:143654 CertiOS.framework.proof.invariant_prop <> join_complexf thm
R143717:143719 Coq.Init.Logic <> :type_scope:x_'='_x not
R143703:143705 CertiOS.framework.auxlibs.Maps <> get meth
R143711:143716 CertiOS.framework.model.language <> curtid constr
R143720:143723 Coq.Init.Datatypes <> Some constr
R143726:143731 CertiOS.framework.model.language <> oscurt constr
R143717:143719 Coq.Init.Logic <> :type_scope:x_'='_x not
R143703:143705 CertiOS.framework.auxlibs.Maps <> get meth
R143711:143716 CertiOS.framework.model.language <> curtid constr
R143720:143723 Coq.Init.Datatypes <> Some constr
R143726:143731 CertiOS.framework.model.language <> oscurt constr
R143836:143844 CertiOS.framework.model.language <> spec_done constr
R143846:143849 Coq.Init.Datatypes <> None constr
R143836:143844 CertiOS.framework.model.language <> spec_done constr
R143846:143849 Coq.Init.Datatypes <> None constr
R143902:143919 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R143902:143919 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R143938:143950 CertiOS.framework.proof.invariant_prop <> parto_complex thm
R143938:143950 CertiOS.framework.proof.invariant_prop <> parto_complex thm
R143987:144000 CertiOS.framework.proof.invariant_prop <> disj_complex'f thm
R143987:144000 CertiOS.framework.proof.invariant_prop <> disj_complex'f thm
R144061:144070 CertiOS.framework.logic.assertion <> substaskst def
R144080:144089 CertiOS.framework.logic.assertion <> substaskst def
R144061:144070 CertiOS.framework.logic.assertion <> substaskst def
R144080:144089 CertiOS.framework.logic.assertion <> substaskst def
R144172:144176 CertiOS.framework.model.opsem <> projS def
R144190:144194 CertiOS.framework.model.opsem <> projD def
R144229:144231 CertiOS.framework.auxlibs.Maps <> get meth
R144229:144231 CertiOS.framework.auxlibs.Maps <> get meth
R144264:144266 CertiOS.framework.auxlibs.Maps <> get meth
R144264:144266 CertiOS.framework.auxlibs.Maps <> get meth
R144328:144349 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R144328:144349 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R144404:144406 Coq.Init.Logic <> :type_scope:x_'='_x not
R144390:144392 CertiOS.framework.auxlibs.Maps <> get meth
R144398:144403 CertiOS.framework.model.language <> curtid constr
R144407:144410 Coq.Init.Datatypes <> Some constr
R144413:144418 CertiOS.framework.model.language <> oscurt constr
R144404:144406 Coq.Init.Logic <> :type_scope:x_'='_x not
R144390:144392 CertiOS.framework.auxlibs.Maps <> get meth
R144398:144403 CertiOS.framework.model.language <> curtid constr
R144407:144410 Coq.Init.Datatypes <> Some constr
R144413:144418 CertiOS.framework.model.language <> oscurt constr
R144523:144531 CertiOS.framework.model.language <> spec_done constr
R144533:144536 Coq.Init.Datatypes <> None constr
R144523:144531 CertiOS.framework.model.language <> spec_done constr
R144533:144536 Coq.Init.Datatypes <> None constr
R144590:144599 CertiOS.framework.logic.assertion <> substaskst def
R144610:144619 CertiOS.framework.logic.assertion <> substaskst def
R144625:144629 CertiOS.framework.auxlibs.Maps <> merge meth
R144642:144646 CertiOS.framework.auxlibs.Maps <> merge meth
R144658:144662 CertiOS.framework.auxlibs.Maps <> merge meth
R144590:144599 CertiOS.framework.logic.assertion <> substaskst def
R144610:144619 CertiOS.framework.logic.assertion <> substaskst def
R144625:144629 CertiOS.framework.auxlibs.Maps <> merge meth
R144642:144646 CertiOS.framework.auxlibs.Maps <> merge meth
R144658:144662 CertiOS.framework.auxlibs.Maps <> merge meth
R144725:144729 CertiOS.framework.model.opsem <> projS def
R144743:144747 CertiOS.framework.model.opsem <> projD def
R144782:144784 CertiOS.framework.auxlibs.Maps <> get meth
R144782:144784 CertiOS.framework.auxlibs.Maps <> get meth
R144817:144819 CertiOS.framework.auxlibs.Maps <> get meth
R144817:144819 CertiOS.framework.auxlibs.Maps <> get meth
R144922:144938 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144922:144938 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144922:144938 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144922:144938 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144957:144973 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144957:144973 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144957:144973 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R144957:144973 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R145007:145017 CertiOS.framework.proof.invariant_prop <> switch_linv thm
R145007:145017 CertiOS.framework.proof.invariant_prop <> switch_linv thm
R145091:145105 CertiOS.framework.proof.invariant_prop <> disj_complex''f thm
R145091:145105 CertiOS.framework.proof.invariant_prop <> disj_complex''f thm
R145215:145220 CertiOS.framework.proof.simulation <> getmem def
R145332:145347 CertiOS.framework.proof.invariant_prop <> disj_complex'''f thm
R145332:145347 CertiOS.framework.proof.invariant_prop <> disj_complex'''f thm
R145419:145419 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145477:145494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145559:145559 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145432:145436 CertiOS.framework.logic.assertion <> absop def
R145468:145471 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145439:145439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145457:145458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145463:145464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145467:145467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145440:145449 CertiOS.framework.logic.assertion <> substaskst def
R145465:145466 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145472:145474 CertiOS.framework.logic.assertion <> INV def
R145507:145511 CertiOS.framework.logic.assertion <> absop def
R145544:145547 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145514:145514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145533:145534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145539:145540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145543:145543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145515:145524 CertiOS.framework.logic.assertion <> substaskst def
R145541:145542 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145548:145553 CertiOS.framework.logic.assertion <> RDYINV def
R145419:145419 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145477:145494 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145559:145559 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145432:145436 CertiOS.framework.logic.assertion <> absop def
R145468:145471 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145439:145439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145457:145458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145463:145464 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145467:145467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145440:145449 CertiOS.framework.logic.assertion <> substaskst def
R145465:145466 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145472:145474 CertiOS.framework.logic.assertion <> INV def
R145507:145511 CertiOS.framework.logic.assertion <> absop def
R145544:145547 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145514:145514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145533:145534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145539:145540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145543:145543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145515:145524 CertiOS.framework.logic.assertion <> substaskst def
R145541:145542 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145548:145553 CertiOS.framework.logic.assertion <> RDYINV def
R145606:145606 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145683:145687 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145619:145623 CertiOS.framework.logic.assertion <> absop def
R145668:145671 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145626:145626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145657:145658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145663:145664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145667:145667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145627:145635 CertiOS.framework.proof.auxdef <> RdyChange def
R145638:145647 CertiOS.framework.logic.assertion <> substaskst def
R145665:145666 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145672:145677 CertiOS.framework.logic.assertion <> RDYINV def
R145704:145707 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145688:145695 CertiOS.framework.auxlibs.Maps <> disjoint def
R145708:145715 CertiOS.framework.auxlibs.Maps <> disjoint def
R145606:145606 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145683:145687 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145619:145623 CertiOS.framework.logic.assertion <> absop def
R145668:145671 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R145626:145626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145657:145658 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145663:145664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145667:145667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R145627:145635 CertiOS.framework.proof.auxdef <> RdyChange def
R145638:145647 CertiOS.framework.logic.assertion <> substaskst def
R145665:145666 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R145672:145677 CertiOS.framework.logic.assertion <> RDYINV def
R145704:145707 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R145688:145695 CertiOS.framework.auxlibs.Maps <> disjoint def
R145708:145715 CertiOS.framework.auxlibs.Maps <> disjoint def
R145778:145778 Coq.Init.Logic <> :type_scope:x_'='_x not
R145748:145756 CertiOS.framework.proof.auxdef <> RdyChange def
R145759:145768 CertiOS.framework.logic.assertion <> substaskst def
R145779:145788 CertiOS.framework.logic.assertion <> substaskst def
R145778:145778 Coq.Init.Logic <> :type_scope:x_'='_x not
R145748:145756 CertiOS.framework.proof.auxdef <> RdyChange def
R145759:145768 CertiOS.framework.logic.assertion <> substaskst def
R145779:145788 CertiOS.framework.logic.assertion <> substaskst def
R145810:145822 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R145810:145822 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R145959:145973 CertiOS.framework.proof.invariant_prop <> disj_complex''f thm
R145959:145973 CertiOS.framework.proof.invariant_prop <> disj_complex''f thm
R146074:146079 CertiOS.framework.proof.simulation <> getmem def
R146191:146206 CertiOS.framework.proof.invariant_prop <> disj_complex'''f thm
R146191:146206 CertiOS.framework.proof.invariant_prop <> disj_complex'''f thm
R146226:146232 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146236:146250 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146270:146286 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R146254:146256 Coq.Init.Logic <> :type_scope:x_'='_x not
R146257:146261 CertiOS.framework.auxlibs.Maps <> merge meth
R146287:146293 CertiOS.framework.proof.simulation <> TaskSim coind
R146407:146416 CertiOS.framework.proof.auxdef <> InitTaskSt def
R146383:146387 CertiOS.framework.auxlibs.Maps <> merge meth
R146371:146371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146374:146375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146377:146377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146319:146327 CertiOS.framework.proof.auxdef <> RdyChange def
R146330:146339 CertiOS.framework.logic.assertion <> substaskst def
R146295:146295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146298:146299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146312:146312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146300:146300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146303:146304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146307:146308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146311:146311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146226:146232 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146236:146250 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R146270:146286 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R146254:146256 Coq.Init.Logic <> :type_scope:x_'='_x not
R146257:146261 CertiOS.framework.auxlibs.Maps <> merge meth
R146287:146293 CertiOS.framework.proof.simulation <> TaskSim coind
R146407:146416 CertiOS.framework.proof.auxdef <> InitTaskSt def
R146383:146387 CertiOS.framework.auxlibs.Maps <> merge meth
R146371:146371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146374:146375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146377:146377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146319:146327 CertiOS.framework.proof.auxdef <> RdyChange def
R146330:146339 CertiOS.framework.logic.assertion <> substaskst def
R146295:146295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146298:146299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146312:146312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146300:146300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146303:146304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146307:146308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146311:146311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R146583:146583 Coq.Init.Logic <> :type_scope:x_'='_x not
R146542:146550 CertiOS.framework.proof.auxdef <> RdyChange def
R146553:146562 CertiOS.framework.logic.assertion <> substaskst def
R146568:146572 CertiOS.framework.auxlibs.Maps <> merge meth
R146584:146593 CertiOS.framework.logic.assertion <> substaskst def
R146599:146603 CertiOS.framework.auxlibs.Maps <> merge meth
R146583:146583 Coq.Init.Logic <> :type_scope:x_'='_x not
R146542:146550 CertiOS.framework.proof.auxdef <> RdyChange def
R146553:146562 CertiOS.framework.logic.assertion <> substaskst def
R146568:146572 CertiOS.framework.auxlibs.Maps <> merge meth
R146584:146593 CertiOS.framework.logic.assertion <> substaskst def
R146599:146603 CertiOS.framework.auxlibs.Maps <> merge meth
R146626:146638 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R146626:146638 CertiOS.framework.proof.invariant_prop <> rdyinv_isremp thm
R146748:146750 Coq.Init.Logic <> :type_scope:x_'='_x not
R146735:146739 CertiOS.framework.auxlibs.Maps <> merge meth
R146751:146755 CertiOS.framework.auxlibs.Maps <> merge meth
R146748:146750 Coq.Init.Logic <> :type_scope:x_'='_x not
R146735:146739 CertiOS.framework.auxlibs.Maps <> merge meth
R146751:146755 CertiOS.framework.auxlibs.Maps <> merge meth
R146778:146795 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146778:146795 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146778:146795 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146778:146795 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146827:146830 Coq.Init.Logic <> :type_scope:x_'='_x not
R146844:146844 Coq.Init.Logic <> :type_scope:x_'='_x not
R146814:146818 CertiOS.framework.auxlibs.Maps <> merge meth
R146831:146835 CertiOS.framework.auxlibs.Maps <> merge meth
R146827:146830 Coq.Init.Logic <> :type_scope:x_'='_x not
R146844:146844 Coq.Init.Logic <> :type_scope:x_'='_x not
R146814:146818 CertiOS.framework.auxlibs.Maps <> merge meth
R146831:146835 CertiOS.framework.auxlibs.Maps <> merge meth
R146859:146876 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146859:146876 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146859:146876 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146859:146876 CertiOS.tactics.basetac.join_lib <> disjoint_merge_sym thm
R146999:147008 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R146999:147008 CertiOS.framework.proof.auxdef <> tid_eq_dec thm
R147047:147058 CertiOS.framework.proof.step_prop <> task_no_dead def
R147047:147058 CertiOS.framework.proof.step_prop <> task_no_dead def
R147155:147166 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R147155:147166 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R147155:147166 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R147155:147166 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R147196:147217 CertiOS.framework.proof.invariant_prop <> nodead_swpredead_false thm
R147196:147217 CertiOS.framework.proof.invariant_prop <> nodead_swpredead_false thm
R147314:147315 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R147314:147315 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R147451:147460 CertiOS.framework.logic.assertion <> substaskst def
R147451:147460 CertiOS.framework.logic.assertion <> substaskst def
R147508:147524 CertiOS.framework.proof.auxdef TMSpecMod maps_to def
R147527:147539 CertiOS.framework.proof.auxdef TMSpecMod put def
R147554:147568 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R147554:147568 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R147597:147611 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R147597:147611 CertiOS.framework.proof.auxdef TMSpecMod beq_A def
R147638:147654 CertiOS.framework.proof.auxdef TOSpecMod maps_to def
R147657:147669 CertiOS.framework.proof.auxdef TOSpecMod put def
R147684:147698 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R147684:147698 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R147727:147741 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R147727:147741 CertiOS.framework.proof.auxdef TOSpecMod beq_A def
R147818:147822 CertiOS.framework.model.opsem <> projS def
R147836:147840 CertiOS.framework.model.opsem <> projD def
R147875:147877 CertiOS.framework.auxlibs.Maps <> get meth
R147907:147909 CertiOS.framework.auxlibs.Maps <> get meth
R147875:147877 CertiOS.framework.auxlibs.Maps <> get meth
R147907:147909 CertiOS.framework.auxlibs.Maps <> get meth
R147971:147992 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R147971:147992 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R147971:147992 CertiOS.framework.proof.lemmasfortoptheo <> repl_change_tstm_trans thm
R148011:148027 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148011:148027 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148011:148027 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148011:148027 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148089:148090 Coq.Init.Logic <> :type_scope:x_'='_x not
R148057:148066 CertiOS.framework.logic.assertion <> substaskst def
R148069:148078 CertiOS.framework.logic.assertion <> substaskst def
R148091:148100 CertiOS.framework.logic.assertion <> substaskst def
R148089:148090 Coq.Init.Logic <> :type_scope:x_'='_x not
R148057:148066 CertiOS.framework.logic.assertion <> substaskst def
R148069:148078 CertiOS.framework.logic.assertion <> substaskst def
R148091:148100 CertiOS.framework.logic.assertion <> substaskst def
R148119:148136 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R148119:148136 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R148269:148270 Coq.Init.Logic <> :type_scope:x_'='_x not
R148237:148246 CertiOS.framework.logic.assertion <> substaskst def
R148249:148258 CertiOS.framework.logic.assertion <> substaskst def
R148271:148280 CertiOS.framework.logic.assertion <> substaskst def
R148269:148270 Coq.Init.Logic <> :type_scope:x_'='_x not
R148237:148246 CertiOS.framework.logic.assertion <> substaskst def
R148249:148258 CertiOS.framework.logic.assertion <> substaskst def
R148271:148280 CertiOS.framework.logic.assertion <> substaskst def
R148299:148316 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R148299:148316 CertiOS.framework.proof.lemmasfortoptheo <> change_tstm_trans' thm
R148363:148379 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148363:148379 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148363:148379 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148363:148379 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R148404:148426 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R148404:148426 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R148523:148534 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R148523:148534 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R148523:148534 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R148523:148534 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R148551:148564 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R148551:148564 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R148595:148609 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R148595:148609 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R148672:148679 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R148672:148679 CertiOS.tactics.basetac.join_lib <> disj_sym thm
R148692:148701 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R148692:148701 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R148817:148819 CertiOS.framework.auxlibs.Maps <> get meth
R148817:148819 CertiOS.framework.auxlibs.Maps <> get meth
R148851:148853 CertiOS.framework.auxlibs.Maps <> get meth
R148851:148853 CertiOS.framework.auxlibs.Maps <> get meth
R148908:148930 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R148908:148930 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R148949:148960 CertiOS.framework.proof.invariant_prop <> AHprio_local thm
R148949:148960 CertiOS.framework.proof.invariant_prop <> AHprio_local thm
R148993:149005 CertiOS.framework.proof.invariant_prop <> ahprio_nodead thm
R148993:149005 CertiOS.framework.proof.invariant_prop <> ahprio_nodead thm
R149547:149550 Coq.Init.Logic <> :type_scope:x_'='_x not
R149501:149501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149533:149534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149546:149546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149502:149505 CertiOS.framework.model.language <> curs constr
R149508:149512 CertiOS.framework.model.language <> sprim constr
R149515:149521 CertiOS.framework.model.language <> stkinit constr
R149535:149535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149541:149542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149545:149545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149536:149540 CertiOS.framework.model.language <> kenil constr
R149551:149551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149583:149584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149596:149596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149552:149555 CertiOS.framework.model.language <> curs constr
R149558:149562 CertiOS.framework.model.language <> sprim constr
R149565:149571 CertiOS.framework.model.language <> stkinit constr
R149585:149585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149591:149592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149595:149595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149586:149590 CertiOS.framework.model.language <> kenil constr
R149547:149550 Coq.Init.Logic <> :type_scope:x_'='_x not
R149501:149501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149533:149534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149546:149546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149502:149505 CertiOS.framework.model.language <> curs constr
R149508:149512 CertiOS.framework.model.language <> sprim constr
R149515:149521 CertiOS.framework.model.language <> stkinit constr
R149535:149535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149541:149542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149545:149545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149536:149540 CertiOS.framework.model.language <> kenil constr
R149551:149551 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149583:149584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149596:149596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149552:149555 CertiOS.framework.model.language <> curs constr
R149558:149562 CertiOS.framework.model.language <> sprim constr
R149565:149571 CertiOS.framework.model.language <> stkinit constr
R149585:149585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149591:149592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149595:149595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R149586:149590 CertiOS.framework.model.language <> kenil constr
R149905:149909 CertiOS.framework.auxlibs.Maps <> merge meth
R149905:149909 CertiOS.framework.auxlibs.Maps <> merge meth
R149953:149958 CertiOS.framework.proof.simulation <> getmem def
R149977:149986 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R149977:149986 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R150110:150124 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R150110:150124 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R150137:150146 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R150137:150146 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R150404:150406 CertiOS.framework.auxlibs.Maps <> get meth
R150404:150406 CertiOS.framework.auxlibs.Maps <> get meth
R150464:150466 CertiOS.framework.auxlibs.Maps <> get meth
R150464:150466 CertiOS.framework.auxlibs.Maps <> get meth
R150604:150611 CertiOS.framework.auxlibs.Maps <> sub def
R150604:150611 CertiOS.framework.auxlibs.Maps <> sub def
R150631:150638 CertiOS.framework.proof.invariant_prop <> part_sub thm
R150631:150638 CertiOS.framework.proof.invariant_prop <> part_sub thm
R150658:150665 CertiOS.framework.auxlibs.Maps <> sub def
R150658:150665 CertiOS.framework.auxlibs.Maps <> sub def
R150684:150692 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R150684:150692 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R150804:150815 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R150804:150815 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R150920:150931 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R150920:150931 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R151036:151047 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R151036:151047 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R151165:151169 CertiOS.framework.auxlibs.Maps <> minus meth
R151193:151193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151196:151197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151203:151204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151206:151206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151134:151151 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R151165:151169 CertiOS.framework.auxlibs.Maps <> minus meth
R151193:151193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151196:151197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151203:151204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151206:151206 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151134:151151 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R151285:151294 CertiOS.framework.model.opsem <> htstepstar ind
R151418:151418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151421:151422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151428:151429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151431:151431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151345:151345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151394:151395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151397:151397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151346:151349 CertiOS.framework.model.language <> curs constr
R151352:151360 CertiOS.framework.model.language <> hapi_code constr
R151387:151389 CertiOS.framework.model.language <> ::x_';;'_x not
R151363:151370 CertiOS.framework.model.language <> spec_crt constr
R151378:151383 CertiOS.framework.model.memory <> Vint32 constr
R151309:151309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151312:151313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151319:151320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151322:151322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151296:151296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151299:151300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151302:151302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151285:151294 CertiOS.framework.model.opsem <> htstepstar ind
R151418:151418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151421:151422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151428:151429 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151431:151431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151345:151345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151394:151395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151397:151397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151346:151349 CertiOS.framework.model.language <> curs constr
R151352:151360 CertiOS.framework.model.language <> hapi_code constr
R151387:151389 CertiOS.framework.model.language <> ::x_';;'_x not
R151363:151370 CertiOS.framework.model.language <> spec_crt constr
R151378:151383 CertiOS.framework.model.memory <> Vint32 constr
R151309:151309 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151312:151313 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151319:151320 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151322:151322 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151296:151296 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151299:151300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151302:151302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151467:151483 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R151467:151483 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R151572:151581 CertiOS.framework.model.opsem <> hpstepstar ind
R151729:151733 CertiOS.framework.auxlibs.Maps <> merge meth
R151772:151776 CertiOS.framework.auxlibs.Maps <> minus meth
R151736:151738 CertiOS.framework.auxlibs.Maps <> set meth
R151755:151764 CertiOS.framework.model.language <> abstcblist constr
R151744:151752 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R151701:151701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151704:151705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151722:151723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151726:151726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151706:151708 CertiOS.framework.auxlibs.Maps <> set meth
R151613:151615 CertiOS.framework.auxlibs.Maps <> set meth
R151689:151695 CertiOS.framework.model.opsem <> nilcont def
R151618:151620 CertiOS.framework.auxlibs.Maps <> set meth
R151649:151649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151670:151671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151681:151681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151650:151653 CertiOS.framework.model.language <> curs constr
R151656:151664 CertiOS.framework.model.language <> hapi_code constr
R151672:151672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151676:151676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151680:151680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151595:151595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151598:151599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151605:151606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151608:151608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151584:151584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151587:151588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151590:151590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151572:151581 CertiOS.framework.model.opsem <> hpstepstar ind
R151729:151733 CertiOS.framework.auxlibs.Maps <> merge meth
R151772:151776 CertiOS.framework.auxlibs.Maps <> minus meth
R151736:151738 CertiOS.framework.auxlibs.Maps <> set meth
R151755:151764 CertiOS.framework.model.language <> abstcblist constr
R151744:151752 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R151701:151701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151704:151705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151722:151723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151726:151726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151706:151708 CertiOS.framework.auxlibs.Maps <> set meth
R151613:151615 CertiOS.framework.auxlibs.Maps <> set meth
R151689:151695 CertiOS.framework.model.opsem <> nilcont def
R151618:151620 CertiOS.framework.auxlibs.Maps <> set meth
R151649:151649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151670:151671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151681:151681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151650:151653 CertiOS.framework.model.language <> curs constr
R151656:151664 CertiOS.framework.model.language <> hapi_code constr
R151672:151672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151676:151676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151680:151680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151595:151595 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151598:151599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151605:151606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151608:151608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151584:151584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151587:151588 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151590:151590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151801:151811 CertiOS.framework.proof.step_prop <> hpstep_star thm
R151801:151811 CertiOS.framework.proof.step_prop <> hpstep_star thm
R151831:151831 Coq.Init.Logic <> :type_scope:x_'='_x not
R151873:151876 Coq.Init.Logic <> :type_scope:x_'='_x not
R151832:151834 CertiOS.framework.auxlibs.Maps <> set meth
R151841:151841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151861:151862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151872:151872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151842:151845 CertiOS.framework.model.language <> curs constr
R151848:151856 CertiOS.framework.model.language <> hapi_code constr
R151863:151863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151867:151867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151871:151871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151877:151879 CertiOS.framework.auxlibs.Maps <> set meth
R151956:151956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151976:151977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151987:151987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151957:151960 CertiOS.framework.model.language <> curs constr
R151963:151971 CertiOS.framework.model.language <> hapi_code constr
R151978:151978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151982:151982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151986:151986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151882:151884 CertiOS.framework.auxlibs.Maps <> set meth
R151891:151891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151940:151941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151951:151951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151892:151895 CertiOS.framework.model.language <> curs constr
R151898:151906 CertiOS.framework.model.language <> hapi_code constr
R151933:151935 CertiOS.framework.model.language <> ::x_';;'_x not
R151909:151916 CertiOS.framework.model.language <> spec_crt constr
R151924:151929 CertiOS.framework.model.memory <> Vint32 constr
R151942:151942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151946:151946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151950:151950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151831:151831 Coq.Init.Logic <> :type_scope:x_'='_x not
R151873:151876 Coq.Init.Logic <> :type_scope:x_'='_x not
R151832:151834 CertiOS.framework.auxlibs.Maps <> set meth
R151841:151841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151861:151862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151872:151872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151842:151845 CertiOS.framework.model.language <> curs constr
R151848:151856 CertiOS.framework.model.language <> hapi_code constr
R151863:151863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151867:151867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151871:151871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151877:151879 CertiOS.framework.auxlibs.Maps <> set meth
R151956:151956 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151976:151977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151987:151987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151957:151960 CertiOS.framework.model.language <> curs constr
R151963:151971 CertiOS.framework.model.language <> hapi_code constr
R151978:151978 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151982:151982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151986:151986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151882:151884 CertiOS.framework.auxlibs.Maps <> set meth
R151891:151891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151940:151941 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151951:151951 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151892:151895 CertiOS.framework.model.language <> curs constr
R151898:151906 CertiOS.framework.model.language <> hapi_code constr
R151933:151935 CertiOS.framework.model.language <> ::x_';;'_x not
R151909:151916 CertiOS.framework.model.language <> spec_crt constr
R151924:151929 CertiOS.framework.model.memory <> Vint32 constr
R151942:151942 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151946:151946 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R151950:151950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R152002:152011 CertiOS.framework.proof.join_prop <> set_set_eq thm
R152002:152011 CertiOS.framework.proof.join_prop <> set_set_eq thm
R152040:152049 CertiOS.framework.model.opsem <> hpcrt_step constr
R152040:152049 CertiOS.framework.model.opsem <> hpcrt_step constr
R152067:152077 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R152067:152077 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R152090:152103 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R152090:152103 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R152122:152135 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R152122:152135 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R152157:152159 Coq.Init.Logic <> :type_scope:x_'='_x not
R152160:152164 CertiOS.framework.auxlibs.Maps <> merge meth
R152171:152175 CertiOS.framework.auxlibs.Maps <> minus meth
R152157:152159 Coq.Init.Logic <> :type_scope:x_'='_x not
R152160:152164 CertiOS.framework.auxlibs.Maps <> merge meth
R152171:152175 CertiOS.framework.auxlibs.Maps <> minus meth
R152195:152209 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R152195:152209 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R152253:152269 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R152253:152269 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R152303:152309 CertiOS.framework.auxlibs.Maps <> joinsig def
R152428:152430 Coq.Init.Logic <> :type_scope:x_'='_x not
R152373:152377 CertiOS.framework.auxlibs.Maps <> merge meth
R152416:152420 CertiOS.framework.auxlibs.Maps <> minus meth
R152380:152382 CertiOS.framework.auxlibs.Maps <> set meth
R152399:152408 CertiOS.framework.model.language <> abstcblist constr
R152388:152396 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R152431:152433 CertiOS.framework.auxlibs.Maps <> set meth
R152449:152458 CertiOS.framework.model.language <> abstcblist constr
R152438:152446 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R152428:152430 Coq.Init.Logic <> :type_scope:x_'='_x not
R152373:152377 CertiOS.framework.auxlibs.Maps <> merge meth
R152416:152420 CertiOS.framework.auxlibs.Maps <> minus meth
R152380:152382 CertiOS.framework.auxlibs.Maps <> set meth
R152399:152408 CertiOS.framework.model.language <> abstcblist constr
R152388:152396 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R152431:152433 CertiOS.framework.auxlibs.Maps <> set meth
R152449:152458 CertiOS.framework.model.language <> abstcblist constr
R152438:152446 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R152479:152481 Coq.Init.Logic <> :type_scope:x_'='_x not
R152482:152486 CertiOS.framework.auxlibs.Maps <> merge meth
R152493:152497 CertiOS.framework.auxlibs.Maps <> minus meth
R152479:152481 Coq.Init.Logic <> :type_scope:x_'='_x not
R152482:152486 CertiOS.framework.auxlibs.Maps <> merge meth
R152493:152497 CertiOS.framework.auxlibs.Maps <> minus meth
R152517:152531 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R152517:152531 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R152562:152578 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R152562:152578 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R152663:152680 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R152663:152680 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R152707:152713 CertiOS.framework.model.opsem <> tidsame def
R152776:152787 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R152776:152787 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153063:153075 CertiOS.framework.proof.auxdef TMSpecMod put def
R153078:153090 CertiOS.framework.proof.auxdef TMSpecMod put def
R153122:153134 CertiOS.framework.proof.auxdef TOSpecMod put def
R153137:153149 CertiOS.framework.proof.auxdef TOSpecMod put def
R153182:153186 CertiOS.framework.auxlibs.Maps <> merge meth
R153192:153196 CertiOS.framework.auxlibs.Maps <> minus meth
R153063:153075 CertiOS.framework.proof.auxdef TMSpecMod put def
R153078:153090 CertiOS.framework.proof.auxdef TMSpecMod put def
R153122:153134 CertiOS.framework.proof.auxdef TOSpecMod put def
R153137:153149 CertiOS.framework.proof.auxdef TOSpecMod put def
R153182:153186 CertiOS.framework.auxlibs.Maps <> merge meth
R153192:153196 CertiOS.framework.auxlibs.Maps <> minus meth
R153299:153311 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R153299:153311 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R153350:153358 CertiOS.framework.proof.auxdef <> good_is_S def
R153376:153380 CertiOS.framework.model.opsem <> Snewt def
R153393:153397 CertiOS.framework.model.opsem <> Dnewt def
R153410:153415 CertiOS.framework.model.opsem <> Tlnewt def
R153548:153551 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R153544:153545 Coq.Init.Logic <> :type_scope:x_'='_x not
R153553:153556 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R153548:153551 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R153544:153545 Coq.Init.Logic <> :type_scope:x_'='_x not
R153553:153556 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R153625:153635 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153625:153635 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153625:153635 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153654:153664 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153654:153664 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153654:153664 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R153712:153723 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153712:153723 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153712:153723 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153712:153723 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153747:153758 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153747:153758 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153747:153758 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153747:153758 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R153810:153812 Coq.Init.Logic <> :type_scope:x_'='_x not
R153786:153790 CertiOS.framework.model.opsem <> projS def
R153792:153792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153794:153795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153797:153798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153800:153801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153804:153805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153807:153807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153813:153816 Coq.Init.Datatypes <> Some constr
R153818:153818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153821:153822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153825:153826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153828:153829 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153831:153832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153845:153845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153833:153833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153836:153837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153840:153841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153844:153844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153810:153812 Coq.Init.Logic <> :type_scope:x_'='_x not
R153786:153790 CertiOS.framework.model.opsem <> projS def
R153792:153792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153794:153795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153797:153798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153800:153801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153804:153805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153807:153807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153813:153816 Coq.Init.Datatypes <> Some constr
R153818:153818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153821:153822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153825:153826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153828:153829 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153831:153832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153845:153845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153833:153833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153836:153837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153840:153841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153844:153844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R153859:153863 CertiOS.framework.model.opsem <> projS def
R153881:153885 CertiOS.framework.model.opsem <> projD def
R153920:153922 CertiOS.framework.auxlibs.Maps <> get meth
R153920:153922 CertiOS.framework.auxlibs.Maps <> get meth
R153957:153959 CertiOS.framework.auxlibs.Maps <> get meth
R153957:153959 CertiOS.framework.auxlibs.Maps <> get meth
R154048:154056 CertiOS.framework.proof.invariant_prop <> crt_partm thm
R154048:154056 CertiOS.framework.proof.invariant_prop <> crt_partm thm
R154077:154084 CertiOS.framework.proof.join_prop <> join_crt thm
R154077:154084 CertiOS.framework.proof.join_prop <> join_crt thm
R154105:154113 CertiOS.framework.proof.invariant_prop <> crt_parto thm
R154105:154113 CertiOS.framework.proof.invariant_prop <> crt_parto thm
R154132:154132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154134:154134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154137:154137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154139:154139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154142:154142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154145:154145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154147:154147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154149:154149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154152:154152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154155:154155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154158:154158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154161:154161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154132:154132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154134:154134 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154137:154137 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154139:154139 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154142:154142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154145:154145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154147:154147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154149:154149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154152:154152 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154155:154155 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154158:154158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154161:154161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154211:154222 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154211:154222 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154211:154222 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154211:154222 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154264:154269 CertiOS.framework.model.opsem <> Tlnewt def
R154283:154294 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154283:154294 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154283:154294 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154283:154294 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154398:154398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154400:154400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154403:154403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154405:154405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154408:154408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154411:154411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154413:154413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154415:154415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154418:154418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154422:154422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154425:154425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154428:154428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154439:154439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154444:154446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154458:154458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154440:154443 CertiOS.framework.model.language <> ::'SKIP' not
R154447:154447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154453:154454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154457:154457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154448:154452 CertiOS.framework.model.language <> kenil constr
R154460:154460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154480:154481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154492:154492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154461:154464 CertiOS.framework.model.language <> curs constr
R154467:154475 CertiOS.framework.model.language <> hapi_code constr
R154482:154482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154486:154487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154491:154491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154398:154398 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154400:154400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154403:154403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154405:154405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154408:154408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154411:154411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154413:154413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154415:154415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154418:154418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154422:154422 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154425:154425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154428:154428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154439:154439 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154444:154446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154458:154458 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154440:154443 CertiOS.framework.model.language <> ::'SKIP' not
R154447:154447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154453:154454 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154457:154457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154448:154452 CertiOS.framework.model.language <> kenil constr
R154460:154460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154480:154481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154492:154492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154461:154464 CertiOS.framework.model.language <> curs constr
R154467:154475 CertiOS.framework.model.language <> hapi_code constr
R154482:154482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154486:154487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154491:154491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R154527:154553 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R154527:154553 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R154572:154598 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R154572:154598 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R154632:154643 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154632:154643 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154632:154643 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154632:154643 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154685:154690 CertiOS.framework.model.opsem <> Tlnewt def
R154704:154715 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154704:154715 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154704:154715 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154704:154715 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154768:154779 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154768:154779 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154768:154779 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154768:154779 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154796:154806 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R154796:154806 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R154820:154831 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154820:154831 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154820:154831 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154820:154831 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R154848:154858 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R154848:154858 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R154909:154912 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R154904:154906 Coq.Init.Logic <> :type_scope:x_'='_x not
R154916:154919 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R154909:154912 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R154904:154906 Coq.Init.Logic <> :type_scope:x_'='_x not
R154916:154919 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R155019:155023 CertiOS.framework.model.opsem <> Snewt def
R155036:155040 CertiOS.framework.model.opsem <> Dnewt def
R155043:155048 CertiOS.framework.model.opsem <> Tlnewt def
R155061:155061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155063:155064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155075:155076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155078:155078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155081:155081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155106:155106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155072:155074 CertiOS.framework.model.memory <> env def
R155065:155070 CertiOS.framework.logic.assertion <> empenv syndef
R155082:155082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155087:155088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155095:155097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155104:155105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155083:155086 Coq.Init.Datatypes <> true constr
R155093:155094 CertiOS.framework.model.language <> is def
R155089:155091 Coq.Init.Datatypes <> nil constr
R155102:155103 CertiOS.framework.model.language <> cs def
R155098:155100 Coq.Init.Datatypes <> nil constr
R155114:155120 CertiOS.framework.model.opsem <> nilcont def
R155061:155061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155063:155064 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155075:155076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155078:155078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155081:155081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155106:155106 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155072:155074 CertiOS.framework.model.memory <> env def
R155065:155070 CertiOS.framework.logic.assertion <> empenv syndef
R155082:155082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155087:155088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155095:155097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155104:155105 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155083:155086 Coq.Init.Datatypes <> true constr
R155093:155094 CertiOS.framework.model.language <> is def
R155089:155091 Coq.Init.Datatypes <> nil constr
R155102:155103 CertiOS.framework.model.language <> cs def
R155098:155100 Coq.Init.Datatypes <> nil constr
R155114:155120 CertiOS.framework.model.opsem <> nilcont def
R155168:155178 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155168:155178 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155168:155178 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155192:155202 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155192:155202 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155192:155202 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155280:155285 CertiOS.framework.logic.assertion <> empenv syndef
R155295:155295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155300:155300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155304:155304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155308:155308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155296:155299 Coq.Init.Datatypes <> true constr
R155301:155303 Coq.Init.Datatypes <> nil constr
R155305:155307 Coq.Init.Datatypes <> nil constr
R155249:155268 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R155280:155285 CertiOS.framework.logic.assertion <> empenv syndef
R155295:155295 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155300:155300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155304:155304 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155308:155308 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R155296:155299 Coq.Init.Datatypes <> true constr
R155301:155303 Coq.Init.Datatypes <> nil constr
R155305:155307 Coq.Init.Datatypes <> nil constr
R155249:155268 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R155360:155363 CertiOS.framework.logic.inferules <> LINV def
R155376:155382 CertiOS.framework.logic.inferules <> init_lg def
R155376:155382 CertiOS.framework.logic.inferules <> init_lg def
R155446:155456 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155446:155456 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155527:155537 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155527:155537 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155527:155537 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R155569:155578 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R155569:155578 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R155681:155688 CertiOS.framework.proof.invariant_prop <> crt_init thm
R155681:155688 CertiOS.framework.proof.invariant_prop <> crt_init thm
R155707:155726 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R155707:155726 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R155906:155917 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155906:155917 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155906:155917 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155906:155917 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155943:155954 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155943:155954 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155943:155954 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155943:155954 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R155983:155984 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R155983:155984 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R156086:156112 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R156086:156112 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R156131:156157 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R156131:156157 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R156176:156202 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R156176:156202 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R156221:156247 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R156221:156247 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R156266:156270 CertiOS.framework.model.opsem <> Snewt def
R156283:156287 CertiOS.framework.model.opsem <> Dnewt def
R156289:156294 CertiOS.framework.model.opsem <> Tlnewt def
R156328:156339 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156328:156339 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156328:156339 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156328:156339 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156358:156369 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156358:156369 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156358:156369 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156358:156369 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156388:156399 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156388:156399 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156388:156399 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156388:156399 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156418:156429 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156418:156429 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156418:156429 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156418:156429 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R156447:156469 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R156447:156469 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R156546:156548 Coq.Init.Logic <> :type_scope:x_'='_x not
R156530:156532 CertiOS.framework.auxlibs.Maps <> get meth
R156537:156545 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R156549:156552 Coq.Init.Datatypes <> Some constr
R156555:156564 CertiOS.framework.model.language <> abstcblist constr
R156546:156548 Coq.Init.Logic <> :type_scope:x_'='_x not
R156530:156532 CertiOS.framework.auxlibs.Maps <> get meth
R156537:156545 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R156549:156552 Coq.Init.Datatypes <> Some constr
R156555:156564 CertiOS.framework.model.language <> abstcblist constr
R156582:156591 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R156582:156591 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R156610:156621 CertiOS.framework.proof.step_prop <> task_no_dead def
R156681:156697 CertiOS.framework.proof.join_prop <> joinsig_indom_neq thm
R156681:156697 CertiOS.framework.proof.join_prop <> joinsig_indom_neq thm
R156733:156743 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R156733:156743 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R156733:156743 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R156762:156775 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R156762:156775 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R156800:156815 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R156800:156815 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R156834:156842 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R156834:156842 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R157236:157239 Coq.Init.Logic <> :type_scope:x_'='_x not
R157190:157190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157222:157223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157235:157235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157191:157194 CertiOS.framework.model.language <> curs constr
R157197:157201 CertiOS.framework.model.language <> sprim constr
R157204:157210 CertiOS.framework.model.language <> stkinit constr
R157224:157224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157230:157231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157234:157234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157225:157229 CertiOS.framework.model.language <> kenil constr
R157240:157240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157272:157273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157285:157285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157241:157244 CertiOS.framework.model.language <> curs constr
R157247:157251 CertiOS.framework.model.language <> sprim constr
R157254:157260 CertiOS.framework.model.language <> stkinit constr
R157274:157274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157280:157281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157284:157284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157275:157279 CertiOS.framework.model.language <> kenil constr
R157236:157239 Coq.Init.Logic <> :type_scope:x_'='_x not
R157190:157190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157222:157223 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157235:157235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157191:157194 CertiOS.framework.model.language <> curs constr
R157197:157201 CertiOS.framework.model.language <> sprim constr
R157204:157210 CertiOS.framework.model.language <> stkinit constr
R157224:157224 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157230:157231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157234:157234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157225:157229 CertiOS.framework.model.language <> kenil constr
R157240:157240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157272:157273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157285:157285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157241:157244 CertiOS.framework.model.language <> curs constr
R157247:157251 CertiOS.framework.model.language <> sprim constr
R157254:157260 CertiOS.framework.model.language <> stkinit constr
R157274:157274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157280:157281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157284:157284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R157275:157279 CertiOS.framework.model.language <> kenil constr
R157594:157598 CertiOS.framework.auxlibs.Maps <> merge meth
R157594:157598 CertiOS.framework.auxlibs.Maps <> merge meth
R157642:157647 CertiOS.framework.proof.simulation <> getmem def
R157666:157675 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R157666:157675 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R157799:157813 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R157799:157813 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R157826:157835 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R157826:157835 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R158093:158095 CertiOS.framework.auxlibs.Maps <> get meth
R158093:158095 CertiOS.framework.auxlibs.Maps <> get meth
R158153:158155 CertiOS.framework.auxlibs.Maps <> get meth
R158153:158155 CertiOS.framework.auxlibs.Maps <> get meth
R158293:158300 CertiOS.framework.auxlibs.Maps <> sub def
R158293:158300 CertiOS.framework.auxlibs.Maps <> sub def
R158320:158327 CertiOS.framework.proof.invariant_prop <> part_sub thm
R158320:158327 CertiOS.framework.proof.invariant_prop <> part_sub thm
R158347:158354 CertiOS.framework.auxlibs.Maps <> sub def
R158347:158354 CertiOS.framework.auxlibs.Maps <> sub def
R158373:158381 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R158373:158381 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R158495:158506 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158495:158506 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158611:158622 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158611:158622 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158727:158738 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158727:158738 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R158856:158860 CertiOS.framework.auxlibs.Maps <> minus meth
R158884:158884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158887:158888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158894:158895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158897:158897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158825:158842 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R158856:158860 CertiOS.framework.auxlibs.Maps <> minus meth
R158884:158884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158887:158888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158894:158895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158897:158897 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158825:158842 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R158976:158985 CertiOS.framework.model.opsem <> htstepstar ind
R159109:159109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159112:159113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159119:159120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159122:159122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159036:159036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159085:159086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159088:159088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159037:159040 CertiOS.framework.model.language <> curs constr
R159043:159051 CertiOS.framework.model.language <> hapi_code constr
R159078:159080 CertiOS.framework.model.language <> ::x_';;'_x not
R159054:159061 CertiOS.framework.model.language <> spec_crt constr
R159069:159074 CertiOS.framework.model.memory <> Vint32 constr
R159000:159000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159003:159004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159010:159011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159013:159013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158987:158987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158990:158991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158993:158993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158976:158985 CertiOS.framework.model.opsem <> htstepstar ind
R159109:159109 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159112:159113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159119:159120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159122:159122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159036:159036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159085:159086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159088:159088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159037:159040 CertiOS.framework.model.language <> curs constr
R159043:159051 CertiOS.framework.model.language <> hapi_code constr
R159078:159080 CertiOS.framework.model.language <> ::x_';;'_x not
R159054:159061 CertiOS.framework.model.language <> spec_crt constr
R159069:159074 CertiOS.framework.model.memory <> Vint32 constr
R159000:159000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159003:159004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159010:159011 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159013:159013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158987:158987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158990:158991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R158993:158993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159158:159174 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R159158:159174 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R159265:159274 CertiOS.framework.model.opsem <> hpstepstar ind
R159421:159425 CertiOS.framework.auxlibs.Maps <> merge meth
R159464:159468 CertiOS.framework.auxlibs.Maps <> minus meth
R159428:159430 CertiOS.framework.auxlibs.Maps <> set meth
R159447:159456 CertiOS.framework.model.language <> abstcblist constr
R159436:159444 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R159405:159405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159408:159409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159415:159416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159418:159418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159306:159308 CertiOS.framework.auxlibs.Maps <> set meth
R159382:159388 CertiOS.framework.model.opsem <> nilcont def
R159391:159395 CertiOS.framework.model.language <> sskip constr
R159397:159400 Coq.Init.Datatypes <> None constr
R159311:159313 CertiOS.framework.auxlibs.Maps <> set meth
R159342:159342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159363:159364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159374:159374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159343:159346 CertiOS.framework.model.language <> curs constr
R159349:159357 CertiOS.framework.model.language <> hapi_code constr
R159365:159365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159369:159369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159373:159373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159288:159288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159291:159292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159298:159299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159301:159301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159277:159277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159280:159281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159283:159283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159265:159274 CertiOS.framework.model.opsem <> hpstepstar ind
R159421:159425 CertiOS.framework.auxlibs.Maps <> merge meth
R159464:159468 CertiOS.framework.auxlibs.Maps <> minus meth
R159428:159430 CertiOS.framework.auxlibs.Maps <> set meth
R159447:159456 CertiOS.framework.model.language <> abstcblist constr
R159436:159444 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R159405:159405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159408:159409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159415:159416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159418:159418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159306:159308 CertiOS.framework.auxlibs.Maps <> set meth
R159382:159388 CertiOS.framework.model.opsem <> nilcont def
R159391:159395 CertiOS.framework.model.language <> sskip constr
R159397:159400 Coq.Init.Datatypes <> None constr
R159311:159313 CertiOS.framework.auxlibs.Maps <> set meth
R159342:159342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159363:159364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159374:159374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159343:159346 CertiOS.framework.model.language <> curs constr
R159349:159357 CertiOS.framework.model.language <> hapi_code constr
R159365:159365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159369:159369 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159373:159373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159288:159288 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159291:159292 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159298:159299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159301:159301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159277:159277 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159280:159281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159283:159283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159493:159503 CertiOS.framework.proof.step_prop <> hpstep_star thm
R159493:159503 CertiOS.framework.proof.step_prop <> hpstep_star thm
R159523:159523 Coq.Init.Logic <> :type_scope:x_'='_x not
R159565:159568 Coq.Init.Logic <> :type_scope:x_'='_x not
R159524:159526 CertiOS.framework.auxlibs.Maps <> set meth
R159533:159533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159553:159554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159564:159564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159534:159537 CertiOS.framework.model.language <> curs constr
R159540:159548 CertiOS.framework.model.language <> hapi_code constr
R159555:159555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159559:159559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159563:159563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159569:159571 CertiOS.framework.auxlibs.Maps <> set meth
R159648:159648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159668:159669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159679:159679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159649:159652 CertiOS.framework.model.language <> curs constr
R159655:159663 CertiOS.framework.model.language <> hapi_code constr
R159670:159670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159674:159674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159678:159678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159574:159576 CertiOS.framework.auxlibs.Maps <> set meth
R159583:159583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159632:159633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159643:159643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159584:159587 CertiOS.framework.model.language <> curs constr
R159590:159598 CertiOS.framework.model.language <> hapi_code constr
R159625:159627 CertiOS.framework.model.language <> ::x_';;'_x not
R159601:159608 CertiOS.framework.model.language <> spec_crt constr
R159616:159621 CertiOS.framework.model.memory <> Vint32 constr
R159634:159634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159638:159638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159642:159642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159523:159523 Coq.Init.Logic <> :type_scope:x_'='_x not
R159565:159568 Coq.Init.Logic <> :type_scope:x_'='_x not
R159524:159526 CertiOS.framework.auxlibs.Maps <> set meth
R159533:159533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159553:159554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159564:159564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159534:159537 CertiOS.framework.model.language <> curs constr
R159540:159548 CertiOS.framework.model.language <> hapi_code constr
R159555:159555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159559:159559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159563:159563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159569:159571 CertiOS.framework.auxlibs.Maps <> set meth
R159648:159648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159668:159669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159679:159679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159649:159652 CertiOS.framework.model.language <> curs constr
R159655:159663 CertiOS.framework.model.language <> hapi_code constr
R159670:159670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159674:159674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159678:159678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159574:159576 CertiOS.framework.auxlibs.Maps <> set meth
R159583:159583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159632:159633 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159643:159643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159584:159587 CertiOS.framework.model.language <> curs constr
R159590:159598 CertiOS.framework.model.language <> hapi_code constr
R159625:159627 CertiOS.framework.model.language <> ::x_';;'_x not
R159601:159608 CertiOS.framework.model.language <> spec_crt constr
R159616:159621 CertiOS.framework.model.memory <> Vint32 constr
R159634:159634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159638:159638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159642:159642 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R159692:159701 CertiOS.framework.proof.join_prop <> set_set_eq thm
R159692:159701 CertiOS.framework.proof.join_prop <> set_set_eq thm
R159730:159743 CertiOS.framework.model.opsem <> hpcrtskip_step constr
R159730:159743 CertiOS.framework.model.opsem <> hpcrtskip_step constr
R159761:159771 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R159761:159771 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R159784:159797 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R159784:159797 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R159816:159829 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R159816:159829 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R159851:159853 Coq.Init.Logic <> :type_scope:x_'='_x not
R159854:159858 CertiOS.framework.auxlibs.Maps <> merge meth
R159865:159869 CertiOS.framework.auxlibs.Maps <> minus meth
R159851:159853 Coq.Init.Logic <> :type_scope:x_'='_x not
R159854:159858 CertiOS.framework.auxlibs.Maps <> merge meth
R159865:159869 CertiOS.framework.auxlibs.Maps <> minus meth
R159889:159903 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R159889:159903 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R159947:159963 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R159947:159963 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R159997:160003 CertiOS.framework.auxlibs.Maps <> joinsig def
R160122:160124 Coq.Init.Logic <> :type_scope:x_'='_x not
R160067:160071 CertiOS.framework.auxlibs.Maps <> merge meth
R160110:160114 CertiOS.framework.auxlibs.Maps <> minus meth
R160074:160076 CertiOS.framework.auxlibs.Maps <> set meth
R160093:160102 CertiOS.framework.model.language <> abstcblist constr
R160082:160090 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R160125:160127 CertiOS.framework.auxlibs.Maps <> set meth
R160143:160152 CertiOS.framework.model.language <> abstcblist constr
R160132:160140 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R160122:160124 Coq.Init.Logic <> :type_scope:x_'='_x not
R160067:160071 CertiOS.framework.auxlibs.Maps <> merge meth
R160110:160114 CertiOS.framework.auxlibs.Maps <> minus meth
R160074:160076 CertiOS.framework.auxlibs.Maps <> set meth
R160093:160102 CertiOS.framework.model.language <> abstcblist constr
R160082:160090 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R160125:160127 CertiOS.framework.auxlibs.Maps <> set meth
R160143:160152 CertiOS.framework.model.language <> abstcblist constr
R160132:160140 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R160173:160175 Coq.Init.Logic <> :type_scope:x_'='_x not
R160176:160180 CertiOS.framework.auxlibs.Maps <> merge meth
R160187:160191 CertiOS.framework.auxlibs.Maps <> minus meth
R160173:160175 Coq.Init.Logic <> :type_scope:x_'='_x not
R160176:160180 CertiOS.framework.auxlibs.Maps <> merge meth
R160187:160191 CertiOS.framework.auxlibs.Maps <> minus meth
R160211:160225 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R160211:160225 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R160256:160272 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R160256:160272 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R160357:160374 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R160357:160374 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R160401:160407 CertiOS.framework.model.opsem <> tidsame def
R160470:160481 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R160470:160481 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R160757:160769 CertiOS.framework.proof.auxdef TMSpecMod put def
R160772:160784 CertiOS.framework.proof.auxdef TMSpecMod put def
R160816:160828 CertiOS.framework.proof.auxdef TOSpecMod put def
R160831:160843 CertiOS.framework.proof.auxdef TOSpecMod put def
R160876:160880 CertiOS.framework.auxlibs.Maps <> merge meth
R160886:160890 CertiOS.framework.auxlibs.Maps <> minus meth
R160757:160769 CertiOS.framework.proof.auxdef TMSpecMod put def
R160772:160784 CertiOS.framework.proof.auxdef TMSpecMod put def
R160816:160828 CertiOS.framework.proof.auxdef TOSpecMod put def
R160831:160843 CertiOS.framework.proof.auxdef TOSpecMod put def
R160876:160880 CertiOS.framework.auxlibs.Maps <> merge meth
R160886:160890 CertiOS.framework.auxlibs.Maps <> minus meth
R160993:161005 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R160993:161005 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R161044:161052 CertiOS.framework.proof.auxdef <> good_is_S def
R161070:161074 CertiOS.framework.model.opsem <> Snewt def
R161087:161091 CertiOS.framework.model.opsem <> Dnewt def
R161104:161109 CertiOS.framework.model.opsem <> Tlnewt def
R161242:161245 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R161238:161239 Coq.Init.Logic <> :type_scope:x_'='_x not
R161247:161250 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R161242:161245 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R161238:161239 Coq.Init.Logic <> :type_scope:x_'='_x not
R161247:161250 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R161319:161329 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161319:161329 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161319:161329 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161348:161358 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161348:161358 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161348:161358 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R161406:161417 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161406:161417 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161406:161417 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161406:161417 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161441:161452 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161441:161452 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161441:161452 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161441:161452 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161504:161506 Coq.Init.Logic <> :type_scope:x_'='_x not
R161480:161484 CertiOS.framework.model.opsem <> projS def
R161486:161486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161488:161489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161491:161492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161494:161495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161498:161499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161501:161501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161507:161510 Coq.Init.Datatypes <> Some constr
R161512:161512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161515:161516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161519:161520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161522:161523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161525:161526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161539:161539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161527:161527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161530:161531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161534:161535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161538:161538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161504:161506 Coq.Init.Logic <> :type_scope:x_'='_x not
R161480:161484 CertiOS.framework.model.opsem <> projS def
R161486:161486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161488:161489 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161491:161492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161494:161495 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161498:161499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161501:161501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161507:161510 Coq.Init.Datatypes <> Some constr
R161512:161512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161515:161516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161519:161520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161522:161523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161525:161526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161539:161539 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161527:161527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161530:161531 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161534:161535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161538:161538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161553:161557 CertiOS.framework.model.opsem <> projS def
R161575:161579 CertiOS.framework.model.opsem <> projD def
R161614:161616 CertiOS.framework.auxlibs.Maps <> get meth
R161614:161616 CertiOS.framework.auxlibs.Maps <> get meth
R161651:161653 CertiOS.framework.auxlibs.Maps <> get meth
R161651:161653 CertiOS.framework.auxlibs.Maps <> get meth
R161738:161746 CertiOS.framework.proof.invariant_prop <> crt_partm thm
R161738:161746 CertiOS.framework.proof.invariant_prop <> crt_partm thm
R161765:161772 CertiOS.framework.proof.join_prop <> join_crt thm
R161765:161772 CertiOS.framework.proof.join_prop <> join_crt thm
R161791:161799 CertiOS.framework.proof.invariant_prop <> crt_parto thm
R161791:161799 CertiOS.framework.proof.invariant_prop <> crt_parto thm
R161818:161818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161820:161820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161823:161823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161825:161825 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161828:161828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161831:161831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161833:161833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161835:161835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161838:161838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161841:161841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161844:161844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161847:161847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161818:161818 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161820:161820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161823:161823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161825:161825 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161828:161828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161831:161831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161833:161833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161835:161835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161838:161838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161841:161841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161844:161844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161847:161847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R161897:161908 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161897:161908 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161897:161908 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161897:161908 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161950:161955 CertiOS.framework.model.opsem <> Tlnewt def
R161969:161980 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161969:161980 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161969:161980 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R161969:161980 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162084:162084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162086:162086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162089:162089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162091:162091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162094:162094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162097:162097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162099:162099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162101:162101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162104:162104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162108:162108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162111:162111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162114:162114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162125:162125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162130:162132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162144:162144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162126:162129 CertiOS.framework.model.language <> ::'SKIP' not
R162133:162133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162139:162140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162143:162143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162134:162138 CertiOS.framework.model.language <> kenil constr
R162146:162146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162166:162167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162178:162178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162147:162150 CertiOS.framework.model.language <> curs constr
R162153:162161 CertiOS.framework.model.language <> hapi_code constr
R162168:162168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162172:162173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162177:162177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162084:162084 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162086:162086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162089:162089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162091:162091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162094:162094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162097:162097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162099:162099 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162101:162101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162104:162104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162108:162108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162111:162111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162114:162114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162125:162125 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162130:162132 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162144:162144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162126:162129 CertiOS.framework.model.language <> ::'SKIP' not
R162133:162133 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162139:162140 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162143:162143 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162134:162138 CertiOS.framework.model.language <> kenil constr
R162146:162146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162166:162167 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162178:162178 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162147:162150 CertiOS.framework.model.language <> curs constr
R162153:162161 CertiOS.framework.model.language <> hapi_code constr
R162168:162168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162172:162173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162177:162177 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162213:162239 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R162213:162239 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R162258:162284 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R162258:162284 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R162318:162329 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162318:162329 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162318:162329 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162318:162329 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162371:162376 CertiOS.framework.model.opsem <> Tlnewt def
R162390:162401 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162390:162401 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162390:162401 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162390:162401 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162454:162465 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162454:162465 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162454:162465 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162454:162465 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162482:162492 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162482:162492 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162506:162517 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162506:162517 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162506:162517 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162506:162517 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R162534:162544 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162534:162544 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162595:162598 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162590:162592 Coq.Init.Logic <> :type_scope:x_'='_x not
R162602:162605 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R162595:162598 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R162590:162592 Coq.Init.Logic <> :type_scope:x_'='_x not
R162602:162605 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R162705:162709 CertiOS.framework.model.opsem <> Snewt def
R162722:162726 CertiOS.framework.model.opsem <> Dnewt def
R162729:162734 CertiOS.framework.model.opsem <> Tlnewt def
R162747:162747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162749:162750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162761:162762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162764:162764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162767:162767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162792:162792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162758:162760 CertiOS.framework.model.memory <> env def
R162751:162756 CertiOS.framework.logic.assertion <> empenv syndef
R162768:162768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162773:162774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162781:162783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162790:162791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162769:162772 Coq.Init.Datatypes <> true constr
R162779:162780 CertiOS.framework.model.language <> is def
R162775:162777 Coq.Init.Datatypes <> nil constr
R162788:162789 CertiOS.framework.model.language <> cs def
R162784:162786 Coq.Init.Datatypes <> nil constr
R162800:162806 CertiOS.framework.model.opsem <> nilcont def
R162809:162813 CertiOS.framework.model.language <> sskip constr
R162815:162818 Coq.Init.Datatypes <> None constr
R162747:162747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162749:162750 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162761:162762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162764:162764 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162767:162767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162792:162792 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162758:162760 CertiOS.framework.model.memory <> env def
R162751:162756 CertiOS.framework.logic.assertion <> empenv syndef
R162768:162768 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162773:162774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162781:162783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162790:162791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162769:162772 Coq.Init.Datatypes <> true constr
R162779:162780 CertiOS.framework.model.language <> is def
R162775:162777 Coq.Init.Datatypes <> nil constr
R162788:162789 CertiOS.framework.model.language <> cs def
R162784:162786 Coq.Init.Datatypes <> nil constr
R162800:162806 CertiOS.framework.model.opsem <> nilcont def
R162809:162813 CertiOS.framework.model.language <> sskip constr
R162815:162818 Coq.Init.Datatypes <> None constr
R162865:162875 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162865:162875 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162865:162875 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162889:162899 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162889:162899 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162889:162899 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R162973:162978 CertiOS.framework.logic.assertion <> empenv syndef
R162988:162988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162993:162993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162997:162997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163001:163001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162989:162992 Coq.Init.Datatypes <> true constr
R162994:162996 Coq.Init.Datatypes <> nil constr
R162998:163000 Coq.Init.Datatypes <> nil constr
R162942:162961 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R162973:162978 CertiOS.framework.logic.assertion <> empenv syndef
R162988:162988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162993:162993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162997:162997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R163001:163001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R162989:162992 Coq.Init.Datatypes <> true constr
R162994:162996 Coq.Init.Datatypes <> nil constr
R162998:163000 Coq.Init.Datatypes <> nil constr
R162942:162961 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R163053:163056 CertiOS.framework.logic.inferules <> LINV def
R163069:163075 CertiOS.framework.logic.inferules <> init_lg def
R163069:163075 CertiOS.framework.logic.inferules <> init_lg def
R163139:163149 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R163139:163149 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R163220:163230 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R163220:163230 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R163220:163230 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R163262:163271 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R163262:163271 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R163372:163379 CertiOS.framework.proof.invariant_prop <> crt_init thm
R163372:163379 CertiOS.framework.proof.invariant_prop <> crt_init thm
R163398:163417 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R163398:163417 CertiOS.framework.proof.invariant_prop <> linv_change_linv_aux thm
R163522:163533 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163522:163533 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163522:163533 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163522:163533 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163559:163570 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163559:163570 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163559:163570 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163559:163570 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163599:163600 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R163599:163600 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R163702:163728 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R163702:163728 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R163747:163773 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R163747:163773 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R163792:163818 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R163792:163818 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R163837:163863 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R163837:163863 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R163882:163886 CertiOS.framework.model.opsem <> Snewt def
R163899:163903 CertiOS.framework.model.opsem <> Dnewt def
R163905:163910 CertiOS.framework.model.opsem <> Tlnewt def
R163944:163955 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163944:163955 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163944:163955 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163944:163955 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163974:163985 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163974:163985 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163974:163985 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R163974:163985 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164004:164015 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164004:164015 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164004:164015 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164004:164015 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164034:164045 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164034:164045 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164034:164045 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164034:164045 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R164063:164085 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R164063:164085 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R164162:164164 Coq.Init.Logic <> :type_scope:x_'='_x not
R164146:164148 CertiOS.framework.auxlibs.Maps <> get meth
R164153:164161 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R164165:164168 Coq.Init.Datatypes <> Some constr
R164171:164180 CertiOS.framework.model.language <> abstcblist constr
R164162:164164 Coq.Init.Logic <> :type_scope:x_'='_x not
R164146:164148 CertiOS.framework.auxlibs.Maps <> get meth
R164153:164161 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R164165:164168 Coq.Init.Datatypes <> Some constr
R164171:164180 CertiOS.framework.model.language <> abstcblist constr
R164198:164207 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164198:164207 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R164226:164237 CertiOS.framework.proof.step_prop <> task_no_dead def
R164301:164317 CertiOS.framework.proof.join_prop <> joinsig_indom_neq thm
R164301:164317 CertiOS.framework.proof.join_prop <> joinsig_indom_neq thm
R164347:164357 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R164347:164357 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R164347:164357 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R164374:164387 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R164374:164387 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R164412:164427 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R164412:164427 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R164446:164454 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R164446:164454 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R164839:164842 Coq.Init.Logic <> :type_scope:x_'='_x not
R164800:164800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164825:164826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164838:164838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164801:164804 CertiOS.framework.model.language <> curs constr
R164807:164811 CertiOS.framework.model.language <> sprim constr
R164814:164820 CertiOS.framework.model.language <> stkfree constr
R164827:164827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164833:164834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164837:164837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164828:164832 CertiOS.framework.model.language <> kenil constr
R164843:164843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164868:164869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164881:164881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164844:164847 CertiOS.framework.model.language <> curs constr
R164850:164854 CertiOS.framework.model.language <> sprim constr
R164857:164863 CertiOS.framework.model.language <> stkfree constr
R164870:164870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164876:164877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164880:164880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164871:164875 CertiOS.framework.model.language <> kenil constr
R164839:164842 Coq.Init.Logic <> :type_scope:x_'='_x not
R164800:164800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164825:164826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164838:164838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164801:164804 CertiOS.framework.model.language <> curs constr
R164807:164811 CertiOS.framework.model.language <> sprim constr
R164814:164820 CertiOS.framework.model.language <> stkfree constr
R164827:164827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164833:164834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164837:164837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164828:164832 CertiOS.framework.model.language <> kenil constr
R164843:164843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164868:164869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164881:164881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164844:164847 CertiOS.framework.model.language <> curs constr
R164850:164854 CertiOS.framework.model.language <> sprim constr
R164857:164863 CertiOS.framework.model.language <> stkfree constr
R164870:164870 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164876:164877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164880:164880 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R164871:164875 CertiOS.framework.model.language <> kenil constr
R165187:165191 CertiOS.framework.auxlibs.Maps <> merge meth
R165187:165191 CertiOS.framework.auxlibs.Maps <> merge meth
R165234:165239 CertiOS.framework.proof.simulation <> getmem def
R165258:165267 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R165258:165267 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R165391:165405 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R165391:165405 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R165418:165427 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R165418:165427 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R165658:165660 CertiOS.framework.auxlibs.Maps <> get meth
R165658:165660 CertiOS.framework.auxlibs.Maps <> get meth
R165718:165720 CertiOS.framework.auxlibs.Maps <> get meth
R165718:165720 CertiOS.framework.auxlibs.Maps <> get meth
R165858:165865 CertiOS.framework.auxlibs.Maps <> sub def
R165858:165865 CertiOS.framework.auxlibs.Maps <> sub def
R165885:165892 CertiOS.framework.proof.invariant_prop <> part_sub thm
R165885:165892 CertiOS.framework.proof.invariant_prop <> part_sub thm
R165933:165940 CertiOS.framework.auxlibs.Maps <> sub def
R165933:165940 CertiOS.framework.auxlibs.Maps <> sub def
R165959:165967 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R165959:165967 CertiOS.tactics.basetac.join_lib <> sub_trans thm
R166080:166091 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R166080:166091 CertiOS.framework.proof.rulesoundlib <> evalval_mono thm
R166209:166213 CertiOS.framework.auxlibs.Maps <> minus meth
R166237:166237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166240:166241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166247:166248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166250:166250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166178:166195 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R166209:166213 CertiOS.framework.auxlibs.Maps <> minus meth
R166237:166237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166240:166241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166247:166248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166250:166250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166178:166195 CertiOS.framework.proof.step_prop <> htstepstar_O_local thm
R166329:166338 CertiOS.framework.model.opsem <> htstepstar ind
R166457:166457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166460:166461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166467:166468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166470:166470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166389:166389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166433:166434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166436:166436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166390:166393 CertiOS.framework.model.language <> curs constr
R166396:166404 CertiOS.framework.model.language <> hapi_code constr
R166426:166428 CertiOS.framework.model.language <> ::x_';;'_x not
R166407:166414 CertiOS.framework.model.language <> spec_del constr
R166417:166422 CertiOS.framework.model.memory <> Vint32 constr
R166353:166353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166356:166357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166363:166364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166366:166366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166340:166340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166343:166344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166346:166346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166329:166338 CertiOS.framework.model.opsem <> htstepstar ind
R166457:166457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166460:166461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166467:166468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166470:166470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166389:166389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166433:166434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166436:166436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166390:166393 CertiOS.framework.model.language <> curs constr
R166396:166404 CertiOS.framework.model.language <> hapi_code constr
R166426:166428 CertiOS.framework.model.language <> ::x_';;'_x not
R166407:166414 CertiOS.framework.model.language <> spec_del constr
R166417:166422 CertiOS.framework.model.memory <> Vint32 constr
R166353:166353 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166356:166357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166363:166364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166366:166366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166340:166340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166343:166344 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166346:166346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166506:166522 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R166506:166522 CertiOS.framework.proof.step_prop <> th_no_create_lift thm
R166743:166752 CertiOS.framework.model.opsem <> hpstepstar ind
R166872:166876 CertiOS.framework.auxlibs.Maps <> merge meth
R166915:166919 CertiOS.framework.auxlibs.Maps <> minus meth
R166879:166881 CertiOS.framework.auxlibs.Maps <> set meth
R166898:166907 CertiOS.framework.model.language <> abstcblist constr
R166887:166895 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R166850:166850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166853:166854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166866:166867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166869:166869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166855:166857 CertiOS.framework.auxlibs.Maps <> del meth
R166785:166787 CertiOS.framework.auxlibs.Maps <> set meth
R166816:166816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166836:166837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166847:166847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166817:166820 CertiOS.framework.model.language <> curs constr
R166823:166831 CertiOS.framework.model.language <> hapi_code constr
R166838:166838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166842:166842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166846:166846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166766:166766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166769:166770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166776:166777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166779:166779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166755:166755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166758:166759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166761:166761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166743:166752 CertiOS.framework.model.opsem <> hpstepstar ind
R166872:166876 CertiOS.framework.auxlibs.Maps <> merge meth
R166915:166919 CertiOS.framework.auxlibs.Maps <> minus meth
R166879:166881 CertiOS.framework.auxlibs.Maps <> set meth
R166898:166907 CertiOS.framework.model.language <> abstcblist constr
R166887:166895 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R166850:166850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166853:166854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166866:166867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166869:166869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166855:166857 CertiOS.framework.auxlibs.Maps <> del meth
R166785:166787 CertiOS.framework.auxlibs.Maps <> set meth
R166816:166816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166836:166837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166847:166847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166817:166820 CertiOS.framework.model.language <> curs constr
R166823:166831 CertiOS.framework.model.language <> hapi_code constr
R166838:166838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166842:166842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166846:166846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166766:166766 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166769:166770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166776:166777 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166779:166779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166755:166755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166758:166759 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166761:166761 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R166944:166954 CertiOS.framework.proof.step_prop <> hpstep_star thm
R166944:166954 CertiOS.framework.proof.step_prop <> hpstep_star thm
R166973:166982 CertiOS.framework.model.opsem <> hpdel_step constr
R166973:166982 CertiOS.framework.model.opsem <> hpdel_step constr
R167000:167010 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R167000:167010 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R167028:167037 CertiOS.framework.proof.join_prop <> set_set_eq thm
R167028:167037 CertiOS.framework.proof.join_prop <> set_set_eq thm
R167028:167037 CertiOS.framework.proof.join_prop <> set_set_eq thm
R167056:167069 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R167056:167069 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R167091:167093 Coq.Init.Logic <> :type_scope:x_'='_x not
R167094:167098 CertiOS.framework.auxlibs.Maps <> merge meth
R167105:167109 CertiOS.framework.auxlibs.Maps <> minus meth
R167091:167093 Coq.Init.Logic <> :type_scope:x_'='_x not
R167094:167098 CertiOS.framework.auxlibs.Maps <> merge meth
R167105:167109 CertiOS.framework.auxlibs.Maps <> minus meth
R167129:167143 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R167129:167143 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R167187:167203 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R167187:167203 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R167241:167254 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R167241:167254 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R167273:167283 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R167273:167283 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R167296:167302 CertiOS.framework.auxlibs.Maps <> joinsig def
R167351:167360 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R167351:167360 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R167464:167466 Coq.Init.Logic <> :type_scope:x_'='_x not
R167409:167413 CertiOS.framework.auxlibs.Maps <> merge meth
R167452:167456 CertiOS.framework.auxlibs.Maps <> minus meth
R167416:167418 CertiOS.framework.auxlibs.Maps <> set meth
R167435:167444 CertiOS.framework.model.language <> abstcblist constr
R167424:167432 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R167467:167469 CertiOS.framework.auxlibs.Maps <> set meth
R167485:167494 CertiOS.framework.model.language <> abstcblist constr
R167474:167482 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R167464:167466 Coq.Init.Logic <> :type_scope:x_'='_x not
R167409:167413 CertiOS.framework.auxlibs.Maps <> merge meth
R167452:167456 CertiOS.framework.auxlibs.Maps <> minus meth
R167416:167418 CertiOS.framework.auxlibs.Maps <> set meth
R167435:167444 CertiOS.framework.model.language <> abstcblist constr
R167424:167432 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R167467:167469 CertiOS.framework.auxlibs.Maps <> set meth
R167485:167494 CertiOS.framework.model.language <> abstcblist constr
R167474:167482 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R167515:167517 Coq.Init.Logic <> :type_scope:x_'='_x not
R167518:167522 CertiOS.framework.auxlibs.Maps <> merge meth
R167529:167533 CertiOS.framework.auxlibs.Maps <> minus meth
R167515:167517 Coq.Init.Logic <> :type_scope:x_'='_x not
R167518:167522 CertiOS.framework.auxlibs.Maps <> merge meth
R167529:167533 CertiOS.framework.auxlibs.Maps <> minus meth
R167553:167567 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R167553:167567 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R167598:167614 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R167598:167614 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R167699:167716 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R167699:167716 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R167743:167749 CertiOS.framework.model.opsem <> tidsame def
R167812:167823 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R167812:167823 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R167882:167894 CertiOS.framework.proof.auxdef TOSpecMod put def
R167916:167920 CertiOS.framework.auxlibs.Maps <> merge meth
R167926:167930 CertiOS.framework.auxlibs.Maps <> minus meth
R167882:167894 CertiOS.framework.proof.auxdef TOSpecMod put def
R167916:167920 CertiOS.framework.auxlibs.Maps <> merge meth
R167926:167930 CertiOS.framework.auxlibs.Maps <> minus meth
R168032:168044 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R168032:168044 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R168063:168080 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R168063:168080 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R168099:168106 CertiOS.framework.proof.join_prop <> join_crt thm
R168099:168106 CertiOS.framework.proof.join_prop <> join_crt thm
R168125:168134 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R168125:168134 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R168155:168173 CertiOS.framework.proof.join_prop <> get_set_join_disj_l thm
R168155:168173 CertiOS.framework.proof.join_prop <> get_set_join_disj_l thm
R168192:168209 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R168192:168209 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R168228:168228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168231:168231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168234:168234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168236:168236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168239:168239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168242:168242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168244:168244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168247:168247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168250:168250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168253:168253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168256:168256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168259:168259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168228:168228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168231:168231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168234:168234 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168236:168236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168239:168239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168242:168242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168244:168244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168247:168247 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168250:168250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168253:168253 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168256:168256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168259:168259 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168300:168304 CertiOS.framework.model.opsem <> projD def
R168389:168389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168392:168392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168395:168395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168397:168397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168400:168400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168403:168403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168405:168405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168408:168408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168411:168411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168414:168414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168417:168417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168420:168420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168428:168428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168433:168435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168447:168447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168429:168432 CertiOS.framework.model.language <> ::'SKIP' not
R168436:168436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168442:168443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168446:168446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168437:168441 CertiOS.framework.model.language <> kenil constr
R168449:168449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168469:168470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168481:168481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168450:168453 CertiOS.framework.model.language <> curs constr
R168456:168464 CertiOS.framework.model.language <> hapi_code constr
R168471:168471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168475:168476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168480:168480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168389:168389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168392:168392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168395:168395 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168397:168397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168400:168400 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168403:168403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168405:168405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168408:168408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168411:168411 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168414:168414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168417:168417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168420:168420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168428:168428 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168433:168435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168447:168447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168429:168432 CertiOS.framework.model.language <> ::'SKIP' not
R168436:168436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168442:168443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168446:168446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168437:168441 CertiOS.framework.model.language <> kenil constr
R168449:168449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168469:168470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168481:168481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168450:168453 CertiOS.framework.model.language <> curs constr
R168456:168464 CertiOS.framework.model.language <> hapi_code constr
R168471:168471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168475:168476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168480:168480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R168522:168526 CertiOS.framework.model.opsem <> projD def
R168610:168620 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R168610:168620 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R168632:168642 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R168632:168642 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R168685:168696 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168685:168696 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168685:168696 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168685:168696 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168788:168814 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R168788:168814 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R168833:168844 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168833:168844 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168833:168844 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168833:168844 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R168862:168884 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R168862:168884 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R168903:168916 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R168903:168916 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R168965:168976 CertiOS.framework.proof.step_prop <> task_no_dead def
R169053:169063 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R169053:169063 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R169053:169063 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R169104:169106 Coq.Init.Logic <> :type_scope:x_'='_x not
R169084:169087 Coq.Init.Datatypes <> Some constr
R169090:169099 CertiOS.framework.model.language <> abstcblist constr
R169107:169110 Coq.Init.Datatypes <> Some constr
R169113:169122 CertiOS.framework.model.language <> abstcblist constr
R169104:169106 Coq.Init.Logic <> :type_scope:x_'='_x not
R169084:169087 Coq.Init.Datatypes <> Some constr
R169090:169099 CertiOS.framework.model.language <> abstcblist constr
R169107:169110 Coq.Init.Datatypes <> Some constr
R169113:169122 CertiOS.framework.model.language <> abstcblist constr
R169187:169191 CertiOS.framework.auxlibs.Maps <> indom def
R169231:169244 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R169231:169244 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R169263:169276 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R169263:169276 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R169419:169428 CertiOS.framework.model.opsem <> hpstepstar ind
R169549:169553 CertiOS.framework.auxlibs.Maps <> merge meth
R169592:169596 CertiOS.framework.auxlibs.Maps <> minus meth
R169556:169558 CertiOS.framework.auxlibs.Maps <> set meth
R169575:169584 CertiOS.framework.model.language <> abstcblist constr
R169564:169572 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R169526:169526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169529:169530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169543:169544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169546:169546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169531:169533 CertiOS.framework.auxlibs.Maps <> del meth
R169461:169463 CertiOS.framework.auxlibs.Maps <> set meth
R169492:169492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169512:169513 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169523:169523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169493:169496 CertiOS.framework.model.language <> curs constr
R169499:169507 CertiOS.framework.model.language <> hapi_code constr
R169514:169514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169518:169518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169522:169522 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169442:169442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169445:169446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169452:169453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169455:169455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169431:169431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169434:169435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169437:169437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169419:169428 CertiOS.framework.model.opsem <> hpstepstar ind
R169549:169553 CertiOS.framework.auxlibs.Maps <> merge meth
R169592:169596 CertiOS.framework.auxlibs.Maps <> minus meth
R169556:169558 CertiOS.framework.auxlibs.Maps <> set meth
R169575:169584 CertiOS.framework.model.language <> abstcblist constr
R169564:169572 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R169526:169526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169529:169530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169543:169544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169546:169546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169531:169533 CertiOS.framework.auxlibs.Maps <> del meth
R169461:169463 CertiOS.framework.auxlibs.Maps <> set meth
R169492:169492 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169512:169513 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169523:169523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169493:169496 CertiOS.framework.model.language <> curs constr
R169499:169507 CertiOS.framework.model.language <> hapi_code constr
R169514:169514 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169518:169518 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169522:169522 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169442:169442 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169445:169446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169452:169453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169455:169455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169431:169431 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169434:169435 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169437:169437 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R169621:169631 CertiOS.framework.proof.step_prop <> hpstep_star thm
R169621:169631 CertiOS.framework.proof.step_prop <> hpstep_star thm
R169650:169659 CertiOS.framework.model.opsem <> hpdel_step constr
R169650:169659 CertiOS.framework.model.opsem <> hpdel_step constr
R169691:169701 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R169691:169701 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R169719:169728 CertiOS.framework.proof.join_prop <> set_set_eq thm
R169719:169728 CertiOS.framework.proof.join_prop <> set_set_eq thm
R169719:169728 CertiOS.framework.proof.join_prop <> set_set_eq thm
R169747:169760 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R169747:169760 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R169782:169784 Coq.Init.Logic <> :type_scope:x_'='_x not
R169785:169789 CertiOS.framework.auxlibs.Maps <> merge meth
R169796:169800 CertiOS.framework.auxlibs.Maps <> minus meth
R169782:169784 Coq.Init.Logic <> :type_scope:x_'='_x not
R169785:169789 CertiOS.framework.auxlibs.Maps <> merge meth
R169796:169800 CertiOS.framework.auxlibs.Maps <> minus meth
R169820:169834 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R169820:169834 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R169878:169894 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R169878:169894 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R169932:169945 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R169932:169945 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R169964:169974 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R169964:169974 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R169987:169993 CertiOS.framework.auxlibs.Maps <> joinsig def
R170042:170051 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R170042:170051 CertiOS.tactics.basetac.join_lib <> join_get_l thm
R170155:170157 Coq.Init.Logic <> :type_scope:x_'='_x not
R170100:170104 CertiOS.framework.auxlibs.Maps <> merge meth
R170143:170147 CertiOS.framework.auxlibs.Maps <> minus meth
R170107:170109 CertiOS.framework.auxlibs.Maps <> set meth
R170126:170135 CertiOS.framework.model.language <> abstcblist constr
R170115:170123 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R170158:170160 CertiOS.framework.auxlibs.Maps <> set meth
R170176:170185 CertiOS.framework.model.language <> abstcblist constr
R170165:170173 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R170155:170157 Coq.Init.Logic <> :type_scope:x_'='_x not
R170100:170104 CertiOS.framework.auxlibs.Maps <> merge meth
R170143:170147 CertiOS.framework.auxlibs.Maps <> minus meth
R170107:170109 CertiOS.framework.auxlibs.Maps <> set meth
R170126:170135 CertiOS.framework.model.language <> abstcblist constr
R170115:170123 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R170158:170160 CertiOS.framework.auxlibs.Maps <> set meth
R170176:170185 CertiOS.framework.model.language <> abstcblist constr
R170165:170173 CertiOS.framework.proof.oscorrectness <> abtcblsid syndef
R170206:170208 Coq.Init.Logic <> :type_scope:x_'='_x not
R170209:170213 CertiOS.framework.auxlibs.Maps <> merge meth
R170220:170224 CertiOS.framework.auxlibs.Maps <> minus meth
R170206:170208 Coq.Init.Logic <> :type_scope:x_'='_x not
R170209:170213 CertiOS.framework.auxlibs.Maps <> merge meth
R170220:170224 CertiOS.framework.auxlibs.Maps <> minus meth
R170244:170258 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R170244:170258 CertiOS.tactics.basetac.join_general <> map_join_merge' thm
R170289:170305 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R170289:170305 CertiOS.tactics.basetac.join_lib <> join_merge_set_eq thm
R170390:170407 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R170390:170407 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R170434:170440 CertiOS.framework.model.opsem <> tidsame def
R170503:170514 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R170503:170514 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R170535:170546 CertiOS.framework.proof.step_prop <> task_no_dead def
R170535:170546 CertiOS.framework.proof.step_prop <> task_no_dead def
R170565:170587 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R170565:170587 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R170606:170619 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R170606:170619 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R170773:170786 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R170773:170786 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R170804:170814 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R170804:170814 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R170833:170839 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R170842:170842 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R170852:170854 Coq.Init.Logic <> :type_scope:x_'='_x not
R170843:170845 CertiOS.framework.auxlibs.Maps <> get meth
R170855:170858 Coq.Init.Datatypes <> Some constr
R170833:170839 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R170842:170842 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R170852:170854 Coq.Init.Logic <> :type_scope:x_'='_x not
R170843:170845 CertiOS.framework.auxlibs.Maps <> get meth
R170855:170858 Coq.Init.Datatypes <> Some constr
R170875:170888 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R170875:170888 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R170932:170945 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R170932:170945 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R171100:171102 Coq.Init.Logic <> :type_scope:x_'='_x not
R171092:171094 CertiOS.framework.auxlibs.Maps <> get meth
R171103:171106 Coq.Init.Datatypes <> Some constr
R171108:171108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171110:171110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171113:171113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171116:171116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171100:171102 Coq.Init.Logic <> :type_scope:x_'='_x not
R171092:171094 CertiOS.framework.auxlibs.Maps <> get meth
R171103:171106 Coq.Init.Datatypes <> Some constr
R171108:171108 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171110:171110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171113:171113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171116:171116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R171149:171162 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R171149:171162 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R171187:171197 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R171187:171197 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R171211:171217 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R171219:171219 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R171228:171230 Coq.Init.Logic <> :type_scope:x_'='_x not
R171220:171222 CertiOS.framework.auxlibs.Maps <> get meth
R171231:171234 Coq.Init.Datatypes <> Some constr
R171211:171217 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R171219:171219 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R171228:171230 Coq.Init.Logic <> :type_scope:x_'='_x not
R171220:171222 CertiOS.framework.auxlibs.Maps <> get meth
R171231:171234 Coq.Init.Datatypes <> Some constr
R171290:171301 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R171290:171301 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R171290:171301 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R171290:171301 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R171339:171340 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R171339:171340 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R171468:171472 CertiOS.framework.model.opsem <> projS def
R171492:171496 CertiOS.framework.model.opsem <> projD def
R171533:171535 CertiOS.framework.auxlibs.Maps <> get meth
R171533:171535 CertiOS.framework.auxlibs.Maps <> get meth
R171565:171567 CertiOS.framework.auxlibs.Maps <> get meth
R171565:171567 CertiOS.framework.auxlibs.Maps <> get meth
R171696:171705 CertiOS.framework.proof.invariant_prop <> linv_split thm
R171696:171705 CertiOS.framework.proof.invariant_prop <> linv_split thm
R171798:171810 CertiOS.framework.proof.auxdef TMSpecMod put def
R171813:171825 CertiOS.framework.proof.auxdef TMSpecMod put def
R171833:171837 CertiOS.framework.auxlibs.Maps <> merge meth
R171867:171879 CertiOS.framework.proof.auxdef TOSpecMod put def
R171882:171894 CertiOS.framework.proof.auxdef TOSpecMod put def
R171902:171906 CertiOS.framework.auxlibs.Maps <> merge meth
R171936:171940 CertiOS.framework.auxlibs.Maps <> merge meth
R171946:171950 CertiOS.framework.auxlibs.Maps <> minus meth
R171798:171810 CertiOS.framework.proof.auxdef TMSpecMod put def
R171813:171825 CertiOS.framework.proof.auxdef TMSpecMod put def
R171833:171837 CertiOS.framework.auxlibs.Maps <> merge meth
R171867:171879 CertiOS.framework.proof.auxdef TOSpecMod put def
R171882:171894 CertiOS.framework.proof.auxdef TOSpecMod put def
R171902:171906 CertiOS.framework.auxlibs.Maps <> merge meth
R171936:171940 CertiOS.framework.auxlibs.Maps <> merge meth
R171946:171950 CertiOS.framework.auxlibs.Maps <> minus meth
R172052:172064 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R172052:172064 CertiOS.framework.proof.step_prop <> lpstep_goodks thm
R172083:172100 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R172083:172100 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R172121:172134 CertiOS.framework.proof.invariant_prop <> delother_partm thm
R172121:172134 CertiOS.framework.proof.invariant_prop <> delother_partm thm
R172153:172160 CertiOS.framework.proof.join_prop <> join_crt thm
R172153:172160 CertiOS.framework.proof.join_prop <> join_crt thm
R172181:172185 CertiOS.framework.proof.auxdef <> partO ind
R172263:172275 CertiOS.framework.proof.auxdef TOSpecMod put def
R172213:172215 CertiOS.framework.auxlibs.Maps <> set meth
R172222:172222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172227:172229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172241:172241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172223:172226 CertiOS.framework.model.language <> ::'SKIP' not
R172230:172230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172236:172237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172240:172240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172231:172235 CertiOS.framework.model.language <> kenil constr
R172188:172192 CertiOS.framework.auxlibs.Maps <> merge meth
R172198:172202 CertiOS.framework.auxlibs.Maps <> minus meth
R172181:172185 CertiOS.framework.proof.auxdef <> partO ind
R172263:172275 CertiOS.framework.proof.auxdef TOSpecMod put def
R172213:172215 CertiOS.framework.auxlibs.Maps <> set meth
R172222:172222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172227:172229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172241:172241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172223:172226 CertiOS.framework.model.language <> ::'SKIP' not
R172230:172230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172236:172237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172240:172240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172231:172235 CertiOS.framework.model.language <> kenil constr
R172188:172192 CertiOS.framework.auxlibs.Maps <> merge meth
R172198:172202 CertiOS.framework.auxlibs.Maps <> minus meth
R172298:172307 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R172298:172307 CertiOS.framework.proof.invariant_prop <> new_part_o thm
R172326:172344 CertiOS.framework.proof.join_prop <> get_set_join_disj_l thm
R172326:172344 CertiOS.framework.proof.join_prop <> get_set_join_disj_l thm
R172363:172380 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R172363:172380 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R172401:172401 Coq.Init.Logic <> :type_scope:x_'='_x not
R172456:172460 Coq.Init.Logic <> :type_scope:x_'='_x not
R172494:172494 Coq.Init.Logic <> :type_scope:x_'='_x not
R172402:172414 CertiOS.framework.proof.auxdef TOSpecMod put def
R172443:172447 CertiOS.framework.auxlibs.Maps <> merge meth
R172417:172429 CertiOS.framework.proof.auxdef TOSpecMod put def
R172461:172473 CertiOS.framework.proof.auxdef TOSpecMod put def
R172481:172485 CertiOS.framework.auxlibs.Maps <> merge meth
R172401:172401 Coq.Init.Logic <> :type_scope:x_'='_x not
R172456:172460 Coq.Init.Logic <> :type_scope:x_'='_x not
R172494:172494 Coq.Init.Logic <> :type_scope:x_'='_x not
R172402:172414 CertiOS.framework.proof.auxdef TOSpecMod put def
R172443:172447 CertiOS.framework.auxlibs.Maps <> merge meth
R172417:172429 CertiOS.framework.proof.auxdef TOSpecMod put def
R172461:172473 CertiOS.framework.proof.auxdef TOSpecMod put def
R172481:172485 CertiOS.framework.auxlibs.Maps <> merge meth
R172507:172529 CertiOS.framework.proof.auxdef TOSpecMod put_xx_update thm
R172507:172529 CertiOS.framework.proof.auxdef TOSpecMod put_xx_update thm
R172561:172574 CertiOS.framework.proof.invariant_prop <> delother_parto thm
R172561:172574 CertiOS.framework.proof.invariant_prop <> delother_parto thm
R172593:172606 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R172593:172606 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R172629:172629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172632:172632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172635:172635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172638:172638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172640:172640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172643:172643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172645:172645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172648:172648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172651:172651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172654:172654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172656:172656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172659:172659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172629:172629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172632:172632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172635:172635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172638:172638 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172640:172640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172643:172643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172645:172645 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172648:172648 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172651:172651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172654:172654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172656:172656 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172659:172659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172700:172704 CertiOS.framework.model.opsem <> projD def
R172793:172793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172796:172796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172799:172799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172802:172802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172804:172804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172807:172807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172809:172809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172812:172812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172815:172816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172829:172830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172832:172832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172835:172835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172817:172821 CertiOS.framework.auxlibs.Maps <> merge meth
R172838:172842 CertiOS.framework.auxlibs.Maps <> merge meth
R172853:172857 CertiOS.framework.auxlibs.Maps <> merge meth
R172867:172867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172872:172874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172886:172886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172868:172871 CertiOS.framework.model.language <> ::'SKIP' not
R172875:172875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172881:172882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172885:172885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172876:172880 CertiOS.framework.model.language <> kenil constr
R172888:172888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172908:172909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172920:172920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172889:172892 CertiOS.framework.model.language <> curs constr
R172895:172903 CertiOS.framework.model.language <> hapi_code constr
R172910:172910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172914:172915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172919:172919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172793:172793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172796:172796 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172799:172799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172802:172802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172804:172804 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172807:172807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172809:172809 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172812:172812 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172815:172816 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172829:172830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172832:172832 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172835:172835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172817:172821 CertiOS.framework.auxlibs.Maps <> merge meth
R172838:172842 CertiOS.framework.auxlibs.Maps <> merge meth
R172853:172857 CertiOS.framework.auxlibs.Maps <> merge meth
R172867:172867 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172872:172874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172886:172886 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172868:172871 CertiOS.framework.model.language <> ::'SKIP' not
R172875:172875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172881:172882 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172885:172885 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172876:172880 CertiOS.framework.model.language <> kenil constr
R172888:172888 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172908:172909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172920:172920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172889:172892 CertiOS.framework.model.language <> curs constr
R172895:172903 CertiOS.framework.model.language <> hapi_code constr
R172910:172910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172914:172915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172919:172919 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R172949:172975 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R172949:172975 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R172994:173020 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R172994:173020 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R173051:173055 CertiOS.framework.model.opsem <> projD def
R173139:173149 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173139:173149 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173161:173171 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173161:173171 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173184:173201 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R173184:173201 CertiOS.framework.proof.invariant_prop <> CurLINV_merge_hold thm
R173220:173233 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173220:173233 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173315:173328 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R173315:173328 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R173347:173360 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173347:173360 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173406:173421 CertiOS.framework.proof.invariant_prop <> disj_complex'''' thm
R173406:173421 CertiOS.framework.proof.invariant_prop <> disj_complex'''' thm
R173465:173479 CertiOS.framework.proof.invariant_prop <> LINV_ignore_int thm
R173465:173479 CertiOS.framework.proof.invariant_prop <> LINV_ignore_int thm
R173540:173554 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R173540:173554 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R173567:173580 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173567:173580 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173624:173637 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R173624:173637 CertiOS.framework.proof.invariant_prop <> partm_neq_disj thm
R173656:173670 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R173656:173670 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R173683:173696 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173683:173696 CertiOS.tactics.basetac.join_lib <> disj_trans_sub thm
R173740:173755 CertiOS.framework.proof.invariant_prop <> disj_complex'''' thm
R173740:173755 CertiOS.framework.proof.invariant_prop <> disj_complex'''' thm
R173816:173819 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R173811:173813 Coq.Init.Logic <> :type_scope:x_'='_x not
R173823:173826 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R173816:173819 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R173811:173813 Coq.Init.Logic <> :type_scope:x_'='_x not
R173823:173826 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R173932:173942 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173932:173942 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173932:173942 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R173989:173991 Coq.Init.Logic <> :type_scope:x_'='_x not
R173969:173972 Coq.Init.Datatypes <> Some constr
R173975:173984 CertiOS.framework.model.language <> abstcblist constr
R173992:173995 Coq.Init.Datatypes <> Some constr
R173998:174007 CertiOS.framework.model.language <> abstcblist constr
R173989:173991 Coq.Init.Logic <> :type_scope:x_'='_x not
R173969:173972 Coq.Init.Datatypes <> Some constr
R173975:173984 CertiOS.framework.model.language <> abstcblist constr
R173992:173995 Coq.Init.Datatypes <> Some constr
R173998:174007 CertiOS.framework.model.language <> abstcblist constr
R174072:174092 CertiOS.tactics.basetac.join_general <> map_join_get_no_perm1 thm
R174072:174092 CertiOS.tactics.basetac.join_general <> map_join_get_no_perm1 thm
R174192:174202 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R174192:174202 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R174216:174227 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174216:174227 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174216:174227 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174216:174227 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174254:174265 CertiOS.framework.proof.step_prop <> task_no_dead def
R174254:174265 CertiOS.framework.proof.step_prop <> task_no_dead def
R174285:174307 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R174285:174307 CertiOS.framework.proof.step_prop <> htstepstar_nodead_still thm
R174330:174343 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R174330:174343 CertiOS.tactics.basetac.join_lib <> join_get_get_l thm
R174396:174407 CertiOS.framework.proof.step_prop <> task_no_dead def
R174484:174494 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R174484:174494 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R174484:174494 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R174535:174537 Coq.Init.Logic <> :type_scope:x_'='_x not
R174515:174518 Coq.Init.Datatypes <> Some constr
R174521:174530 CertiOS.framework.model.language <> abstcblist constr
R174538:174541 Coq.Init.Datatypes <> Some constr
R174544:174553 CertiOS.framework.model.language <> abstcblist constr
R174535:174537 Coq.Init.Logic <> :type_scope:x_'='_x not
R174515:174518 Coq.Init.Datatypes <> Some constr
R174521:174530 CertiOS.framework.model.language <> abstcblist constr
R174538:174541 Coq.Init.Datatypes <> Some constr
R174544:174553 CertiOS.framework.model.language <> abstcblist constr
R174599:174603 CertiOS.framework.auxlibs.Maps <> indom def
R174643:174656 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R174643:174656 CertiOS.tactics.basetac.join_lib <> join_get_get_r thm
R174755:174781 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R174755:174781 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R174800:174826 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R174800:174826 CertiOS.framework.proof.auxdef TMSpecMod mapsto_mapsto_put thm
R174845:174871 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R174845:174871 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R174890:174916 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R174890:174916 CertiOS.framework.proof.auxdef TOSpecMod mapsto_mapsto_put thm
R174936:174947 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174936:174947 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174936:174947 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174936:174947 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R174965:174978 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R174965:174978 CertiOS.framework.proof.step_prop <> hpstep_eqdomto thm
R174999:175014 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R174999:175014 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R175033:175041 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R175033:175041 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R175180:175187 CertiOS.framework.model.opsem <> lpstepev ind
R175180:175187 CertiOS.framework.model.opsem <> lpstepev ind
R175454:175454 Coq.Init.Logic <> :type_scope:x_'='_x not
R175454:175454 Coq.Init.Logic <> :type_scope:x_'='_x not
R175541:175541 Coq.Init.Logic <> :type_scope:x_'='_x not
R175541:175541 Coq.Init.Logic <> :type_scope:x_'='_x not
R175727:175730 CertiOS.framework.logic.inferules <> satp def
R175849:175853 CertiOS.framework.auxlibs.Maps <> minus meth
R175896:175896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175898:175899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175902:175903 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175905:175906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175908:175909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175911:175911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175928:175932 CertiOS.framework.auxlibs.Maps <> merge meth
R175947:175947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175949:175950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175953:175954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175956:175957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175959:175960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175962:175962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175849:175853 CertiOS.framework.auxlibs.Maps <> minus meth
R175896:175896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175898:175899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175902:175903 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175905:175906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175908:175909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175911:175911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175928:175932 CertiOS.framework.auxlibs.Maps <> merge meth
R175947:175947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175949:175950 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175953:175954 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175956:175957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175959:175960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R175962:175962 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176111:176115 CertiOS.framework.auxlibs.Maps <> minus meth
R176078:176097 CertiOS.framework.proof.step_prop <> htstepevstar_O_local thm
R176111:176115 CertiOS.framework.auxlibs.Maps <> minus meth
R176078:176097 CertiOS.framework.proof.step_prop <> htstepevstar_O_local thm
R176167:176169 CertiOS.framework.auxlibs.Maps <> set meth
R176167:176169 CertiOS.framework.auxlibs.Maps <> set meth
R176205:176224 CertiOS.framework.proof.step_prop <> th_no_create_lift_ev thm
R176205:176224 CertiOS.framework.proof.step_prop <> th_no_create_lift_ev thm
R176300:176319 CertiOS.framework.proof.step_prop <> htstepevstar_tidsame thm
R176300:176319 CertiOS.framework.proof.step_prop <> htstepevstar_tidsame thm
R176348:176354 CertiOS.framework.model.opsem <> tidsame def
R176378:176380 CertiOS.framework.auxlibs.Maps <> get meth
R176516:176528 CertiOS.framework.proof.auxdef TMSpecMod put def
R176536:176542 CertiOS.framework.model.opsem <> get_mem def
R176545:176552 CertiOS.framework.model.language <> get_smem def
R176516:176528 CertiOS.framework.proof.auxdef TMSpecMod put def
R176536:176542 CertiOS.framework.model.opsem <> get_mem def
R176545:176552 CertiOS.framework.model.language <> get_smem def
R176584:176596 CertiOS.framework.proof.auxdef TOSpecMod put def
R176609:176613 CertiOS.framework.auxlibs.Maps <> minus meth
R176631:176635 CertiOS.framework.auxlibs.Maps <> minus meth
R176584:176596 CertiOS.framework.proof.auxdef TOSpecMod put def
R176609:176613 CertiOS.framework.auxlibs.Maps <> minus meth
R176631:176635 CertiOS.framework.auxlibs.Maps <> minus meth
R176726:176740 CertiOS.framework.proof.step_prop <> lpstepev_goodks thm
R176726:176740 CertiOS.framework.proof.step_prop <> lpstepev_goodks thm
R176778:176780 Coq.Init.Logic <> :type_scope:x_'='_x not
R176760:176762 Coq.Init.Datatypes <> snd def
R176765:176767 Coq.Init.Datatypes <> fst def
R176770:176772 Coq.Init.Datatypes <> fst def
R176781:176783 Coq.Init.Datatypes <> snd def
R176786:176788 Coq.Init.Datatypes <> fst def
R176791:176793 Coq.Init.Datatypes <> fst def
R176795:176795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176797:176798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176801:176802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176804:176805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176807:176808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176810:176810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176778:176780 Coq.Init.Logic <> :type_scope:x_'='_x not
R176760:176762 Coq.Init.Datatypes <> snd def
R176765:176767 Coq.Init.Datatypes <> fst def
R176770:176772 Coq.Init.Datatypes <> fst def
R176781:176783 Coq.Init.Datatypes <> snd def
R176786:176788 Coq.Init.Datatypes <> fst def
R176791:176793 Coq.Init.Datatypes <> fst def
R176795:176795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176797:176798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176801:176802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176804:176805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176807:176808 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176810:176810 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R176825:176833 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R176825:176833 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R176891:176907 CertiOS.framework.proof.joinmemLib <> joinm2_minus_join thm
R176891:176907 CertiOS.framework.proof.joinmemLib <> joinm2_minus_join thm
R176937:176954 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R176937:176954 CertiOS.framework.proof.invariant_prop <> partm_task_get_set thm
R176973:176984 CertiOS.framework.proof.invariant_prop <> partM_normal thm
R176973:176984 CertiOS.framework.proof.invariant_prop <> partM_normal thm
R177003:177017 CertiOS.tactics.basetac.join_lib <> join_join_minus thm
R177003:177017 CertiOS.tactics.basetac.join_lib <> join_join_minus thm
R177036:177053 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R177036:177053 CertiOS.framework.proof.invariant_prop <> parto_task_get_set thm
R177072:177083 CertiOS.framework.proof.invariant_prop <> partO_normal thm
R177072:177083 CertiOS.framework.proof.invariant_prop <> partO_normal thm
R183967:183967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183969:183970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183973:183974 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183976:183977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183979:183980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183982:183982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183984:183984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183986:183987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183990:183991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183995:183996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183998:183999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184001:184001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183967:183967 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183969:183970 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183973:183974 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183976:183977 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183979:183980 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183982:183982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183984:183984 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183986:183987 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183990:183991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183995:183996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R183998:183999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184001:184001 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184052:184053 Coq.Init.Logic <> :type_scope:x_'='_x not
R184035:184044 CertiOS.framework.logic.assertion <> substaskst def
R184054:184054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184056:184057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184060:184061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184065:184066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184068:184069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184071:184071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184052:184053 Coq.Init.Logic <> :type_scope:x_'='_x not
R184035:184044 CertiOS.framework.logic.assertion <> substaskst def
R184054:184054 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184056:184057 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184060:184061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184065:184066 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184068:184069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184071:184071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184149:184155 CertiOS.framework.logic.assertion <> joinmem def
R184241:184241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184243:184244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184247:184248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184250:184251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184253:184254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184256:184256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184272:184278 CertiOS.framework.model.opsem <> get_mem def
R184281:184288 CertiOS.framework.model.language <> get_smem def
R184241:184241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184243:184244 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184247:184248 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184250:184251 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184253:184254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184256:184256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184272:184278 CertiOS.framework.model.opsem <> get_mem def
R184281:184288 CertiOS.framework.model.language <> get_smem def
R184383:184389 CertiOS.framework.logic.assertion <> joinmem def
R184435:184445 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R184435:184445 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R184457:184467 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R184457:184467 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R184544:184545 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R184544:184545 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R184684:184684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184734:184735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184748:184762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184769:184770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184685:184686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184696:184698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184720:184722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184732:184733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184687:184692 CertiOS.framework.model.opsem <> gets_g def
R184699:184705 CertiOS.framework.model.opsem <> get_env def
R184708:184715 CertiOS.framework.model.language <> get_smem def
R184723:184728 CertiOS.framework.model.opsem <> gets_m def
R184736:184738 Coq.Init.Datatypes <> snd def
R184741:184743 Coq.Init.Datatypes <> fst def
R184763:184765 Coq.Init.Datatypes <> snd def
R184684:184684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184734:184735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184748:184762 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184769:184770 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184685:184686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184696:184698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184720:184722 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184732:184733 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R184687:184692 CertiOS.framework.model.opsem <> gets_g def
R184699:184705 CertiOS.framework.model.opsem <> get_env def
R184708:184715 CertiOS.framework.model.language <> get_smem def
R184723:184728 CertiOS.framework.model.opsem <> gets_m def
R184736:184738 Coq.Init.Datatypes <> snd def
R184741:184743 Coq.Init.Datatypes <> fst def
R184763:184765 Coq.Init.Datatypes <> snd def
R184841:184847 CertiOS.framework.model.opsem <> get_mem def
R184850:184857 CertiOS.framework.model.language <> get_smem def
R184810:184823 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R184841:184847 CertiOS.framework.model.opsem <> get_mem def
R184850:184857 CertiOS.framework.model.language <> get_smem def
R184810:184823 CertiOS.framework.proof.invariant_prop <> tm_mapsto_put' thm
R184879:184892 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R184879:184892 CertiOS.framework.proof.invariant_prop <> to_mapsto_put' thm
R184936:184948 CertiOS.framework.proof.lemmasfortoptheo <> proj_stneq_ex thm
R184936:184948 CertiOS.framework.proof.lemmasfortoptheo <> proj_stneq_ex thm
R185094:185108 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R185094:185108 CertiOS.framework.proof.invariant_prop <> LInv_ignore_int thm
R185217:185219 Coq.Init.Logic <> :type_scope:x_'='_x not
R185122:185131 CertiOS.framework.logic.assertion <> substaskst def
R185146:185146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185156:185157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185179:185180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185190:185191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185204:185205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185212:185212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185147:185152 CertiOS.framework.model.opsem <> gets_g def
R185158:185164 CertiOS.framework.model.opsem <> get_env def
R185167:185174 CertiOS.framework.model.language <> get_smem def
R185181:185186 CertiOS.framework.model.opsem <> gets_m def
R185192:185194 Coq.Init.Datatypes <> snd def
R185197:185199 Coq.Init.Datatypes <> fst def
R185206:185208 Coq.Init.Datatypes <> snd def
R185220:185229 CertiOS.framework.logic.assertion <> substaskst def
R185217:185219 Coq.Init.Logic <> :type_scope:x_'='_x not
R185122:185131 CertiOS.framework.logic.assertion <> substaskst def
R185146:185146 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185156:185157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185179:185180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185190:185191 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185204:185205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185212:185212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185147:185152 CertiOS.framework.model.opsem <> gets_g def
R185158:185164 CertiOS.framework.model.opsem <> get_env def
R185167:185174 CertiOS.framework.model.language <> get_smem def
R185181:185186 CertiOS.framework.model.opsem <> gets_m def
R185192:185194 Coq.Init.Datatypes <> snd def
R185197:185199 Coq.Init.Datatypes <> fst def
R185206:185208 Coq.Init.Datatypes <> snd def
R185220:185229 CertiOS.framework.logic.assertion <> substaskst def
R185336:185341 CertiOS.framework.model.opsem <> gets_g def
R185343:185349 CertiOS.framework.model.opsem <> get_env def
R185377:185379 CertiOS.framework.auxlibs.Modules <> tid def
R185400:185402 CertiOS.framework.auxlibs.Maps <> get meth
R185400:185402 CertiOS.framework.auxlibs.Maps <> get meth
R185453:185455 CertiOS.framework.auxlibs.Maps <> get meth
R185453:185455 CertiOS.framework.auxlibs.Maps <> get meth
R185576:185587 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R185576:185587 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R185576:185587 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R185576:185587 CertiOS.framework.auxlibs.Maps <> map_get_set' meth
R185772:185774 Coq.Init.Logic <> :type_scope:x_'='_x not
R185633:185641 CertiOS.framework.proof.auxdef <> RdyChange def
R185657:185666 CertiOS.framework.logic.assertion <> substaskst def
R185769:185770 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R185684:185684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185694:185695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185717:185735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185745:185746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185759:185760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185767:185767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185685:185690 CertiOS.framework.model.opsem <> gets_g def
R185696:185702 CertiOS.framework.model.opsem <> get_env def
R185705:185712 CertiOS.framework.model.language <> get_smem def
R185736:185741 CertiOS.framework.model.opsem <> gets_m def
R185747:185749 Coq.Init.Datatypes <> snd def
R185752:185754 Coq.Init.Datatypes <> fst def
R185761:185763 Coq.Init.Datatypes <> snd def
R185775:185783 CertiOS.framework.proof.auxdef <> RdyChange def
R185786:185795 CertiOS.framework.logic.assertion <> substaskst def
R185800:185801 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R185772:185774 Coq.Init.Logic <> :type_scope:x_'='_x not
R185633:185641 CertiOS.framework.proof.auxdef <> RdyChange def
R185657:185666 CertiOS.framework.logic.assertion <> substaskst def
R185769:185770 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R185684:185684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185694:185695 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185717:185735 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185745:185746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185759:185760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185767:185767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R185685:185690 CertiOS.framework.model.opsem <> gets_g def
R185696:185702 CertiOS.framework.model.opsem <> get_env def
R185705:185712 CertiOS.framework.model.language <> get_smem def
R185736:185741 CertiOS.framework.model.opsem <> gets_m def
R185747:185749 Coq.Init.Datatypes <> snd def
R185752:185754 Coq.Init.Datatypes <> fst def
R185761:185763 Coq.Init.Datatypes <> snd def
R185775:185783 CertiOS.framework.proof.auxdef <> RdyChange def
R185786:185795 CertiOS.framework.logic.assertion <> substaskst def
R185800:185801 CertiOS.framework.proof.lemmasfortoptheo <> Mr var
R185911:185916 CertiOS.framework.model.opsem <> gets_g def
R185918:185924 CertiOS.framework.model.opsem <> get_env def
R185957:185959 CertiOS.framework.auxlibs.Modules <> tid def
R185980:185982 CertiOS.framework.auxlibs.Maps <> get meth
R185980:185982 CertiOS.framework.auxlibs.Maps <> get meth
R186033:186035 CertiOS.framework.auxlibs.Maps <> get meth
R186033:186035 CertiOS.framework.auxlibs.Maps <> get meth
R186256:186272 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R186256:186272 CertiOS.framework.proof.lemmasfortoptheo <> tasks_set_get_neq thm
R186292:186316 CertiOS.framework.proof.step_prop <> htstepevstar_nodead_still thm
R186292:186316 CertiOS.framework.proof.step_prop <> htstepevstar_nodead_still thm
R186378:186378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186381:186381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186383:186383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186337:186352 CertiOS.framework.proof.step_prop <> hpstepev_eqdomto thm
R186378:186378 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186381:186381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186383:186383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186337:186352 CertiOS.framework.proof.step_prop <> hpstepev_eqdomto thm
R186403:186422 CertiOS.framework.proof.step_prop <> th_no_create_lift_ev thm
R186403:186422 CertiOS.framework.proof.step_prop <> th_no_create_lift_ev thm
R186456:186471 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R186456:186471 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R186490:186498 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R186490:186498 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R186538:186540 Coq.Init.Logic <> :type_scope:x_'='_x not
R186521:186521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186523:186524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186527:186528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186531:186532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186534:186535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186537:186537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186541:186550 CertiOS.framework.logic.assertion <> substaskst def
R186552:186552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186554:186555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186558:186559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186561:186562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186564:186565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186567:186567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186538:186540 Coq.Init.Logic <> :type_scope:x_'='_x not
R186521:186521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186523:186524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186527:186528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186531:186532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186534:186535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186537:186537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186541:186550 CertiOS.framework.logic.assertion <> substaskst def
R186552:186552 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186554:186555 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186558:186559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186561:186562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186564:186565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186567:186567 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186614:186631 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R186614:186631 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R186652:186652 Coq.Init.Logic <> :type_scope:x_'='_x not
R186671:186675 Coq.Init.Logic <> :type_scope:x_'='_x not
R186708:186709 Coq.Init.Logic <> :type_scope:x_'='_x not
R186653:186655 Coq.Init.Datatypes <> snd def
R186658:186660 Coq.Init.Datatypes <> fst def
R186663:186665 Coq.Init.Datatypes <> fst def
R186676:186678 Coq.Init.Datatypes <> snd def
R186681:186683 Coq.Init.Datatypes <> fst def
R186686:186688 Coq.Init.Datatypes <> fst def
R186690:186690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186692:186693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186696:186697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186699:186700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186702:186703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186705:186705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186652:186652 Coq.Init.Logic <> :type_scope:x_'='_x not
R186671:186675 Coq.Init.Logic <> :type_scope:x_'='_x not
R186708:186709 Coq.Init.Logic <> :type_scope:x_'='_x not
R186653:186655 Coq.Init.Datatypes <> snd def
R186658:186660 Coq.Init.Datatypes <> fst def
R186663:186665 Coq.Init.Datatypes <> fst def
R186676:186678 Coq.Init.Datatypes <> snd def
R186681:186683 Coq.Init.Datatypes <> fst def
R186686:186688 Coq.Init.Datatypes <> fst def
R186690:186690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186692:186693 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186696:186697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186699:186700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186702:186703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186705:186705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R186722:186730 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R186722:186730 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R186815:186822 CertiOS.framework.proof.invariant_prop <> part_sub thm
R186815:186822 CertiOS.framework.proof.invariant_prop <> part_sub thm
R186840:186854 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R186840:186854 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R186867:186876 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R186867:186876 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R187332:187336 CertiOS.framework.auxlibs.Maps <> minus meth
R187350:187354 CertiOS.framework.auxlibs.Maps <> merge meth
R187377:187381 CertiOS.framework.auxlibs.Maps <> minus meth
R187332:187336 CertiOS.framework.auxlibs.Maps <> minus meth
R187350:187354 CertiOS.framework.auxlibs.Maps <> merge meth
R187377:187381 CertiOS.framework.auxlibs.Maps <> minus meth
R187416:187429 CertiOS.framework.model.opsem <> hp_stepstarabt constr
R187416:187429 CertiOS.framework.model.opsem <> hp_stepstarabt constr
R187524:187526 CertiOS.framework.auxlibs.Maps <> set meth
R187524:187526 CertiOS.framework.auxlibs.Maps <> set meth
R187567:187578 CertiOS.framework.proof.step_prop <> th_ttop_lift thm
R187567:187578 CertiOS.framework.proof.step_prop <> th_ttop_lift thm
R187608:187617 CertiOS.framework.model.opsem <> hpabt_step constr
R187608:187617 CertiOS.framework.model.opsem <> hpabt_step constr
R187654:187671 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R187654:187671 CertiOS.framework.proof.step_prop <> htstepstar_tidsame thm
R187698:187704 CertiOS.framework.model.opsem <> tidsame def
R187761:187771 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R187761:187771 CertiOS.framework.auxlibs.Maps <> map_get_set meth
R187949:187964 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R187949:187964 CertiOS.tactics.basetac.join_lib <> join_merge_minus thm
R187983:187991 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R187983:187991 CertiOS.framework.proof.invariant_prop <> parto_sub thm
R188014:188031 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R188014:188031 CertiOS.framework.proof.join_prop <> joinm2_merge_minus thm
R188052:188052 Coq.Init.Logic <> :type_scope:x_'='_x not
R188071:188075 Coq.Init.Logic <> :type_scope:x_'='_x not
R188093:188094 Coq.Init.Logic <> :type_scope:x_'='_x not
R188053:188055 Coq.Init.Datatypes <> snd def
R188058:188060 Coq.Init.Datatypes <> fst def
R188063:188065 Coq.Init.Datatypes <> fst def
R188076:188078 Coq.Init.Datatypes <> snd def
R188081:188083 Coq.Init.Datatypes <> fst def
R188086:188088 Coq.Init.Datatypes <> fst def
R188052:188052 Coq.Init.Logic <> :type_scope:x_'='_x not
R188071:188075 Coq.Init.Logic <> :type_scope:x_'='_x not
R188093:188094 Coq.Init.Logic <> :type_scope:x_'='_x not
R188053:188055 Coq.Init.Datatypes <> snd def
R188058:188060 Coq.Init.Datatypes <> fst def
R188063:188065 Coq.Init.Datatypes <> fst def
R188076:188078 Coq.Init.Datatypes <> snd def
R188081:188083 Coq.Init.Datatypes <> fst def
R188086:188088 Coq.Init.Datatypes <> fst def
R188107:188115 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R188107:188115 CertiOS.framework.proof.invariant_prop <> projs_eqm thm
R188198:188205 CertiOS.framework.model.language <> get_smem def
R188207:188213 CertiOS.framework.model.opsem <> get_mem def
R188275:188282 CertiOS.framework.proof.invariant_prop <> part_sub thm
R188275:188282 CertiOS.framework.proof.invariant_prop <> part_sub thm
R188304:188318 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R188304:188318 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R188331:188340 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R188331:188340 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R188787:188789 Coq.Init.Logic <> :type_scope:x_'='_x not
R188741:188741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188773:188774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188786:188786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188742:188745 CertiOS.framework.model.language <> curs constr
R188748:188752 CertiOS.framework.model.language <> sprim constr
R188755:188761 CertiOS.framework.model.language <> stkinit constr
R188775:188775 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188781:188782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188785:188785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188776:188780 CertiOS.framework.model.language <> kenil constr
R188790:188790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188822:188823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188835:188835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188791:188794 CertiOS.framework.model.language <> curs constr
R188797:188801 CertiOS.framework.model.language <> sprim constr
R188804:188810 CertiOS.framework.model.language <> stkinit constr
R188824:188824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188830:188831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188834:188834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188825:188829 CertiOS.framework.model.language <> kenil constr
R188787:188789 Coq.Init.Logic <> :type_scope:x_'='_x not
R188741:188741 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188773:188774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188786:188786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188742:188745 CertiOS.framework.model.language <> curs constr
R188748:188752 CertiOS.framework.model.language <> sprim constr
R188755:188761 CertiOS.framework.model.language <> stkinit constr
R188775:188775 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188781:188782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188785:188785 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188776:188780 CertiOS.framework.model.language <> kenil constr
R188790:188790 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188822:188823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188835:188835 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188791:188794 CertiOS.framework.model.language <> curs constr
R188797:188801 CertiOS.framework.model.language <> sprim constr
R188804:188810 CertiOS.framework.model.language <> stkinit constr
R188824:188824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188830:188831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188834:188834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R188825:188829 CertiOS.framework.model.language <> kenil constr
R188935:188939 CertiOS.framework.auxlibs.Maps <> merge meth
R188935:188939 CertiOS.framework.auxlibs.Maps <> merge meth
R189071:189075 CertiOS.framework.model.opsem <> projD def
R189114:189116 CertiOS.framework.auxlibs.Maps <> get meth
R189114:189116 CertiOS.framework.auxlibs.Maps <> get meth
R189146:189148 CertiOS.framework.auxlibs.Maps <> get meth
R189146:189148 CertiOS.framework.auxlibs.Maps <> get meth
R189221:189235 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189221:189235 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189254:189265 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189254:189265 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189298:189305 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189298:189305 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189357:189371 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189357:189371 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189390:189401 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189390:189401 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189434:189441 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189434:189441 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189493:189507 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189493:189507 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R189526:189537 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189526:189537 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R189570:189577 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189570:189577 CertiOS.framework.proof.invariant_prop <> part_sub thm
R189657:189661 CertiOS.framework.auxlibs.Maps <> merge meth
R189657:189661 CertiOS.framework.auxlibs.Maps <> merge meth
R189681:189686 CertiOS.framework.proof.simulation <> getmem def
R189704:189718 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R189704:189718 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R189731:189740 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R189731:189740 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R189789:189803 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R189789:189803 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R189816:189825 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R189816:189825 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R190270:190272 Coq.Init.Logic <> :type_scope:x_'='_x not
R190231:190231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190256:190257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190269:190269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190232:190235 CertiOS.framework.model.language <> curs constr
R190238:190242 CertiOS.framework.model.language <> sprim constr
R190245:190251 CertiOS.framework.model.language <> stkfree constr
R190258:190258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190264:190265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190268:190268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190259:190263 CertiOS.framework.model.language <> kenil constr
R190273:190273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190298:190299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190311:190311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190274:190277 CertiOS.framework.model.language <> curs constr
R190280:190284 CertiOS.framework.model.language <> sprim constr
R190287:190293 CertiOS.framework.model.language <> stkfree constr
R190300:190300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190306:190307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190310:190310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190301:190305 CertiOS.framework.model.language <> kenil constr
R190270:190272 Coq.Init.Logic <> :type_scope:x_'='_x not
R190231:190231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190256:190257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190269:190269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190232:190235 CertiOS.framework.model.language <> curs constr
R190238:190242 CertiOS.framework.model.language <> sprim constr
R190245:190251 CertiOS.framework.model.language <> stkfree constr
R190258:190258 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190264:190265 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190268:190268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190259:190263 CertiOS.framework.model.language <> kenil constr
R190273:190273 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190298:190299 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190311:190311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190274:190277 CertiOS.framework.model.language <> curs constr
R190280:190284 CertiOS.framework.model.language <> sprim constr
R190287:190293 CertiOS.framework.model.language <> stkfree constr
R190300:190300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190306:190307 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190310:190310 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R190301:190305 CertiOS.framework.model.language <> kenil constr
R190411:190415 CertiOS.framework.auxlibs.Maps <> merge meth
R190411:190415 CertiOS.framework.auxlibs.Maps <> merge meth
R190547:190551 CertiOS.framework.model.opsem <> projD def
R190590:190592 CertiOS.framework.auxlibs.Maps <> get meth
R190590:190592 CertiOS.framework.auxlibs.Maps <> get meth
R190622:190624 CertiOS.framework.auxlibs.Maps <> get meth
R190622:190624 CertiOS.framework.auxlibs.Maps <> get meth
R190684:190698 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R190684:190698 CertiOS.framework.proof.lmachLib <> evalval_eq_prop thm
R190717:190728 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R190717:190728 CertiOS.framework.proof.join_prop <> sub_join_sub thm
R190761:190768 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190761:190768 CertiOS.framework.proof.invariant_prop <> part_sub thm
R190848:190852 CertiOS.framework.auxlibs.Maps <> merge meth
R190848:190852 CertiOS.framework.auxlibs.Maps <> merge meth
R190872:190877 CertiOS.framework.proof.simulation <> getmem def
R190895:190909 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R190895:190909 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R190922:190931 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R190922:190931 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R190980:190994 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R190980:190994 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R191007:191016 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R191007:191016 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R191458:191460 Coq.Init.Logic <> :type_scope:x_'='_x not
R191420:191420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191444:191445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191457:191457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191421:191424 CertiOS.framework.model.language <> curs constr
R191427:191431 CertiOS.framework.model.language <> sprim constr
R191434:191439 CertiOS.framework.model.language <> switch constr
R191446:191446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191452:191453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191456:191456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191447:191451 CertiOS.framework.model.language <> kenil constr
R191461:191461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191485:191486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191498:191498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191462:191465 CertiOS.framework.model.language <> curs constr
R191468:191472 CertiOS.framework.model.language <> sprim constr
R191475:191480 CertiOS.framework.model.language <> switch constr
R191487:191487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191493:191494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191497:191497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191488:191492 CertiOS.framework.model.language <> kenil constr
R191458:191460 Coq.Init.Logic <> :type_scope:x_'='_x not
R191420:191420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191444:191445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191457:191457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191421:191424 CertiOS.framework.model.language <> curs constr
R191427:191431 CertiOS.framework.model.language <> sprim constr
R191434:191439 CertiOS.framework.model.language <> switch constr
R191446:191446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191452:191453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191456:191456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191447:191451 CertiOS.framework.model.language <> kenil constr
R191461:191461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191485:191486 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191498:191498 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191462:191465 CertiOS.framework.model.language <> curs constr
R191468:191472 CertiOS.framework.model.language <> sprim constr
R191475:191480 CertiOS.framework.model.language <> switch constr
R191487:191487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191493:191494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191497:191497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R191488:191492 CertiOS.framework.model.language <> kenil constr
R191598:191602 CertiOS.framework.auxlibs.Maps <> merge meth
R191598:191602 CertiOS.framework.auxlibs.Maps <> merge meth
R191792:191796 CertiOS.framework.model.opsem <> projD def
R191835:191837 CertiOS.framework.auxlibs.Maps <> get meth
R191835:191837 CertiOS.framework.auxlibs.Maps <> get meth
R191867:191869 CertiOS.framework.auxlibs.Maps <> get meth
R191867:191869 CertiOS.framework.auxlibs.Maps <> get meth
R191938:191956 CertiOS.framework.proof.invariant_prop <> swpre_hpswitch_nabt thm
R191938:191956 CertiOS.framework.proof.invariant_prop <> swpre_hpswitch_nabt thm
R191969:191972 CertiOS.framework.logic.inferules <> satp def
R191990:191999 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R191990:191999 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R192047:192057 CertiOS.framework.logic.inferules <> SWPRE_NDEAD def
R192166:192173 CertiOS.framework.proof.invariant_prop <> part_sub thm
R192166:192173 CertiOS.framework.proof.invariant_prop <> part_sub thm
R192219:192226 CertiOS.framework.auxlibs.Maps <> sub def
R192321:192324 CertiOS.framework.logic.inferules <> satp def
R192348:192352 CertiOS.framework.logic.assertion <> SWPRE def
R192355:192362 CertiOS.framework.proof.simulation <> getsched def
R192364:192364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192367:192368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192370:192370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192326:192326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192328:192329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192332:192333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192336:192337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192339:192340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192342:192342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192321:192324 CertiOS.framework.logic.inferules <> satp def
R192348:192352 CertiOS.framework.logic.assertion <> SWPRE def
R192355:192362 CertiOS.framework.proof.simulation <> getsched def
R192364:192364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192367:192368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192370:192370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192326:192326 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192328:192329 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192332:192333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192336:192337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192339:192340 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192342:192342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R192404:192407 CertiOS.framework.logic.inferules <> satp def
R192472:192490 CertiOS.framework.proof.invariant_prop <> swpre_hpswitch_nabt thm
R192472:192490 CertiOS.framework.proof.invariant_prop <> swpre_hpswitch_nabt thm
R192503:192506 CertiOS.framework.logic.inferules <> satp def
R192524:192533 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R192524:192533 CertiOS.framework.proof.invariant_prop <> swpre_prop thm
R192624:192631 CertiOS.framework.proof.invariant_prop <> part_sub thm
R192624:192631 CertiOS.framework.proof.invariant_prop <> part_sub thm
R192677:192684 CertiOS.framework.auxlibs.Maps <> sub def
R192810:192814 CertiOS.framework.auxlibs.Maps <> merge meth
R192810:192814 CertiOS.framework.auxlibs.Maps <> merge meth
R192834:192839 CertiOS.framework.proof.simulation <> getmem def
R192857:192871 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R192857:192871 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R192884:192893 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R192884:192893 CertiOS.framework.proof.invariant_prop <> part_disjm thm
R192942:192956 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R192942:192956 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R192969:192978 CertiOS.framework.proof.invariant_prop <> part_disjo thm
R192969:192978 CertiOS.framework.proof.invariant_prop <> part_disjo thm
prf 193112:193121 <> ApiMethSim
R193140:193145 CertiOS.framework.model.language <> oscode def
R193151:193156 CertiOS.framework.model.language <> osspec def
R193203:193210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193211:193219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193267:193282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193283:193291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193716:193751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194193:194199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193762:193764 CertiOS.framework.model.language <> fid def
R193828:193840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193908:193920 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193988:194012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194181:194192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194013:194019 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R194021:194021 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R194024:194024 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R194027:194027 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R194029:194043 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R194083:194085 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R194061:194063 Coq.Init.Logic <> :type_scope:x_'='_x not
R194045:194047 Coq.Init.Datatypes <> fst def
R194050:194052 Coq.Init.Datatypes <> fst def
R194054:194056 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R194060:194060 CertiOS.framework.proof.lemmasfortoptheo <> f var
R194064:194067 Coq.Init.Datatypes <> Some constr
R194069:194069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R194071:194072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R194075:194076 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R194079:194080 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R194082:194082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R194097:194113 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R194086:194094 CertiOS.framework.logic.inferules <> GoodStmt' def
R194114:194124 CertiOS.framework.proof.simulation <> MethSimAsrt def
R194178:194180 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R194171:194176 CertiOS.framework.logic.assertion <> Afalse constr
R194167:194167 CertiOS.framework.proof.lemmasfortoptheo <> p var
R194160:194165 CertiOS.framework.logic.assertion <> Afalse constr
R194158:194158 CertiOS.framework.proof.lemmasfortoptheo <> r var
R194156:194156 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194150:194154 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194143:194145 Coq.Init.Datatypes <> snd def
R194147:194147 CertiOS.framework.proof.lemmasfortoptheo <> A var
R194127:194129 Coq.Init.Datatypes <> snd def
R194132:194134 Coq.Init.Datatypes <> fst def
R194136:194138 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193927:193929 Coq.Init.Logic <> :type_scope:x_'='_x not
R193921:193924 Coq.Init.Datatypes <> Some constr
R193926:193926 CertiOS.framework.proof.lemmasfortoptheo <> r var
R193930:193938 CertiOS.framework.proof.auxdef <> BuildRetA def
R193981:193987 CertiOS.framework.logic.inferules <> init_lg def
R193977:193979 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R193971:193975 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193969:193969 CertiOS.framework.proof.lemmasfortoptheo <> G var
R193966:193967 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R193958:193958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193961:193961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193964:193964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193959:193960 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193962:193963 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193956:193956 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193941:193943 Coq.Init.Datatypes <> fst def
R193946:193948 Coq.Init.Datatypes <> fst def
R193950:193952 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193847:193849 Coq.Init.Logic <> :type_scope:x_'='_x not
R193841:193844 Coq.Init.Datatypes <> Some constr
R193846:193846 CertiOS.framework.proof.lemmasfortoptheo <> p var
R193850:193858 CertiOS.framework.proof.auxdef <> BuildPreA def
R193901:193907 CertiOS.framework.logic.inferules <> init_lg def
R193897:193899 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R193891:193895 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193889:193889 CertiOS.framework.proof.lemmasfortoptheo <> G var
R193886:193887 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R193878:193878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193881:193881 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193884:193884 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193879:193880 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193882:193883 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193876:193876 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193861:193863 Coq.Init.Datatypes <> fst def
R193866:193868 Coq.Init.Datatypes <> fst def
R193870:193872 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193813:193815 Coq.Init.Logic <> :type_scope:x_'='_x not
R193799:193801 Coq.Init.Datatypes <> fst def
R193804:193806 Coq.Init.Datatypes <> fst def
R193808:193808 CertiOS.framework.proof.lemmasfortoptheo <> A var
R193812:193812 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193816:193819 Coq.Init.Datatypes <> Some constr
R193821:193821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193824:193824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193827:193827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193822:193823 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193825:193826 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193302:193304 CertiOS.framework.model.language <> fid def
R193367:193379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193447:193458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193526:193550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193705:193715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R193551:193557 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R193559:193559 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R193562:193562 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R193565:193565 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R193567:193581 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R193621:193623 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R193599:193601 Coq.Init.Logic <> :type_scope:x_'='_x not
R193583:193585 Coq.Init.Datatypes <> fst def
R193588:193590 Coq.Init.Datatypes <> fst def
R193592:193594 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193598:193598 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193602:193605 Coq.Init.Datatypes <> Some constr
R193607:193607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193609:193610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193613:193614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193617:193618 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193620:193620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193635:193651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R193624:193632 CertiOS.framework.logic.inferules <> GoodStmt' def
R193652:193659 CertiOS.framework.logic.inferules <> InfRules ind
R193702:193704 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R193695:193700 CertiOS.framework.logic.assertion <> Afalse constr
R193691:193691 CertiOS.framework.proof.lemmasfortoptheo <> p var
R193684:193689 CertiOS.framework.logic.assertion <> Afalse constr
R193682:193682 CertiOS.framework.proof.lemmasfortoptheo <> r var
R193680:193680 CertiOS.framework.proof.lemmasfortoptheo <> I var
R193674:193678 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193667:193669 Coq.Init.Datatypes <> snd def
R193671:193671 CertiOS.framework.proof.lemmasfortoptheo <> A var
R193661:193664 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R193465:193467 Coq.Init.Logic <> :type_scope:x_'='_x not
R193459:193462 Coq.Init.Datatypes <> Some constr
R193464:193464 CertiOS.framework.proof.lemmasfortoptheo <> r var
R193468:193476 CertiOS.framework.proof.auxdef <> BuildRetA def
R193519:193525 CertiOS.framework.logic.inferules <> init_lg def
R193515:193517 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R193509:193513 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193507:193507 CertiOS.framework.proof.lemmasfortoptheo <> G var
R193504:193505 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R193496:193496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193499:193499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193502:193502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193497:193498 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193500:193501 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193494:193494 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193479:193481 Coq.Init.Datatypes <> fst def
R193484:193486 Coq.Init.Datatypes <> fst def
R193488:193490 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193386:193388 Coq.Init.Logic <> :type_scope:x_'='_x not
R193380:193383 Coq.Init.Datatypes <> Some constr
R193385:193385 CertiOS.framework.proof.lemmasfortoptheo <> p var
R193389:193397 CertiOS.framework.proof.auxdef <> BuildPreA def
R193440:193446 CertiOS.framework.logic.inferules <> init_lg def
R193436:193438 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R193430:193434 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193428:193428 CertiOS.framework.proof.lemmasfortoptheo <> G var
R193425:193426 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R193417:193417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193420:193420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193423:193423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193418:193419 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193421:193422 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193415:193415 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193400:193402 Coq.Init.Datatypes <> fst def
R193405:193407 Coq.Init.Datatypes <> fst def
R193409:193411 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193352:193354 Coq.Init.Logic <> :type_scope:x_'='_x not
R193338:193340 Coq.Init.Datatypes <> fst def
R193343:193345 Coq.Init.Datatypes <> fst def
R193347:193347 CertiOS.framework.proof.lemmasfortoptheo <> A var
R193351:193351 CertiOS.framework.proof.lemmasfortoptheo <> f var
R193355:193358 Coq.Init.Datatypes <> Some constr
R193360:193360 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193363:193363 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193366:193366 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R193361:193362 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R193364:193365 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R193220:193229 CertiOS.framework.proof.simulation <> WFFuncsSim def
R193266:193266 CertiOS.framework.proof.lemmasfortoptheo <> I var
R193260:193264 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193253:193255 Coq.Init.Datatypes <> snd def
R193257:193257 CertiOS.framework.proof.lemmasfortoptheo <> A var
R193247:193250 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R193232:193234 Coq.Init.Datatypes <> snd def
R193237:193239 Coq.Init.Datatypes <> fst def
R193241:193243 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R193182:193186 CertiOS.framework.logic.inferules <> GoodI def
R193198:193202 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R193191:193193 Coq.Init.Datatypes <> snd def
R193195:193195 CertiOS.framework.proof.lemmasfortoptheo <> A var
R193188:193188 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194350:194360 CertiOS.framework.proof.simulation <> MethSimAsrt def
R194373:194391 CertiOS.framework.proof.soundness <> MethSim_to_Methsim' thm
R194373:194391 CertiOS.framework.proof.soundness <> MethSim_to_Methsim' thm
prf 194415:194424 <> IntMethSim
R194443:194448 CertiOS.framework.model.language <> oscode def
R194454:194459 CertiOS.framework.model.language <> osspec def
R194503:194510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194511:194519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194567:194582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194583:194591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194962:194997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195382:195388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195008:195010 CertiOS.framework.model.language <> hid def
R195078:195103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195371:195381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195104:195111 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R195124:195138 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R195114:195118 CertiOS.framework.model.language <> stmts ind
R195159:195176 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R195150:195152 Coq.Init.Logic <> :type_scope:x_'='_x not
R195140:195142 Coq.Init.Datatypes <> snd def
R195144:195146 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R195149:195149 CertiOS.framework.proof.lemmasfortoptheo <> i var
R195153:195156 Coq.Init.Datatypes <> Some constr
R195158:195158 CertiOS.framework.proof.lemmasfortoptheo <> s var
R195226:195243 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R195178:195180 Coq.Init.Logic <> :type_scope:x_'='_x not
R195177:195177 CertiOS.framework.proof.lemmasfortoptheo <> p var
R195181:195188 CertiOS.framework.proof.auxdef <> ipreasrt def
R195224:195225 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R195220:195222 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R195214:195218 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R195212:195212 CertiOS.framework.proof.lemmasfortoptheo <> G var
R195210:195210 CertiOS.framework.proof.lemmasfortoptheo <> I var
R195203:195207 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R195199:195200 CertiOS.framework.proof.lemmasfortoptheo <> si var
R195192:195197 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R195190:195190 CertiOS.framework.proof.lemmasfortoptheo <> i var
R195285:195301 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R195245:195247 Coq.Init.Logic <> :type_scope:x_'='_x not
R195244:195244 CertiOS.framework.proof.lemmasfortoptheo <> r var
R195248:195255 CertiOS.framework.proof.auxdef <> iretasrt def
R195283:195284 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R195279:195281 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R195273:195277 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R195271:195271 CertiOS.framework.proof.lemmasfortoptheo <> G var
R195269:195269 CertiOS.framework.proof.lemmasfortoptheo <> I var
R195266:195267 CertiOS.framework.proof.lemmasfortoptheo <> si var
R195259:195264 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R195257:195257 CertiOS.framework.proof.lemmasfortoptheo <> i var
R195302:195312 CertiOS.framework.proof.simulation <> MethSimAsrt def
R195368:195370 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R195361:195366 CertiOS.framework.logic.assertion <> Afalse constr
R195359:195359 CertiOS.framework.proof.lemmasfortoptheo <> s var
R195357:195357 CertiOS.framework.proof.lemmasfortoptheo <> p var
R195355:195355 CertiOS.framework.proof.lemmasfortoptheo <> r var
R195346:195353 CertiOS.framework.proof.auxdef <> retfalse def
R195344:195344 CertiOS.framework.proof.lemmasfortoptheo <> I var
R195338:195342 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R195331:195333 Coq.Init.Datatypes <> snd def
R195335:195335 CertiOS.framework.proof.lemmasfortoptheo <> A var
R195315:195317 Coq.Init.Datatypes <> snd def
R195320:195322 Coq.Init.Datatypes <> fst def
R195324:195326 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R195065:195067 Coq.Init.Logic <> :type_scope:x_'='_x not
R195051:195053 Coq.Init.Datatypes <> snd def
R195056:195058 Coq.Init.Datatypes <> fst def
R195060:195060 CertiOS.framework.proof.lemmasfortoptheo <> A var
R195064:195064 CertiOS.framework.proof.lemmasfortoptheo <> i var
R195068:195071 Coq.Init.Datatypes <> Some constr
R195073:195077 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R194602:194604 CertiOS.framework.model.language <> hid def
R194671:194696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194951:194961 Coq.Init.Logic <> :type_scope:x_'->'_x not
R194697:194704 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R194717:194731 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R194707:194711 CertiOS.framework.model.language <> stmts ind
R194752:194769 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R194743:194745 Coq.Init.Logic <> :type_scope:x_'='_x not
R194733:194735 Coq.Init.Datatypes <> snd def
R194737:194739 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R194742:194742 CertiOS.framework.proof.lemmasfortoptheo <> i var
R194746:194749 Coq.Init.Datatypes <> Some constr
R194751:194751 CertiOS.framework.proof.lemmasfortoptheo <> s var
R194820:194837 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R194771:194773 Coq.Init.Logic <> :type_scope:x_'='_x not
R194770:194770 CertiOS.framework.proof.lemmasfortoptheo <> p var
R194774:194781 CertiOS.framework.proof.auxdef <> ipreasrt def
R194818:194819 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R194814:194816 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R194808:194812 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194806:194806 CertiOS.framework.proof.lemmasfortoptheo <> G var
R194804:194804 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194796:194800 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R194792:194793 CertiOS.framework.proof.lemmasfortoptheo <> si var
R194785:194790 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R194783:194783 CertiOS.framework.proof.lemmasfortoptheo <> i var
R194879:194895 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R194839:194841 Coq.Init.Logic <> :type_scope:x_'='_x not
R194838:194838 CertiOS.framework.proof.lemmasfortoptheo <> r var
R194842:194849 CertiOS.framework.proof.auxdef <> iretasrt def
R194877:194878 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R194873:194875 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R194867:194871 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194865:194865 CertiOS.framework.proof.lemmasfortoptheo <> G var
R194863:194863 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194860:194861 CertiOS.framework.proof.lemmasfortoptheo <> si var
R194853:194858 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R194851:194851 CertiOS.framework.proof.lemmasfortoptheo <> i var
R194896:194903 CertiOS.framework.logic.inferules <> InfRules ind
R194948:194950 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R194941:194946 CertiOS.framework.logic.assertion <> Afalse constr
R194939:194939 CertiOS.framework.proof.lemmasfortoptheo <> s var
R194937:194937 CertiOS.framework.proof.lemmasfortoptheo <> p var
R194935:194935 CertiOS.framework.proof.lemmasfortoptheo <> r var
R194926:194933 CertiOS.framework.proof.auxdef <> retfalse def
R194924:194924 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194918:194922 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194911:194913 Coq.Init.Datatypes <> snd def
R194915:194915 CertiOS.framework.proof.lemmasfortoptheo <> A var
R194905:194908 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R194658:194660 Coq.Init.Logic <> :type_scope:x_'='_x not
R194644:194646 Coq.Init.Datatypes <> snd def
R194649:194651 Coq.Init.Datatypes <> fst def
R194653:194653 CertiOS.framework.proof.lemmasfortoptheo <> A var
R194657:194657 CertiOS.framework.proof.lemmasfortoptheo <> i var
R194661:194664 Coq.Init.Datatypes <> Some constr
R194666:194670 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R194520:194529 CertiOS.framework.proof.simulation <> WFFuncsSim def
R194566:194566 CertiOS.framework.proof.lemmasfortoptheo <> I var
R194560:194564 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194553:194555 Coq.Init.Datatypes <> snd def
R194557:194557 CertiOS.framework.proof.lemmasfortoptheo <> A var
R194547:194550 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R194532:194534 Coq.Init.Datatypes <> snd def
R194537:194539 Coq.Init.Datatypes <> fst def
R194541:194543 CertiOS.framework.proof.lemmasfortoptheo <> OS1 var
R194482:194486 CertiOS.framework.logic.inferules <> GoodI def
R194498:194502 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R194491:194493 Coq.Init.Datatypes <> snd def
R194495:194495 CertiOS.framework.proof.lemmasfortoptheo <> A var
R194488:194488 CertiOS.framework.proof.lemmasfortoptheo <> I var
R195534:195544 CertiOS.framework.proof.simulation <> MethSimAsrt def
R195567:195585 CertiOS.framework.proof.soundness <> MethSim_to_Methsim' thm
R195567:195585 CertiOS.framework.proof.soundness <> MethSim_to_Methsim' thm
prf 195612:195628 <> dladd_revlcons_eq
R195656:195658 Coq.Init.Logic <> :type_scope:x_'='_x not
R195645:195649 CertiOS.framework.proof.auxdef <> dladd def
R195654:195655 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R195651:195652 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R195659:195666 CertiOS.framework.model.opsem <> revlcons def
R195671:195672 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R195668:195669 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
prf 195759:195769 <> r_lift_rule
R195892:195916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195960:195984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R196028:196053 Coq.Init.Logic <> :type_scope:x_'->'_x not
R196097:196121 Coq.Init.Logic <> :type_scope:x_'->'_x not
R196181:196242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R196243:196244 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196249:196250 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196253:196254 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196260:196261 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196263:196264 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196266:196267 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196274:196277 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196281:196283 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196285:196287 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196289:196291 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196298:196299 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196245:196248 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R196251:196252 CertiOS.framework.proof.lemmasfortoptheo <> sd var
R196255:196259 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R196262:196262 CertiOS.framework.proof.lemmasfortoptheo <> I var
R196265:196265 CertiOS.framework.proof.lemmasfortoptheo <> r var
R196268:196273 CertiOS.framework.logic.assertion <> Afalse constr
R196284:196284 CertiOS.framework.proof.lemmasfortoptheo <> p var
R196288:196288 CertiOS.framework.proof.lemmasfortoptheo <> s var
R196292:196297 CertiOS.framework.logic.assertion <> Afalse constr
R196278:196280 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R196122:196123 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196128:196129 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196132:196133 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196139:196140 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196142:196143 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196146:196147 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196154:196157 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196161:196163 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196166:196168 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196170:196172 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196179:196180 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R196124:196127 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R196130:196131 CertiOS.framework.proof.lemmasfortoptheo <> sd var
R196134:196138 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R196141:196141 CertiOS.framework.proof.lemmasfortoptheo <> I var
R196144:196145 CertiOS.framework.proof.lemmasfortoptheo <> r' var
R196148:196153 CertiOS.framework.logic.assertion <> Afalse constr
R196164:196165 CertiOS.framework.proof.lemmasfortoptheo <> p' var
R196169:196169 CertiOS.framework.proof.lemmasfortoptheo <> s var
R196173:196178 CertiOS.framework.logic.assertion <> Afalse constr
R196158:196160 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R196061:196063 Coq.Init.Logic <> :type_scope:x_'='_x not
R196054:196057 Coq.Init.Datatypes <> Some constr
R196059:196060 CertiOS.framework.proof.lemmasfortoptheo <> p' var
R196064:196073 CertiOS.framework.logic.inferules <> BuildPreA' def
R196095:196096 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R196091:196093 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R196085:196089 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R196082:196083 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R196079:196080 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R196077:196077 CertiOS.framework.proof.lemmasfortoptheo <> f var
R196075:196075 CertiOS.framework.proof.lemmasfortoptheo <> P var
R195992:195994 Coq.Init.Logic <> :type_scope:x_'='_x not
R195985:195988 Coq.Init.Datatypes <> Some constr
R195990:195991 CertiOS.framework.proof.lemmasfortoptheo <> r' var
R195995:196004 CertiOS.framework.logic.inferules <> BuildRetA' def
R196026:196027 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R196022:196024 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R196016:196020 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R196013:196014 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R196010:196011 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R196008:196008 CertiOS.framework.proof.lemmasfortoptheo <> f var
R196006:196006 CertiOS.framework.proof.lemmasfortoptheo <> P var
R195923:195925 Coq.Init.Logic <> :type_scope:x_'='_x not
R195917:195920 Coq.Init.Datatypes <> Some constr
R195922:195922 CertiOS.framework.proof.lemmasfortoptheo <> p var
R195926:195934 CertiOS.framework.proof.auxdef <> BuildPreA def
R195958:195959 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R195954:195956 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R195948:195952 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R195946:195946 CertiOS.framework.proof.lemmasfortoptheo <> G var
R195943:195944 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R195940:195941 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R195938:195938 CertiOS.framework.proof.lemmasfortoptheo <> f var
R195936:195936 CertiOS.framework.proof.lemmasfortoptheo <> P var
R195855:195857 Coq.Init.Logic <> :type_scope:x_'='_x not
R195849:195852 Coq.Init.Datatypes <> Some constr
R195854:195854 CertiOS.framework.proof.lemmasfortoptheo <> r var
R195858:195866 CertiOS.framework.proof.auxdef <> BuildRetA def
R195890:195891 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R195886:195888 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R195880:195884 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R195878:195878 CertiOS.framework.proof.lemmasfortoptheo <> G var
R195875:195876 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R195872:195873 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R195870:195870 CertiOS.framework.proof.lemmasfortoptheo <> f var
R195868:195868 CertiOS.framework.proof.lemmasfortoptheo <> P var
R196497:196513 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R196497:196513 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R196497:196513 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R196534:196539 CertiOS.framework.logic.inferules <> buildp def
R196542:196549 CertiOS.framework.model.opsem <> revlcons def
R196534:196539 CertiOS.framework.logic.inferules <> buildp def
R196542:196549 CertiOS.framework.model.opsem <> revlcons def
R196584:196594 CertiOS.framework.logic.inferules <> dl_vl_match def
R196600:196602 Coq.Lists.List <> rev def
R196584:196594 CertiOS.framework.logic.inferules <> dl_vl_match def
R196600:196602 Coq.Lists.List <> rev def
R196693:196698 CertiOS.framework.logic.inferules <> buildq def
R196701:196708 CertiOS.framework.model.opsem <> revlcons def
R196693:196698 CertiOS.framework.logic.inferules <> buildq def
R196701:196708 CertiOS.framework.model.opsem <> revlcons def
R196811:196828 CertiOS.framework.logic.inferules <> genv_introret_rule constr
R196811:196828 CertiOS.framework.logic.inferules <> genv_introret_rule constr
prf 196855:196865 <> bpr'_to_bpr
R196882:196887 CertiOS.framework.model.language <> osspec def
R196927:196952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197507:197582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R198142:198165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197593:197595 CertiOS.framework.model.language <> fid def
R197676:197705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197772:197800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197867:197925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R198114:198141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197926:197933 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197935:197935 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197938:197938 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197941:197941 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197943:197974 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R198013:198015 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R197991:197993 Coq.Init.Logic <> :type_scope:x_'='_x not
R197976:197983 CertiOS.framework.proof.auxdef <> get_afun def
R197985:197987 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197990:197990 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197994:197997 Coq.Init.Datatypes <> Some constr
R197999:197999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198001:198002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198005:198006 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198009:198010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198012:198012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198027:198060 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R198016:198024 CertiOS.framework.logic.inferules <> GoodStmt' def
R198061:198068 CertiOS.framework.logic.inferules <> InfRules ind
R198111:198113 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R198104:198109 CertiOS.framework.logic.assertion <> Afalse constr
R198100:198100 CertiOS.framework.proof.lemmasfortoptheo <> p var
R198093:198098 CertiOS.framework.logic.assertion <> Afalse constr
R198091:198091 CertiOS.framework.proof.lemmasfortoptheo <> r var
R198089:198089 CertiOS.framework.proof.lemmasfortoptheo <> I var
R198083:198087 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R198076:198078 Coq.Init.Datatypes <> snd def
R198080:198080 CertiOS.framework.proof.lemmasfortoptheo <> A var
R198070:198073 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R197807:197809 Coq.Init.Logic <> :type_scope:x_'='_x not
R197801:197804 Coq.Init.Datatypes <> Some constr
R197806:197806 CertiOS.framework.proof.lemmasfortoptheo <> r var
R197810:197818 CertiOS.framework.proof.auxdef <> BuildRetA def
R197860:197866 CertiOS.framework.logic.inferules <> init_lg def
R197856:197858 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R197850:197854 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R197848:197848 CertiOS.framework.proof.lemmasfortoptheo <> G var
R197845:197846 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R197837:197837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197840:197840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197843:197843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197838:197839 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197841:197842 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R197835:197835 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197821:197828 CertiOS.framework.proof.auxdef <> get_afun def
R197830:197832 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197712:197714 Coq.Init.Logic <> :type_scope:x_'='_x not
R197706:197709 Coq.Init.Datatypes <> Some constr
R197711:197711 CertiOS.framework.proof.lemmasfortoptheo <> p var
R197715:197723 CertiOS.framework.proof.auxdef <> BuildPreA def
R197765:197771 CertiOS.framework.logic.inferules <> init_lg def
R197761:197763 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R197755:197759 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R197753:197753 CertiOS.framework.proof.lemmasfortoptheo <> G var
R197750:197751 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R197742:197742 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197745:197745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197748:197748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197743:197744 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197746:197747 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R197740:197740 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197726:197733 CertiOS.framework.proof.auxdef <> get_afun def
R197735:197737 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197661:197663 Coq.Init.Logic <> :type_scope:x_'='_x not
R197647:197649 Coq.Init.Datatypes <> fst def
R197652:197654 Coq.Init.Datatypes <> fst def
R197656:197656 CertiOS.framework.proof.lemmasfortoptheo <> A var
R197660:197660 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197664:197667 Coq.Init.Datatypes <> Some constr
R197669:197669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197672:197672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197675:197675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197670:197671 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197673:197674 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R196963:196965 CertiOS.framework.model.language <> fid def
R197043:197072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197138:197166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197232:197290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197479:197506 Coq.Init.Logic <> :type_scope:x_'->'_x not
R197291:197298 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197300:197300 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197303:197303 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197306:197306 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197308:197339 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R197378:197380 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R197356:197358 Coq.Init.Logic <> :type_scope:x_'='_x not
R197341:197348 CertiOS.framework.proof.auxdef <> get_afun def
R197350:197352 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197355:197355 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197359:197362 Coq.Init.Datatypes <> Some constr
R197364:197364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197366:197367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197370:197371 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197374:197375 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197377:197377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197392:197425 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R197381:197389 CertiOS.framework.logic.inferules <> GoodStmt' def
R197426:197433 CertiOS.framework.logic.inferules <> InfRules ind
R197476:197478 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R197469:197474 CertiOS.framework.logic.assertion <> Afalse constr
R197465:197465 CertiOS.framework.proof.lemmasfortoptheo <> p var
R197458:197463 CertiOS.framework.logic.assertion <> Afalse constr
R197456:197456 CertiOS.framework.proof.lemmasfortoptheo <> r var
R197454:197454 CertiOS.framework.proof.lemmasfortoptheo <> I var
R197448:197452 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R197441:197443 Coq.Init.Datatypes <> snd def
R197445:197445 CertiOS.framework.proof.lemmasfortoptheo <> A var
R197435:197438 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R197173:197175 Coq.Init.Logic <> :type_scope:x_'='_x not
R197167:197170 Coq.Init.Datatypes <> Some constr
R197172:197172 CertiOS.framework.proof.lemmasfortoptheo <> r var
R197176:197185 CertiOS.framework.logic.inferules <> BuildRetA' def
R197225:197231 CertiOS.framework.logic.inferules <> init_lg def
R197221:197223 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R197215:197219 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R197212:197213 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R197204:197204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197207:197207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197210:197210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197205:197206 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197208:197209 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R197202:197202 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197188:197195 CertiOS.framework.proof.auxdef <> get_afun def
R197197:197199 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197079:197081 Coq.Init.Logic <> :type_scope:x_'='_x not
R197073:197076 Coq.Init.Datatypes <> Some constr
R197078:197078 CertiOS.framework.proof.lemmasfortoptheo <> p var
R197082:197091 CertiOS.framework.logic.inferules <> BuildPreA' def
R197131:197137 CertiOS.framework.logic.inferules <> init_lg def
R197127:197129 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R197121:197125 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R197118:197119 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R197110:197110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197113:197113 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197116:197116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197111:197112 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197114:197115 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R197108:197108 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197094:197101 CertiOS.framework.proof.auxdef <> get_afun def
R197103:197105 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R197028:197030 Coq.Init.Logic <> :type_scope:x_'='_x not
R197014:197016 Coq.Init.Datatypes <> fst def
R197019:197021 Coq.Init.Datatypes <> fst def
R197023:197023 CertiOS.framework.proof.lemmasfortoptheo <> A var
R197027:197027 CertiOS.framework.proof.lemmasfortoptheo <> f var
R197031:197034 Coq.Init.Datatypes <> Some constr
R197036:197036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197039:197039 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197042:197042 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R197037:197038 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R197040:197041 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R198201:198207 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198210:198211 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198219:198221 Coq.Init.Logic <> :type_scope:x_'='_x not
R198212:198215 Coq.Init.Datatypes <> Some constr
R198222:198231 CertiOS.framework.logic.inferules <> BuildPreA' def
R198272:198278 CertiOS.framework.logic.inferules <> init_lg def
R198250:198250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198253:198254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198257:198257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198234:198241 CertiOS.framework.proof.auxdef <> get_afun def
R198201:198207 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198210:198211 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198219:198221 Coq.Init.Logic <> :type_scope:x_'='_x not
R198212:198215 Coq.Init.Datatypes <> Some constr
R198222:198231 CertiOS.framework.logic.inferules <> BuildPreA' def
R198272:198278 CertiOS.framework.logic.inferules <> init_lg def
R198250:198250 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198253:198254 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198257:198257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198234:198241 CertiOS.framework.proof.auxdef <> get_afun def
R198324:198333 CertiOS.framework.logic.inferules <> BuildPreA' def
R198350:198357 CertiOS.framework.proof.auxdef <> get_afun def
R198350:198357 CertiOS.framework.proof.auxdef <> get_afun def
R198425:198441 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198425:198441 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198425:198441 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198457:198467 CertiOS.framework.logic.inferules <> dl_vl_match def
R198473:198475 Coq.Lists.List <> rev def
R198457:198467 CertiOS.framework.logic.inferules <> dl_vl_match def
R198473:198475 Coq.Lists.List <> rev def
R198505:198510 CertiOS.framework.logic.inferules <> buildp def
R198513:198520 CertiOS.framework.model.opsem <> revlcons def
R198505:198510 CertiOS.framework.logic.inferules <> buildp def
R198513:198520 CertiOS.framework.model.opsem <> revlcons def
R198625:198631 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198634:198635 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198643:198645 Coq.Init.Logic <> :type_scope:x_'='_x not
R198636:198639 Coq.Init.Datatypes <> Some constr
R198646:198655 CertiOS.framework.logic.inferules <> BuildRetA' def
R198696:198702 CertiOS.framework.logic.inferules <> init_lg def
R198674:198674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198677:198678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198681:198681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198658:198665 CertiOS.framework.proof.auxdef <> get_afun def
R198625:198631 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198634:198635 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R198643:198645 Coq.Init.Logic <> :type_scope:x_'='_x not
R198636:198639 Coq.Init.Datatypes <> Some constr
R198646:198655 CertiOS.framework.logic.inferules <> BuildRetA' def
R198696:198702 CertiOS.framework.logic.inferules <> init_lg def
R198674:198674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198677:198678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198681:198681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R198658:198665 CertiOS.framework.proof.auxdef <> get_afun def
R198748:198757 CertiOS.framework.logic.inferules <> BuildRetA' def
R198774:198781 CertiOS.framework.proof.auxdef <> get_afun def
R198774:198781 CertiOS.framework.proof.auxdef <> get_afun def
R198847:198863 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198847:198863 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198847:198863 CertiOS.framework.proof.lemmasfortoptheo <> dladd_revlcons_eq thm
R198879:198884 CertiOS.framework.logic.inferules <> buildq def
R198887:198894 CertiOS.framework.model.opsem <> revlcons def
R198879:198884 CertiOS.framework.logic.inferules <> buildq def
R198887:198894 CertiOS.framework.model.opsem <> revlcons def
R199060:199062 Coq.Init.Logic <> :type_scope:x_'='_x not
R199053:199056 Coq.Init.Datatypes <> Some constr
R199063:199072 CertiOS.framework.logic.inferules <> BuildRetA' def
R199113:199119 CertiOS.framework.logic.inferules <> init_lg def
R199091:199091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199094:199094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199097:199097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199075:199082 CertiOS.framework.proof.auxdef <> get_afun def
R199060:199062 Coq.Init.Logic <> :type_scope:x_'='_x not
R199053:199056 Coq.Init.Datatypes <> Some constr
R199063:199072 CertiOS.framework.logic.inferules <> BuildRetA' def
R199113:199119 CertiOS.framework.logic.inferules <> init_lg def
R199091:199091 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199094:199094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199097:199097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R199075:199082 CertiOS.framework.proof.auxdef <> get_afun def
R199246:199256 CertiOS.framework.proof.lemmasfortoptheo <> r_lift_rule thm
R199246:199256 CertiOS.framework.proof.lemmasfortoptheo <> r_lift_rule thm
prf 199281:199295 <> int_bpr'_to_bpr
R199316:199321 CertiOS.framework.model.language <> osspec def
R199380:199388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199389:199389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199833:199851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200218:200222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199862:199864 CertiOS.framework.model.language <> hid def
R199929:199954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200207:200217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199955:199962 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R199975:199989 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R199965:199969 CertiOS.framework.model.language <> stmts ind
R200015:200032 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R200006:200008 Coq.Init.Logic <> :type_scope:x_'='_x not
R199991:199998 CertiOS.framework.proof.auxdef <> get_lint def
R200000:200002 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R200005:200005 CertiOS.framework.proof.lemmasfortoptheo <> i var
R200009:200012 Coq.Init.Datatypes <> Some constr
R200014:200014 CertiOS.framework.proof.lemmasfortoptheo <> s var
R200081:200097 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R200034:200036 Coq.Init.Logic <> :type_scope:x_'='_x not
R200033:200033 CertiOS.framework.proof.lemmasfortoptheo <> p var
R200037:200044 CertiOS.framework.proof.auxdef <> ipreasrt def
R200079:200080 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R200077:200077 CertiOS.framework.proof.lemmasfortoptheo <> t var
R200071:200075 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R200069:200069 CertiOS.framework.proof.lemmasfortoptheo <> G var
R200067:200067 CertiOS.framework.proof.lemmasfortoptheo <> I var
R200059:200063 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R200055:200056 CertiOS.framework.proof.lemmasfortoptheo <> si var
R200048:200053 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R200046:200046 CertiOS.framework.proof.lemmasfortoptheo <> i var
R200137:200153 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R200099:200101 Coq.Init.Logic <> :type_scope:x_'='_x not
R200098:200098 CertiOS.framework.proof.lemmasfortoptheo <> r var
R200102:200109 CertiOS.framework.proof.auxdef <> iretasrt def
R200135:200136 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R200133:200133 CertiOS.framework.proof.lemmasfortoptheo <> t var
R200127:200131 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R200125:200125 CertiOS.framework.proof.lemmasfortoptheo <> G var
R200123:200123 CertiOS.framework.proof.lemmasfortoptheo <> I var
R200120:200121 CertiOS.framework.proof.lemmasfortoptheo <> si var
R200113:200118 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R200111:200111 CertiOS.framework.proof.lemmasfortoptheo <> i var
R200154:200161 CertiOS.framework.logic.inferules <> InfRules ind
R200206:200206 CertiOS.framework.proof.lemmasfortoptheo <> t var
R200199:200204 CertiOS.framework.logic.assertion <> Afalse constr
R200197:200197 CertiOS.framework.proof.lemmasfortoptheo <> s var
R200195:200195 CertiOS.framework.proof.lemmasfortoptheo <> p var
R200193:200193 CertiOS.framework.proof.lemmasfortoptheo <> r var
R200184:200191 CertiOS.framework.proof.auxdef <> retfalse def
R200182:200182 CertiOS.framework.proof.lemmasfortoptheo <> I var
R200176:200180 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R200169:200171 Coq.Init.Datatypes <> snd def
R200173:200173 CertiOS.framework.proof.lemmasfortoptheo <> A var
R200163:200166 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R199916:199918 Coq.Init.Logic <> :type_scope:x_'='_x not
R199902:199904 Coq.Init.Datatypes <> snd def
R199907:199909 Coq.Init.Datatypes <> fst def
R199911:199911 CertiOS.framework.proof.lemmasfortoptheo <> A var
R199915:199915 CertiOS.framework.proof.lemmasfortoptheo <> i var
R199919:199922 Coq.Init.Datatypes <> Some constr
R199924:199928 CertiOS.framework.proof.lemmasfortoptheo <> ispec var
R199402:199404 Coq.Init.Datatypes <> nat ind
R199417:199419 CertiOS.framework.model.language <> isr def
R199428:199429 CertiOS.framework.model.language <> is def
R199453:199456 CertiOS.framework.logic.assertion <> asrt ind
R199464:199466 CertiOS.framework.auxlibs.Modules <> tid def
R199475:199478 Coq.Init.Datatypes <> list ind
R199480:199487 CertiOS.framework.logic.assertion <> logicvar ind
R199559:199570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199631:199642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199643:199649 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R199651:199662 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R199688:199701 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R199679:199681 Coq.Init.Logic <> :type_scope:x_'='_x not
R199664:199671 CertiOS.framework.proof.auxdef <> get_lint def
R199673:199675 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R199678:199678 CertiOS.framework.proof.lemmasfortoptheo <> i var
R199682:199685 Coq.Init.Datatypes <> Some constr
R199702:199703 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199708:199709 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199715:199716 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199722:199723 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199725:199726 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199745:199746 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199748:199752 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199754:199756 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199758:199760 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199762:199824 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199831:199832 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R199704:199707 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R199710:199712 Coq.Init.Datatypes <> snd def
R199714:199714 CertiOS.framework.proof.lemmasfortoptheo <> A var
R199717:199721 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R199724:199724 CertiOS.framework.proof.lemmasfortoptheo <> I var
R199727:199744 CertiOS.framework.logic.inferules <> retfalse def
R199747:199747 CertiOS.framework.proof.lemmasfortoptheo <> r var
R199757:199757 CertiOS.framework.proof.lemmasfortoptheo <> p var
R199825:199830 CertiOS.framework.logic.assertion <> Afalse constr
R199753:199753 CertiOS.framework.proof.lemmasfortoptheo <> t var
R199577:199579 Coq.Init.Logic <> :type_scope:x_'='_x not
R199571:199574 Coq.Init.Datatypes <> Some constr
R199576:199576 CertiOS.framework.proof.lemmasfortoptheo <> r var
R199580:199590 CertiOS.framework.logic.inferules <> BuildintRet def
R199629:199630 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R199627:199627 CertiOS.framework.proof.lemmasfortoptheo <> t var
R199621:199625 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R199619:199619 CertiOS.framework.proof.lemmasfortoptheo <> I var
R199616:199617 CertiOS.framework.proof.lemmasfortoptheo <> si var
R199609:199614 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R199596:199598 Coq.Init.Datatypes <> snd def
R199601:199603 Coq.Init.Datatypes <> fst def
R199605:199605 CertiOS.framework.proof.lemmasfortoptheo <> A var
R199592:199592 CertiOS.framework.proof.lemmasfortoptheo <> i var
R199505:199507 Coq.Init.Logic <> :type_scope:x_'='_x not
R199499:199502 Coq.Init.Datatypes <> Some constr
R199504:199504 CertiOS.framework.proof.lemmasfortoptheo <> p var
R199508:199518 CertiOS.framework.logic.inferules <> BuildintPre def
R199557:199558 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R199555:199555 CertiOS.framework.proof.lemmasfortoptheo <> t var
R199549:199553 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R199547:199547 CertiOS.framework.proof.lemmasfortoptheo <> I var
R199544:199545 CertiOS.framework.proof.lemmasfortoptheo <> si var
R199537:199542 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R199524:199526 Coq.Init.Datatypes <> snd def
R199529:199531 Coq.Init.Datatypes <> fst def
R199533:199533 CertiOS.framework.proof.lemmasfortoptheo <> A var
R199520:199520 CertiOS.framework.proof.lemmasfortoptheo <> i var
R199343:199350 CertiOS.framework.logic.inferules <> EqDomInt def
R199368:199370 Coq.Init.Datatypes <> snd def
R199373:199375 Coq.Init.Datatypes <> fst def
R199377:199377 CertiOS.framework.proof.lemmasfortoptheo <> A var
R199353:199360 CertiOS.framework.proof.auxdef <> get_lint def
R199362:199364 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R200255:200261 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200263:200264 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200271:200273 Coq.Init.Logic <> :type_scope:x_'='_x not
R200265:200268 Coq.Init.Datatypes <> Some constr
R200274:200284 CertiOS.framework.logic.inferules <> BuildintPre def
R200289:200291 Coq.Init.Datatypes <> snd def
R200294:200296 Coq.Init.Datatypes <> fst def
R200255:200261 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200263:200264 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200271:200273 Coq.Init.Logic <> :type_scope:x_'='_x not
R200265:200268 Coq.Init.Datatypes <> Some constr
R200274:200284 CertiOS.framework.logic.inferules <> BuildintPre def
R200289:200291 Coq.Init.Datatypes <> snd def
R200294:200296 Coq.Init.Datatypes <> fst def
R200337:200347 CertiOS.framework.logic.inferules <> BuildintPre def
R200410:200416 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200418:200419 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200426:200428 Coq.Init.Logic <> :type_scope:x_'='_x not
R200420:200423 Coq.Init.Datatypes <> Some constr
R200429:200439 CertiOS.framework.logic.inferules <> BuildintRet def
R200444:200446 Coq.Init.Datatypes <> snd def
R200449:200451 Coq.Init.Datatypes <> fst def
R200410:200416 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200418:200419 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200426:200428 Coq.Init.Logic <> :type_scope:x_'='_x not
R200420:200423 Coq.Init.Datatypes <> Some constr
R200429:200439 CertiOS.framework.logic.inferules <> BuildintRet def
R200444:200446 Coq.Init.Datatypes <> snd def
R200449:200451 Coq.Init.Datatypes <> fst def
R200492:200502 CertiOS.framework.logic.inferules <> BuildintRet def
R200618:200628 CertiOS.framework.logic.inferules <> BuildintPre def
R200647:200657 CertiOS.framework.logic.inferules <> BuildintRet def
R200773:200780 CertiOS.framework.proof.auxdef <> ipreasrt def
R200782:200789 CertiOS.framework.proof.auxdef <> iretasrt def
R200802:200821 CertiOS.framework.logic.inferules <> genv_introexint_rule constr
R200802:200821 CertiOS.framework.logic.inferules <> genv_introexint_rule constr
prf 200852:200870 <> eqdomsot_get_exproj
R200906:200914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200926:200934 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200946:200954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200955:200961 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200963:200964 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R200974:200976 Coq.Init.Logic <> :type_scope:x_'='_x not
R200965:200969 CertiOS.framework.model.opsem <> projS def
R200973:200973 CertiOS.framework.proof.lemmasfortoptheo <> t var
R200971:200971 CertiOS.framework.proof.lemmasfortoptheo <> S var
R200977:200980 Coq.Init.Datatypes <> Some constr
R200935:200941 CertiOS.framework.logic.inferules <> eqdomSO def
R200945:200945 CertiOS.framework.proof.lemmasfortoptheo <> O var
R200943:200943 CertiOS.framework.proof.lemmasfortoptheo <> S var
R200915:200921 CertiOS.framework.proof.oscorrectness <> eqdomto def
R200925:200925 CertiOS.framework.proof.lemmasfortoptheo <> O var
R200923:200923 CertiOS.framework.proof.lemmasfortoptheo <> T var
R200897:200901 CertiOS.framework.auxlibs.Maps <> indom def
R200905:200905 CertiOS.framework.proof.lemmasfortoptheo <> t var
R200903:200903 CertiOS.framework.proof.lemmasfortoptheo <> T var
R201208:201214 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R201216:201217 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R201232:201234 Coq.Init.Logic <> :type_scope:x_'='_x not
R201218:201227 CertiOS.framework.model.language TcbMod get def
R201235:201238 Coq.Init.Datatypes <> Some constr
R201208:201214 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R201216:201217 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R201232:201234 Coq.Init.Logic <> :type_scope:x_'='_x not
R201218:201227 CertiOS.framework.model.language TcbMod get def
R201235:201238 Coq.Init.Datatypes <> Some constr
R201385:201385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201387:201387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201390:201390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201392:201392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201394:201394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201396:201396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201385:201385 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201387:201387 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201390:201390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201392:201392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201394:201394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201396:201396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R201432:201434 CertiOS.framework.auxlibs.Maps <> get meth
prf 201512:201522 <> init_goodis
R201569:201577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R201616:201624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R201625:201633 CertiOS.framework.proof.auxdef <> good_is_S def
R201635:201635 CertiOS.framework.proof.lemmasfortoptheo <> S var
R201578:201591 CertiOS.framework.logic.inferules <> side_condition def
R201609:201615 CertiOS.framework.logic.inferules <> init_lg def
R201604:201607 CertiOS.framework.proof.lemmasfortoptheo <> init var
R201601:201602 CertiOS.framework.proof.lemmasfortoptheo <> sd var
R201595:201599 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R201593:201593 CertiOS.framework.proof.lemmasfortoptheo <> I var
R201561:201564 CertiOS.framework.proof.lemmasfortoptheo <> init var
R201568:201568 CertiOS.framework.proof.lemmasfortoptheo <> O var
R201566:201566 CertiOS.framework.proof.lemmasfortoptheo <> S var
R201906:201910 CertiOS.framework.model.opsem <> projD def
R201935:201938 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R201931:201933 Coq.Init.Logic <> :type_scope:x_'='_x not
R201941:201944 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R201935:201938 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R201931:201933 Coq.Init.Logic <> :type_scope:x_'='_x not
R201941:201944 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R201991:202001 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R201991:202001 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R201991:202001 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R202020:202030 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R202020:202030 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R202020:202030 CertiOS.framework.auxlibs.Maps <> map_get_sig meth
R202062:202069 CertiOS.framework.logic.inferules <> init_cur def
R202088:202095 CertiOS.framework.logic.inferules <> init_rdy def
R202119:202127 CertiOS.framework.model.language <> spec_done constr
R202129:202132 Coq.Init.Datatypes <> None constr
R202119:202127 CertiOS.framework.model.language <> spec_done constr
R202129:202132 Coq.Init.Datatypes <> None constr
R202188:202199 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R202188:202199 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R202188:202199 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R202188:202199 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R202265:202268 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R202261:202263 Coq.Init.Logic <> :type_scope:x_'='_x not
R202271:202274 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R202265:202268 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R202261:202263 Coq.Init.Logic <> :type_scope:x_'='_x not
R202271:202274 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R202440:202444 CertiOS.framework.model.opsem <> projD def
R202465:202481 CertiOS.tactics.basetac.join_lib <> join_sig_get_disj thm
R202465:202481 CertiOS.tactics.basetac.join_lib <> join_sig_get_disj thm
R202522:202538 CertiOS.tactics.basetac.join_lib <> join_sig_get_disj thm
R202522:202538 CertiOS.tactics.basetac.join_lib <> join_sig_get_disj thm
R202563:202565 CertiOS.framework.auxlibs.Modules <> tid def
R202661:202669 CertiOS.framework.model.language <> spec_done constr
R202671:202674 Coq.Init.Datatypes <> None constr
R202661:202669 CertiOS.framework.model.language <> spec_done constr
R202671:202674 Coq.Init.Datatypes <> None constr
R202883:202885 Coq.Init.Logic <> :type_scope:x_'='_x not
R202849:202853 CertiOS.framework.model.opsem <> projS def
R202855:202855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202857:202858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202864:202865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202868:202869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202873:202874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202879:202879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202886:202889 Coq.Init.Datatypes <> Some constr
R202891:202891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202893:202894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202897:202898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202901:202902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202904:202905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202917:202917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202906:202906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202909:202910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202913:202914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202916:202916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202883:202885 Coq.Init.Logic <> :type_scope:x_'='_x not
R202849:202853 CertiOS.framework.model.opsem <> projS def
R202855:202855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202857:202858 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202864:202865 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202868:202869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202873:202874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202879:202879 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202886:202889 Coq.Init.Datatypes <> Some constr
R202891:202891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202893:202894 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202897:202898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202901:202902 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202904:202905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202917:202917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202906:202906 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202909:202910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202913:202914 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202916:202916 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R202943:202947 CertiOS.framework.model.opsem <> projD def
R203027:203031 CertiOS.framework.model.opsem <> projD def
R203053:203055 CertiOS.framework.auxlibs.Maps <> get meth
R203053:203055 CertiOS.framework.auxlibs.Maps <> get meth
R203111:203113 CertiOS.framework.auxlibs.Maps <> get meth
R203111:203113 CertiOS.framework.auxlibs.Maps <> get meth
R203164:203181 CertiOS.framework.proof.join_prop <> join_get_get_r_rev thm
R203164:203181 CertiOS.framework.proof.join_prop <> join_get_get_r_rev thm
R203219:203236 CertiOS.framework.proof.join_prop <> join_get_get_r_rev thm
R203219:203236 CertiOS.framework.proof.join_prop <> join_get_get_r_rev thm
R203328:203339 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R203328:203339 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R203358:203369 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
R203358:203369 CertiOS.framework.auxlibs.Maps <> map_get_sig' meth
prf 203429:203439 <> toptheorem'
R203457:203462 CertiOS.framework.model.language <> oscode def
R203468:203473 CertiOS.framework.model.language <> osspec def
R203482:203489 CertiOS.framework.logic.inferules <> InitAsrt def
R203501:203503 CertiOS.framework.logic.assertion <> Inv def
R203512:203518 CertiOS.framework.logic.assertion <> funspec def
R203569:203576 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203581:203589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203594:203681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203741:203750 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203751:203751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203862:203871 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203872:203872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203983:203992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203993:203993 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204441:204450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204451:204459 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204881:204901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204946:204954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204955:204963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R205031:205046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R205047:205055 CertiOS.framework.proof.oscorrectness <> OSCorrect def
R205063:205066 CertiOS.framework.proof.lemmasfortoptheo <> init var
R205061:205061 CertiOS.framework.proof.lemmasfortoptheo <> A var
R205057:205059 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204977:204987 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R204964:204970 CertiOS.framework.proof.auxdef <> eqdomOS def
R204976:204976 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204972:204974 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204988:205001 CertiOS.framework.logic.inferules <> side_condition def
R205024:205030 CertiOS.framework.logic.inferules <> init_lg def
R205019:205022 CertiOS.framework.proof.lemmasfortoptheo <> init var
R205012:205014 Coq.Init.Datatypes <> snd def
R205016:205016 CertiOS.framework.proof.lemmasfortoptheo <> A var
R205005:205009 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R205003:205003 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204902:204909 CertiOS.framework.logic.inferules <> WFFunEnv def
R204945:204945 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204939:204943 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204932:204934 Coq.Init.Datatypes <> snd def
R204936:204936 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204926:204929 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R204912:204919 CertiOS.framework.proof.auxdef <> get_ifun def
R204921:204923 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204470:204472 CertiOS.framework.model.language <> fid def
R204534:204546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204612:204624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204690:204714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204870:204880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204715:204722 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R204724:204724 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R204727:204727 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R204730:204730 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R204732:204746 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R204785:204787 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R204763:204765 Coq.Init.Logic <> :type_scope:x_'='_x not
R204748:204755 CertiOS.framework.proof.auxdef <> get_afun def
R204757:204759 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204762:204762 CertiOS.framework.proof.lemmasfortoptheo <> f var
R204766:204769 Coq.Init.Datatypes <> Some constr
R204771:204771 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204773:204774 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204777:204778 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204781:204782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204784:204784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204799:204815 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R204788:204796 CertiOS.framework.logic.inferules <> GoodStmt' def
R204816:204823 CertiOS.framework.logic.inferules <> InfRules ind
R204867:204869 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R204860:204865 CertiOS.framework.logic.assertion <> Afalse constr
R204856:204856 CertiOS.framework.proof.lemmasfortoptheo <> p var
R204848:204853 CertiOS.framework.logic.assertion <> Afalse constr
R204846:204846 CertiOS.framework.proof.lemmasfortoptheo <> r var
R204844:204844 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204838:204842 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204831:204833 Coq.Init.Datatypes <> snd def
R204835:204835 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204825:204828 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R204631:204633 Coq.Init.Logic <> :type_scope:x_'='_x not
R204625:204628 Coq.Init.Datatypes <> Some constr
R204630:204630 CertiOS.framework.proof.lemmasfortoptheo <> r var
R204634:204643 CertiOS.framework.logic.inferules <> BuildRetA' def
R204683:204689 CertiOS.framework.logic.inferules <> init_lg def
R204679:204681 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R204673:204677 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204670:204671 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R204662:204662 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204665:204665 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204668:204668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204663:204664 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R204666:204667 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R204660:204660 CertiOS.framework.proof.lemmasfortoptheo <> f var
R204646:204653 CertiOS.framework.proof.auxdef <> get_afun def
R204655:204657 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204553:204555 Coq.Init.Logic <> :type_scope:x_'='_x not
R204547:204550 Coq.Init.Datatypes <> Some constr
R204552:204552 CertiOS.framework.proof.lemmasfortoptheo <> p var
R204556:204565 CertiOS.framework.logic.inferules <> BuildPreA' def
R204605:204611 CertiOS.framework.logic.inferules <> init_lg def
R204601:204603 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R204595:204599 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204592:204593 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R204584:204584 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204587:204587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204590:204590 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204585:204586 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R204588:204589 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R204582:204582 CertiOS.framework.proof.lemmasfortoptheo <> f var
R204568:204575 CertiOS.framework.proof.auxdef <> get_afun def
R204577:204579 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204519:204521 Coq.Init.Logic <> :type_scope:x_'='_x not
R204505:204507 Coq.Init.Datatypes <> fst def
R204510:204512 Coq.Init.Datatypes <> fst def
R204514:204514 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204518:204518 CertiOS.framework.proof.lemmasfortoptheo <> f var
R204522:204525 Coq.Init.Datatypes <> Some constr
R204527:204527 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204530:204530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204533:204533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R204528:204529 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R204531:204532 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R204006:204008 Coq.Init.Datatypes <> nat ind
R204021:204023 CertiOS.framework.model.language <> isr def
R204032:204033 CertiOS.framework.model.language <> is def
R204057:204060 CertiOS.framework.logic.assertion <> asrt ind
R204069:204072 Coq.Init.Datatypes <> list ind
R204074:204081 CertiOS.framework.logic.assertion <> logicvar ind
R204089:204091 CertiOS.framework.auxlibs.Modules <> tid def
R204164:204175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204236:204247 Coq.Init.Logic <> :type_scope:x_'->'_x not
R204248:204254 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R204256:204267 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R204293:204306 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R204284:204286 Coq.Init.Logic <> :type_scope:x_'='_x not
R204269:204276 CertiOS.framework.proof.auxdef <> get_lint def
R204278:204280 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R204283:204283 CertiOS.framework.proof.lemmasfortoptheo <> i var
R204287:204290 Coq.Init.Datatypes <> Some constr
R204307:204308 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204313:204314 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204320:204321 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204327:204328 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204330:204331 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204350:204351 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204353:204357 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204359:204361 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204363:204365 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204367:204432 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204439:204440 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R204309:204312 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R204315:204317 Coq.Init.Datatypes <> snd def
R204319:204319 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204322:204326 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204329:204329 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204332:204349 CertiOS.framework.logic.inferules <> retfalse def
R204352:204352 CertiOS.framework.proof.lemmasfortoptheo <> r var
R204362:204362 CertiOS.framework.proof.lemmasfortoptheo <> p var
R204433:204438 CertiOS.framework.logic.assertion <> Afalse constr
R204358:204358 CertiOS.framework.proof.lemmasfortoptheo <> t var
R204182:204184 Coq.Init.Logic <> :type_scope:x_'='_x not
R204176:204179 Coq.Init.Datatypes <> Some constr
R204181:204181 CertiOS.framework.proof.lemmasfortoptheo <> r var
R204185:204195 CertiOS.framework.logic.inferules <> BuildintRet def
R204234:204235 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R204232:204232 CertiOS.framework.proof.lemmasfortoptheo <> t var
R204226:204230 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204224:204224 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204221:204222 CertiOS.framework.proof.lemmasfortoptheo <> si var
R204214:204219 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R204201:204203 Coq.Init.Datatypes <> snd def
R204206:204208 Coq.Init.Datatypes <> fst def
R204210:204210 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204197:204197 CertiOS.framework.proof.lemmasfortoptheo <> i var
R204110:204112 Coq.Init.Logic <> :type_scope:x_'='_x not
R204104:204107 Coq.Init.Datatypes <> Some constr
R204109:204109 CertiOS.framework.proof.lemmasfortoptheo <> p var
R204113:204123 CertiOS.framework.logic.inferules <> BuildintPre def
R204162:204163 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R204160:204160 CertiOS.framework.proof.lemmasfortoptheo <> t var
R204154:204158 CertiOS.framework.proof.lemmasfortoptheo <> lasrt var
R204152:204152 CertiOS.framework.proof.lemmasfortoptheo <> I var
R204149:204150 CertiOS.framework.proof.lemmasfortoptheo <> si var
R204142:204147 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R204129:204131 Coq.Init.Datatypes <> snd def
R204134:204136 Coq.Init.Datatypes <> fst def
R204138:204138 CertiOS.framework.proof.lemmasfortoptheo <> A var
R204125:204125 CertiOS.framework.proof.lemmasfortoptheo <> i var
R203929:203932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203970:203971 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R203963:203965 Coq.Init.Logic <> :type_scope:x_'='_x not
R203933:203945 CertiOS.framework.logic.inferules <> good_decllist def
R203948:203955 CertiOS.framework.model.opsem <> revlcons def
R203960:203961 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R203957:203958 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R203966:203969 Coq.Init.Datatypes <> true constr
R203972:203980 CertiOS.framework.logic.inferules <> GoodStmt' def
R203982:203982 CertiOS.framework.proof.lemmasfortoptheo <> s var
R203910:203912 Coq.Init.Logic <> :type_scope:x_'='_x not
R203894:203896 Coq.Init.Datatypes <> snd def
R203899:203901 Coq.Init.Datatypes <> fst def
R203903:203905 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203909:203909 CertiOS.framework.proof.lemmasfortoptheo <> f var
R203913:203916 Coq.Init.Datatypes <> Some constr
R203918:203918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203920:203920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203923:203923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203926:203926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203928:203928 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203919:203919 CertiOS.framework.proof.lemmasfortoptheo <> t var
R203921:203922 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R203924:203925 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R203927:203927 CertiOS.framework.proof.lemmasfortoptheo <> s var
R203808:203811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R203849:203850 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R203842:203844 Coq.Init.Logic <> :type_scope:x_'='_x not
R203812:203824 CertiOS.framework.logic.inferules <> good_decllist def
R203827:203834 CertiOS.framework.model.opsem <> revlcons def
R203839:203840 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R203836:203837 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R203845:203848 Coq.Init.Datatypes <> true constr
R203851:203859 CertiOS.framework.logic.inferules <> GoodStmt' def
R203861:203861 CertiOS.framework.proof.lemmasfortoptheo <> s var
R203789:203791 Coq.Init.Logic <> :type_scope:x_'='_x not
R203773:203775 Coq.Init.Datatypes <> fst def
R203778:203780 Coq.Init.Datatypes <> fst def
R203782:203784 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203788:203788 CertiOS.framework.proof.lemmasfortoptheo <> f var
R203792:203795 Coq.Init.Datatypes <> Some constr
R203797:203797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203799:203799 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203802:203802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203805:203805 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203807:203807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R203798:203798 CertiOS.framework.proof.lemmasfortoptheo <> t var
R203800:203801 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R203803:203804 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R203806:203806 CertiOS.framework.proof.lemmasfortoptheo <> s var
R203682:203695 CertiOS.framework.proof.auxdef <> no_call_api_os def
R203728:203735 CertiOS.framework.proof.auxdef <> get_lint def
R203737:203739 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203713:203720 CertiOS.framework.proof.auxdef <> get_ifun def
R203722:203724 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203698:203705 CertiOS.framework.proof.auxdef <> get_afun def
R203707:203709 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203590:203593 Coq.Init.Logic <> True ind
R203577:203580 Coq.Init.Logic <> True ind
R203527:203537 CertiOS.framework.proof.auxdef <> no_fun_same def
R203556:203563 CertiOS.framework.proof.auxdef <> get_ifun def
R203565:203567 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R203540:203547 CertiOS.framework.proof.auxdef <> get_afun def
R203549:203551 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R205188:205196 CertiOS.framework.proof.oscorrectness <> OSCorrect def
R205239:205248 CertiOS.framework.proof.oscorrectness <> WellClient def
R205295:205312 CertiOS.framework.proof.oscorrectness <> progsim_imply_eref thm
R205295:205312 CertiOS.framework.proof.oscorrectness <> progsim_imply_eref thm
R205325:205346 CertiOS.framework.proof.oscorrectness <> prog_sim def
R205384:205393 CertiOS.framework.proof.lemmasfortoptheo <> tsimtopsim thm
R205384:205393 CertiOS.framework.proof.lemmasfortoptheo <> tsimtopsim thm
R205455:205461 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R205455:205461 CertiOS.framework.proof.oscorrectness <> eqdomTO def
R205618:205624 CertiOS.framework.proof.oscorrectness <> eqdomto def
R205618:205624 CertiOS.framework.proof.oscorrectness <> eqdomto def
R205751:205761 CertiOS.framework.proof.invariant_prop <> init_partmo thm
R205751:205761 CertiOS.framework.proof.invariant_prop <> init_partmo thm
R205871:205878 CertiOS.framework.proof.auxdef <> get_afun def
R205886:205893 CertiOS.framework.proof.auxdef <> get_ifun def
R205901:205908 CertiOS.framework.proof.auxdef <> get_lint def
R205871:205878 CertiOS.framework.proof.auxdef <> get_afun def
R205886:205893 CertiOS.framework.proof.auxdef <> get_ifun def
R205901:205908 CertiOS.framework.proof.auxdef <> get_lint def
R206359:206369 CertiOS.framework.proof.lemmasfortoptheo <> init_goodis thm
R206359:206369 CertiOS.framework.proof.lemmasfortoptheo <> init_goodis thm
R206441:206449 CertiOS.framework.proof.oscorrectness <> InitTasks def
R206573:206579 CertiOS.framework.logic.inferules <> CurLINV def
R206607:206610 CertiOS.framework.logic.inferules <> satp def
R206696:206702 CertiOS.framework.logic.inferules <> init_lg def
R206734:206743 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R206734:206743 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R206765:206774 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R206765:206774 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R206854:206878 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R206854:206878 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R206896:206906 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R206896:206906 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R207234:207240 CertiOS.framework.logic.inferules <> init_lg def
R207234:207240 CertiOS.framework.logic.inferules <> init_lg def
R207253:207256 CertiOS.framework.logic.inferules <> satp def
prf 207325:207344 <> eqdomsot_get_exproj'
R207404:207414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R207426:207436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R207448:207458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R207459:207465 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R207467:207468 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R207478:207480 Coq.Init.Logic <> :type_scope:x_'='_x not
R207469:207473 CertiOS.framework.model.opsem <> projS def
R207477:207477 CertiOS.framework.proof.lemmasfortoptheo <> t var
R207475:207475 CertiOS.framework.proof.lemmasfortoptheo <> S var
R207481:207484 Coq.Init.Datatypes <> Some constr
R207437:207443 CertiOS.framework.logic.inferules <> eqdomSO def
R207447:207447 CertiOS.framework.proof.lemmasfortoptheo <> O var
R207445:207445 CertiOS.framework.proof.lemmasfortoptheo <> S var
R207415:207421 CertiOS.framework.proof.oscorrectness <> eqdomto def
R207425:207425 CertiOS.framework.proof.lemmasfortoptheo <> O var
R207423:207423 CertiOS.framework.proof.lemmasfortoptheo <> T var
R207394:207396 Coq.Init.Logic <> :type_scope:x_'='_x not
R207378:207389 CertiOS.framework.model.language TasksMod get def
R207393:207393 CertiOS.framework.proof.lemmasfortoptheo <> t var
R207391:207391 CertiOS.framework.proof.lemmasfortoptheo <> T var
R207397:207400 Coq.Init.Datatypes <> Some constr
R207402:207403 CertiOS.framework.proof.lemmasfortoptheo <> Ch var
R207524:207542 CertiOS.framework.proof.lemmasfortoptheo <> eqdomsot_get_exproj thm
R207524:207542 CertiOS.framework.proof.lemmasfortoptheo <> eqdomsot_get_exproj thm
R207524:207542 CertiOS.framework.proof.lemmasfortoptheo <> eqdomsot_get_exproj thm
R207524:207542 CertiOS.framework.proof.lemmasfortoptheo <> eqdomsot_get_exproj thm
R207736:207745 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R207736:207745 CertiOS.framework.proof.lemmasfortoptheo <> SmCTaskSim thm
R207766:207775 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R207766:207775 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R207851:207875 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R207851:207875 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R207893:207903 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R207893:207903 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R207965:207974 CertiOS.framework.proof.auxdef <> InitTaskSt def
R207987:207990 CertiOS.framework.logic.inferules <> satp def
R208058:208063 CertiOS.framework.logic.assertion <> RDYINV def
R208221:208226 CertiOS.framework.logic.inferules <> CurTid def
prf 208238:208247 <> merge_star
R208310:208320 Coq.Init.Logic <> :type_scope:x_'->'_x not
R208335:208345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R208370:208380 Coq.Init.Logic <> :type_scope:x_'->'_x not
R208405:208415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R208453:208456 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R208416:208416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208434:208434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208436:208436 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208438:208438 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208450:208450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208452:208452 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208417:208417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208419:208419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208421:208421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208433:208433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208418:208418 CertiOS.framework.proof.lemmasfortoptheo <> G var
R208420:208420 CertiOS.framework.proof.lemmasfortoptheo <> E var
R208422:208426 CertiOS.framework.auxlibs.Maps <> merge meth
R208431:208432 CertiOS.framework.proof.lemmasfortoptheo <> M2 var
R208428:208429 CertiOS.framework.proof.lemmasfortoptheo <> M1 var
R208435:208435 CertiOS.framework.proof.lemmasfortoptheo <> a var
R208437:208437 CertiOS.framework.proof.lemmasfortoptheo <> b var
R208439:208443 CertiOS.framework.auxlibs.Maps <> merge meth
R208448:208449 CertiOS.framework.proof.lemmasfortoptheo <> O2 var
R208445:208446 CertiOS.framework.proof.lemmasfortoptheo <> O1 var
R208451:208451 CertiOS.framework.proof.lemmasfortoptheo <> d var
R208458:208461 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R208457:208457 CertiOS.framework.proof.lemmasfortoptheo <> P var
R208462:208462 CertiOS.framework.proof.lemmasfortoptheo <> Q var
R208400:208403 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R208381:208381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208390:208390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208392:208392 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208394:208394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208397:208397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208399:208399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208382:208382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208384:208384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208386:208386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208389:208389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208383:208383 CertiOS.framework.proof.lemmasfortoptheo <> G var
R208385:208385 CertiOS.framework.proof.lemmasfortoptheo <> E var
R208387:208388 CertiOS.framework.proof.lemmasfortoptheo <> M2 var
R208391:208391 CertiOS.framework.proof.lemmasfortoptheo <> a var
R208393:208393 CertiOS.framework.proof.lemmasfortoptheo <> b var
R208395:208396 CertiOS.framework.proof.lemmasfortoptheo <> O2 var
R208398:208398 CertiOS.framework.proof.lemmasfortoptheo <> d var
R208404:208404 CertiOS.framework.proof.lemmasfortoptheo <> Q var
R208365:208368 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R208346:208346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208355:208355 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208357:208357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208359:208359 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208362:208362 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208364:208364 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208347:208347 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208349:208349 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208351:208351 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208354:208354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R208348:208348 CertiOS.framework.proof.lemmasfortoptheo <> G var
R208350:208350 CertiOS.framework.proof.lemmasfortoptheo <> E var
R208352:208353 CertiOS.framework.proof.lemmasfortoptheo <> M1 var
R208356:208356 CertiOS.framework.proof.lemmasfortoptheo <> a var
R208358:208358 CertiOS.framework.proof.lemmasfortoptheo <> b var
R208360:208361 CertiOS.framework.proof.lemmasfortoptheo <> O1 var
R208363:208363 CertiOS.framework.proof.lemmasfortoptheo <> d var
R208369:208369 CertiOS.framework.proof.lemmasfortoptheo <> P var
R208321:208328 CertiOS.framework.auxlibs.Maps <> disjoint def
R208333:208334 CertiOS.framework.proof.lemmasfortoptheo <> O2 var
R208330:208331 CertiOS.framework.proof.lemmasfortoptheo <> O1 var
R208296:208303 CertiOS.framework.auxlibs.Maps <> disjoint def
R208308:208309 CertiOS.framework.proof.lemmasfortoptheo <> M2 var
R208305:208306 CertiOS.framework.proof.lemmasfortoptheo <> M1 var
R208524:208528 CertiOS.framework.auxlibs.Maps <> merge meth
R208544:208548 CertiOS.framework.auxlibs.Maps <> merge meth
R208524:208528 CertiOS.framework.auxlibs.Maps <> merge meth
R208544:208548 CertiOS.framework.auxlibs.Maps <> merge meth
R208581:208595 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208581:208595 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208614:208628 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208614:208628 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208524:208528 CertiOS.framework.auxlibs.Maps <> merge meth
R208544:208548 CertiOS.framework.auxlibs.Maps <> merge meth
R208524:208528 CertiOS.framework.auxlibs.Maps <> merge meth
R208544:208548 CertiOS.framework.auxlibs.Maps <> merge meth
R208581:208595 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208581:208595 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208614:208628 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208614:208628 CertiOS.tactics.basetac.join_lib <> join_merge_disj thm
R208680:208689 CertiOS.framework.proof.lemmasfortoptheo <> merge_star thm
R208680:208689 CertiOS.framework.proof.lemmasfortoptheo <> merge_star thm
R208807:208809 Coq.Init.Logic <> :type_scope:x_'='_x not
R208810:208815 CertiOS.framework.model.language <> empisr def
R208807:208809 Coq.Init.Logic <> :type_scope:x_'='_x not
R208810:208815 CertiOS.framework.model.language <> empisr def
R208872:208877 CertiOS.framework.logic.assertion <> SWINVt def
R208897:208901 CertiOS.framework.logic.assertion <> SWINV def
R208924:208924 Coq.Init.Logic <> :type_scope:x_'='_x not
R208925:208928 Coq.Init.Datatypes <> true constr
R208924:208924 Coq.Init.Logic <> :type_scope:x_'='_x not
R208925:208928 Coq.Init.Datatypes <> true constr
R209325:209334 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R209325:209334 CertiOS.framework.proof.lemmasfortoptheo <> ApiMethSim thm
R209410:209434 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R209410:209434 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R209452:209462 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R209452:209462 CertiOS.framework.proof.lemmasfortoptheo <> bpr'_to_bpr thm
R209482:209491 CertiOS.framework.proof.lemmasfortoptheo <> IntMethSim thm
R209482:209491 CertiOS.framework.proof.lemmasfortoptheo <> IntMethSim thm
R209566:209590 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R209566:209590 CertiOS.framework.proof.soundness <> WFFunEnv_imply_WFFuncsSim thm
R209608:209622 CertiOS.framework.proof.lemmasfortoptheo <> int_bpr'_to_bpr thm
R209608:209622 CertiOS.framework.proof.lemmasfortoptheo <> int_bpr'_to_bpr thm
R209641:209648 CertiOS.framework.logic.inferules <> EqDomInt def
prf 209813:209822 <> toptheorem
R209847:209854 CertiOS.framework.logic.inferules <> InitAsrt def
R209860:209862 CertiOS.framework.logic.assertion <> Inv def
R209871:209877 CertiOS.framework.logic.assertion <> funspec def
R209931:209938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R209998:210006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210007:210007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210146:210155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210156:210156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210293:210302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210321:210328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210329:210337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210642:210664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210665:210673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211071:211085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211127:211135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211136:211144 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211210:211222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211223:211231 CertiOS.framework.proof.oscorrectness <> OSCorrect def
R211239:211242 CertiOS.framework.proof.lemmasfortoptheo <> init var
R211237:211237 CertiOS.framework.proof.lemmasfortoptheo <> A var
R211233:211235 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R211158:211169 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R211145:211151 CertiOS.framework.proof.auxdef <> eqdomOS def
R211157:211157 CertiOS.framework.proof.lemmasfortoptheo <> A var
R211153:211155 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R211170:211183 CertiOS.framework.logic.inferules <> side_condition def
R211203:211209 CertiOS.framework.logic.inferules <> init_lg def
R211198:211201 CertiOS.framework.proof.lemmasfortoptheo <> init var
R211191:211193 Coq.Init.Datatypes <> snd def
R211195:211195 CertiOS.framework.proof.lemmasfortoptheo <> A var
R211187:211188 CertiOS.framework.proof.lemmasfortoptheo <> li var
R211185:211185 CertiOS.framework.proof.lemmasfortoptheo <> I var
R211086:211093 CertiOS.framework.logic.inferules <> WFFunEnv def
R211126:211126 CertiOS.framework.proof.lemmasfortoptheo <> I var
R211123:211124 CertiOS.framework.proof.lemmasfortoptheo <> li var
R211116:211118 Coq.Init.Datatypes <> snd def
R211120:211120 CertiOS.framework.proof.lemmasfortoptheo <> A var
R211110:211113 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R211096:211103 CertiOS.framework.proof.auxdef <> get_ifun def
R211105:211107 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210684:210686 CertiOS.framework.model.language <> fid def
R210747:210759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210822:210834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210897:210922 Coq.Init.Logic <> :type_scope:x_'->'_x not
R211060:211070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210923:210930 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R210932:210932 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R210935:210935 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R210938:210938 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R210940:210954 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R210993:211009 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R210971:210973 Coq.Init.Logic <> :type_scope:x_'='_x not
R210956:210963 CertiOS.framework.proof.auxdef <> get_afun def
R210965:210967 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210970:210970 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210974:210977 Coq.Init.Datatypes <> Some constr
R210979:210979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210981:210982 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210985:210986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210989:210990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210992:210992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R211010:211017 CertiOS.framework.logic.inferules <> InfRules ind
R211057:211059 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R211050:211055 CertiOS.framework.logic.assertion <> Afalse constr
R211046:211046 CertiOS.framework.proof.lemmasfortoptheo <> p var
R211039:211044 CertiOS.framework.logic.assertion <> Afalse constr
R211037:211037 CertiOS.framework.proof.lemmasfortoptheo <> r var
R211035:211035 CertiOS.framework.proof.lemmasfortoptheo <> I var
R211032:211033 CertiOS.framework.proof.lemmasfortoptheo <> li var
R211025:211027 Coq.Init.Datatypes <> snd def
R211029:211029 CertiOS.framework.proof.lemmasfortoptheo <> A var
R211019:211022 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R210841:210843 Coq.Init.Logic <> :type_scope:x_'='_x not
R210835:210838 Coq.Init.Datatypes <> Some constr
R210840:210840 CertiOS.framework.proof.lemmasfortoptheo <> r var
R210844:210853 CertiOS.framework.logic.inferules <> BuildRetA' def
R210890:210896 CertiOS.framework.logic.inferules <> init_lg def
R210886:210888 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R210883:210884 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210880:210881 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R210872:210872 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210875:210875 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210878:210878 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210873:210874 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R210876:210877 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R210870:210870 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210856:210863 CertiOS.framework.proof.auxdef <> get_afun def
R210865:210867 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210766:210768 Coq.Init.Logic <> :type_scope:x_'='_x not
R210760:210763 Coq.Init.Datatypes <> Some constr
R210765:210765 CertiOS.framework.proof.lemmasfortoptheo <> p var
R210769:210778 CertiOS.framework.logic.inferules <> BuildPreA' def
R210815:210821 CertiOS.framework.logic.inferules <> init_lg def
R210811:210813 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R210808:210809 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210805:210806 CertiOS.framework.proof.lemmasfortoptheo <> vl var
R210797:210797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210800:210800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210803:210803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210798:210799 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R210801:210802 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R210795:210795 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210781:210788 CertiOS.framework.proof.auxdef <> get_afun def
R210790:210792 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210732:210734 Coq.Init.Logic <> :type_scope:x_'='_x not
R210718:210720 Coq.Init.Datatypes <> fst def
R210723:210725 Coq.Init.Datatypes <> fst def
R210727:210727 CertiOS.framework.proof.lemmasfortoptheo <> A var
R210731:210731 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210735:210738 Coq.Init.Datatypes <> Some constr
R210740:210740 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210743:210743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210746:210746 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210741:210742 CertiOS.framework.proof.lemmasfortoptheo <> ab var
R210744:210745 CertiOS.framework.proof.lemmasfortoptheo <> ft var
R210436:210448 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210507:210519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210520:210526 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R210528:210540 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R210566:210580 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R210557:210559 Coq.Init.Logic <> :type_scope:x_'='_x not
R210542:210549 CertiOS.framework.proof.auxdef <> get_lint def
R210551:210553 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210556:210556 CertiOS.framework.proof.lemmasfortoptheo <> i var
R210560:210563 Coq.Init.Datatypes <> Some constr
R210581:210582 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210587:210590 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210596:210598 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210601:210602 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210604:210605 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210614:210615 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210617:210620 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210624:210626 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210628:210629 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210631:210633 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210640:210641 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R210583:210586 CertiOS.framework.proof.lemmasfortoptheo <> Spec var
R210591:210593 Coq.Init.Datatypes <> snd def
R210595:210595 CertiOS.framework.proof.lemmasfortoptheo <> A var
R210599:210600 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210603:210603 CertiOS.framework.proof.lemmasfortoptheo <> I var
R210606:210613 CertiOS.framework.proof.auxdef <> retfalse def
R210616:210616 CertiOS.framework.proof.lemmasfortoptheo <> r var
R210627:210627 CertiOS.framework.proof.lemmasfortoptheo <> p var
R210634:210639 CertiOS.framework.logic.assertion <> Afalse constr
R210621:210623 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R210455:210457 Coq.Init.Logic <> :type_scope:x_'='_x not
R210449:210452 Coq.Init.Datatypes <> Some constr
R210454:210454 CertiOS.framework.proof.lemmasfortoptheo <> r var
R210458:210468 CertiOS.framework.logic.inferules <> BuildintRet def
R210505:210506 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R210501:210503 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R210498:210499 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210496:210496 CertiOS.framework.proof.lemmasfortoptheo <> I var
R210493:210494 CertiOS.framework.proof.lemmasfortoptheo <> si var
R210486:210491 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R210473:210475 Coq.Init.Datatypes <> snd def
R210478:210480 Coq.Init.Datatypes <> fst def
R210482:210482 CertiOS.framework.proof.lemmasfortoptheo <> A var
R210470:210470 CertiOS.framework.proof.lemmasfortoptheo <> i var
R210384:210386 Coq.Init.Logic <> :type_scope:x_'='_x not
R210378:210381 Coq.Init.Datatypes <> Some constr
R210383:210383 CertiOS.framework.proof.lemmasfortoptheo <> p var
R210387:210397 CertiOS.framework.logic.inferules <> BuildintPre def
R210434:210435 CertiOS.framework.proof.lemmasfortoptheo <> lg var
R210430:210432 CertiOS.framework.proof.lemmasfortoptheo <> tid var
R210427:210428 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210425:210425 CertiOS.framework.proof.lemmasfortoptheo <> I var
R210422:210423 CertiOS.framework.proof.lemmasfortoptheo <> si var
R210415:210420 CertiOS.framework.proof.lemmasfortoptheo <> isrreg var
R210402:210404 Coq.Init.Datatypes <> snd def
R210407:210409 Coq.Init.Datatypes <> fst def
R210411:210411 CertiOS.framework.proof.lemmasfortoptheo <> A var
R210399:210399 CertiOS.framework.proof.lemmasfortoptheo <> i var
R210303:210307 CertiOS.framework.logic.inferules <> GoodI def
R210319:210320 CertiOS.framework.proof.lemmasfortoptheo <> li var
R210312:210314 Coq.Init.Datatypes <> snd def
R210316:210316 CertiOS.framework.proof.lemmasfortoptheo <> A var
R210309:210309 CertiOS.framework.proof.lemmasfortoptheo <> I var
R210213:210242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210280:210281 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R210273:210275 Coq.Init.Logic <> :type_scope:x_'='_x not
R210243:210255 CertiOS.framework.logic.inferules <> good_decllist def
R210258:210265 CertiOS.framework.model.opsem <> revlcons def
R210270:210271 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R210267:210268 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R210276:210279 Coq.Init.Datatypes <> true constr
R210282:210290 CertiOS.framework.logic.inferules <> GoodStmt' def
R210292:210292 CertiOS.framework.proof.lemmasfortoptheo <> s var
R210194:210196 Coq.Init.Logic <> :type_scope:x_'='_x not
R210178:210180 Coq.Init.Datatypes <> snd def
R210183:210185 Coq.Init.Datatypes <> fst def
R210187:210189 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210193:210193 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210197:210200 Coq.Init.Datatypes <> Some constr
R210202:210202 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210204:210204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210207:210207 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210210:210210 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210212:210212 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210203:210203 CertiOS.framework.proof.lemmasfortoptheo <> t var
R210205:210206 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R210208:210209 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R210211:210211 CertiOS.framework.proof.lemmasfortoptheo <> s var
R210064:210093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R210131:210134 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R210124:210126 Coq.Init.Logic <> :type_scope:x_'='_x not
R210094:210106 CertiOS.framework.logic.inferules <> good_decllist def
R210109:210116 CertiOS.framework.model.opsem <> revlcons def
R210121:210122 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R210118:210119 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R210127:210130 Coq.Init.Datatypes <> true constr
R210135:210143 CertiOS.framework.logic.inferules <> GoodStmt' def
R210145:210145 CertiOS.framework.proof.lemmasfortoptheo <> s var
R210045:210047 Coq.Init.Logic <> :type_scope:x_'='_x not
R210029:210031 Coq.Init.Datatypes <> fst def
R210034:210036 Coq.Init.Datatypes <> fst def
R210038:210040 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R210044:210044 CertiOS.framework.proof.lemmasfortoptheo <> f var
R210048:210051 Coq.Init.Datatypes <> Some constr
R210053:210053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210055:210055 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210058:210058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210061:210061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210063:210063 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R210054:210054 CertiOS.framework.proof.lemmasfortoptheo <> t var
R210056:210057 CertiOS.framework.proof.lemmasfortoptheo <> d1 var
R210059:210060 CertiOS.framework.proof.lemmasfortoptheo <> d2 var
R210062:210062 CertiOS.framework.proof.lemmasfortoptheo <> s var
R209939:209952 CertiOS.framework.proof.auxdef <> no_call_api_os def
R209985:209992 CertiOS.framework.proof.auxdef <> get_lint def
R209994:209996 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R209970:209977 CertiOS.framework.proof.auxdef <> get_ifun def
R209979:209981 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R209955:209962 CertiOS.framework.proof.auxdef <> get_afun def
R209964:209966 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R209889:209899 CertiOS.framework.proof.auxdef <> no_fun_same def
R209918:209925 CertiOS.framework.proof.auxdef <> get_ifun def
R209927:209929 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R209902:209909 CertiOS.framework.proof.auxdef <> get_afun def
R209911:209913 CertiOS.framework.proof.lemmasfortoptheo <> osc var
R211274:211284 CertiOS.framework.proof.lemmasfortoptheo <> toptheorem' thm
R211274:211284 CertiOS.framework.proof.lemmasfortoptheo <> toptheorem' thm
R211379:211386 CertiOS.framework.proof.auxdef <> get_afun def
