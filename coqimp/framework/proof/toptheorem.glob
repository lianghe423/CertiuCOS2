DIGEST f568ad574c9c8d7a8bd1ce302ca32d14
FCertiOS.framework.proof.toptheorem
R249:259 CertiOS.framework.include_frm <> <> lib
R277:282 CertiOS.framework.proof.auxdef <> <> lib
R300:312 CertiOS.framework.proof.oscorrectness <> <> lib
R330:339 CertiOS.framework.proof.simulation <> <> lib
R357:364 CertiOS.tactics.base_tac <> <> lib
R382:395 CertiOS.tactics.sepauto.seplog_tactics <> <> lib
R413:428 CertiOS.framework.proof.lemmasfortoptheo <> <> lib
def 527:532 <> TaskOK
R548:552 CertiOS.framework.model.language <> tasks def
R560:567 CertiOS.framework.model.language <> progunit def
R575:580 CertiOS.framework.model.language <> osabst def
R601:609 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R758:758 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R590:596 CertiOS.framework.proof.oscorrectness <> eqdomto def
R600:600 CertiOS.framework.proof.toptheorem <> O var
R598:598 CertiOS.framework.proof.toptheorem <> T var
R622:630 CertiOS.framework.auxlibs.Modules tidspec A def
R638:647 CertiOS.framework.model.language CodeSpec B def
R683:693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R694:700 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R702:702 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R704:704 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R707:707 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R710:710 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R713:714 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_x_','_x not
R728:731 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R716:718 Coq.Init.Logic <> :type_scope:x_'='_x not
R715:715 CertiOS.framework.proof.toptheorem <> C var
R719:725 CertiOS.framework.model.opsem <> nilcont def
R735:737 Coq.Init.Logic <> :type_scope:x_'='_x not
R732:732 CertiOS.framework.proof.toptheorem <> p var
R738:741 Coq.Init.Datatypes <> Some constr
R743:743 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R746:747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R750:751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R754:755 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R757:757 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R674:676 Coq.Init.Logic <> :type_scope:x_'='_x not
R658:669 CertiOS.framework.model.language TasksMod get def
R673:673 CertiOS.framework.proof.toptheorem <> t var
R671:671 CertiOS.framework.proof.toptheorem <> T var
R677:680 Coq.Init.Datatypes <> Some constr
R682:682 CertiOS.framework.proof.toptheorem <> C var
def 773:781 <> good_call
R803:810 CertiOS.framework.model.language <> progunit def
R819:825 CertiOS.framework.model.language <> intunit def
R851:854 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R831:844 CertiOS.framework.proof.auxdef <> no_call_api_pu def
R849:850 CertiOS.framework.proof.toptheorem <> po var
R846:847 CertiOS.framework.proof.toptheorem <> po var
R875:878 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R855:868 CertiOS.framework.proof.auxdef <> no_call_api_pu def
R873:874 CertiOS.framework.proof.toptheorem <> po var
R870:871 CertiOS.framework.proof.toptheorem <> pi var
R900:903 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R879:893 CertiOS.framework.proof.auxdef <> no_call_api_ipu def
R898:899 CertiOS.framework.proof.toptheorem <> po var
R895:896 CertiOS.framework.proof.toptheorem <> ip var
R904:917 CertiOS.framework.proof.auxdef <> no_call_api_pu def
R922:923 CertiOS.framework.proof.toptheorem <> pi var
R919:920 CertiOS.framework.proof.toptheorem <> pc var
def 939:948 <> good_os_pu
R954:961 CertiOS.framework.model.language <> progunit def
R1013:1016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1054:1057 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1047:1049 Coq.Init.Logic <> :type_scope:x_'='_x not
R1017:1029 CertiOS.framework.logic.inferules <> good_decllist def
R1032:1039 CertiOS.framework.model.opsem <> revlcons def
R1044:1045 CertiOS.framework.proof.toptheorem <> d2 var
R1041:1042 CertiOS.framework.proof.toptheorem <> d1 var
R1050:1053 Coq.Init.Datatypes <> true constr
R1058:1066 CertiOS.framework.logic.inferules <> GoodStmt' def
R1068:1068 CertiOS.framework.proof.toptheorem <> s var
R994:996 Coq.Init.Logic <> :type_scope:x_'='_x not
R990:991 CertiOS.framework.proof.toptheorem <> pu var
R993:993 CertiOS.framework.proof.toptheorem <> f var
R997:1000 Coq.Init.Datatypes <> Some constr
R1002:1002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1004:1004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1007:1007 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1010:1010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1012:1012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1003:1003 CertiOS.framework.proof.toptheorem <> t var
R1005:1006 CertiOS.framework.proof.toptheorem <> d1 var
R1008:1009 CertiOS.framework.proof.toptheorem <> d2 var
R1011:1011 CertiOS.framework.proof.toptheorem <> s var
def 1082:1094 <> Good_Clt_Stmt
R1101:1105 CertiOS.framework.model.language <> stmts ind
R1138:1138 CertiOS.framework.proof.toptheorem <> s var
R1151:1155 CertiOS.framework.model.language <> sskip constr
R1162:1165 Coq.Init.Logic <> True ind
R1173:1179 CertiOS.framework.model.language <> sassign constr
R1188:1191 Coq.Init.Logic <> True ind
R1199:1201 CertiOS.framework.model.language <> sif constr
R1230:1233 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1214:1226 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1234:1246 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1257:1263 CertiOS.framework.model.language <> sifthen constr
R1273:1285 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1296:1301 CertiOS.framework.model.language <> swhile constr
R1311:1323 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1334:1337 CertiOS.framework.model.language <> sret constr
R1342:1345 Coq.Init.Logic <> True ind
R1353:1357 CertiOS.framework.model.language <> srete constr
R1364:1367 Coq.Init.Logic <> True ind
R1375:1379 CertiOS.framework.model.language <> scall constr
R1388:1391 Coq.Init.Logic <> True ind
R1399:1404 CertiOS.framework.model.language <> scalle constr
R1415:1418 Coq.Init.Logic <> True ind
R1426:1429 CertiOS.framework.model.language <> sseq constr
R1456:1459 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1440:1452 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1460:1472 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1483:1488 CertiOS.framework.model.language <> sprint constr
R1495:1498 Coq.Init.Logic <> True ind
R1506:1511 CertiOS.framework.model.language <> sfexec constr
R1522:1526 Coq.Init.Logic <> False ind
R1534:1538 CertiOS.framework.model.language <> sfree constr
R1547:1551 Coq.Init.Logic <> False ind
R1559:1564 CertiOS.framework.model.language <> salloc constr
R1573:1577 Coq.Init.Logic <> False ind
R1585:1589 CertiOS.framework.model.language <> sprim constr
R1596:1600 Coq.Init.Logic <> False ind
R1608:1616 CertiOS.framework.model.language <> hapi_code constr
R1623:1627 Coq.Init.Logic <> False ind
def 1648:1658 <> good_cli_pu
R1664:1671 CertiOS.framework.model.language <> progunit def
R1722:1725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1763:1766 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1756:1758 Coq.Init.Logic <> :type_scope:x_'='_x not
R1726:1738 CertiOS.framework.logic.inferules <> good_decllist def
R1741:1748 CertiOS.framework.model.opsem <> revlcons def
R1753:1754 CertiOS.framework.proof.toptheorem <> d2 var
R1750:1751 CertiOS.framework.proof.toptheorem <> d1 var
R1759:1762 Coq.Init.Datatypes <> true constr
R1767:1779 CertiOS.framework.proof.toptheorem <> Good_Clt_Stmt def
R1781:1781 CertiOS.framework.proof.toptheorem <> s var
R1703:1705 Coq.Init.Logic <> :type_scope:x_'='_x not
R1699:1700 CertiOS.framework.proof.toptheorem <> pu var
R1702:1702 CertiOS.framework.proof.toptheorem <> f var
R1706:1709 Coq.Init.Datatypes <> Some constr
R1711:1711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1713:1713 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1716:1716 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1719:1719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1721:1721 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1712:1712 CertiOS.framework.proof.toptheorem <> t var
R1714:1715 CertiOS.framework.proof.toptheorem <> d1 var
R1717:1718 CertiOS.framework.proof.toptheorem <> d2 var
R1720:1720 CertiOS.framework.proof.toptheorem <> s var
def 1797:1802 <> ProgOK
R1812:1818 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1821:1821 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1824:1824 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1827:1827 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1830:1835 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R1856:1863 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1838:1840 Coq.Init.Logic <> :type_scope:x_'='_x not
R1836:1837 CertiOS.framework.proof.toptheorem <> Pl var
R1841:1841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1844:1844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1855:1855 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1845:1845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1848:1848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1851:1851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1854:1854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1881:1884 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1864:1874 CertiOS.framework.proof.auxdef <> no_fun_same def
R1902:1905 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1885:1895 CertiOS.framework.proof.auxdef <> no_fun_same def
R1923:1930 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1906:1916 CertiOS.framework.proof.auxdef <> no_fun_same def
R1952:1959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1931:1939 CertiOS.framework.proof.toptheorem <> good_call def
R1973:1976 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1960:1969 CertiOS.framework.proof.toptheorem <> good_os_pu def
R1990:1993 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1977:1986 CertiOS.framework.proof.toptheorem <> good_os_pu def
R1994:2004 CertiOS.framework.proof.toptheorem <> good_cli_pu def
def 2022:2028 <> GOOD_OS
R2044:2049 CertiOS.framework.model.language <> oscode def
R2057:2062 CertiOS.framework.model.language <> osspec def
R2073:2080 CertiOS.framework.logic.inferules <> InitAsrt def
R2100:2102 CertiOS.framework.auxlibs.Modules <> tid def
R2111:2118 CertiOS.framework.model.language <> progunit def
R2182:2184 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2172:2174 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2161:2163 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2153:2155 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2144:2146 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2136:2143 CertiOS.framework.model.language <> progunit def
R2147:2152 CertiOS.framework.model.language <> oscode def
R2156:2160 CertiOS.framework.model.language <> tasks def
R2164:2171 CertiOS.framework.model.language <> clientst def
R2175:2181 CertiOS.framework.model.language <> osstate def
R2185:2187 CertiOS.framework.auxlibs.Modules <> tid def
R2241:2243 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2230:2232 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2222:2224 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2213:2215 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R2205:2212 CertiOS.framework.model.language <> progunit def
R2216:2221 CertiOS.framework.model.language <> osspec def
R2225:2229 CertiOS.framework.model.language <> tasks def
R2233:2240 CertiOS.framework.model.language <> clientst def
R2244:2256 CertiOS.framework.model.language OSAbstMod map def
R2274:2278 CertiOS.framework.model.language <> tasks def
R2286:2292 CertiOS.framework.model.language <> osstate def
R2302:2309 CertiOS.framework.model.language <> clientst def
R2317:2329 CertiOS.framework.model.language OSAbstMod map def
R2377:2384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2398:2405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2420:2427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2436:2443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2471:2478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2502:2509 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2528:2535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2536:2548 CertiOS.framework.proof.oscorrectness <> etrace_subset def
R2553:2554 CertiOS.framework.proof.toptheorem <> Wh var
R2550:2551 CertiOS.framework.proof.toptheorem <> Wl var
R2510:2523 CertiOS.framework.model.language TasksMod indom def
R2527:2527 CertiOS.framework.proof.toptheorem <> t var
R2525:2525 CertiOS.framework.proof.toptheorem <> T var
R2481:2483 Coq.Init.Logic <> :type_scope:x_'='_x not
R2479:2480 CertiOS.framework.proof.toptheorem <> Wh var
R2484:2484 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2487:2488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2490:2491 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2493:2494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2498:2499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2501:2501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2485:2486 CertiOS.framework.proof.toptheorem <> pc var
R2489:2489 CertiOS.framework.proof.toptheorem <> A var
R2492:2492 CertiOS.framework.proof.toptheorem <> T var
R2495:2497 CertiOS.framework.proof.toptheorem <> cst var
R2500:2500 CertiOS.framework.proof.toptheorem <> O var
R2446:2448 Coq.Init.Logic <> :type_scope:x_'='_x not
R2444:2445 CertiOS.framework.proof.toptheorem <> Wl var
R2449:2449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2452:2453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2456:2457 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2459:2460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2464:2465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2467:2468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2470:2470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2450:2451 CertiOS.framework.proof.toptheorem <> pc var
R2454:2455 CertiOS.framework.proof.toptheorem <> Os var
R2458:2458 CertiOS.framework.proof.toptheorem <> T var
R2461:2463 CertiOS.framework.proof.toptheorem <> cst var
R2466:2466 CertiOS.framework.proof.toptheorem <> S var
R2469:2469 CertiOS.framework.proof.toptheorem <> t var
R2428:2431 CertiOS.framework.proof.toptheorem <> init var
R2435:2435 CertiOS.framework.proof.toptheorem <> O var
R2433:2433 CertiOS.framework.proof.toptheorem <> S var
R2406:2411 CertiOS.framework.proof.toptheorem <> ProgOK def
R2413:2413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2416:2416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2419:2419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2414:2415 CertiOS.framework.proof.toptheorem <> pc var
R2417:2418 CertiOS.framework.proof.toptheorem <> Os var
R2385:2390 CertiOS.framework.proof.toptheorem <> TaskOK def
R2397:2397 CertiOS.framework.proof.toptheorem <> O var
R2394:2395 CertiOS.framework.proof.toptheorem <> pc var
R2392:2392 CertiOS.framework.proof.toptheorem <> T var
R2359:2361 Coq.Init.Logic <> :type_scope:x_'='_x not
R2337:2349 CertiOS.framework.model.language OSAbstMod get def
R2353:2358 CertiOS.framework.model.language <> curtid constr
R2351:2351 CertiOS.framework.proof.toptheorem <> O var
R2362:2365 Coq.Init.Datatypes <> Some constr
R2368:2373 CertiOS.framework.model.language <> oscurt constr
R2375:2375 CertiOS.framework.proof.toptheorem <> t var
def 2569:2574 <> WFIFun
R2591:2598 CertiOS.framework.model.language <> progunit def
R2610:2616 CertiOS.framework.logic.assertion <> funspec def
R2625:2631 CertiOS.framework.model.language <> ossched def
R2639:2641 CertiOS.framework.logic.assertion <> Inv def
R2648:2655 CertiOS.framework.logic.inferules <> LocalInv def
R2678:2686 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3160:3160 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2665:2669 CertiOS.framework.logic.inferules <> EqDom def
R2673:2677 CertiOS.framework.proof.toptheorem <> FSpec var
R2671:2671 CertiOS.framework.proof.toptheorem <> P var
R2699:2701 CertiOS.framework.model.language <> fid def
R2711:2714 CertiOS.framework.logic.assertion <> fpre def
R2725:2729 CertiOS.framework.logic.assertion <> fpost def
R2737:2740 CertiOS.framework.model.memory <> type ind
R2749:2756 CertiOS.framework.model.memory <> typelist def
R2802:2812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2813:2819 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R2822:2822 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R2825:2825 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R2827:2837 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R2863:2875 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2841:2843 Coq.Init.Logic <> :type_scope:x_'='_x not
R2838:2838 CertiOS.framework.proof.toptheorem <> P var
R2840:2840 CertiOS.framework.proof.toptheorem <> f var
R2844:2847 Coq.Init.Datatypes <> Some constr
R2849:2849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2851:2852 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2855:2856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2859:2860 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2862:2862 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2850:2850 CertiOS.framework.proof.toptheorem <> t var
R2889:2902 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3159:3159 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2876:2882 CertiOS.framework.model.opsem <> tlmatch def
R2884:2885 CertiOS.framework.proof.toptheorem <> tl var
R2916:2922 CertiOS.framework.model.memory <> vallist def
R2930:2933 CertiOS.framework.logic.assertion <> asrt ind
R2941:2947 CertiOS.framework.logic.assertion <> retasrt def
R2960:2963 Coq.Init.Datatypes <> list ind
R2965:2972 CertiOS.framework.logic.assertion <> logicvar ind
R3032:3047 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3089:3104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3105:3106 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3112:3113 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3116:3117 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3120:3121 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3123:3124 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3126:3127 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3134:3137 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3141:3143 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3145:3146 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3148:3150 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3157:3158 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3107:3111 CertiOS.framework.proof.toptheorem <> FSpec var
R3114:3115 CertiOS.framework.proof.toptheorem <> sd var
R3118:3119 CertiOS.framework.proof.toptheorem <> pa var
R3122:3122 CertiOS.framework.proof.toptheorem <> I var
R3125:3125 CertiOS.framework.proof.toptheorem <> r var
R3128:3133 CertiOS.framework.logic.assertion <> Afalse constr
R3144:3144 CertiOS.framework.proof.toptheorem <> p var
R3151:3156 CertiOS.framework.logic.assertion <> Afalse constr
R3138:3140 CertiOS.framework.proof.toptheorem <> tid var
R3054:3056 Coq.Init.Logic <> :type_scope:x_'='_x not
R3048:3051 Coq.Init.Datatypes <> Some constr
R3053:3053 CertiOS.framework.proof.toptheorem <> r var
R3057:3065 CertiOS.framework.logic.inferules <> BuildRetI def
R3086:3088 CertiOS.framework.proof.toptheorem <> tid var
R3081:3084 CertiOS.framework.proof.toptheorem <> post var
R3074:3079 CertiOS.framework.proof.toptheorem <> logicl var
R3071:3072 CertiOS.framework.proof.toptheorem <> vl var
R3069:3069 CertiOS.framework.proof.toptheorem <> f var
R3067:3067 CertiOS.framework.proof.toptheorem <> P var
R2998:3000 Coq.Init.Logic <> :type_scope:x_'='_x not
R2992:2995 Coq.Init.Datatypes <> Some constr
R2997:2997 CertiOS.framework.proof.toptheorem <> p var
R3001:3009 CertiOS.framework.logic.inferules <> BuildPreI def
R3029:3031 CertiOS.framework.proof.toptheorem <> tid var
R3025:3027 CertiOS.framework.proof.toptheorem <> pre var
R3018:3023 CertiOS.framework.proof.toptheorem <> logicl var
R3015:3016 CertiOS.framework.proof.toptheorem <> vl var
R3013:3013 CertiOS.framework.proof.toptheorem <> f var
R3011:3011 CertiOS.framework.proof.toptheorem <> P var
R2774:2776 Coq.Init.Logic <> :type_scope:x_'='_x not
R2767:2771 CertiOS.framework.proof.toptheorem <> FSpec var
R2773:2773 CertiOS.framework.proof.toptheorem <> f var
R2777:2780 Coq.Init.Datatypes <> Some constr
R2782:2782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2786:2787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2792:2793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2801:2801 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2783:2785 CertiOS.framework.proof.toptheorem <> pre var
R2788:2791 CertiOS.framework.proof.toptheorem <> post var
R2794:2794 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2796:2797 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2800:2800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2795:2795 CertiOS.framework.proof.toptheorem <> t var
R2798:2799 CertiOS.framework.proof.toptheorem <> tl var
def 3176:3180 <> WFAPI
R3194:3201 CertiOS.framework.model.language <> progunit def
R3213:3221 CertiOS.framework.model.language <> osapispec def
R3233:3239 CertiOS.framework.logic.assertion <> funspec def
R3248:3254 CertiOS.framework.model.language <> ossched def
R3262:3264 CertiOS.framework.logic.assertion <> Inv def
R3295:3310 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3638:3643 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3277:3284 CertiOS.framework.logic.inferules <> EqDomAPI def
R3288:3294 CertiOS.framework.proof.toptheorem <> apispec var
R3286:3286 CertiOS.framework.proof.toptheorem <> P var
R3321:3323 CertiOS.framework.model.language <> fid def
R3377:3388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3433:3443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3488:3510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3628:3637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3511:3518 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R3520:3520 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R3523:3523 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R3526:3526 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R3528:3541 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_x_','_x not
R3567:3582 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3545:3547 Coq.Init.Logic <> :type_scope:x_'='_x not
R3542:3542 CertiOS.framework.proof.toptheorem <> P var
R3544:3544 CertiOS.framework.proof.toptheorem <> f var
R3548:3551 Coq.Init.Datatypes <> Some constr
R3553:3553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3555:3556 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3559:3560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3563:3564 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3566:3566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3583:3590 CertiOS.framework.logic.inferules <> InfRules ind
R3625:3627 CertiOS.framework.proof.toptheorem <> tid var
R3618:3623 CertiOS.framework.logic.assertion <> Afalse constr
R3614:3614 CertiOS.framework.proof.toptheorem <> p var
R3607:3612 CertiOS.framework.logic.assertion <> Afalse constr
R3605:3605 CertiOS.framework.proof.toptheorem <> r var
R3603:3603 CertiOS.framework.proof.toptheorem <> I var
R3600:3601 CertiOS.framework.proof.toptheorem <> pa var
R3597:3598 CertiOS.framework.proof.toptheorem <> sd var
R3592:3595 CertiOS.framework.proof.toptheorem <> Spec var
R3450:3452 Coq.Init.Logic <> :type_scope:x_'='_x not
R3444:3447 Coq.Init.Datatypes <> Some constr
R3449:3449 CertiOS.framework.proof.toptheorem <> r var
R3453:3462 CertiOS.framework.logic.inferules <> BuildRetA' def
R3486:3487 CertiOS.framework.proof.toptheorem <> lg var
R3482:3484 CertiOS.framework.proof.toptheorem <> tid var
R3479:3480 CertiOS.framework.proof.toptheorem <> pa var
R3476:3477 CertiOS.framework.proof.toptheorem <> vl var
R3468:3468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3471:3471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3474:3474 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3469:3470 CertiOS.framework.proof.toptheorem <> ab var
R3472:3473 CertiOS.framework.proof.toptheorem <> ft var
R3466:3466 CertiOS.framework.proof.toptheorem <> f var
R3464:3464 CertiOS.framework.proof.toptheorem <> P var
R3395:3397 Coq.Init.Logic <> :type_scope:x_'='_x not
R3389:3392 Coq.Init.Datatypes <> Some constr
R3394:3394 CertiOS.framework.proof.toptheorem <> p var
R3398:3407 CertiOS.framework.logic.inferules <> BuildPreA' def
R3431:3432 CertiOS.framework.proof.toptheorem <> lg var
R3427:3429 CertiOS.framework.proof.toptheorem <> tid var
R3424:3425 CertiOS.framework.proof.toptheorem <> pa var
R3421:3422 CertiOS.framework.proof.toptheorem <> vl var
R3413:3413 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3416:3416 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3419:3419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3414:3415 CertiOS.framework.proof.toptheorem <> ab var
R3417:3418 CertiOS.framework.proof.toptheorem <> ft var
R3411:3411 CertiOS.framework.proof.toptheorem <> f var
R3409:3409 CertiOS.framework.proof.toptheorem <> P var
R3362:3364 Coq.Init.Logic <> :type_scope:x_'='_x not
R3353:3359 CertiOS.framework.proof.toptheorem <> apispec var
R3361:3361 CertiOS.framework.proof.toptheorem <> f var
R3365:3368 Coq.Init.Datatypes <> Some constr
R3370:3370 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3373:3373 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3376:3376 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3371:3372 CertiOS.framework.proof.toptheorem <> ab var
R3374:3375 CertiOS.framework.proof.toptheorem <> ft var
def 3658:3662 <> WFInt
R3676:3682 CertiOS.framework.model.language <> intunit def
R3694:3702 CertiOS.framework.model.language <> osintspec def
R3714:3720 CertiOS.framework.logic.assertion <> funspec def
R3729:3735 CertiOS.framework.model.language <> ossched def
R3743:3745 CertiOS.framework.logic.assertion <> Inv def
R3773:3788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4048:4106 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3755:3762 CertiOS.framework.logic.inferules <> EqDomInt def
R3766:3772 CertiOS.framework.proof.toptheorem <> intspec var
R3764:3764 CertiOS.framework.proof.toptheorem <> P var
R3876:3886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3937:3947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3948:3954 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3956:3967 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3980:3993 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3971:3973 Coq.Init.Logic <> :type_scope:x_'='_x not
R3968:3968 CertiOS.framework.proof.toptheorem <> P var
R3970:3970 CertiOS.framework.proof.toptheorem <> i var
R3974:3977 Coq.Init.Datatypes <> Some constr
R3994:3995 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4000:4002 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4005:4006 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4009:4010 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4012:4013 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4022:4023 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4025:4028 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4030:4032 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4034:4035 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4037:4039 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R4046:4047 CertiOS.framework.logic.inferules <> ::'{|'_x_','_x_','_x_','_x_','_x_','_x_'|}'_'|-'_x_'{{'_x_'}}'_x_'{{'_x_'}}' not
R3996:3999 CertiOS.framework.proof.toptheorem <> Spec var
R4003:4004 CertiOS.framework.proof.toptheorem <> sd var
R4007:4008 CertiOS.framework.proof.toptheorem <> pa var
R4011:4011 CertiOS.framework.proof.toptheorem <> I var
R4014:4021 CertiOS.framework.proof.auxdef <> retfalse def
R4024:4024 CertiOS.framework.proof.toptheorem <> r var
R4033:4033 CertiOS.framework.proof.toptheorem <> p var
R4040:4045 CertiOS.framework.logic.assertion <> Afalse constr
R4029:4029 CertiOS.framework.proof.toptheorem <> t var
R3893:3895 Coq.Init.Logic <> :type_scope:x_'='_x not
R3887:3890 Coq.Init.Datatypes <> Some constr
R3892:3892 CertiOS.framework.proof.toptheorem <> r var
R3896:3906 CertiOS.framework.logic.inferules <> BuildintRet def
R3935:3936 CertiOS.framework.proof.toptheorem <> lg var
R3933:3933 CertiOS.framework.proof.toptheorem <> t var
R3930:3931 CertiOS.framework.proof.toptheorem <> pa var
R3928:3928 CertiOS.framework.proof.toptheorem <> I var
R3925:3926 CertiOS.framework.proof.toptheorem <> si var
R3918:3923 CertiOS.framework.proof.toptheorem <> isrreg var
R3910:3916 CertiOS.framework.proof.toptheorem <> intspec var
R3908:3908 CertiOS.framework.proof.toptheorem <> i var
R3832:3834 Coq.Init.Logic <> :type_scope:x_'='_x not
R3826:3829 Coq.Init.Datatypes <> Some constr
R3831:3831 CertiOS.framework.proof.toptheorem <> p var
R3835:3845 CertiOS.framework.logic.inferules <> BuildintPre def
R3874:3875 CertiOS.framework.proof.toptheorem <> lg var
R3872:3872 CertiOS.framework.proof.toptheorem <> t var
R3869:3870 CertiOS.framework.proof.toptheorem <> pa var
R3867:3867 CertiOS.framework.proof.toptheorem <> I var
R3864:3865 CertiOS.framework.proof.toptheorem <> si var
R3857:3862 CertiOS.framework.proof.toptheorem <> isrreg var
R3849:3855 CertiOS.framework.proof.toptheorem <> intspec var
R3847:3847 CertiOS.framework.proof.toptheorem <> i var
prf 4579:4590 <> verified_os'
R4614:4621 CertiOS.framework.logic.inferules <> InitAsrt def
R4630:4632 CertiOS.framework.logic.assertion <> Inv def
R4641:4647 CertiOS.framework.logic.assertion <> funspec def
R4708:4715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4749:4761 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4808:4815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4854:4861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4893:4900 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4945:4957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4958:4964 CertiOS.framework.proof.toptheorem <> GOOD_OS def
R4972:4975 CertiOS.framework.proof.toptheorem <> init var
R4970:4970 CertiOS.framework.proof.toptheorem <> A var
R4966:4968 CertiOS.framework.proof.toptheorem <> osc var
R4901:4914 CertiOS.framework.logic.inferules <> side_condition def
R4938:4944 CertiOS.framework.logic.inferules <> init_lg def
R4933:4936 CertiOS.framework.proof.toptheorem <> init var
R4921:4931 CertiOS.framework.proof.toptheorem <> schedmethod var
R4918:4919 CertiOS.framework.proof.toptheorem <> li var
R4916:4916 CertiOS.framework.proof.toptheorem <> I var
R4862:4867 CertiOS.framework.proof.toptheorem <> WFIFun def
R4891:4892 CertiOS.framework.proof.toptheorem <> li var
R4889:4889 CertiOS.framework.proof.toptheorem <> I var
R4877:4887 CertiOS.framework.proof.toptheorem <> schedmethod var
R4872:4875 CertiOS.framework.proof.toptheorem <> Spec var
R4869:4870 CertiOS.framework.proof.toptheorem <> pi var
R4816:4820 CertiOS.framework.proof.toptheorem <> WFInt def
R4853:4853 CertiOS.framework.proof.toptheorem <> I var
R4841:4851 CertiOS.framework.proof.toptheorem <> schedmethod var
R4836:4839 CertiOS.framework.proof.toptheorem <> Spec var
R4833:4834 CertiOS.framework.proof.toptheorem <> li var
R4825:4831 CertiOS.framework.proof.toptheorem <> intspec var
R4822:4823 CertiOS.framework.proof.toptheorem <> ip var
R4762:4766 CertiOS.framework.proof.toptheorem <> WFAPI def
R4801:4807 CertiOS.framework.logic.inferules <> init_lg def
R4799:4799 CertiOS.framework.proof.toptheorem <> I var
R4787:4797 CertiOS.framework.proof.toptheorem <> schedmethod var
R4782:4785 CertiOS.framework.proof.toptheorem <> Spec var
R4779:4780 CertiOS.framework.proof.toptheorem <> li var
R4771:4777 CertiOS.framework.proof.toptheorem <> apispec var
R4768:4769 CertiOS.framework.proof.toptheorem <> pa var
R4717:4719 Coq.Init.Logic <> :type_scope:x_'='_x not
R4716:4716 CertiOS.framework.proof.toptheorem <> A var
R4720:4720 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4728:4728 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4736:4736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4748:4748 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4721:4727 CertiOS.framework.proof.toptheorem <> apispec var
R4729:4735 CertiOS.framework.proof.toptheorem <> intspec var
R4737:4747 CertiOS.framework.proof.toptheorem <> schedmethod var
R4695:4697 Coq.Init.Logic <> :type_scope:x_'='_x not
R4692:4694 CertiOS.framework.proof.toptheorem <> osc var
R4698:4698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4701:4701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4704:4704 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4707:4707 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4699:4700 CertiOS.framework.proof.toptheorem <> pa var
R4702:4703 CertiOS.framework.proof.toptheorem <> pi var
R4705:4706 CertiOS.framework.proof.toptheorem <> ip var
R5817:5825 CertiOS.framework.proof.oscorrectness <> OSCorrect def
R5838:5838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5846:5847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5855:5856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5868:5868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5827:5827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5830:5830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5833:5833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5836:5836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5817:5825 CertiOS.framework.proof.oscorrectness <> OSCorrect def
R5838:5838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5846:5847 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5855:5856 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5868:5868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5827:5827 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5830:5830 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5833:5833 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5836:5836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5912:5921 CertiOS.framework.proof.lemmasfortoptheo <> toptheorem thm
R5912:5921 CertiOS.framework.proof.lemmasfortoptheo <> toptheorem thm
prf 7272:7280 <> Soundness
R7305:7312 CertiOS.framework.logic.inferules <> InitAsrt def
R7338:7345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7346:7352 CertiOS.framework.proof.toptheorem <> GOOD_OS def
R7360:7363 CertiOS.framework.proof.toptheorem <> init var
R7358:7358 CertiOS.framework.proof.toptheorem <> A var
R7354:7356 CertiOS.framework.proof.toptheorem <> osc var
R7320:7326 CertiOS.framework.logic.inferules <> TopRule ind
R7334:7337 CertiOS.framework.proof.toptheorem <> init var
R7332:7332 CertiOS.framework.proof.toptheorem <> A var
R7328:7330 CertiOS.framework.proof.toptheorem <> osc var
R7447:7458 CertiOS.framework.proof.toptheorem <> verified_os' thm
R7447:7458 CertiOS.framework.proof.toptheorem <> verified_os' thm
