DIGEST 7ff45aa7c22add53129c2bf5fca57138
FCertiOS.framework.proof.absinfer_sound
R15:25 CertiOS.framework.include_frm <> <> lib
R43:50 CertiOS.tactics.base_tac <> <> lib
R68:75 CertiOS.tactics.sep_auto <> <> lib
R93:107 CertiOS.framework.proof.mem_join_lemmas <> <> lib
prf 120:133 <> hmstepstar_seq
R193:200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R201:210 CertiOS.framework.logic.inferules <> hmstepstar syndef
R239:239 CertiOS.framework.proof.absinfer_sound <> x var
R232:234 CertiOS.framework.model.language <> ::x_';;'_x not
R229:231 CertiOS.framework.proof.absinfer_sound <> s1' var
R235:236 CertiOS.framework.proof.absinfer_sound <> s2 var
R226:226 CertiOS.framework.proof.absinfer_sound <> O var
R219:221 CertiOS.framework.model.language <> ::x_';;'_x not
R217:218 CertiOS.framework.proof.absinfer_sound <> s1 var
R222:223 CertiOS.framework.proof.absinfer_sound <> s2 var
R212:213 CertiOS.framework.proof.absinfer_sound <> sc var
R169:178 CertiOS.framework.logic.inferules <> hmstepstar syndef
R192:192 CertiOS.framework.proof.absinfer_sound <> x var
R188:190 CertiOS.framework.proof.absinfer_sound <> s1' var
R186:186 CertiOS.framework.proof.absinfer_sound <> O var
R183:184 CertiOS.framework.proof.absinfer_sound <> s1 var
R180:181 CertiOS.framework.proof.absinfer_sound <> sc var
def 365:371 <> absimp'
R382:389 CertiOS.framework.logic.inferules <> LocalInv def
R401:404 CertiOS.framework.logic.assertion <> asrt ind
R411:413 CertiOS.framework.auxlibs.Modules <> tid def
R434:439 CertiOS.framework.model.language <> taskst def
R447:452 CertiOS.framework.model.language <> osabst def
R464:468 CertiOS.framework.logic.assertion <> absop def
R521:527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R560:569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R570:576 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R579:579 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R586:586 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R590:599 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_x_','_x not
R614:625 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R600:603 CertiOS.framework.auxlibs.Maps <> join meth
R608:609 CertiOS.framework.proof.absinfer_sound <> Of var
R678:681 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R626:635 CertiOS.framework.logic.inferules <> hmstepstar syndef
R646:647 CertiOS.framework.proof.absinfer_sound <> OO var
R640:644 CertiOS.framework.proof.absinfer_sound <> gamma var
R637:638 CertiOS.framework.proof.absinfer_sound <> sc var
R703:706 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R697:700 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R682:682 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R684:685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R688:689 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R696:696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R683:683 CertiOS.framework.proof.absinfer_sound <> s var
R701:702 CertiOS.framework.proof.absinfer_sound <> p' var
R707:710 CertiOS.framework.logic.inferules <> satp def
R718:724 CertiOS.framework.logic.inferules <> CurLINV def
R729:729 CertiOS.framework.proof.absinfer_sound <> t var
R726:727 CertiOS.framework.proof.absinfer_sound <> li var
R712:712 CertiOS.framework.proof.absinfer_sound <> s var
R548:551 CertiOS.framework.auxlibs.Maps <> join meth
R558:559 CertiOS.framework.proof.absinfer_sound <> OO var
R555:556 CertiOS.framework.proof.absinfer_sound <> Of var
R553:553 CertiOS.framework.proof.absinfer_sound <> O var
R494:497 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R489:492 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R476:476 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R478:479 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R481:482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R488:488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R477:477 CertiOS.framework.proof.absinfer_sound <> s var
R480:480 CertiOS.framework.proof.absinfer_sound <> O var
R483:487 CertiOS.framework.proof.absinfer_sound <> gamma var
R493:493 CertiOS.framework.proof.absinfer_sound <> p var
R498:501 CertiOS.framework.logic.inferules <> satp def
R508:514 CertiOS.framework.logic.inferules <> CurLINV def
R519:519 CertiOS.framework.proof.absinfer_sound <> t var
R516:517 CertiOS.framework.proof.absinfer_sound <> li var
R505:505 CertiOS.framework.proof.absinfer_sound <> O var
R503:503 CertiOS.framework.proof.absinfer_sound <> s var
prf 741:756 <> hmstepstar_trans
R832:841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R875:882 Coq.Init.Logic <> :type_scope:x_'->'_x not
R883:892 CertiOS.framework.logic.inferules <> hmstepstar syndef
R911:913 CertiOS.framework.proof.absinfer_sound <> O'' var
R905:909 CertiOS.framework.proof.absinfer_sound <> aop'' var
R902:902 CertiOS.framework.proof.absinfer_sound <> O var
R897:899 CertiOS.framework.proof.absinfer_sound <> aop var
R894:895 CertiOS.framework.proof.absinfer_sound <> sd var
R842:851 CertiOS.framework.logic.inferules <> hmstepstar syndef
R872:874 CertiOS.framework.proof.absinfer_sound <> O'' var
R866:870 CertiOS.framework.proof.absinfer_sound <> aop'' var
R862:863 CertiOS.framework.proof.absinfer_sound <> O' var
R857:860 CertiOS.framework.proof.absinfer_sound <> aop' var
R853:854 CertiOS.framework.proof.absinfer_sound <> sd var
R805:814 CertiOS.framework.logic.inferules <> hmstepstar syndef
R830:831 CertiOS.framework.proof.absinfer_sound <> O' var
R825:828 CertiOS.framework.proof.absinfer_sound <> aop' var
R823:823 CertiOS.framework.proof.absinfer_sound <> O var
R819:821 CertiOS.framework.proof.absinfer_sound <> aop var
R816:817 CertiOS.framework.proof.absinfer_sound <> sd var
prf 1036:1051 <> join_eqdom_eqdom
R1098:1105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1120:1126 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1138:1146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1147:1152 CertiOS.framework.model.opsem <> eqdomO def
R1157:1159 CertiOS.framework.proof.absinfer_sound <> O2' var
R1154:1155 CertiOS.framework.proof.absinfer_sound <> O2 var
R1127:1132 CertiOS.framework.model.opsem <> eqdomO def
R1136:1137 CertiOS.framework.proof.absinfer_sound <> O' var
R1134:1134 CertiOS.framework.proof.absinfer_sound <> O var
R1106:1109 CertiOS.framework.auxlibs.Maps <> join meth
R1117:1119 CertiOS.framework.proof.absinfer_sound <> O2' var
R1114:1115 CertiOS.framework.proof.absinfer_sound <> O1 var
R1111:1112 CertiOS.framework.proof.absinfer_sound <> O' var
R1086:1089 CertiOS.framework.auxlibs.Maps <> join meth
R1096:1097 CertiOS.framework.proof.absinfer_sound <> O2 var
R1093:1094 CertiOS.framework.proof.absinfer_sound <> O1 var
R1091:1091 CertiOS.framework.proof.absinfer_sound <> O var
R1178:1183 CertiOS.framework.model.opsem <> eqdomO def
R1231:1235 CertiOS.framework.auxlibs.Maps <> indom def
R1331:1333 CertiOS.framework.auxlibs.Maps <> get meth
R1415:1427 CertiOS.framework.model.language OSAbstMod get def
R1415:1427 CertiOS.framework.model.language OSAbstMod get def
R1456:1468 CertiOS.framework.model.language OSAbstMod get def
R1456:1468 CertiOS.framework.model.language OSAbstMod get def
R1547:1559 CertiOS.framework.model.language OSAbstMod get def
R1547:1559 CertiOS.framework.model.language OSAbstMod get def
R1601:1613 CertiOS.framework.model.language OSAbstMod get def
R1601:1613 CertiOS.framework.model.language OSAbstMod get def
R1643:1655 CertiOS.framework.model.language OSAbstMod get def
R1677:1689 CertiOS.framework.model.language OSAbstMod get def
R1643:1655 CertiOS.framework.model.language OSAbstMod get def
R1677:1689 CertiOS.framework.model.language OSAbstMod get def
R1677:1689 CertiOS.framework.model.language OSAbstMod get def
R1749:1761 CertiOS.framework.model.language OSAbstMod get def
R1749:1761 CertiOS.framework.model.language OSAbstMod get def
R1791:1803 CertiOS.framework.model.language OSAbstMod get def
R1791:1803 CertiOS.framework.model.language OSAbstMod get def
R1882:1894 CertiOS.framework.model.language OSAbstMod get def
R1882:1894 CertiOS.framework.model.language OSAbstMod get def
R1935:1947 CertiOS.framework.model.language OSAbstMod get def
R1935:1947 CertiOS.framework.model.language OSAbstMod get def
R1977:1989 CertiOS.framework.model.language OSAbstMod get def
R2010:2022 CertiOS.framework.model.language OSAbstMod get def
R1977:1989 CertiOS.framework.model.language OSAbstMod get def
R2010:2022 CertiOS.framework.model.language OSAbstMod get def
R2010:2022 CertiOS.framework.model.language OSAbstMod get def
R2074:2083 CertiOS.framework.model.language <> abstcblsid constr
R2074:2083 CertiOS.framework.model.language <> abstcblsid constr
R2102:2111 CertiOS.framework.model.language <> abstcblsid constr
R2102:2111 CertiOS.framework.model.language <> abstcblsid constr
R2123:2127 CertiOS.framework.auxlibs.Maps <> indom def
R2152:2161 CertiOS.framework.model.language <> abstcblsid constr
R2152:2161 CertiOS.framework.model.language <> abstcblsid constr
R2186:2188 CertiOS.framework.auxlibs.Maps <> get meth
R2239:2251 CertiOS.framework.model.language OSAbstMod get def
R2255:2264 CertiOS.framework.model.language <> abstcblsid constr
R2239:2251 CertiOS.framework.model.language OSAbstMod get def
R2255:2264 CertiOS.framework.model.language <> abstcblsid constr
R2289:2301 CertiOS.framework.model.language OSAbstMod get def
R2306:2315 CertiOS.framework.model.language <> abstcblsid constr
R2289:2301 CertiOS.framework.model.language OSAbstMod get def
R2306:2315 CertiOS.framework.model.language <> abstcblsid constr
R2387:2399 CertiOS.framework.model.language OSAbstMod get def
R2405:2414 CertiOS.framework.model.language <> abstcblsid constr
R2387:2399 CertiOS.framework.model.language OSAbstMod get def
R2405:2414 CertiOS.framework.model.language <> abstcblsid constr
R2555:2567 CertiOS.framework.model.language OSAbstMod get def
R2572:2581 CertiOS.framework.model.language <> abstcblsid constr
R2555:2567 CertiOS.framework.model.language OSAbstMod get def
R2572:2581 CertiOS.framework.model.language <> abstcblsid constr
R2607:2619 CertiOS.framework.model.language OSAbstMod get def
R2624:2633 CertiOS.framework.model.language <> abstcblsid constr
R2651:2663 CertiOS.framework.model.language OSAbstMod get def
R2669:2678 CertiOS.framework.model.language <> abstcblsid constr
R2607:2619 CertiOS.framework.model.language OSAbstMod get def
R2624:2633 CertiOS.framework.model.language <> abstcblsid constr
R2651:2663 CertiOS.framework.model.language OSAbstMod get def
R2669:2678 CertiOS.framework.model.language <> abstcblsid constr
R2651:2663 CertiOS.framework.model.language OSAbstMod get def
R2669:2678 CertiOS.framework.model.language <> abstcblsid constr
prf 2786:2798 <> join_eqdom_ex
R2842:2849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2863:2870 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2871:2877 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2879:2880 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R2881:2884 CertiOS.framework.auxlibs.Maps <> join meth
R2889:2891 CertiOS.framework.proof.absinfer_sound <> O2' var
R2886:2887 CertiOS.framework.proof.absinfer_sound <> O1 var
R2850:2855 CertiOS.framework.model.opsem <> eqdomO def
R2860:2862 CertiOS.framework.proof.absinfer_sound <> O2' var
R2857:2858 CertiOS.framework.proof.absinfer_sound <> O2 var
R2829:2832 CertiOS.framework.auxlibs.Maps <> join meth
R2840:2841 CertiOS.framework.proof.absinfer_sound <> O3 var
R2837:2838 CertiOS.framework.proof.absinfer_sound <> O2 var
R2834:2835 CertiOS.framework.proof.absinfer_sound <> O1 var
R2912:2915 CertiOS.framework.auxlibs.Maps <> join meth
R2918:2923 CertiOS.framework.model.opsem <> eqdomO def
R2926:2930 CertiOS.framework.auxlibs.Maps <> indom def
R2940:2942 CertiOS.framework.auxlibs.Maps <> get meth
R2972:2986 CertiOS.framework.model.language OSAbstMod merge def
R2972:2986 CertiOS.framework.model.language OSAbstMod merge def
R3006:3019 CertiOS.framework.model.language OSAbstMod join def
R3107:3125 CertiOS.framework.model.language OSAbstMod merge_sem thm
R3107:3125 CertiOS.framework.model.language OSAbstMod merge_sem thm
R3107:3125 CertiOS.framework.model.language OSAbstMod merge_sem thm
R3140:3152 CertiOS.framework.model.language OSAbstMod get def
R3183:3195 CertiOS.framework.model.language OSAbstMod get def
R3226:3238 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3140:3152 CertiOS.framework.model.language OSAbstMod get def
R3183:3195 CertiOS.framework.model.language OSAbstMod get def
R3183:3195 CertiOS.framework.model.language OSAbstMod get def
R3226:3238 CertiOS.framework.model.language OSAbstMod get def
R3226:3238 CertiOS.framework.model.language OSAbstMod get def
R3226:3238 CertiOS.framework.model.language OSAbstMod get def
R3226:3238 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
R3269:3281 CertiOS.framework.model.language OSAbstMod get def
prf 3376:3389 <> join_eqdom_ex3
R3445:3451 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3464:3471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3486:3492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3504:3511 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3512:3518 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3520:3520 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3523:3525 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_x_','_x not
R3540:3543 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3526:3529 CertiOS.framework.auxlibs.Maps <> join meth
R3535:3537 CertiOS.framework.proof.absinfer_sound <> OO' var
R3531:3533 CertiOS.framework.proof.absinfer_sound <> O'' var
R3556:3559 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3544:3547 CertiOS.framework.auxlibs.Maps <> join meth
R3554:3555 CertiOS.framework.proof.absinfer_sound <> O1 var
R3549:3549 CertiOS.framework.proof.absinfer_sound <> O var
R3560:3563 CertiOS.framework.auxlibs.Maps <> join meth
R3565:3566 CertiOS.framework.proof.absinfer_sound <> O' var
R3493:3498 CertiOS.framework.model.opsem <> eqdomO def
R3502:3503 CertiOS.framework.proof.absinfer_sound <> O' var
R3500:3500 CertiOS.framework.proof.absinfer_sound <> O var
R3472:3475 CertiOS.framework.auxlibs.Maps <> join meth
R3483:3485 CertiOS.framework.proof.absinfer_sound <> OO' var
R3480:3481 CertiOS.framework.proof.absinfer_sound <> Of var
R3477:3478 CertiOS.framework.proof.absinfer_sound <> O' var
R3452:3455 CertiOS.framework.auxlibs.Maps <> join meth
R3462:3463 CertiOS.framework.proof.absinfer_sound <> OO var
R3459:3460 CertiOS.framework.proof.absinfer_sound <> Of var
R3457:3457 CertiOS.framework.proof.absinfer_sound <> O var
R3431:3434 CertiOS.framework.auxlibs.Maps <> join meth
R3443:3444 CertiOS.framework.proof.absinfer_sound <> O1 var
R3440:3441 CertiOS.framework.proof.absinfer_sound <> OO var
R3436:3438 CertiOS.framework.proof.absinfer_sound <> O'' var
R3608:3623 CertiOS.framework.proof.absinfer_sound <> join_eqdom_eqdom thm
R3608:3623 CertiOS.framework.proof.absinfer_sound <> join_eqdom_eqdom thm
R3649:3661 CertiOS.framework.proof.absinfer_sound <> join_eqdom_ex thm
R3649:3661 CertiOS.framework.proof.absinfer_sound <> join_eqdom_ex thm
prf 3740:3756 <> specstep_locality
R3808:3815 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3839:3846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3847:3853 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3856:3858 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R3883:3887 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3859:3867 CertiOS.framework.model.opsem <> spec_step ind
R3878:3879 CertiOS.framework.proof.absinfer_sound <> r' var
R3875:3876 CertiOS.framework.proof.absinfer_sound <> O1 var
R3873:3873 CertiOS.framework.proof.absinfer_sound <> r var
R3870:3871 CertiOS.framework.proof.absinfer_sound <> sc var
R3888:3891 CertiOS.framework.auxlibs.Maps <> join meth
R3897:3898 CertiOS.framework.proof.absinfer_sound <> O' var
R3893:3895 CertiOS.framework.proof.absinfer_sound <> O'' var
R3816:3824 CertiOS.framework.model.opsem <> spec_step ind
R3837:3838 CertiOS.framework.proof.absinfer_sound <> O' var
R3834:3835 CertiOS.framework.proof.absinfer_sound <> r' var
R3832:3832 CertiOS.framework.proof.absinfer_sound <> O var
R3830:3830 CertiOS.framework.proof.absinfer_sound <> r var
R3826:3827 CertiOS.framework.proof.absinfer_sound <> sc var
R3795:3798 CertiOS.framework.auxlibs.Maps <> join meth
R3806:3807 CertiOS.framework.proof.absinfer_sound <> O1 var
R3804:3804 CertiOS.framework.proof.absinfer_sound <> O var
R3800:3802 CertiOS.framework.proof.absinfer_sound <> O'' var
R3943:3956 CertiOS.framework.proof.absinfer_sound <> join_eqdom_ex3 thm
R3943:3956 CertiOS.framework.proof.absinfer_sound <> join_eqdom_ex3 thm
prf 4427:4448 <> spec_stepstar_locality
R4512:4519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4550:4553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4554:4560 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4563:4565 CertiOS.tactics.basetac.LibTactics <> :type_scope:'exists'_x_','_x not
R4594:4598 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4566:4578 CertiOS.framework.model.opsem <> spec_stepstar ind
R4589:4590 CertiOS.framework.proof.absinfer_sound <> r' var
R4586:4587 CertiOS.framework.proof.absinfer_sound <> O1 var
R4584:4584 CertiOS.framework.proof.absinfer_sound <> r var
R4581:4582 CertiOS.framework.proof.absinfer_sound <> sc var
R4599:4602 CertiOS.framework.auxlibs.Maps <> join meth
R4608:4609 CertiOS.framework.proof.absinfer_sound <> O' var
R4604:4606 CertiOS.framework.proof.absinfer_sound <> O'' var
R4537:4540 CertiOS.framework.auxlibs.Maps <> join meth
R4548:4549 CertiOS.framework.proof.absinfer_sound <> O1 var
R4546:4546 CertiOS.framework.proof.absinfer_sound <> O var
R4542:4544 CertiOS.framework.proof.absinfer_sound <> O'' var
R4484:4496 CertiOS.framework.model.opsem <> spec_stepstar ind
R4510:4511 CertiOS.framework.proof.absinfer_sound <> O' var
R4507:4508 CertiOS.framework.proof.absinfer_sound <> r' var
R4505:4505 CertiOS.framework.proof.absinfer_sound <> O var
R4503:4503 CertiOS.framework.proof.absinfer_sound <> r var
R4499:4500 CertiOS.framework.proof.absinfer_sound <> sc var
R4717:4733 CertiOS.framework.proof.absinfer_sound <> specstep_locality thm
R4717:4733 CertiOS.framework.proof.absinfer_sound <> specstep_locality thm
prf 4864:4880 <> absimp_eq_absimp'
R4936:4944 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4909:4922 CertiOS.framework.logic.inferules <> absimplication def
R4935:4935 CertiOS.framework.proof.absinfer_sound <> t var
R4933:4933 CertiOS.framework.proof.absinfer_sound <> q var
R4930:4930 CertiOS.framework.proof.absinfer_sound <> p var
R4927:4928 CertiOS.framework.proof.absinfer_sound <> li var
R4924:4925 CertiOS.framework.proof.absinfer_sound <> sc var
R4945:4951 CertiOS.framework.proof.absinfer_sound <> absimp' def
R4963:4963 CertiOS.framework.proof.absinfer_sound <> t var
R4961:4961 CertiOS.framework.proof.absinfer_sound <> q var
R4959:4959 CertiOS.framework.proof.absinfer_sound <> p var
R4956:4957 CertiOS.framework.proof.absinfer_sound <> li var
R4953:4954 CertiOS.framework.proof.absinfer_sound <> sc var
R5078:5081 CertiOS.framework.auxlibs.Maps <> join meth
R5078:5081 CertiOS.framework.auxlibs.Maps <> join meth
R5120:5141 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R5120:5141 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R5175:5178 CertiOS.framework.auxlibs.Maps <> join meth
R5175:5178 CertiOS.framework.auxlibs.Maps <> join meth
R5295:5298 CertiOS.framework.auxlibs.Maps <> join meth
R5302:5308 CertiOS.framework.logic.assertion <> empabst syndef
R5295:5298 CertiOS.framework.auxlibs.Maps <> join meth
R5302:5308 CertiOS.framework.logic.assertion <> empabst syndef
R5406:5407 Coq.Init.Logic <> :type_scope:x_'='_x not
R5406:5407 Coq.Init.Logic <> :type_scope:x_'='_x not
R5454:5454 Coq.Init.Logic <> :type_scope:x_'='_x not
R5454:5454 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 5505:5523 <> join_satp_local_inv
R5574:5581 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5594:5601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5625:5632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5633:5636 CertiOS.framework.logic.inferules <> satp def
R5645:5651 CertiOS.framework.logic.inferules <> CurLINV def
R5656:5656 CertiOS.framework.proof.absinfer_sound <> t var
R5653:5654 CertiOS.framework.proof.absinfer_sound <> li var
R5641:5642 CertiOS.framework.proof.absinfer_sound <> O' var
R5638:5639 CertiOS.framework.proof.absinfer_sound <> o' var
R5602:5605 CertiOS.framework.logic.inferules <> satp def
R5612:5618 CertiOS.framework.logic.inferules <> CurLINV def
R5623:5623 CertiOS.framework.proof.absinfer_sound <> t var
R5620:5621 CertiOS.framework.proof.absinfer_sound <> li var
R5609:5609 CertiOS.framework.proof.absinfer_sound <> O var
R5607:5607 CertiOS.framework.proof.absinfer_sound <> o var
R5582:5585 CertiOS.framework.auxlibs.Maps <> join meth
R5592:5593 CertiOS.framework.proof.absinfer_sound <> O' var
R5589:5590 CertiOS.framework.proof.absinfer_sound <> Of var
R5587:5587 CertiOS.framework.proof.absinfer_sound <> O var
R5560:5566 CertiOS.framework.logic.assertion <> joinmem def
R5572:5573 CertiOS.framework.proof.absinfer_sound <> o' var
R5570:5570 CertiOS.framework.proof.absinfer_sound <> M var
R5568:5568 CertiOS.framework.proof.absinfer_sound <> o var
R5686:5689 CertiOS.framework.logic.inferules <> satp def
R5737:5743 CertiOS.framework.logic.inferules <> CurLINV def
R5888:5894 CertiOS.framework.logic.assertion <> joinmem def
R5922:5924 CertiOS.framework.logic.assertion <> sat def
R5938:5940 CertiOS.framework.logic.assertion <> sat def
R5938:5940 CertiOS.framework.logic.assertion <> sat def
R5958:5960 CertiOS.framework.logic.assertion <> sat def
R5968:5970 CertiOS.framework.logic.assertion <> sat def
R5968:5970 CertiOS.framework.logic.assertion <> sat def
R6064:6068 CertiOS.framework.auxlibs.Maps <> merge meth
R6064:6068 CertiOS.framework.auxlibs.Maps <> merge meth
R6093:6097 CertiOS.framework.auxlibs.Maps <> merge meth
R6093:6097 CertiOS.framework.auxlibs.Maps <> merge meth
R6136:6161 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R6136:6161 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join_join_merge23_join thm
R6180:6196 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
R6180:6196 CertiOS.tactics.basetac.perm_map_lemmas_part4 <> join_merge23_join thm
R6220:6224 CertiOS.framework.auxlibs.Maps <> merge meth
R6234:6238 CertiOS.framework.auxlibs.Maps <> merge meth
R6220:6224 CertiOS.framework.auxlibs.Maps <> merge meth
R6234:6238 CertiOS.framework.auxlibs.Maps <> merge meth
R6261:6265 CertiOS.framework.auxlibs.Maps <> merge meth
R6276:6280 CertiOS.framework.auxlibs.Maps <> merge meth
R6261:6265 CertiOS.framework.auxlibs.Maps <> merge meth
R6276:6280 CertiOS.framework.auxlibs.Maps <> merge meth
R6317:6325 CertiOS.tactics.basetac.join_lib <> join_comm thm
R6317:6325 CertiOS.tactics.basetac.join_lib <> join_comm thm
R6343:6368 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join3_merge_merge_join thm
R6343:6368 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> mem_join3_merge_merge_join thm
R6388:6396 CertiOS.tactics.basetac.join_lib <> join_comm thm
R6388:6396 CertiOS.tactics.basetac.join_lib <> join_comm thm
R6414:6442 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> osabst_join3_merge_merge_join thm
R6414:6442 CertiOS.tactics.basetac.perm_map_lemmas_part1 <> osabst_join3_merge_merge_join thm
prf 6465:6482 <> local_inv_aop_irev
R6539:6546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6547:6550 CertiOS.framework.logic.inferules <> satp def
R6558:6564 CertiOS.framework.logic.inferules <> CurLINV def
R6569:6569 CertiOS.framework.proof.absinfer_sound <> t var
R6566:6567 CertiOS.framework.proof.absinfer_sound <> li var
R6554:6554 CertiOS.framework.proof.absinfer_sound <> O var
R6552:6552 CertiOS.framework.proof.absinfer_sound <> o var
R6522:6526 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R6512:6512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6514:6515 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6517:6517 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6521:6521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6513:6513 CertiOS.framework.proof.absinfer_sound <> o var
R6516:6516 CertiOS.framework.proof.absinfer_sound <> O var
R6518:6520 CertiOS.framework.proof.absinfer_sound <> aop var
R6527:6533 CertiOS.framework.logic.inferules <> CurLINV def
R6538:6538 CertiOS.framework.proof.absinfer_sound <> t var
R6535:6536 CertiOS.framework.proof.absinfer_sound <> li var
R6613:6616 CertiOS.framework.logic.inferules <> satp def
R6636:6642 CertiOS.framework.logic.inferules <> CurLINV def
R6725:6727 CertiOS.framework.logic.assertion <> sat def
R6740:6742 CertiOS.framework.logic.assertion <> sat def
R6740:6742 CertiOS.framework.logic.assertion <> sat def
R6901:6904 CertiOS.framework.logic.inferules <> LINV def
prf 7043:7067 <> GoodLocalInvAsrt_aop_irev
R7131:7140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7170:7179 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7205:7208 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R7180:7180 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7182:7183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7186:7187 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7189:7190 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7192:7193 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7195:7196 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7198:7199 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7204:7204 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7181:7181 CertiOS.framework.proof.absinfer_sound <> e var
R7184:7185 CertiOS.framework.proof.absinfer_sound <> e0 var
R7188:7188 CertiOS.framework.proof.absinfer_sound <> m var
R7191:7191 CertiOS.framework.proof.absinfer_sound <> i var
R7194:7194 CertiOS.framework.proof.absinfer_sound <> l var
R7197:7197 CertiOS.framework.proof.absinfer_sound <> o var
R7200:7203 CertiOS.framework.proof.absinfer_sound <> aop' var
R7209:7209 CertiOS.framework.proof.absinfer_sound <> p var
R7165:7168 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R7141:7141 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7143:7144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7147:7148 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7150:7151 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7153:7154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7156:7157 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7159:7160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7164:7164 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7142:7142 CertiOS.framework.proof.absinfer_sound <> e var
R7145:7146 CertiOS.framework.proof.absinfer_sound <> e0 var
R7149:7149 CertiOS.framework.proof.absinfer_sound <> m var
R7152:7152 CertiOS.framework.proof.absinfer_sound <> i var
R7155:7155 CertiOS.framework.proof.absinfer_sound <> l var
R7158:7158 CertiOS.framework.proof.absinfer_sound <> o var
R7161:7163 CertiOS.framework.proof.absinfer_sound <> aop var
R7169:7169 CertiOS.framework.proof.absinfer_sound <> p var
R7113:7128 CertiOS.framework.logic.assertion <> GoodLocalInvAsrt def
R7130:7130 CertiOS.framework.proof.absinfer_sound <> p var
R7581:7605 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
R7581:7605 CertiOS.framework.proof.absinfer_sound <> GoodLocalInvAsrt_aop_irev thm
prf 7647:7659 <> absinfersound
R7715:7724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7725:7738 CertiOS.framework.logic.inferules <> absimplication def
R7750:7750 CertiOS.framework.proof.absinfer_sound <> t var
R7748:7748 CertiOS.framework.proof.absinfer_sound <> q var
R7746:7746 CertiOS.framework.proof.absinfer_sound <> p var
R7743:7744 CertiOS.framework.proof.absinfer_sound <> li var
R7740:7741 CertiOS.framework.proof.absinfer_sound <> sc var
R7691:7702 CertiOS.framework.logic.inferules <> absinferfull ind
R7714:7714 CertiOS.framework.proof.absinfer_sound <> t var
R7712:7712 CertiOS.framework.proof.absinfer_sound <> q var
R7710:7710 CertiOS.framework.proof.absinfer_sound <> p var
R7707:7708 CertiOS.framework.proof.absinfer_sound <> li var
R7704:7705 CertiOS.framework.proof.absinfer_sound <> sc var
R8003:8006 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7998:8001 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R7988:7988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7990:7991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7993:7994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7997:7997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8007:8010 CertiOS.framework.logic.inferules <> satp def
R8017:8023 CertiOS.framework.logic.inferules <> CurLINV def
R8003:8006 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7998:8001 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R7988:7988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7990:7991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7993:7994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7997:7997 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8007:8010 CertiOS.framework.logic.inferules <> satp def
R8017:8023 CertiOS.framework.logic.inferules <> CurLINV def
R8138:8153 CertiOS.framework.proof.absinfer_sound <> hmstepstar_trans thm
R8138:8153 CertiOS.framework.proof.absinfer_sound <> hmstepstar_trans thm
R8244:8248 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8238:8241 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8225:8225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8227:8228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8230:8231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8237:8237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8249:8252 CertiOS.framework.logic.inferules <> satp def
R8259:8265 CertiOS.framework.logic.inferules <> CurLINV def
R8244:8248 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8238:8241 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8225:8225 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8227:8228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8230:8231 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8237:8237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8249:8252 CertiOS.framework.logic.inferules <> satp def
R8259:8265 CertiOS.framework.logic.inferules <> CurLINV def
R8415:8419 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8409:8412 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8396:8396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8398:8399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8401:8402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8408:8408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8420:8423 CertiOS.framework.logic.inferules <> satp def
R8430:8436 CertiOS.framework.logic.inferules <> CurLINV def
R8415:8419 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8409:8412 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8396:8396 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8398:8399 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8401:8402 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8408:8408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8420:8423 CertiOS.framework.logic.inferules <> satp def
R8430:8436 CertiOS.framework.logic.inferules <> CurLINV def
R8655:8659 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8650:8653 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8637:8637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8639:8640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8642:8643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8649:8649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8660:8663 CertiOS.framework.logic.inferules <> satp def
R8670:8676 CertiOS.framework.logic.inferules <> CurLINV def
R8655:8659 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8650:8653 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8637:8637 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8639:8640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8642:8643 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8649:8649 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8660:8663 CertiOS.framework.logic.inferules <> satp def
R8670:8676 CertiOS.framework.logic.inferules <> CurLINV def
R8871:8875 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8864:8867 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8851:8851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8853:8854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8856:8857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8863:8863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8876:8879 CertiOS.framework.logic.inferules <> satp def
R8886:8892 CertiOS.framework.logic.inferules <> CurLINV def
R8871:8875 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8864:8867 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R8851:8851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8853:8854 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8856:8857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8863:8863 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8876:8879 CertiOS.framework.logic.inferules <> satp def
R8886:8892 CertiOS.framework.logic.inferules <> CurLINV def
R9126:9129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9121:9124 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R9094:9094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9096:9097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9100:9101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9103:9104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9106:9107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9109:9110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9113:9114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9120:9120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9130:9133 CertiOS.framework.logic.inferules <> satp def
R9155:9161 CertiOS.framework.logic.inferules <> CurLINV def
R9135:9135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9137:9138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9141:9142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9144:9145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9147:9147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9149:9149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9126:9129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R9121:9124 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R9094:9094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9096:9097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9100:9101 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9103:9104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9106:9107 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9109:9110 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9113:9114 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9120:9120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9130:9133 CertiOS.framework.logic.inferules <> satp def
R9155:9161 CertiOS.framework.logic.inferules <> CurLINV def
R9135:9135 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9137:9138 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9141:9142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9144:9145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9147:9147 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9149:9149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9205:9222 CertiOS.framework.proof.absinfer_sound <> local_inv_aop_irev thm
R9205:9222 CertiOS.framework.proof.absinfer_sound <> local_inv_aop_irev thm
R9277:9280 CertiOS.framework.auxlibs.Maps <> join meth
R9277:9280 CertiOS.framework.auxlibs.Maps <> join meth
R9318:9339 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R9318:9339 CertiOS.framework.proof.absinfer_sound <> spec_stepstar_locality thm
R9478:9492 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R9478:9492 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R9512:9515 CertiOS.framework.auxlibs.Maps <> join meth
R9512:9515 CertiOS.framework.auxlibs.Maps <> join meth
R9552:9570 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R9552:9570 CertiOS.framework.proof.absinfer_sound <> join_satp_local_inv thm
R9844:9847 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R9821:9821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9823:9824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9827:9828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9830:9831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9833:9834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9836:9837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9839:9840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9843:9843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9849:9853 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9854:9857 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R9860:9862 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R9844:9847 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R9821:9821 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9823:9824 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9827:9828 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9830:9831 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9833:9834 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9836:9837 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9839:9840 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9843:9843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9849:9853 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R9854:9857 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R9860:9862 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R9929:9943 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R9929:9943 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10066:10069 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10045:10049 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R10022:10022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10024:10025 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10028:10029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10031:10032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10034:10035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10037:10038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10040:10041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10044:10044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10060:10064 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R10050:10053 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R10056:10059 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R10070:10073 CertiOS.framework.logic.inferules <> satp def
R10095:10101 CertiOS.framework.logic.inferules <> CurLINV def
R10075:10075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10077:10078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10081:10082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10084:10085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10087:10088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10090:10090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10066:10069 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R10045:10049 CertiOS.framework.logic.assertion <> ::x_'|='_x not
R10022:10022 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10024:10025 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10028:10029 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10031:10032 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10034:10035 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10037:10038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10040:10041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10044:10044 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10060:10064 CertiOS.framework.logic.assertion <> ::x_'**'_x not
R10050:10053 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R10056:10059 CertiOS.framework.logic.assertion <> ::'<||'_x_'||>' not
R10070:10073 CertiOS.framework.logic.inferules <> satp def
R10095:10101 CertiOS.framework.logic.inferules <> CurLINV def
R10075:10075 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10077:10078 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10081:10082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10084:10085 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10087:10088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10090:10090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10235:10236 CertiOS.framework.model.language <> ::x_';;'_x not
R10235:10236 CertiOS.framework.model.language <> ::x_';;'_x not
R10269:10282 CertiOS.framework.proof.absinfer_sound <> hmstepstar_seq thm
R10269:10282 CertiOS.framework.proof.absinfer_sound <> hmstepstar_seq thm
R10354:10368 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10354:10368 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10598:10603 CertiOS.framework.logic.assertion <> empmem syndef
R10598:10603 CertiOS.framework.logic.assertion <> empmem syndef
R10672:10686 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10672:10686 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10924:10938 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R10924:10938 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R11078:11094 CertiOS.framework.model.opsem <> spec_choice_step2 constr
R11078:11094 CertiOS.framework.model.opsem <> spec_choice_step2 constr
R11187:11201 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R11187:11201 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R11371:11374 CertiOS.framework.model.language <> ::'END'_x not
R11375:11378 Coq.Init.Datatypes <> None constr
R11371:11374 CertiOS.framework.model.language <> ::'END'_x not
R11375:11378 Coq.Init.Datatypes <> None constr
R11433:11436 Coq.Init.Logic <> :type_scope:x_'='_x not
R11417:11421 CertiOS.framework.auxlibs.Maps <> merge meth
R11426:11432 CertiOS.framework.logic.assertion <> empabst syndef
R11433:11436 Coq.Init.Logic <> :type_scope:x_'='_x not
R11417:11421 CertiOS.framework.auxlibs.Maps <> merge meth
R11426:11432 CertiOS.framework.logic.assertion <> empabst syndef
R11449:11460 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11449:11460 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11506:11521 CertiOS.framework.model.opsem <> spec_assume_step constr
R11506:11521 CertiOS.framework.model.opsem <> spec_assume_step constr
R11541:11552 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11541:11552 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11541:11552 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11635:11649 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R11635:11649 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R11800:11809 CertiOS.framework.logic.inferules <> sched_self def
R11907:11910 CertiOS.framework.model.language <> ::'END'_x not
R11911:11914 Coq.Init.Datatypes <> None constr
R11907:11910 CertiOS.framework.model.language <> ::'END'_x not
R11911:11914 Coq.Init.Datatypes <> None constr
R11969:11972 Coq.Init.Logic <> :type_scope:x_'='_x not
R11953:11957 CertiOS.framework.auxlibs.Maps <> merge meth
R11962:11968 CertiOS.framework.logic.assertion <> empabst syndef
R11969:11972 Coq.Init.Logic <> :type_scope:x_'='_x not
R11953:11957 CertiOS.framework.auxlibs.Maps <> merge meth
R11962:11968 CertiOS.framework.logic.assertion <> empabst syndef
R11985:11996 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R11985:11996 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R12042:12056 CertiOS.framework.model.opsem <> spec_sched_step constr
R12042:12056 CertiOS.framework.model.opsem <> spec_sched_step constr
R12076:12087 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R12076:12087 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R12076:12087 CertiOS.tactics.basetac.join_general <> jl_merge_emp thm
R12170:12184 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
R12170:12184 CertiOS.tactics.sepauto.seplog_lemmas <> change_aop_rule thm
