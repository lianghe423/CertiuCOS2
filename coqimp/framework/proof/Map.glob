DIGEST dd8707e1bbb972b068bddcf5502e5f1c
FCertiOS.framework.proof.Map
R15:20 CertiOS.framework.auxlibs.Coqlib <> <> lib
R40:42 Coq.Init.Logic <> :type_scope:'~'_x not
R48:49 Coq.Init.Logic <> :type_scope:'~'_x not
R44:46 Coq.Init.Logic <> :type_scope:x_'='_x not
R85:85 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R95:99 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R110:110 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R89:91 Coq.Init.Logic <> :type_scope:x_'='_x not
R103:106 Coq.Init.Logic <> :type_scope:x_'<>'_x not
modtype 183:189 <> MapSpec
ax 203:208 MapSpec domain
ax 227:231 MapSpec image
ax 251:260 MapSpec beq_Domain
R278:283 CertiOS.framework.proof.Map MapSpec domain defax
R287:287 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R293:297 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R304:304 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R289:291 Coq.Init.Logic <> :type_scope:x_'='_x not
R288:288 CertiOS.framework.proof.Map <> x var
R292:292 CertiOS.framework.proof.Map <> y var
R299:302 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R298:298 CertiOS.framework.proof.Map <> x var
R303:303 CertiOS.framework.proof.Map <> y var
R312:318 CertiOS.framework.proof.Map MapSpec <> modtype
R362:368 CertiOS.framework.proof.Map MapSpec <> mod
mod 348:353 <> MapFun
def 408:408 MapFun A
R419:429 CertiOS.framework.proof.Map Spec domain defax
def 443:443 MapFun B
R449:458 CertiOS.framework.proof.Map Spec image defax
def 472:476 MapFun beq_A
R481:495 CertiOS.framework.proof.Map Spec beq_Domain defax
def 528:530 MapFun Map
R536:539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R540:545 Coq.Init.Datatypes <> option ind
R547:547 CertiOS.framework.proof.Map MapFun B def
R535:535 CertiOS.framework.proof.Map MapFun A def
def 578:580 MapFun emp
R584:586 CertiOS.framework.proof.Map MapFun Map def
R601:601 CertiOS.framework.proof.Map MapFun A def
R606:609 Coq.Init.Datatypes <> None constr
def 645:647 MapFun put
R654:657 Coq.Init.Logic <> :type_scope:x_'->'_x not
R659:662 Coq.Init.Logic <> :type_scope:x_'->'_x not
R664:667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R668:670 CertiOS.framework.proof.Map MapFun Map def
R663:663 CertiOS.framework.proof.Map MapFun B def
R658:658 CertiOS.framework.proof.Map MapFun A def
R651:653 CertiOS.framework.proof.Map MapFun Map def
R707:711 CertiOS.framework.proof.Map MapFun beq_A def
R715:715 CertiOS.framework.proof.Map <> a var
R713:713 CertiOS.framework.proof.Map <> x var
R737:737 CertiOS.framework.proof.Map <> M var
R739:739 CertiOS.framework.proof.Map <> x var
R724:727 Coq.Init.Datatypes <> Some constr
R729:729 CertiOS.framework.proof.Map <> b var
def 755:760 MapFun remove
R767:770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R772:775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R776:778 CertiOS.framework.proof.Map MapFun Map def
R771:771 CertiOS.framework.proof.Map MapFun A def
R764:766 CertiOS.framework.proof.Map MapFun Map def
R813:817 CertiOS.framework.proof.Map MapFun beq_A def
R821:821 CertiOS.framework.proof.Map <> a var
R819:819 CertiOS.framework.proof.Map <> x var
R839:839 CertiOS.framework.proof.Map <> M var
R841:841 CertiOS.framework.proof.Map <> x var
R829:832 Coq.Init.Datatypes <> None constr
def 857:863 MapFun maps_to
R870:873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R875:878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R880:883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R879:879 CertiOS.framework.proof.Map MapFun B def
R874:874 CertiOS.framework.proof.Map MapFun A def
R867:869 CertiOS.framework.proof.Map MapFun Map def
R910:912 Coq.Init.Logic <> :type_scope:x_'='_x not
R907:907 CertiOS.framework.proof.Map <> M var
R909:909 CertiOS.framework.proof.Map <> a var
R913:916 Coq.Init.Datatypes <> Some constr
R918:918 CertiOS.framework.proof.Map <> b var
def 934:939 MapFun in_dom
R944:947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R951:954 Coq.Init.Logic <> :type_scope:x_'->'_x not
R948:950 CertiOS.framework.proof.Map MapFun Map def
R943:943 CertiOS.framework.proof.Map MapFun A def
R976:982 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R988:989 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R987:987 CertiOS.framework.proof.Map MapFun B def
R993:995 Coq.Init.Logic <> :type_scope:x_'='_x not
R990:990 CertiOS.framework.proof.Map <> M var
R992:992 CertiOS.framework.proof.Map <> a var
R996:999 Coq.Init.Datatypes <> Some constr
R1001:1001 CertiOS.framework.proof.Map <> b var
def 1017:1026 MapFun not_in_dom
R1031:1034 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1038:1041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1035:1037 CertiOS.framework.proof.Map MapFun Map def
R1030:1030 CertiOS.framework.proof.Map MapFun A def
R1066:1068 Coq.Init.Logic <> :type_scope:x_'='_x not
R1063:1063 CertiOS.framework.proof.Map <> M var
R1065:1065 CertiOS.framework.proof.Map <> a var
R1069:1072 Coq.Init.Datatypes <> None constr
def 1138:1144 MapFun sgltonM
R1151:1154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1156:1159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1161:1164 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1160:1160 CertiOS.framework.proof.Map MapFun B def
R1155:1155 CertiOS.framework.proof.Map MapFun A def
R1148:1150 CertiOS.framework.proof.Map MapFun Map def
R1206:1210 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1251:1251 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1193:1199 CertiOS.framework.proof.Map MapFun maps_to def
R1205:1205 CertiOS.framework.proof.Map <> b var
R1203:1203 CertiOS.framework.proof.Map <> a var
R1201:1201 CertiOS.framework.proof.Map <> M var
R1223:1223 CertiOS.framework.proof.Map MapFun A def
R1233:1236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1237:1246 CertiOS.framework.proof.Map MapFun not_in_dom def
R1250:1250 CertiOS.framework.proof.Map <> M var
R1248:1248 CertiOS.framework.proof.Map <> x var
R1228:1231 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1227:1227 CertiOS.framework.proof.Map <> x var
R1232:1232 CertiOS.framework.proof.Map <> a var
def 1266:1268 MapFun sig
R1273:1276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1278:1281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1282:1284 CertiOS.framework.proof.Map MapFun Map def
R1277:1277 CertiOS.framework.proof.Map MapFun B def
R1272:1272 CertiOS.framework.proof.Map MapFun A def
R1302:1304 CertiOS.framework.proof.Map MapFun put def
R1312:1312 CertiOS.framework.proof.Map <> b var
R1310:1310 CertiOS.framework.proof.Map <> a var
R1306:1308 CertiOS.framework.proof.Map MapFun emp def
def 1327:1333 MapFun sub_dom
R1340:1343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1347:1350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1344:1346 CertiOS.framework.proof.Map MapFun Map def
R1337:1339 CertiOS.framework.proof.Map MapFun Map def
R1385:1385 CertiOS.framework.proof.Map MapFun A def
R1399:1402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1403:1408 CertiOS.framework.proof.Map MapFun in_dom def
R1412:1413 CertiOS.framework.proof.Map <> M' var
R1410:1410 CertiOS.framework.proof.Map <> x var
R1389:1394 CertiOS.framework.proof.Map MapFun in_dom def
R1398:1398 CertiOS.framework.proof.Map <> M var
R1396:1396 CertiOS.framework.proof.Map <> x var
def 1429:1433 MapFun eqDom
R1440:1443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1447:1450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1444:1446 CertiOS.framework.proof.Map MapFun Map def
R1437:1439 CertiOS.framework.proof.Map MapFun Map def
R1485:1488 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1473:1479 CertiOS.framework.proof.Map MapFun sub_dom def
R1483:1484 CertiOS.framework.proof.Map <> M' var
R1481:1481 CertiOS.framework.proof.Map <> M var
R1489:1495 CertiOS.framework.proof.Map MapFun sub_dom def
R1500:1500 CertiOS.framework.proof.Map <> M var
R1497:1498 CertiOS.framework.proof.Map <> M' var
def 1516:1520 MapFun merge
R1527:1530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1534:1537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1538:1540 CertiOS.framework.proof.Map MapFun Map def
R1531:1533 CertiOS.framework.proof.Map MapFun Map def
R1524:1526 CertiOS.framework.proof.Map MapFun Map def
R1585:1586 CertiOS.framework.proof.Map <> M1 var
R1588:1588 CertiOS.framework.proof.Map <> x var
R1603:1606 Coq.Init.Datatypes <> None constr
R1611:1612 CertiOS.framework.proof.Map <> M2 var
R1614:1614 CertiOS.framework.proof.Map <> x var
R1629:1630 CertiOS.framework.proof.Map <> M1 var
R1632:1632 CertiOS.framework.proof.Map <> x var
def 1658:1665 MapFun disjoint
R1672:1675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1679:1682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1676:1678 CertiOS.framework.proof.Map MapFun Map def
R1669:1671 CertiOS.framework.proof.Map MapFun Map def
R1722:1722 CertiOS.framework.proof.Map MapFun A def
R1741:1744 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R1726:1735 CertiOS.framework.proof.Map MapFun not_in_dom def
R1739:1740 CertiOS.framework.proof.Map <> M1 var
R1737:1737 CertiOS.framework.proof.Map <> x var
R1745:1754 CertiOS.framework.proof.Map MapFun not_in_dom def
R1758:1759 CertiOS.framework.proof.Map <> M2 var
R1756:1756 CertiOS.framework.proof.Map <> x var
def 1776:1784 MapFun disjUnion
R1791:1794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1798:1801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1805:1808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1802:1804 CertiOS.framework.proof.Map MapFun Map def
R1795:1797 CertiOS.framework.proof.Map MapFun Map def
R1788:1790 CertiOS.framework.proof.Map MapFun Map def
R1850:1854 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1871:1871 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1835:1842 CertiOS.framework.proof.Map MapFun disjoint def
R1847:1849 CertiOS.framework.proof.Map <> M'' var
R1844:1845 CertiOS.framework.proof.Map <> M' var
R1856:1858 Coq.Init.Logic <> :type_scope:x_'='_x not
R1855:1855 CertiOS.framework.proof.Map <> M var
R1859:1863 CertiOS.framework.proof.Map MapFun merge def
R1868:1870 CertiOS.framework.proof.Map <> M'' var
R1865:1866 CertiOS.framework.proof.Map <> M' var
def 1886:1895 MapFun disjUnion3
R1902:1905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1909:1912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1916:1919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1923:1926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1920:1922 CertiOS.framework.proof.Map MapFun Map def
R1913:1915 CertiOS.framework.proof.Map MapFun Map def
R1906:1908 CertiOS.framework.proof.Map MapFun Map def
R1899:1901 CertiOS.framework.proof.Map MapFun Map def
R1955:1961 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1965:1966 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1986:1989 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1967:1975 CertiOS.framework.proof.Map MapFun disjUnion def
R1983:1985 CertiOS.framework.proof.Map <> M12 var
R1980:1981 CertiOS.framework.proof.Map <> M2 var
R1977:1978 CertiOS.framework.proof.Map <> M1 var
R1990:1998 CertiOS.framework.proof.Map MapFun disjUnion def
R2007:2007 CertiOS.framework.proof.Map <> M var
R2004:2005 CertiOS.framework.proof.Map <> M3 var
R2000:2002 CertiOS.framework.proof.Map <> M12 var
def 2022:2029 MapFun subseteq
R2036:2039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2043:2046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2040:2042 CertiOS.framework.proof.Map MapFun Map def
R2033:2035 CertiOS.framework.proof.Map MapFun Map def
R2086:2086 CertiOS.framework.proof.Map MapFun A def
R2101:2104 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2109:2111 Coq.Init.Logic <> :type_scope:x_'='_x not
R2105:2106 CertiOS.framework.proof.Map <> M1 var
R2108:2108 CertiOS.framework.proof.Map <> x var
R2112:2113 CertiOS.framework.proof.Map <> M2 var
R2115:2115 CertiOS.framework.proof.Map <> x var
R2090:2095 CertiOS.framework.proof.Map MapFun in_dom def
R2099:2100 CertiOS.framework.proof.Map <> M1 var
R2097:2097 CertiOS.framework.proof.Map <> x var
def 2131:2136 MapFun compat
R2143:2146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2150:2153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2147:2149 CertiOS.framework.proof.Map MapFun Map def
R2140:2142 CertiOS.framework.proof.Map MapFun Map def
R2193:2193 CertiOS.framework.proof.Map MapFun A def
R2201:2201 CertiOS.framework.proof.Map MapFun B def
R2219:2222 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2238:2241 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R2223:2232 CertiOS.framework.proof.Map MapFun not_in_dom def
R2236:2237 CertiOS.framework.proof.Map <> M2 var
R2234:2234 CertiOS.framework.proof.Map <> x var
R2242:2248 CertiOS.framework.proof.Map MapFun maps_to def
R2255:2255 CertiOS.framework.proof.Map <> y var
R2253:2253 CertiOS.framework.proof.Map <> x var
R2250:2251 CertiOS.framework.proof.Map <> M2 var
R2205:2211 CertiOS.framework.proof.Map MapFun maps_to def
R2218:2218 CertiOS.framework.proof.Map <> y var
R2216:2216 CertiOS.framework.proof.Map <> x var
R2213:2214 CertiOS.framework.proof.Map <> M1 var
ax 2304:2317 MapFun extensionality
R2357:2360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2361:2361 CertiOS.framework.proof.Map <> B var
R2356:2356 CertiOS.framework.proof.Map <> A var
R2365:2365 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2389:2393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2395:2397 Coq.Init.Logic <> :type_scope:x_'='_x not
R2394:2394 CertiOS.framework.proof.Map <> f var
R2398:2398 CertiOS.framework.proof.Map <> g var
R2377:2377 CertiOS.framework.proof.Map <> A var
R2383:2385 Coq.Init.Logic <> :type_scope:x_'='_x not
R2380:2380 CertiOS.framework.proof.Map <> f var
R2382:2382 CertiOS.framework.proof.Map <> x var
R2386:2386 CertiOS.framework.proof.Map <> g var
R2388:2388 CertiOS.framework.proof.Map <> x var
prf 2474:2479 MapFun eq_get
R2498:2500 CertiOS.framework.proof.Map MapFun Map def
R2508:2508 CertiOS.framework.proof.Map MapFun A def
R2518:2521 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2525:2527 Coq.Init.Logic <> :type_scope:x_'='_x not
R2522:2522 CertiOS.framework.proof.Map <> M var
R2524:2524 CertiOS.framework.proof.Map <> x var
R2528:2529 CertiOS.framework.proof.Map <> M' var
R2531:2531 CertiOS.framework.proof.Map <> x var
R2513:2515 Coq.Init.Logic <> :type_scope:x_'='_x not
R2512:2512 CertiOS.framework.proof.Map <> M var
R2516:2517 CertiOS.framework.proof.Map <> M' var
prf 2691:2700 MapFun put_get_eq
R2718:2720 CertiOS.framework.proof.Map MapFun Map def
R2727:2727 CertiOS.framework.proof.Map MapFun A def
R2735:2735 CertiOS.framework.proof.Map MapFun B def
R2752:2754 Coq.Init.Logic <> :type_scope:x_'='_x not
R2740:2742 CertiOS.framework.proof.Map MapFun put def
R2748:2748 CertiOS.framework.proof.Map <> y var
R2746:2746 CertiOS.framework.proof.Map <> x var
R2744:2744 CertiOS.framework.proof.Map <> M var
R2751:2751 CertiOS.framework.proof.Map <> x var
R2755:2758 Coq.Init.Datatypes <> Some constr
R2760:2760 CertiOS.framework.proof.Map <> y var
R2785:2787 CertiOS.framework.proof.Map MapFun put def
R2796:2800 CertiOS.framework.proof.Map MapFun beq_A def
R2796:2800 CertiOS.framework.proof.Map MapFun beq_A def
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 2868:2883 MapFun put_noninterfere
R2900:2902 CertiOS.framework.proof.Map MapFun Map def
R2913:2913 CertiOS.framework.proof.Map MapFun A def
R2921:2921 CertiOS.framework.proof.Map MapFun B def
R2932:2935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2950:2952 Coq.Init.Logic <> :type_scope:x_'='_x not
R2937:2939 CertiOS.framework.proof.Map MapFun put def
R2945:2945 CertiOS.framework.proof.Map <> y var
R2943:2943 CertiOS.framework.proof.Map <> x var
R2941:2941 CertiOS.framework.proof.Map <> M var
R2948:2949 CertiOS.framework.proof.Map <> x' var
R2953:2953 CertiOS.framework.proof.Map <> M var
R2955:2956 CertiOS.framework.proof.Map <> x' var
R2926:2929 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2925:2925 CertiOS.framework.proof.Map <> x var
R2930:2931 CertiOS.framework.proof.Map <> x' var
R2996:2998 CertiOS.framework.proof.Map MapFun put def
R3007:3011 CertiOS.framework.proof.Map MapFun beq_A def
R3007:3011 CertiOS.framework.proof.Map MapFun beq_A def
R3036:3038 Coq.Init.Logic <> :type_scope:x_'='_x not
R3036:3038 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 3142:3151 MapFun put_unique
R3170:3172 CertiOS.framework.proof.Map MapFun Map def
R3180:3180 CertiOS.framework.proof.Map MapFun A def
R3191:3191 CertiOS.framework.proof.Map MapFun B def
R3221:3228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3230:3232 Coq.Init.Logic <> :type_scope:x_'='_x not
R3229:3229 CertiOS.framework.proof.Map <> y var
R3233:3234 CertiOS.framework.proof.Map <> y' var
R3208:3210 Coq.Init.Logic <> :type_scope:x_'='_x not
R3199:3201 CertiOS.framework.proof.Map MapFun put def
R3207:3207 CertiOS.framework.proof.Map <> y var
R3205:3205 CertiOS.framework.proof.Map <> x var
R3203:3203 CertiOS.framework.proof.Map <> M var
R3211:3213 CertiOS.framework.proof.Map MapFun put def
R3219:3220 CertiOS.framework.proof.Map <> y' var
R3217:3217 CertiOS.framework.proof.Map <> x var
R3215:3215 CertiOS.framework.proof.Map <> M var
R3279:3281 Coq.Init.Logic <> :type_scope:x_'='_x not
R3268:3270 CertiOS.framework.proof.Map MapFun put def
R3282:3284 CertiOS.framework.proof.Map MapFun put def
R3279:3281 Coq.Init.Logic <> :type_scope:x_'='_x not
R3268:3270 CertiOS.framework.proof.Map MapFun put def
R3282:3284 CertiOS.framework.proof.Map MapFun put def
R3331:3340 CertiOS.framework.proof.Map MapFun put_get_eq thm
R3331:3340 CertiOS.framework.proof.Map MapFun put_get_eq thm
R3331:3340 CertiOS.framework.proof.Map MapFun put_get_eq thm
R3359:3368 CertiOS.framework.proof.Map MapFun put_get_eq thm
R3359:3368 CertiOS.framework.proof.Map MapFun put_get_eq thm
R3359:3368 CertiOS.framework.proof.Map MapFun put_get_eq thm
prf 3529:3546 MapFun remove_shrinks_dom
R3563:3565 CertiOS.framework.proof.Map MapFun Map def
R3573:3573 CertiOS.framework.proof.Map MapFun A def
R3593:3593 CertiOS.framework.proof.Map MapFun A def
R3611:3614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3615:3624 CertiOS.framework.proof.Map MapFun not_in_dom def
R3629:3634 CertiOS.framework.proof.Map MapFun remove def
R3638:3638 CertiOS.framework.proof.Map <> x var
R3636:3636 CertiOS.framework.proof.Map <> M var
R3626:3626 CertiOS.framework.proof.Map <> y var
R3597:3606 CertiOS.framework.proof.Map MapFun not_in_dom def
R3610:3610 CertiOS.framework.proof.Map <> M var
R3608:3608 CertiOS.framework.proof.Map <> y var
R3668:3677 CertiOS.framework.proof.Map MapFun not_in_dom def
R3689:3694 CertiOS.framework.proof.Map MapFun remove def
R3710:3714 CertiOS.framework.proof.Map MapFun beq_A def
R3710:3714 CertiOS.framework.proof.Map MapFun beq_A def
R3739:3748 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 3774:3783 MapFun nid_remove
R3800:3802 CertiOS.framework.proof.Map MapFun Map def
R3810:3810 CertiOS.framework.proof.Map MapFun A def
R3814:3823 CertiOS.framework.proof.Map MapFun not_in_dom def
R3828:3833 CertiOS.framework.proof.Map MapFun remove def
R3837:3837 CertiOS.framework.proof.Map <> x var
R3835:3835 CertiOS.framework.proof.Map <> M var
R3825:3825 CertiOS.framework.proof.Map <> x var
R3871:3876 CertiOS.framework.proof.Map MapFun remove def
R3888:3897 CertiOS.framework.proof.Map MapFun not_in_dom def
R3913:3917 CertiOS.framework.proof.Map MapFun beq_A def
R3913:3917 CertiOS.framework.proof.Map MapFun beq_A def
R3942:3944 Coq.Init.Logic <> :type_scope:x_'='_x not
R3942:3944 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 4034:4047 MapFun remove_nothing
R4064:4066 CertiOS.framework.proof.Map MapFun Map def
R4074:4074 CertiOS.framework.proof.Map MapFun A def
R4092:4095 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4097:4100 Coq.Init.Logic <> :type_scope:x_'='_x not
R4111:4111 Coq.Init.Logic <> :type_scope:x_'='_x not
R4096:4096 CertiOS.framework.proof.Map <> M var
R4101:4106 CertiOS.framework.proof.Map MapFun remove def
R4110:4110 CertiOS.framework.proof.Map <> x var
R4108:4108 CertiOS.framework.proof.Map <> M var
R4078:4087 CertiOS.framework.proof.Map MapFun not_in_dom def
R4091:4091 CertiOS.framework.proof.Map <> M var
R4089:4089 CertiOS.framework.proof.Map <> x var
R4139:4152 CertiOS.framework.proof.Map MapFun extensionality prfax
R4139:4152 CertiOS.framework.proof.Map MapFun extensionality prfax
R4174:4179 CertiOS.framework.proof.Map MapFun remove def
R4195:4199 CertiOS.framework.proof.Map MapFun beq_A def
R4195:4199 CertiOS.framework.proof.Map MapFun beq_A def
R4217:4226 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 4281:4297 MapFun remove_cancel_put
R4314:4316 CertiOS.framework.proof.Map MapFun Map def
R4324:4324 CertiOS.framework.proof.Map MapFun A def
R4332:4332 CertiOS.framework.proof.Map MapFun B def
R4356:4358 Coq.Init.Logic <> :type_scope:x_'='_x not
R4336:4341 CertiOS.framework.proof.Map MapFun remove def
R4355:4355 CertiOS.framework.proof.Map <> x var
R4344:4346 CertiOS.framework.proof.Map MapFun put def
R4352:4352 CertiOS.framework.proof.Map <> y var
R4350:4350 CertiOS.framework.proof.Map <> x var
R4348:4348 CertiOS.framework.proof.Map <> M var
R4359:4364 CertiOS.framework.proof.Map MapFun remove def
R4368:4368 CertiOS.framework.proof.Map <> x var
R4366:4366 CertiOS.framework.proof.Map <> M var
R4396:4409 CertiOS.framework.proof.Map MapFun extensionality prfax
R4396:4409 CertiOS.framework.proof.Map MapFun extensionality prfax
R4431:4436 CertiOS.framework.proof.Map MapFun remove def
R4452:4456 CertiOS.framework.proof.Map MapFun beq_A def
R4452:4456 CertiOS.framework.proof.Map MapFun beq_A def
R4482:4484 CertiOS.framework.proof.Map MapFun put def
R4500:4504 CertiOS.framework.proof.Map MapFun beq_A def
R4500:4504 CertiOS.framework.proof.Map MapFun beq_A def
prf 4550:4566 MapFun put_cancel_remove
R4583:4585 CertiOS.framework.proof.Map MapFun Map def
R4593:4593 CertiOS.framework.proof.Map MapFun A def
R4601:4601 CertiOS.framework.proof.Map MapFun B def
R4625:4627 Coq.Init.Logic <> :type_scope:x_'='_x not
R4605:4607 CertiOS.framework.proof.Map MapFun put def
R4624:4624 CertiOS.framework.proof.Map <> y var
R4622:4622 CertiOS.framework.proof.Map <> x var
R4610:4615 CertiOS.framework.proof.Map MapFun remove def
R4619:4619 CertiOS.framework.proof.Map <> x var
R4617:4617 CertiOS.framework.proof.Map <> M var
R4628:4630 CertiOS.framework.proof.Map MapFun put def
R4636:4636 CertiOS.framework.proof.Map <> y var
R4634:4634 CertiOS.framework.proof.Map <> x var
R4632:4632 CertiOS.framework.proof.Map <> M var
R4671:4684 CertiOS.framework.proof.Map MapFun extensionality prfax
R4671:4684 CertiOS.framework.proof.Map MapFun extensionality prfax
R4708:4710 CertiOS.framework.proof.Map MapFun put def
R4722:4727 CertiOS.framework.proof.Map MapFun remove def
R4743:4747 CertiOS.framework.proof.Map MapFun beq_A def
R4743:4747 CertiOS.framework.proof.Map MapFun beq_A def
prf 4774:4794 MapFun remove_ext_ext_remove
R4811:4813 CertiOS.framework.proof.Map MapFun Map def
R4824:4824 CertiOS.framework.proof.Map MapFun A def
R4832:4832 CertiOS.framework.proof.Map MapFun B def
R4843:4846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4868:4870 Coq.Init.Logic <> :type_scope:x_'='_x not
R4847:4852 CertiOS.framework.proof.Map MapFun remove def
R4866:4867 CertiOS.framework.proof.Map <> x' var
R4855:4857 CertiOS.framework.proof.Map MapFun put def
R4863:4863 CertiOS.framework.proof.Map <> y var
R4861:4861 CertiOS.framework.proof.Map <> x var
R4859:4859 CertiOS.framework.proof.Map <> M var
R4871:4873 CertiOS.framework.proof.Map MapFun put def
R4891:4891 CertiOS.framework.proof.Map <> y var
R4889:4889 CertiOS.framework.proof.Map <> x var
R4876:4881 CertiOS.framework.proof.Map MapFun remove def
R4885:4886 CertiOS.framework.proof.Map <> x' var
R4883:4883 CertiOS.framework.proof.Map <> M var
R4837:4840 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4836:4836 CertiOS.framework.proof.Map <> x var
R4841:4842 CertiOS.framework.proof.Map <> x' var
R4919:4932 CertiOS.framework.proof.Map MapFun extensionality prfax
R4919:4932 CertiOS.framework.proof.Map MapFun extensionality prfax
R4954:4956 CertiOS.framework.proof.Map MapFun put def
R4968:4973 CertiOS.framework.proof.Map MapFun remove def
R4989:4993 CertiOS.framework.proof.Map MapFun beq_A def
R4989:4993 CertiOS.framework.proof.Map MapFun beq_A def
R5015:5019 CertiOS.framework.proof.Map MapFun beq_A def
R5015:5019 CertiOS.framework.proof.Map MapFun beq_A def
R5082:5086 CertiOS.framework.proof.Map MapFun beq_A def
R5082:5086 CertiOS.framework.proof.Map MapFun beq_A def
prf 5354:5365 MapFun in_not_notin
R5383:5383 CertiOS.framework.proof.Map MapFun A def
R5391:5393 CertiOS.framework.proof.Map MapFun Map def
R5407:5410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5411:5413 Coq.Init.Logic <> :type_scope:'~'_x not
R5428:5428 Coq.Init.Logic <> :type_scope:'~'_x not
R5414:5423 CertiOS.framework.proof.Map MapFun not_in_dom def
R5427:5427 CertiOS.framework.proof.Map <> M var
R5425:5425 CertiOS.framework.proof.Map <> x var
R5397:5402 CertiOS.framework.proof.Map MapFun in_dom def
R5406:5406 CertiOS.framework.proof.Map <> M var
R5404:5404 CertiOS.framework.proof.Map <> x var
R5466:5471 CertiOS.framework.proof.Map MapFun in_dom def
R5486:5495 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 5578:5589 MapFun notin_not_in
R5606:5606 CertiOS.framework.proof.Map MapFun A def
R5614:5616 CertiOS.framework.proof.Map MapFun Map def
R5634:5637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5638:5640 Coq.Init.Logic <> :type_scope:'~'_x not
R5651:5651 Coq.Init.Logic <> :type_scope:'~'_x not
R5641:5646 CertiOS.framework.proof.Map MapFun in_dom def
R5650:5650 CertiOS.framework.proof.Map <> M var
R5648:5648 CertiOS.framework.proof.Map <> x var
R5620:5629 CertiOS.framework.proof.Map MapFun not_in_dom def
R5633:5633 CertiOS.framework.proof.Map <> M var
R5631:5631 CertiOS.framework.proof.Map <> x var
R5689:5694 CertiOS.framework.proof.Map MapFun in_dom def
R5710:5719 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 5801:5812 MapFun not_in_notin
R5829:5829 CertiOS.framework.proof.Map MapFun A def
R5837:5839 CertiOS.framework.proof.Map MapFun Map def
R5855:5858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5859:5868 CertiOS.framework.proof.Map MapFun not_in_dom def
R5872:5872 CertiOS.framework.proof.Map <> M var
R5870:5870 CertiOS.framework.proof.Map <> x var
R5843:5844 Coq.Init.Logic <> :type_scope:'~'_x not
R5845:5850 CertiOS.framework.proof.Map MapFun in_dom def
R5854:5854 CertiOS.framework.proof.Map <> M var
R5852:5852 CertiOS.framework.proof.Map <> x var
R5901:5910 CertiOS.framework.proof.Map MapFun not_in_dom def
R5922:5927 CertiOS.framework.proof.Map MapFun in_dom def
R5964:5970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5976:5977 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5975:5975 CertiOS.framework.proof.Map MapFun B def
R5984:5986 Coq.Init.Logic <> :type_scope:x_'='_x not
R5978:5981 Coq.Init.Datatypes <> Some constr
R5987:5990 Coq.Init.Datatypes <> Some constr
R5992:5992 CertiOS.framework.proof.Map <> b var
R5964:5970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5976:5977 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5975:5975 CertiOS.framework.proof.Map MapFun B def
R5984:5986 Coq.Init.Logic <> :type_scope:x_'='_x not
R5978:5981 Coq.Init.Datatypes <> Some constr
R5987:5990 Coq.Init.Datatypes <> Some constr
R5992:5992 CertiOS.framework.proof.Map <> b var
prf 6050:6061 MapFun not_notin_in
R6078:6078 CertiOS.framework.proof.Map MapFun A def
R6086:6088 CertiOS.framework.proof.Map MapFun Map def
R6108:6111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6112:6117 CertiOS.framework.proof.Map MapFun in_dom def
R6121:6121 CertiOS.framework.proof.Map <> M var
R6119:6119 CertiOS.framework.proof.Map <> x var
R6092:6093 Coq.Init.Logic <> :type_scope:'~'_x not
R6094:6103 CertiOS.framework.proof.Map MapFun not_in_dom def
R6107:6107 CertiOS.framework.proof.Map <> M var
R6105:6105 CertiOS.framework.proof.Map <> x var
R6150:6155 CertiOS.framework.proof.Map MapFun in_dom def
R6165:6174 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 6244:6254 MapFun in_or_notin
R6281:6284 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6271:6276 CertiOS.framework.proof.Map MapFun in_dom def
R6280:6280 CertiOS.framework.proof.Map <> M var
R6278:6278 CertiOS.framework.proof.Map <> x var
R6285:6294 CertiOS.framework.proof.Map MapFun not_in_dom def
R6298:6298 CertiOS.framework.proof.Map <> M var
R6296:6296 CertiOS.framework.proof.Map <> x var
R6331:6336 CertiOS.framework.proof.Map MapFun in_dom def
R6348:6357 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 6543:6557 MapFun disjoint_commut
R6588:6591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6592:6599 CertiOS.framework.proof.Map MapFun disjoint def
R6604:6605 CertiOS.framework.proof.Map <> M1 var
R6601:6602 CertiOS.framework.proof.Map <> M2 var
R6574:6581 CertiOS.framework.proof.Map MapFun disjoint def
R6586:6587 CertiOS.framework.proof.Map <> M2 var
R6583:6584 CertiOS.framework.proof.Map <> M1 var
R6640:6647 CertiOS.framework.proof.Map MapFun disjoint def
R6685:6688 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6670:6679 CertiOS.framework.proof.Map MapFun not_in_dom def
R6689:6698 CertiOS.framework.proof.Map MapFun not_in_dom def
R6685:6688 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R6670:6679 CertiOS.framework.proof.Map MapFun not_in_dom def
R6689:6698 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 6814:6828 MapFun putA_presv_nidB
R6869:6872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6878:6881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6882:6891 CertiOS.framework.proof.Map MapFun not_in_dom def
R6896:6898 CertiOS.framework.proof.Map MapFun put def
R6905:6905 CertiOS.framework.proof.Map <> y var
R6902:6903 CertiOS.framework.proof.Map <> x' var
R6900:6900 CertiOS.framework.proof.Map <> M var
R6893:6893 CertiOS.framework.proof.Map <> x var
R6874:6875 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6873:6873 CertiOS.framework.proof.Map <> x var
R6876:6877 CertiOS.framework.proof.Map <> x' var
R6855:6864 CertiOS.framework.proof.Map MapFun not_in_dom def
R6868:6868 CertiOS.framework.proof.Map <> M var
R6866:6866 CertiOS.framework.proof.Map <> x var
R6935:6944 CertiOS.framework.proof.Map MapFun not_in_dom def
R6956:6958 CertiOS.framework.proof.Map MapFun put def
R6974:6978 CertiOS.framework.proof.Map MapFun beq_A def
R6974:6978 CertiOS.framework.proof.Map MapFun beq_A def
prf 7023:7044 MapFun extend_presv_disj_left
R7065:7067 CertiOS.framework.proof.Map MapFun Map def
R7075:7075 CertiOS.framework.proof.Map MapFun A def
R7083:7083 CertiOS.framework.proof.Map MapFun B def
R7105:7108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7124:7127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7128:7135 CertiOS.framework.proof.Map MapFun disjoint def
R7150:7151 CertiOS.framework.proof.Map <> M2 var
R7138:7140 CertiOS.framework.proof.Map MapFun put def
R7147:7147 CertiOS.framework.proof.Map <> y var
R7145:7145 CertiOS.framework.proof.Map <> x var
R7142:7143 CertiOS.framework.proof.Map <> M1 var
R7109:7118 CertiOS.framework.proof.Map MapFun not_in_dom def
R7122:7123 CertiOS.framework.proof.Map <> M2 var
R7120:7120 CertiOS.framework.proof.Map <> x var
R7091:7098 CertiOS.framework.proof.Map MapFun disjoint def
R7103:7104 CertiOS.framework.proof.Map <> M2 var
R7100:7101 CertiOS.framework.proof.Map <> M1 var
R7180:7187 CertiOS.framework.proof.Map MapFun disjoint def
R7199:7208 CertiOS.framework.proof.Map MapFun not_in_dom def
R7226:7233 CertiOS.framework.proof.Map MapFun disjoint def
R7276:7279 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7260:7269 CertiOS.framework.proof.Map MapFun not_in_dom def
R7280:7289 CertiOS.framework.proof.Map MapFun not_in_dom def
R7276:7279 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7260:7269 CertiOS.framework.proof.Map MapFun not_in_dom def
R7280:7289 CertiOS.framework.proof.Map MapFun not_in_dom def
R7341:7343 CertiOS.framework.proof.Map MapFun put def
R7355:7364 CertiOS.framework.proof.Map MapFun not_in_dom def
R7380:7384 CertiOS.framework.proof.Map MapFun beq_A def
R7380:7384 CertiOS.framework.proof.Map MapFun beq_A def
R7434:7443 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 7546:7568 MapFun extend_presv_disj_right
R7589:7591 CertiOS.framework.proof.Map MapFun Map def
R7599:7599 CertiOS.framework.proof.Map MapFun A def
R7607:7607 CertiOS.framework.proof.Map MapFun B def
R7629:7632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7648:7651 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7652:7659 CertiOS.framework.proof.Map MapFun disjoint def
R7665:7667 CertiOS.framework.proof.Map MapFun put def
R7674:7674 CertiOS.framework.proof.Map <> y var
R7672:7672 CertiOS.framework.proof.Map <> x var
R7669:7670 CertiOS.framework.proof.Map <> M2 var
R7661:7662 CertiOS.framework.proof.Map <> M1 var
R7633:7642 CertiOS.framework.proof.Map MapFun not_in_dom def
R7646:7647 CertiOS.framework.proof.Map <> M1 var
R7644:7644 CertiOS.framework.proof.Map <> x var
R7615:7622 CertiOS.framework.proof.Map MapFun disjoint def
R7627:7628 CertiOS.framework.proof.Map <> M2 var
R7624:7625 CertiOS.framework.proof.Map <> M1 var
R7703:7717 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R7703:7717 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R7730:7737 CertiOS.framework.proof.Map MapFun disjoint def
R7730:7737 CertiOS.framework.proof.Map MapFun disjoint def
prf 7956:7974 MapFun disj_exclusive_left
R7992:7992 CertiOS.framework.proof.Map MapFun A def
R8003:8005 CertiOS.framework.proof.Map MapFun Map def
R8027:8030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8041:8044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8045:8054 CertiOS.framework.proof.Map MapFun not_in_dom def
R8058:8059 CertiOS.framework.proof.Map <> M' var
R8056:8056 CertiOS.framework.proof.Map <> x var
R8031:8036 CertiOS.framework.proof.Map MapFun in_dom def
R8040:8040 CertiOS.framework.proof.Map <> M var
R8038:8038 CertiOS.framework.proof.Map <> x var
R8014:8021 CertiOS.framework.proof.Map MapFun disjoint def
R8025:8026 CertiOS.framework.proof.Map <> M' var
R8023:8023 CertiOS.framework.proof.Map <> M var
R8088:8095 CertiOS.framework.proof.Map MapFun disjoint def
R8127:8130 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8113:8122 CertiOS.framework.proof.Map MapFun not_in_dom def
R8131:8140 CertiOS.framework.proof.Map MapFun not_in_dom def
R8127:8130 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8113:8122 CertiOS.framework.proof.Map MapFun not_in_dom def
R8131:8140 CertiOS.framework.proof.Map MapFun not_in_dom def
R8187:8188 Coq.Init.Logic <> :type_scope:'~'_x not
R8189:8194 CertiOS.framework.proof.Map MapFun in_dom def
R8187:8188 Coq.Init.Logic <> :type_scope:'~'_x not
R8189:8194 CertiOS.framework.proof.Map MapFun in_dom def
prf 8280:8299 MapFun disj_exclusive_right
R8317:8317 CertiOS.framework.proof.Map MapFun A def
R8328:8330 CertiOS.framework.proof.Map MapFun Map def
R8352:8355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8367:8370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8371:8380 CertiOS.framework.proof.Map MapFun not_in_dom def
R8384:8384 CertiOS.framework.proof.Map <> M var
R8382:8382 CertiOS.framework.proof.Map <> x var
R8356:8361 CertiOS.framework.proof.Map MapFun in_dom def
R8365:8366 CertiOS.framework.proof.Map <> M' var
R8363:8363 CertiOS.framework.proof.Map <> x var
R8339:8346 CertiOS.framework.proof.Map MapFun disjoint def
R8350:8351 CertiOS.framework.proof.Map <> M' var
R8348:8348 CertiOS.framework.proof.Map <> M var
R8414:8421 CertiOS.framework.proof.Map MapFun disjoint def
R8414:8421 CertiOS.framework.proof.Map MapFun disjoint def
R8454:8472 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R8454:8472 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
prf 8543:8564 MapFun update_presv_disj_left
R8585:8587 CertiOS.framework.proof.Map MapFun Map def
R8595:8595 CertiOS.framework.proof.Map MapFun A def
R8603:8603 CertiOS.framework.proof.Map MapFun B def
R8625:8628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8640:8643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8644:8651 CertiOS.framework.proof.Map MapFun disjoint def
R8666:8667 CertiOS.framework.proof.Map <> M2 var
R8654:8656 CertiOS.framework.proof.Map MapFun put def
R8663:8663 CertiOS.framework.proof.Map <> y var
R8661:8661 CertiOS.framework.proof.Map <> x var
R8658:8659 CertiOS.framework.proof.Map <> M1 var
R8629:8634 CertiOS.framework.proof.Map MapFun in_dom def
R8638:8639 CertiOS.framework.proof.Map <> M1 var
R8636:8636 CertiOS.framework.proof.Map <> x var
R8611:8618 CertiOS.framework.proof.Map MapFun disjoint def
R8623:8624 CertiOS.framework.proof.Map <> M2 var
R8620:8621 CertiOS.framework.proof.Map <> M1 var
R8697:8706 CertiOS.framework.proof.Map MapFun not_in_dom def
R8697:8706 CertiOS.framework.proof.Map MapFun not_in_dom def
R8723:8741 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R8723:8741 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
prf 8833:8855 MapFun update_presv_disj_right
R8876:8878 CertiOS.framework.proof.Map MapFun Map def
R8886:8886 CertiOS.framework.proof.Map MapFun A def
R8894:8894 CertiOS.framework.proof.Map MapFun B def
R8916:8919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8931:8934 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8935:8942 CertiOS.framework.proof.Map MapFun disjoint def
R8948:8950 CertiOS.framework.proof.Map MapFun put def
R8957:8957 CertiOS.framework.proof.Map <> y var
R8955:8955 CertiOS.framework.proof.Map <> x var
R8952:8953 CertiOS.framework.proof.Map <> M2 var
R8944:8945 CertiOS.framework.proof.Map <> M1 var
R8920:8925 CertiOS.framework.proof.Map MapFun in_dom def
R8929:8930 CertiOS.framework.proof.Map <> M2 var
R8927:8927 CertiOS.framework.proof.Map <> x var
R8902:8909 CertiOS.framework.proof.Map MapFun disjoint def
R8914:8915 CertiOS.framework.proof.Map <> M2 var
R8911:8912 CertiOS.framework.proof.Map <> M1 var
R8986:9000 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R8986:9000 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R9013:9020 CertiOS.framework.proof.Map MapFun disjoint def
R9013:9020 CertiOS.framework.proof.Map MapFun disjoint def
prf 9104:9125 MapFun remove_presv_disj_left
R9146:9148 CertiOS.framework.proof.Map MapFun Map def
R9156:9156 CertiOS.framework.proof.Map MapFun A def
R9178:9181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9182:9189 CertiOS.framework.proof.Map MapFun disjoint def
R9205:9206 CertiOS.framework.proof.Map <> M2 var
R9192:9197 CertiOS.framework.proof.Map MapFun remove def
R9202:9202 CertiOS.framework.proof.Map <> x var
R9199:9200 CertiOS.framework.proof.Map <> M1 var
R9164:9171 CertiOS.framework.proof.Map MapFun disjoint def
R9176:9177 CertiOS.framework.proof.Map <> M2 var
R9173:9174 CertiOS.framework.proof.Map <> M1 var
R9235:9242 CertiOS.framework.proof.Map MapFun disjoint def
R9254:9261 CertiOS.framework.proof.Map MapFun disjoint def
R9304:9307 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9288:9297 CertiOS.framework.proof.Map MapFun not_in_dom def
R9308:9317 CertiOS.framework.proof.Map MapFun not_in_dom def
R9304:9307 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9288:9297 CertiOS.framework.proof.Map MapFun not_in_dom def
R9308:9317 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 9458:9480 MapFun remove_presv_disj_right
R9501:9503 CertiOS.framework.proof.Map MapFun Map def
R9511:9511 CertiOS.framework.proof.Map MapFun A def
R9533:9536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9537:9544 CertiOS.framework.proof.Map MapFun disjoint def
R9560:9561 CertiOS.framework.proof.Map <> M2 var
R9547:9552 CertiOS.framework.proof.Map MapFun remove def
R9557:9557 CertiOS.framework.proof.Map <> x var
R9554:9555 CertiOS.framework.proof.Map <> M1 var
R9519:9526 CertiOS.framework.proof.Map MapFun disjoint def
R9531:9532 CertiOS.framework.proof.Map <> M2 var
R9528:9529 CertiOS.framework.proof.Map <> M1 var
R9589:9603 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R9589:9603 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R9616:9623 CertiOS.framework.proof.Map MapFun disjoint def
R9616:9623 CertiOS.framework.proof.Map MapFun disjoint def
prf 9826:9847 MapFun notin_merge_distr_left
R9870:9872 CertiOS.framework.proof.Map MapFun Map def
R9880:9880 CertiOS.framework.proof.Map MapFun A def
R9915:9918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9919:9928 CertiOS.framework.proof.Map MapFun not_in_dom def
R9932:9933 CertiOS.framework.proof.Map <> M1 var
R9930:9930 CertiOS.framework.proof.Map <> x var
R9889:9898 CertiOS.framework.proof.Map MapFun not_in_dom def
R9903:9907 CertiOS.framework.proof.Map MapFun merge def
R9912:9913 CertiOS.framework.proof.Map <> M2 var
R9909:9910 CertiOS.framework.proof.Map <> M1 var
R9900:9900 CertiOS.framework.proof.Map <> x var
R9966:9975 CertiOS.framework.proof.Map MapFun not_in_dom def
R9985:9989 CertiOS.framework.proof.Map MapFun merge def
prf 10067:10089 MapFun notin_merge_distr_right
R10112:10114 CertiOS.framework.proof.Map MapFun Map def
R10122:10122 CertiOS.framework.proof.Map MapFun A def
R10157:10160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10161:10170 CertiOS.framework.proof.Map MapFun not_in_dom def
R10174:10175 CertiOS.framework.proof.Map <> M2 var
R10172:10172 CertiOS.framework.proof.Map <> x var
R10131:10140 CertiOS.framework.proof.Map MapFun not_in_dom def
R10145:10149 CertiOS.framework.proof.Map MapFun merge def
R10154:10155 CertiOS.framework.proof.Map <> M2 var
R10151:10152 CertiOS.framework.proof.Map <> M1 var
R10142:10142 CertiOS.framework.proof.Map <> x var
R10208:10217 CertiOS.framework.proof.Map MapFun not_in_dom def
R10227:10231 CertiOS.framework.proof.Map MapFun merge def
prf 10340:10361 MapFun merge_presv_indom_left
R10381:10383 CertiOS.framework.proof.Map MapFun Map def
R10390:10390 CertiOS.framework.proof.Map MapFun A def
R10405:10408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10409:10414 CertiOS.framework.proof.Map MapFun in_dom def
R10419:10423 CertiOS.framework.proof.Map MapFun merge def
R10428:10429 CertiOS.framework.proof.Map <> M2 var
R10425:10426 CertiOS.framework.proof.Map <> M1 var
R10416:10416 CertiOS.framework.proof.Map <> x var
R10394:10399 CertiOS.framework.proof.Map MapFun in_dom def
R10403:10404 CertiOS.framework.proof.Map <> M1 var
R10401:10401 CertiOS.framework.proof.Map <> x var
R10467:10472 CertiOS.framework.proof.Map MapFun in_dom def
R10484:10488 CertiOS.framework.proof.Map MapFun merge def
prf 10569:10591 MapFun merge_presv_indom_right
R10611:10613 CertiOS.framework.proof.Map MapFun Map def
R10620:10620 CertiOS.framework.proof.Map MapFun A def
R10635:10638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10639:10644 CertiOS.framework.proof.Map MapFun in_dom def
R10649:10653 CertiOS.framework.proof.Map MapFun merge def
R10658:10659 CertiOS.framework.proof.Map <> M2 var
R10655:10656 CertiOS.framework.proof.Map <> M1 var
R10646:10646 CertiOS.framework.proof.Map <> x var
R10624:10629 CertiOS.framework.proof.Map MapFun in_dom def
R10633:10634 CertiOS.framework.proof.Map <> M2 var
R10631:10631 CertiOS.framework.proof.Map <> x var
R10689:10694 CertiOS.framework.proof.Map MapFun in_dom def
R10704:10709 CertiOS.framework.proof.Map MapFun in_dom def
R10726:10730 CertiOS.framework.proof.Map MapFun merge def
R10743:10743 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10767:10772 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10784:10784 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10744:10750 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10752:10753 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10758:10760 Coq.Init.Logic <> :type_scope:x_'='_x not
R10761:10764 Coq.Init.Datatypes <> Some constr
R10766:10766 CertiOS.framework.proof.Map <> y var
R10777:10779 Coq.Init.Logic <> :type_scope:x_'='_x not
R10780:10783 Coq.Init.Datatypes <> None constr
R10743:10743 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10767:10772 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10784:10784 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10744:10750 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10752:10753 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R10758:10760 Coq.Init.Logic <> :type_scope:x_'='_x not
R10761:10764 Coq.Init.Datatypes <> Some constr
R10766:10766 CertiOS.framework.proof.Map <> y var
R10777:10779 Coq.Init.Logic <> :type_scope:x_'='_x not
R10780:10783 Coq.Init.Datatypes <> None constr
prf 11053:11074 MapFun in_merge_left_or_right
R11094:11096 CertiOS.framework.proof.Map MapFun Map def
R11103:11103 CertiOS.framework.proof.Map MapFun A def
R11129:11132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11144:11147 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11133:11138 CertiOS.framework.proof.Map MapFun in_dom def
R11142:11143 CertiOS.framework.proof.Map <> M1 var
R11140:11140 CertiOS.framework.proof.Map <> x var
R11148:11153 CertiOS.framework.proof.Map MapFun in_dom def
R11157:11158 CertiOS.framework.proof.Map <> M2 var
R11155:11155 CertiOS.framework.proof.Map <> x var
R11107:11112 CertiOS.framework.proof.Map MapFun in_dom def
R11117:11121 CertiOS.framework.proof.Map MapFun merge def
R11126:11127 CertiOS.framework.proof.Map <> M2 var
R11123:11124 CertiOS.framework.proof.Map <> M1 var
R11114:11114 CertiOS.framework.proof.Map <> x var
R11187:11192 CertiOS.framework.proof.Map MapFun in_dom def
R11209:11213 CertiOS.framework.proof.Map MapFun merge def
R11230:11235 CertiOS.framework.proof.Map MapFun in_dom def
prf 11344:11369 MapFun in_merge_not_left_in_right
R11389:11391 CertiOS.framework.proof.Map MapFun Map def
R11398:11398 CertiOS.framework.proof.Map MapFun A def
R11424:11427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11443:11446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11447:11452 CertiOS.framework.proof.Map MapFun in_dom def
R11456:11457 CertiOS.framework.proof.Map <> M2 var
R11454:11454 CertiOS.framework.proof.Map <> x var
R11428:11437 CertiOS.framework.proof.Map MapFun not_in_dom def
R11441:11442 CertiOS.framework.proof.Map <> M1 var
R11439:11439 CertiOS.framework.proof.Map <> x var
R11402:11407 CertiOS.framework.proof.Map MapFun in_dom def
R11412:11416 CertiOS.framework.proof.Map MapFun merge def
R11421:11422 CertiOS.framework.proof.Map <> M2 var
R11418:11419 CertiOS.framework.proof.Map <> M1 var
R11409:11409 CertiOS.framework.proof.Map <> x var
R11498:11501 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11487:11492 CertiOS.framework.proof.Map MapFun in_dom def
R11502:11507 CertiOS.framework.proof.Map MapFun in_dom def
R11498:11501 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11487:11492 CertiOS.framework.proof.Map MapFun in_dom def
R11502:11507 CertiOS.framework.proof.Map MapFun in_dom def
R11564:11565 Coq.Init.Logic <> :type_scope:'~'_x not
R11566:11571 CertiOS.framework.proof.Map MapFun in_dom def
R11564:11565 Coq.Init.Logic <> :type_scope:'~'_x not
R11566:11571 CertiOS.framework.proof.Map MapFun in_dom def
prf 11679:11704 MapFun in_merge_not_right_in_left
R11724:11726 CertiOS.framework.proof.Map MapFun Map def
R11733:11733 CertiOS.framework.proof.Map MapFun A def
R11759:11762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11778:11781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11782:11787 CertiOS.framework.proof.Map MapFun in_dom def
R11791:11792 CertiOS.framework.proof.Map <> M1 var
R11789:11789 CertiOS.framework.proof.Map <> x var
R11763:11772 CertiOS.framework.proof.Map MapFun not_in_dom def
R11776:11777 CertiOS.framework.proof.Map <> M2 var
R11774:11774 CertiOS.framework.proof.Map <> x var
R11737:11742 CertiOS.framework.proof.Map MapFun in_dom def
R11747:11751 CertiOS.framework.proof.Map MapFun merge def
R11756:11757 CertiOS.framework.proof.Map <> M2 var
R11753:11754 CertiOS.framework.proof.Map <> M1 var
R11744:11744 CertiOS.framework.proof.Map <> x var
R11833:11836 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11822:11827 CertiOS.framework.proof.Map MapFun in_dom def
R11837:11842 CertiOS.framework.proof.Map MapFun in_dom def
R11833:11836 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11822:11827 CertiOS.framework.proof.Map MapFun in_dom def
R11837:11842 CertiOS.framework.proof.Map MapFun in_dom def
R11905:11906 Coq.Init.Logic <> :type_scope:'~'_x not
R11907:11912 CertiOS.framework.proof.Map MapFun in_dom def
R11905:11906 Coq.Init.Logic <> :type_scope:'~'_x not
R11907:11912 CertiOS.framework.proof.Map MapFun in_dom def
prf 12014:12028 MapFun in_merge_commut
R12048:12050 CertiOS.framework.proof.Map MapFun Map def
R12057:12057 CertiOS.framework.proof.Map MapFun A def
R12083:12086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12087:12092 CertiOS.framework.proof.Map MapFun in_dom def
R12097:12101 CertiOS.framework.proof.Map MapFun merge def
R12106:12107 CertiOS.framework.proof.Map <> M1 var
R12103:12104 CertiOS.framework.proof.Map <> M2 var
R12094:12094 CertiOS.framework.proof.Map <> x var
R12061:12066 CertiOS.framework.proof.Map MapFun in_dom def
R12071:12075 CertiOS.framework.proof.Map MapFun merge def
R12080:12081 CertiOS.framework.proof.Map <> M2 var
R12077:12078 CertiOS.framework.proof.Map <> M1 var
R12068:12068 CertiOS.framework.proof.Map <> x var
R12149:12152 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12138:12143 CertiOS.framework.proof.Map MapFun in_dom def
R12153:12158 CertiOS.framework.proof.Map MapFun in_dom def
R12149:12152 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12138:12143 CertiOS.framework.proof.Map MapFun in_dom def
R12153:12158 CertiOS.framework.proof.Map MapFun in_dom def
prf 12271:12289 MapFun not_in_merge_commut
R12309:12311 CertiOS.framework.proof.Map MapFun Map def
R12318:12318 CertiOS.framework.proof.Map MapFun A def
R12348:12351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12352:12361 CertiOS.framework.proof.Map MapFun not_in_dom def
R12366:12370 CertiOS.framework.proof.Map MapFun merge def
R12375:12376 CertiOS.framework.proof.Map <> M1 var
R12372:12373 CertiOS.framework.proof.Map <> M2 var
R12363:12363 CertiOS.framework.proof.Map <> x var
R12322:12331 CertiOS.framework.proof.Map MapFun not_in_dom def
R12336:12340 CertiOS.framework.proof.Map MapFun merge def
R12345:12346 CertiOS.framework.proof.Map <> M2 var
R12342:12343 CertiOS.framework.proof.Map <> M1 var
R12333:12333 CertiOS.framework.proof.Map <> x var
R12429:12432 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12407:12412 CertiOS.framework.proof.Map MapFun in_dom def
R12417:12421 CertiOS.framework.proof.Map MapFun merge def
R12433:12442 CertiOS.framework.proof.Map MapFun not_in_dom def
R12447:12451 CertiOS.framework.proof.Map MapFun merge def
R12429:12432 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12407:12412 CertiOS.framework.proof.Map MapFun in_dom def
R12417:12421 CertiOS.framework.proof.Map MapFun merge def
R12433:12442 CertiOS.framework.proof.Map MapFun not_in_dom def
R12447:12451 CertiOS.framework.proof.Map MapFun merge def
R12516:12521 CertiOS.framework.proof.Map MapFun in_dom def
R12526:12530 CertiOS.framework.proof.Map MapFun merge def
R12516:12521 CertiOS.framework.proof.Map MapFun in_dom def
R12526:12530 CertiOS.framework.proof.Map MapFun merge def
R12567:12569 Coq.Init.Logic <> :type_scope:'~'_x not
R12592:12592 Coq.Init.Logic <> :type_scope:'~'_x not
R12570:12575 CertiOS.framework.proof.Map MapFun in_dom def
R12580:12584 CertiOS.framework.proof.Map MapFun merge def
R12567:12569 Coq.Init.Logic <> :type_scope:'~'_x not
R12592:12592 Coq.Init.Logic <> :type_scope:'~'_x not
R12570:12575 CertiOS.framework.proof.Map MapFun in_dom def
R12580:12584 CertiOS.framework.proof.Map MapFun merge def
prf 12666:12699 MapFun notin_left_notin_right_notin_merge
R12720:12722 CertiOS.framework.proof.Map MapFun Map def
R12730:12730 CertiOS.framework.proof.Map MapFun A def
R12749:12752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12768:12771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12772:12781 CertiOS.framework.proof.Map MapFun not_in_dom def
R12786:12790 CertiOS.framework.proof.Map MapFun merge def
R12795:12796 CertiOS.framework.proof.Map <> M2 var
R12792:12793 CertiOS.framework.proof.Map <> M1 var
R12783:12783 CertiOS.framework.proof.Map <> x var
R12753:12762 CertiOS.framework.proof.Map MapFun not_in_dom def
R12766:12767 CertiOS.framework.proof.Map <> M2 var
R12764:12764 CertiOS.framework.proof.Map <> x var
R12734:12743 CertiOS.framework.proof.Map MapFun not_in_dom def
R12747:12748 CertiOS.framework.proof.Map <> M1 var
R12745:12745 CertiOS.framework.proof.Map <> x var
R12849:12852 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12827:12832 CertiOS.framework.proof.Map MapFun in_dom def
R12837:12841 CertiOS.framework.proof.Map MapFun merge def
R12853:12862 CertiOS.framework.proof.Map MapFun not_in_dom def
R12867:12871 CertiOS.framework.proof.Map MapFun merge def
R12849:12852 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12827:12832 CertiOS.framework.proof.Map MapFun in_dom def
R12837:12841 CertiOS.framework.proof.Map MapFun merge def
R12853:12862 CertiOS.framework.proof.Map MapFun not_in_dom def
R12867:12871 CertiOS.framework.proof.Map MapFun merge def
R12947:12950 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12936:12941 CertiOS.framework.proof.Map MapFun in_dom def
R12951:12956 CertiOS.framework.proof.Map MapFun in_dom def
R12947:12950 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12936:12941 CertiOS.framework.proof.Map MapFun in_dom def
R12951:12956 CertiOS.framework.proof.Map MapFun in_dom def
R13013:13015 Coq.Init.Logic <> :type_scope:'~'_x not
R13027:13027 Coq.Init.Logic <> :type_scope:'~'_x not
R13016:13021 CertiOS.framework.proof.Map MapFun in_dom def
R13013:13015 Coq.Init.Logic <> :type_scope:'~'_x not
R13027:13027 Coq.Init.Logic <> :type_scope:'~'_x not
R13016:13021 CertiOS.framework.proof.Map MapFun in_dom def
R13057:13059 Coq.Init.Logic <> :type_scope:'~'_x not
R13071:13071 Coq.Init.Logic <> :type_scope:'~'_x not
R13060:13065 CertiOS.framework.proof.Map MapFun in_dom def
R13057:13059 Coq.Init.Logic <> :type_scope:'~'_x not
R13071:13071 Coq.Init.Logic <> :type_scope:'~'_x not
R13060:13065 CertiOS.framework.proof.Map MapFun in_dom def
prf 13297:13313 MapFun merge_extends_map
R13334:13336 CertiOS.framework.proof.Map MapFun Map def
R13340:13347 CertiOS.framework.proof.Map MapFun subseteq def
R13353:13357 CertiOS.framework.proof.Map MapFun merge def
R13362:13363 CertiOS.framework.proof.Map <> M2 var
R13359:13360 CertiOS.framework.proof.Map <> M1 var
R13349:13350 CertiOS.framework.proof.Map <> M1 var
R13393:13400 CertiOS.framework.proof.Map MapFun subseteq def
R13412:13416 CertiOS.framework.proof.Map MapFun merge def
R13438:13443 CertiOS.framework.proof.Map MapFun in_dom def
prf 13624:13634 MapFun merge_assoc
R13679:13681 Coq.Init.Logic <> :type_scope:x_'='_x not
R13657:13661 CertiOS.framework.proof.Map MapFun merge def
R13677:13678 CertiOS.framework.proof.Map <> M3 var
R13664:13668 CertiOS.framework.proof.Map MapFun merge def
R13673:13674 CertiOS.framework.proof.Map <> M2 var
R13670:13671 CertiOS.framework.proof.Map <> M1 var
R13682:13686 CertiOS.framework.proof.Map MapFun merge def
R13692:13696 CertiOS.framework.proof.Map MapFun merge def
R13701:13702 CertiOS.framework.proof.Map <> M3 var
R13698:13699 CertiOS.framework.proof.Map <> M2 var
R13688:13689 CertiOS.framework.proof.Map <> M1 var
R13736:13749 CertiOS.framework.proof.Map MapFun extensionality prfax
R13736:13749 CertiOS.framework.proof.Map MapFun extensionality prfax
R13766:13770 CertiOS.framework.proof.Map MapFun merge def
prf 13857:13872 MapFun in_left_in_merge
R13913:13916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13917:13923 CertiOS.framework.proof.Map MapFun maps_to def
R13941:13941 CertiOS.framework.proof.Map <> y var
R13939:13939 CertiOS.framework.proof.Map <> x var
R13926:13930 CertiOS.framework.proof.Map MapFun merge def
R13935:13936 CertiOS.framework.proof.Map <> M2 var
R13932:13933 CertiOS.framework.proof.Map <> M1 var
R13899:13905 CertiOS.framework.proof.Map MapFun maps_to def
R13912:13912 CertiOS.framework.proof.Map <> y var
R13910:13910 CertiOS.framework.proof.Map <> x var
R13907:13908 CertiOS.framework.proof.Map <> M1 var
R13960:13966 CertiOS.framework.proof.Map MapFun maps_to def
R13988:13992 CertiOS.framework.proof.Map MapFun merge def
prf 14058:14074 MapFun in_right_in_merge
R14117:14120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14135:14138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14139:14145 CertiOS.framework.proof.Map MapFun maps_to def
R14163:14163 CertiOS.framework.proof.Map <> y var
R14161:14161 CertiOS.framework.proof.Map <> x var
R14148:14152 CertiOS.framework.proof.Map MapFun merge def
R14157:14158 CertiOS.framework.proof.Map <> M2 var
R14154:14155 CertiOS.framework.proof.Map <> M1 var
R14121:14127 CertiOS.framework.proof.Map MapFun maps_to def
R14134:14134 CertiOS.framework.proof.Map <> y var
R14132:14132 CertiOS.framework.proof.Map <> x var
R14129:14130 CertiOS.framework.proof.Map <> M2 var
R14102:14111 CertiOS.framework.proof.Map MapFun not_in_dom def
R14115:14116 CertiOS.framework.proof.Map <> M1 var
R14113:14113 CertiOS.framework.proof.Map <> x var
R14182:14188 CertiOS.framework.proof.Map MapFun maps_to def
R14200:14204 CertiOS.framework.proof.Map MapFun merge def
R14216:14225 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 14302:14320 MapFun put_merge_merge_put
R14341:14343 CertiOS.framework.proof.Map MapFun Map def
R14351:14351 CertiOS.framework.proof.Map MapFun A def
R14359:14359 CertiOS.framework.proof.Map MapFun B def
R14388:14390 Coq.Init.Logic <> :type_scope:x_'='_x not
R14367:14369 CertiOS.framework.proof.Map MapFun put def
R14387:14387 CertiOS.framework.proof.Map <> y var
R14385:14385 CertiOS.framework.proof.Map <> x var
R14372:14376 CertiOS.framework.proof.Map MapFun merge def
R14381:14382 CertiOS.framework.proof.Map <> M2 var
R14378:14379 CertiOS.framework.proof.Map <> M1 var
R14391:14395 CertiOS.framework.proof.Map MapFun merge def
R14410:14411 CertiOS.framework.proof.Map <> M2 var
R14398:14400 CertiOS.framework.proof.Map MapFun put def
R14407:14407 CertiOS.framework.proof.Map <> y var
R14405:14405 CertiOS.framework.proof.Map <> x var
R14402:14403 CertiOS.framework.proof.Map <> M1 var
R14449:14462 CertiOS.framework.proof.Map MapFun extensionality prfax
R14449:14462 CertiOS.framework.proof.Map MapFun extensionality prfax
R14483:14485 CertiOS.framework.proof.Map MapFun put def
R14495:14499 CertiOS.framework.proof.Map MapFun merge def
R14515:14519 CertiOS.framework.proof.Map MapFun beq_A def
R14515:14519 CertiOS.framework.proof.Map MapFun beq_A def
prf 14613:14643 MapFun remove_merge_merge_remove_right
R14665:14667 CertiOS.framework.proof.Map MapFun Map def
R14675:14675 CertiOS.framework.proof.Map MapFun A def
R14698:14701 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14724:14726 Coq.Init.Logic <> :type_scope:x_'='_x not
R14702:14707 CertiOS.framework.proof.Map MapFun remove def
R14723:14723 CertiOS.framework.proof.Map <> x var
R14710:14714 CertiOS.framework.proof.Map MapFun merge def
R14719:14720 CertiOS.framework.proof.Map <> M2 var
R14716:14717 CertiOS.framework.proof.Map <> M1 var
R14727:14731 CertiOS.framework.proof.Map MapFun merge def
R14737:14742 CertiOS.framework.proof.Map MapFun remove def
R14747:14747 CertiOS.framework.proof.Map <> x var
R14744:14745 CertiOS.framework.proof.Map <> M2 var
R14733:14734 CertiOS.framework.proof.Map <> M1 var
R14683:14692 CertiOS.framework.proof.Map MapFun not_in_dom def
R14696:14697 CertiOS.framework.proof.Map <> M1 var
R14694:14694 CertiOS.framework.proof.Map <> x var
R14776:14789 CertiOS.framework.proof.Map MapFun extensionality prfax
R14776:14789 CertiOS.framework.proof.Map MapFun extensionality prfax
R14810:14815 CertiOS.framework.proof.Map MapFun remove def
R14827:14831 CertiOS.framework.proof.Map MapFun merge def
R14847:14851 CertiOS.framework.proof.Map MapFun beq_A def
R14847:14851 CertiOS.framework.proof.Map MapFun beq_A def
R14888:14897 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 14964:14993 MapFun disj_remove_merge_merge_remove
R15015:15017 CertiOS.framework.proof.Map MapFun Map def
R15025:15025 CertiOS.framework.proof.Map MapFun A def
R15047:15050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15062:15065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15088:15090 Coq.Init.Logic <> :type_scope:x_'='_x not
R15066:15071 CertiOS.framework.proof.Map MapFun remove def
R15087:15087 CertiOS.framework.proof.Map <> x var
R15074:15078 CertiOS.framework.proof.Map MapFun merge def
R15083:15084 CertiOS.framework.proof.Map <> M2 var
R15080:15081 CertiOS.framework.proof.Map <> M1 var
R15091:15095 CertiOS.framework.proof.Map MapFun merge def
R15111:15112 CertiOS.framework.proof.Map <> M2 var
R15098:15103 CertiOS.framework.proof.Map MapFun remove def
R15108:15108 CertiOS.framework.proof.Map <> x var
R15105:15106 CertiOS.framework.proof.Map <> M1 var
R15051:15056 CertiOS.framework.proof.Map MapFun in_dom def
R15060:15061 CertiOS.framework.proof.Map <> M1 var
R15058:15058 CertiOS.framework.proof.Map <> x var
R15033:15040 CertiOS.framework.proof.Map MapFun disjoint def
R15045:15046 CertiOS.framework.proof.Map <> M2 var
R15042:15043 CertiOS.framework.proof.Map <> M1 var
R15142:15151 CertiOS.framework.proof.Map MapFun not_in_dom def
R15142:15151 CertiOS.framework.proof.Map MapFun not_in_dom def
R15168:15186 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R15168:15186 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R15211:15224 CertiOS.framework.proof.Map MapFun extensionality prfax
R15211:15224 CertiOS.framework.proof.Map MapFun extensionality prfax
R15245:15250 CertiOS.framework.proof.Map MapFun remove def
R15260:15264 CertiOS.framework.proof.Map MapFun merge def
R15280:15284 CertiOS.framework.proof.Map MapFun beq_A def
R15280:15284 CertiOS.framework.proof.Map MapFun beq_A def
R15313:15322 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 15582:15601 MapFun disj_merge_disj_left
R15625:15627 CertiOS.framework.proof.Map MapFun Map def
R15655:15658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15659:15666 CertiOS.framework.proof.Map MapFun disjoint def
R15671:15672 CertiOS.framework.proof.Map <> M' var
R15668:15669 CertiOS.framework.proof.Map <> M1 var
R15630:15637 CertiOS.framework.proof.Map MapFun disjoint def
R15653:15654 CertiOS.framework.proof.Map <> M' var
R15640:15644 CertiOS.framework.proof.Map MapFun merge def
R15649:15650 CertiOS.framework.proof.Map <> M2 var
R15646:15647 CertiOS.framework.proof.Map <> M1 var
R15706:15713 CertiOS.framework.proof.Map MapFun disjoint def
R15758:15761 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15732:15741 CertiOS.framework.proof.Map MapFun not_in_dom def
R15746:15750 CertiOS.framework.proof.Map MapFun merge def
R15762:15771 CertiOS.framework.proof.Map MapFun not_in_dom def
R15758:15761 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R15732:15741 CertiOS.framework.proof.Map MapFun not_in_dom def
R15746:15750 CertiOS.framework.proof.Map MapFun merge def
R15762:15771 CertiOS.framework.proof.Map MapFun not_in_dom def
R15818:15839 CertiOS.framework.proof.Map MapFun notin_merge_distr_left thm
R15818:15839 CertiOS.framework.proof.Map MapFun notin_merge_distr_left thm
prf 15922:15942 MapFun disj_merge_disj_right
R15966:15968 CertiOS.framework.proof.Map MapFun Map def
R15996:15999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16000:16007 CertiOS.framework.proof.Map MapFun disjoint def
R16012:16013 CertiOS.framework.proof.Map <> M' var
R16009:16010 CertiOS.framework.proof.Map <> M2 var
R15971:15978 CertiOS.framework.proof.Map MapFun disjoint def
R15994:15995 CertiOS.framework.proof.Map <> M' var
R15981:15985 CertiOS.framework.proof.Map MapFun merge def
R15990:15991 CertiOS.framework.proof.Map <> M2 var
R15987:15988 CertiOS.framework.proof.Map <> M1 var
R16047:16054 CertiOS.framework.proof.Map MapFun disjoint def
R16099:16102 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16073:16082 CertiOS.framework.proof.Map MapFun not_in_dom def
R16087:16091 CertiOS.framework.proof.Map MapFun merge def
R16103:16112 CertiOS.framework.proof.Map MapFun not_in_dom def
R16099:16102 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16073:16082 CertiOS.framework.proof.Map MapFun not_in_dom def
R16087:16091 CertiOS.framework.proof.Map MapFun merge def
R16103:16112 CertiOS.framework.proof.Map MapFun not_in_dom def
R16159:16181 CertiOS.framework.proof.Map MapFun notin_merge_distr_right thm
R16159:16181 CertiOS.framework.proof.Map MapFun notin_merge_distr_right thm
prf 16266:16287 MapFun disj_x_merge_disj_left
R16311:16313 CertiOS.framework.proof.Map MapFun Map def
R16341:16344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16345:16352 CertiOS.framework.proof.Map MapFun disjoint def
R16357:16358 CertiOS.framework.proof.Map <> M1 var
R16354:16355 CertiOS.framework.proof.Map <> M' var
R16316:16323 CertiOS.framework.proof.Map MapFun disjoint def
R16329:16333 CertiOS.framework.proof.Map MapFun merge def
R16338:16339 CertiOS.framework.proof.Map <> M2 var
R16335:16336 CertiOS.framework.proof.Map <> M1 var
R16325:16326 CertiOS.framework.proof.Map <> M' var
R16388:16395 CertiOS.framework.proof.Map MapFun disjoint def
R16398:16402 CertiOS.framework.proof.Map MapFun merge def
R16388:16395 CertiOS.framework.proof.Map MapFun disjoint def
R16398:16402 CertiOS.framework.proof.Map MapFun merge def
R16442:16449 CertiOS.framework.proof.Map MapFun disjoint def
R16442:16449 CertiOS.framework.proof.Map MapFun disjoint def
R16483:16502 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
R16483:16502 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
prf 16532:16554 MapFun disj_x_merge_disj_right
R16578:16580 CertiOS.framework.proof.Map MapFun Map def
R16608:16611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16612:16619 CertiOS.framework.proof.Map MapFun disjoint def
R16624:16625 CertiOS.framework.proof.Map <> M2 var
R16621:16622 CertiOS.framework.proof.Map <> M' var
R16583:16590 CertiOS.framework.proof.Map MapFun disjoint def
R16596:16600 CertiOS.framework.proof.Map MapFun merge def
R16605:16606 CertiOS.framework.proof.Map <> M2 var
R16602:16603 CertiOS.framework.proof.Map <> M1 var
R16592:16593 CertiOS.framework.proof.Map <> M' var
R16655:16662 CertiOS.framework.proof.Map MapFun disjoint def
R16665:16669 CertiOS.framework.proof.Map MapFun merge def
R16655:16662 CertiOS.framework.proof.Map MapFun disjoint def
R16665:16669 CertiOS.framework.proof.Map MapFun merge def
R16709:16716 CertiOS.framework.proof.Map MapFun disjoint def
R16709:16716 CertiOS.framework.proof.Map MapFun disjoint def
R16750:16770 CertiOS.framework.proof.Map MapFun disj_merge_disj_right thm
R16750:16770 CertiOS.framework.proof.Map MapFun disj_merge_disj_right thm
prf 16869:16885 MapFun disj_merge_commut
R16904:16906 CertiOS.framework.proof.Map MapFun Map def
R16923:16926 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16927:16927 Coq.Init.Logic <> :type_scope:x_'='_x not
R16939:16943 Coq.Init.Logic <> :type_scope:x_'='_x not
R16955:16955 Coq.Init.Logic <> :type_scope:x_'='_x not
R16928:16932 CertiOS.framework.proof.Map MapFun merge def
R16937:16938 CertiOS.framework.proof.Map <> M2 var
R16934:16935 CertiOS.framework.proof.Map <> M1 var
R16944:16948 CertiOS.framework.proof.Map MapFun merge def
R16953:16954 CertiOS.framework.proof.Map <> M1 var
R16950:16951 CertiOS.framework.proof.Map <> M2 var
R16909:16916 CertiOS.framework.proof.Map MapFun disjoint def
R16921:16922 CertiOS.framework.proof.Map <> M2 var
R16918:16919 CertiOS.framework.proof.Map <> M1 var
R16990:17003 CertiOS.framework.proof.Map MapFun extensionality prfax
R16990:17003 CertiOS.framework.proof.Map MapFun extensionality prfax
R17020:17024 CertiOS.framework.proof.Map MapFun merge def
R17034:17041 CertiOS.framework.proof.Map MapFun disjoint def
R17059:17068 CertiOS.framework.proof.Map MapFun not_in_dom def
R17098:17101 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17091:17093 Coq.Init.Logic <> :type_scope:x_'='_x not
R17094:17097 Coq.Init.Datatypes <> None constr
R17106:17108 Coq.Init.Logic <> :type_scope:x_'='_x not
R17109:17112 Coq.Init.Datatypes <> None constr
R17098:17101 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17091:17093 Coq.Init.Logic <> :type_scope:x_'='_x not
R17094:17097 Coq.Init.Datatypes <> None constr
R17106:17108 Coq.Init.Logic <> :type_scope:x_'='_x not
R17109:17112 Coq.Init.Datatypes <> None constr
prf 17249:17268 MapFun disj_merge_disjUnion
R17286:17288 CertiOS.framework.proof.Map MapFun Map def
R17305:17308 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17309:17317 CertiOS.framework.proof.Map MapFun disjUnion def
R17326:17330 CertiOS.framework.proof.Map MapFun merge def
R17335:17336 CertiOS.framework.proof.Map <> M2 var
R17332:17333 CertiOS.framework.proof.Map <> M1 var
R17322:17323 CertiOS.framework.proof.Map <> M2 var
R17319:17320 CertiOS.framework.proof.Map <> M1 var
R17291:17298 CertiOS.framework.proof.Map MapFun disjoint def
R17303:17304 CertiOS.framework.proof.Map <> M2 var
R17300:17301 CertiOS.framework.proof.Map <> M1 var
R17373:17381 CertiOS.framework.proof.Map MapFun disjUnion def
prf 17451:17462 MapFun disj_merge_A
R17498:17501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17516:17519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17520:17527 CertiOS.framework.proof.Map MapFun disjoint def
R17533:17537 CertiOS.framework.proof.Map MapFun merge def
R17542:17543 CertiOS.framework.proof.Map <> M3 var
R17539:17540 CertiOS.framework.proof.Map <> M2 var
R17529:17530 CertiOS.framework.proof.Map <> M1 var
R17502:17509 CertiOS.framework.proof.Map MapFun disjoint def
R17514:17515 CertiOS.framework.proof.Map <> M3 var
R17511:17512 CertiOS.framework.proof.Map <> M1 var
R17484:17491 CertiOS.framework.proof.Map MapFun disjoint def
R17496:17497 CertiOS.framework.proof.Map <> M2 var
R17493:17494 CertiOS.framework.proof.Map <> M1 var
R17583:17590 CertiOS.framework.proof.Map MapFun disjoint def
R17649:17652 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17634:17643 CertiOS.framework.proof.Map MapFun not_in_dom def
R17653:17662 CertiOS.framework.proof.Map MapFun not_in_dom def
R17649:17652 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17634:17643 CertiOS.framework.proof.Map MapFun not_in_dom def
R17653:17662 CertiOS.framework.proof.Map MapFun not_in_dom def
R17702:17705 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17687:17696 CertiOS.framework.proof.Map MapFun not_in_dom def
R17706:17715 CertiOS.framework.proof.Map MapFun not_in_dom def
R17702:17705 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17687:17696 CertiOS.framework.proof.Map MapFun not_in_dom def
R17706:17715 CertiOS.framework.proof.Map MapFun not_in_dom def
R17819:17828 CertiOS.framework.proof.Map MapFun not_in_dom def
R17851:17855 CertiOS.framework.proof.Map MapFun merge def
prf 17926:17937 MapFun disj_merge_B
R17973:17976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17991:17994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17995:18002 CertiOS.framework.proof.Map MapFun disjoint def
R18018:18019 CertiOS.framework.proof.Map <> M1 var
R18005:18009 CertiOS.framework.proof.Map MapFun merge def
R18014:18015 CertiOS.framework.proof.Map <> M3 var
R18011:18012 CertiOS.framework.proof.Map <> M2 var
R17977:17984 CertiOS.framework.proof.Map MapFun disjoint def
R17989:17990 CertiOS.framework.proof.Map <> M1 var
R17986:17987 CertiOS.framework.proof.Map <> M3 var
R17959:17966 CertiOS.framework.proof.Map MapFun disjoint def
R17971:17972 CertiOS.framework.proof.Map <> M1 var
R17968:17969 CertiOS.framework.proof.Map <> M2 var
R18049:18056 CertiOS.framework.proof.Map MapFun disjoint def
R18062:18066 CertiOS.framework.proof.Map MapFun merge def
R18049:18056 CertiOS.framework.proof.Map MapFun disjoint def
R18062:18066 CertiOS.framework.proof.Map MapFun merge def
prf 18140:18166 MapFun disj_merge_assoc_left_right
R18202:18205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18231:18234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18235:18242 CertiOS.framework.proof.Map MapFun disjoint def
R18248:18252 CertiOS.framework.proof.Map MapFun merge def
R18257:18258 CertiOS.framework.proof.Map <> M3 var
R18254:18255 CertiOS.framework.proof.Map <> M2 var
R18244:18245 CertiOS.framework.proof.Map <> M1 var
R18206:18213 CertiOS.framework.proof.Map MapFun disjoint def
R18229:18230 CertiOS.framework.proof.Map <> M3 var
R18216:18220 CertiOS.framework.proof.Map MapFun merge def
R18225:18226 CertiOS.framework.proof.Map <> M2 var
R18222:18223 CertiOS.framework.proof.Map <> M1 var
R18188:18195 CertiOS.framework.proof.Map MapFun disjoint def
R18200:18201 CertiOS.framework.proof.Map <> M2 var
R18197:18198 CertiOS.framework.proof.Map <> M1 var
R18310:18317 CertiOS.framework.proof.Map MapFun disjoint def
R18310:18317 CertiOS.framework.proof.Map MapFun disjoint def
R18335:18354 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
R18335:18354 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
R18381:18392 CertiOS.framework.proof.Map MapFun disj_merge_A thm
R18381:18392 CertiOS.framework.proof.Map MapFun disj_merge_A thm
prf 18413:18439 MapFun disj_merge_assoc_right_left
R18475:18478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18504:18507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18508:18515 CertiOS.framework.proof.Map MapFun disjoint def
R18531:18532 CertiOS.framework.proof.Map <> M3 var
R18518:18522 CertiOS.framework.proof.Map MapFun merge def
R18527:18528 CertiOS.framework.proof.Map <> M2 var
R18524:18525 CertiOS.framework.proof.Map <> M1 var
R18479:18486 CertiOS.framework.proof.Map MapFun disjoint def
R18492:18496 CertiOS.framework.proof.Map MapFun merge def
R18501:18502 CertiOS.framework.proof.Map <> M3 var
R18498:18499 CertiOS.framework.proof.Map <> M2 var
R18488:18489 CertiOS.framework.proof.Map <> M1 var
R18461:18468 CertiOS.framework.proof.Map MapFun disjoint def
R18473:18474 CertiOS.framework.proof.Map <> M3 var
R18470:18471 CertiOS.framework.proof.Map <> M2 var
R18583:18590 CertiOS.framework.proof.Map MapFun disjoint def
R18583:18590 CertiOS.framework.proof.Map MapFun disjoint def
R18608:18630 CertiOS.framework.proof.Map MapFun disj_x_merge_disj_right thm
R18608:18630 CertiOS.framework.proof.Map MapFun disj_x_merge_disj_right thm
R18659:18666 CertiOS.framework.proof.Map MapFun disjoint def
R18672:18676 CertiOS.framework.proof.Map MapFun merge def
R18659:18666 CertiOS.framework.proof.Map MapFun disjoint def
R18672:18676 CertiOS.framework.proof.Map MapFun merge def
prf 18715:18732 MapFun disj_merge_ABC_BAC
R18768:18771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18794:18796 Coq.Init.Logic <> :type_scope:x_'='_x not
R18772:18776 CertiOS.framework.proof.Map MapFun merge def
R18792:18793 CertiOS.framework.proof.Map <> M3 var
R18779:18783 CertiOS.framework.proof.Map MapFun merge def
R18788:18789 CertiOS.framework.proof.Map <> M2 var
R18785:18786 CertiOS.framework.proof.Map <> M1 var
R18797:18801 CertiOS.framework.proof.Map MapFun merge def
R18807:18811 CertiOS.framework.proof.Map MapFun merge def
R18816:18817 CertiOS.framework.proof.Map <> M3 var
R18813:18814 CertiOS.framework.proof.Map <> M1 var
R18803:18804 CertiOS.framework.proof.Map <> M2 var
R18754:18761 CertiOS.framework.proof.Map MapFun disjoint def
R18766:18767 CertiOS.framework.proof.Map <> M2 var
R18763:18764 CertiOS.framework.proof.Map <> M1 var
R18869:18871 Coq.Init.Logic <> :type_scope:x_'='_x not
R18858:18862 CertiOS.framework.proof.Map MapFun merge def
R18872:18876 CertiOS.framework.proof.Map MapFun merge def
R18869:18871 Coq.Init.Logic <> :type_scope:x_'='_x not
R18858:18862 CertiOS.framework.proof.Map MapFun merge def
R18872:18876 CertiOS.framework.proof.Map MapFun merge def
R18892:18908 CertiOS.framework.proof.Map MapFun disj_merge_commut thm
R18892:18908 CertiOS.framework.proof.Map MapFun disj_merge_commut thm
R18934:18944 CertiOS.framework.proof.Map MapFun merge_assoc thm
R18934:18944 CertiOS.framework.proof.Map MapFun merge_assoc thm
prf 19057:19074 MapFun disj_merge_ABC_CAB
R19101:19103 CertiOS.framework.proof.Map MapFun Map def
R19128:19131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19148:19151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19168:19175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19176:19176 Coq.Init.Logic <> :type_scope:x_'='_x not
R19202:19206 Coq.Init.Logic <> :type_scope:x_'='_x not
R19232:19232 Coq.Init.Logic <> :type_scope:x_'='_x not
R19177:19181 CertiOS.framework.proof.Map MapFun merge def
R19199:19201 CertiOS.framework.proof.Map <> M_3 var
R19184:19188 CertiOS.framework.proof.Map MapFun merge def
R19194:19196 CertiOS.framework.proof.Map <> M_2 var
R19190:19192 CertiOS.framework.proof.Map <> M_1 var
R19207:19211 CertiOS.framework.proof.Map MapFun merge def
R19229:19231 CertiOS.framework.proof.Map <> M_2 var
R19214:19218 CertiOS.framework.proof.Map MapFun merge def
R19224:19226 CertiOS.framework.proof.Map <> M_1 var
R19220:19222 CertiOS.framework.proof.Map <> M_3 var
R19152:19159 CertiOS.framework.proof.Map MapFun disjoint def
R19165:19167 CertiOS.framework.proof.Map <> M_2 var
R19161:19163 CertiOS.framework.proof.Map <> M_3 var
R19132:19139 CertiOS.framework.proof.Map MapFun disjoint def
R19145:19147 CertiOS.framework.proof.Map <> M_1 var
R19141:19143 CertiOS.framework.proof.Map <> M_3 var
R19112:19119 CertiOS.framework.proof.Map MapFun disjoint def
R19125:19127 CertiOS.framework.proof.Map <> M_2 var
R19121:19123 CertiOS.framework.proof.Map <> M_1 var
R19275:19277 Coq.Init.Logic <> :type_scope:x_'='_x not
R19262:19266 CertiOS.framework.proof.Map MapFun merge def
R19278:19282 CertiOS.framework.proof.Map MapFun merge def
R19275:19277 Coq.Init.Logic <> :type_scope:x_'='_x not
R19262:19266 CertiOS.framework.proof.Map MapFun merge def
R19278:19282 CertiOS.framework.proof.Map MapFun merge def
R19347:19349 Coq.Init.Logic <> :type_scope:x_'='_x not
R19334:19338 CertiOS.framework.proof.Map MapFun merge def
R19350:19354 CertiOS.framework.proof.Map MapFun merge def
R19347:19349 Coq.Init.Logic <> :type_scope:x_'='_x not
R19334:19338 CertiOS.framework.proof.Map MapFun merge def
R19350:19354 CertiOS.framework.proof.Map MapFun merge def
R19406:19406 Coq.Init.Logic <> :type_scope:x_'='_x not
R19432:19436 Coq.Init.Logic <> :type_scope:x_'='_x not
R19462:19462 Coq.Init.Logic <> :type_scope:x_'='_x not
R19407:19411 CertiOS.framework.proof.Map MapFun merge def
R19414:19418 CertiOS.framework.proof.Map MapFun merge def
R19437:19441 CertiOS.framework.proof.Map MapFun merge def
R19448:19452 CertiOS.framework.proof.Map MapFun merge def
R19406:19406 Coq.Init.Logic <> :type_scope:x_'='_x not
R19432:19436 Coq.Init.Logic <> :type_scope:x_'='_x not
R19462:19462 Coq.Init.Logic <> :type_scope:x_'='_x not
R19407:19411 CertiOS.framework.proof.Map MapFun merge def
R19414:19418 CertiOS.framework.proof.Map MapFun merge def
R19437:19441 CertiOS.framework.proof.Map MapFun merge def
R19448:19452 CertiOS.framework.proof.Map MapFun merge def
prf 19609:19616 MapFun disj_emp
R19630:19637 CertiOS.framework.proof.Map MapFun disjoint def
R19641:19643 CertiOS.framework.proof.Map MapFun emp def
R19639:19639 CertiOS.framework.proof.Map <> M var
R19662:19669 CertiOS.framework.proof.Map MapFun disjoint def
R19700:19709 CertiOS.framework.proof.Map MapFun not_in_dom def
R19721:19723 CertiOS.framework.proof.Map MapFun emp def
prf 19746:19755 MapFun disj_emp_B
R19769:19776 CertiOS.framework.proof.Map MapFun disjoint def
R19782:19782 CertiOS.framework.proof.Map <> M var
R19778:19780 CertiOS.framework.proof.Map MapFun emp def
R19811:19818 CertiOS.framework.proof.Map MapFun disjoint def
R19822:19824 CertiOS.framework.proof.Map MapFun emp def
R19811:19818 CertiOS.framework.proof.Map MapFun disjoint def
R19822:19824 CertiOS.framework.proof.Map MapFun emp def
R19834:19841 CertiOS.framework.proof.Map MapFun disj_emp thm
R19834:19841 CertiOS.framework.proof.Map MapFun disj_emp thm
prf 19874:19887 MapFun unit_emp_merge
R19911:19913 Coq.Init.Logic <> :type_scope:x_'='_x not
R19900:19904 CertiOS.framework.proof.Map MapFun merge def
R19908:19910 CertiOS.framework.proof.Map MapFun emp def
R19906:19906 CertiOS.framework.proof.Map <> M var
R19914:19914 CertiOS.framework.proof.Map <> M var
R19943:19956 CertiOS.framework.proof.Map MapFun extensionality prfax
R19943:19956 CertiOS.framework.proof.Map MapFun extensionality prfax
R19978:19982 CertiOS.framework.proof.Map MapFun merge def
R20021:20023 CertiOS.framework.proof.Map MapFun emp def
prf 20103:20118 MapFun unit_emp_merge_B
R20143:20145 Coq.Init.Logic <> :type_scope:x_'='_x not
R20132:20136 CertiOS.framework.proof.Map MapFun merge def
R20142:20142 CertiOS.framework.proof.Map <> M var
R20138:20140 CertiOS.framework.proof.Map MapFun emp def
R20146:20146 CertiOS.framework.proof.Map <> M var
R20187:20189 Coq.Init.Logic <> :type_scope:x_'='_x not
R20176:20180 CertiOS.framework.proof.Map MapFun merge def
R20182:20184 CertiOS.framework.proof.Map MapFun emp def
R20190:20194 CertiOS.framework.proof.Map MapFun merge def
R20198:20200 CertiOS.framework.proof.Map MapFun emp def
R20187:20189 Coq.Init.Logic <> :type_scope:x_'='_x not
R20176:20180 CertiOS.framework.proof.Map MapFun merge def
R20182:20184 CertiOS.framework.proof.Map MapFun emp def
R20190:20194 CertiOS.framework.proof.Map MapFun merge def
R20198:20200 CertiOS.framework.proof.Map MapFun emp def
prf 20302:20319 MapFun unit_emp_disjUnion
R20332:20340 CertiOS.framework.proof.Map MapFun disjUnion def
R20348:20348 CertiOS.framework.proof.Map <> M var
R20344:20346 CertiOS.framework.proof.Map MapFun emp def
R20342:20342 CertiOS.framework.proof.Map <> M var
R20376:20384 CertiOS.framework.proof.Map MapFun disjUnion def
prf 20465:20484 MapFun emp_disjUnion_unique
R20520:20523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20525:20527 Coq.Init.Logic <> :type_scope:x_'='_x not
R20524:20524 CertiOS.framework.proof.Map <> M var
R20528:20529 CertiOS.framework.proof.Map <> M' var
R20502:20510 CertiOS.framework.proof.Map MapFun disjUnion def
R20518:20519 CertiOS.framework.proof.Map <> M' var
R20514:20516 CertiOS.framework.proof.Map MapFun emp def
R20512:20512 CertiOS.framework.proof.Map <> M var
R20558:20566 CertiOS.framework.proof.Map MapFun disjUnion def
R20616:20618 Coq.Init.Logic <> :type_scope:x_'='_x not
R20605:20609 CertiOS.framework.proof.Map MapFun merge def
R20613:20615 CertiOS.framework.proof.Map MapFun emp def
R20616:20618 Coq.Init.Logic <> :type_scope:x_'='_x not
R20605:20609 CertiOS.framework.proof.Map MapFun merge def
R20613:20615 CertiOS.framework.proof.Map MapFun emp def
prf 20720:20735 MapFun disjUnion_commut
R20775:20778 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20779:20787 CertiOS.framework.proof.Map MapFun disjUnion def
R20795:20795 CertiOS.framework.proof.Map <> M var
R20792:20793 CertiOS.framework.proof.Map <> M1 var
R20789:20790 CertiOS.framework.proof.Map <> M2 var
R20758:20766 CertiOS.framework.proof.Map MapFun disjUnion def
R20774:20774 CertiOS.framework.proof.Map <> M var
R20771:20772 CertiOS.framework.proof.Map <> M2 var
R20768:20769 CertiOS.framework.proof.Map <> M1 var
R20814:20822 CertiOS.framework.proof.Map MapFun disjUnion def
R20872:20886 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R20872:20886 CertiOS.framework.proof.Map MapFun disjoint_commut thm
R20918:20920 Coq.Init.Logic <> :type_scope:x_'='_x not
R20907:20911 CertiOS.framework.proof.Map MapFun merge def
R20921:20925 CertiOS.framework.proof.Map MapFun merge def
R20918:20920 Coq.Init.Logic <> :type_scope:x_'='_x not
R20907:20911 CertiOS.framework.proof.Map MapFun merge def
R20921:20925 CertiOS.framework.proof.Map MapFun merge def
R20943:20959 CertiOS.framework.proof.Map MapFun disj_merge_commut thm
R20943:20959 CertiOS.framework.proof.Map MapFun disj_merge_commut thm
prf 21039:21055 MapFun disjUnion_in_left
R21078:21080 CertiOS.framework.proof.Map MapFun Map def
R21088:21088 CertiOS.framework.proof.Map MapFun A def
R21096:21096 CertiOS.framework.proof.Map MapFun B def
R21121:21124 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21136:21139 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21153:21156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21157:21163 CertiOS.framework.proof.Map MapFun maps_to def
R21170:21170 CertiOS.framework.proof.Map <> y var
R21168:21168 CertiOS.framework.proof.Map <> x var
R21165:21166 CertiOS.framework.proof.Map <> M1 var
R21140:21146 CertiOS.framework.proof.Map MapFun maps_to def
R21152:21152 CertiOS.framework.proof.Map <> y var
R21150:21150 CertiOS.framework.proof.Map <> x var
R21148:21148 CertiOS.framework.proof.Map <> M var
R21125:21130 CertiOS.framework.proof.Map MapFun in_dom def
R21134:21135 CertiOS.framework.proof.Map <> M1 var
R21132:21132 CertiOS.framework.proof.Map <> x var
R21104:21112 CertiOS.framework.proof.Map MapFun disjUnion def
R21120:21120 CertiOS.framework.proof.Map <> M var
R21117:21118 CertiOS.framework.proof.Map <> M2 var
R21114:21115 CertiOS.framework.proof.Map <> M1 var
R21199:21207 CertiOS.framework.proof.Map MapFun disjUnion def
R21246:21255 CertiOS.framework.proof.Map MapFun not_in_dom def
R21246:21255 CertiOS.framework.proof.Map MapFun not_in_dom def
R21272:21290 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R21272:21290 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R21334:21343 CertiOS.framework.proof.Map MapFun not_in_dom def
R21360:21366 CertiOS.framework.proof.Map MapFun maps_to def
R21376:21382 CertiOS.framework.proof.Map MapFun maps_to def
R21400:21404 CertiOS.framework.proof.Map MapFun merge def
prf 21488:21505 MapFun disjUnion_in_right
R21528:21530 CertiOS.framework.proof.Map MapFun Map def
R21538:21538 CertiOS.framework.proof.Map MapFun A def
R21546:21546 CertiOS.framework.proof.Map MapFun B def
R21571:21574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21586:21589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21603:21606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21607:21613 CertiOS.framework.proof.Map MapFun maps_to def
R21620:21620 CertiOS.framework.proof.Map <> y var
R21618:21618 CertiOS.framework.proof.Map <> x var
R21615:21616 CertiOS.framework.proof.Map <> M2 var
R21590:21596 CertiOS.framework.proof.Map MapFun maps_to def
R21602:21602 CertiOS.framework.proof.Map <> y var
R21600:21600 CertiOS.framework.proof.Map <> x var
R21598:21598 CertiOS.framework.proof.Map <> M var
R21575:21580 CertiOS.framework.proof.Map MapFun in_dom def
R21584:21585 CertiOS.framework.proof.Map <> M2 var
R21582:21582 CertiOS.framework.proof.Map <> x var
R21554:21562 CertiOS.framework.proof.Map MapFun disjUnion def
R21570:21570 CertiOS.framework.proof.Map <> M var
R21567:21568 CertiOS.framework.proof.Map <> M2 var
R21564:21565 CertiOS.framework.proof.Map <> M1 var
R21648:21664 CertiOS.framework.proof.Map MapFun disjUnion_in_left thm
R21648:21664 CertiOS.framework.proof.Map MapFun disjUnion_in_left thm
prf 21765:21790 MapFun disjUnion_assoc_left_right
R21828:21831 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21860:21863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21864:21872 CertiOS.framework.proof.Map MapFun disjUnion def
R21891:21891 CertiOS.framework.proof.Map <> M var
R21878:21882 CertiOS.framework.proof.Map MapFun merge def
R21887:21888 CertiOS.framework.proof.Map <> M3 var
R21884:21885 CertiOS.framework.proof.Map <> M2 var
R21874:21875 CertiOS.framework.proof.Map <> M1 var
R21832:21840 CertiOS.framework.proof.Map MapFun disjUnion def
R21859:21859 CertiOS.framework.proof.Map <> M var
R21856:21857 CertiOS.framework.proof.Map <> M3 var
R21843:21847 CertiOS.framework.proof.Map MapFun merge def
R21852:21853 CertiOS.framework.proof.Map <> M2 var
R21849:21850 CertiOS.framework.proof.Map <> M1 var
R21814:21821 CertiOS.framework.proof.Map MapFun disjoint def
R21826:21827 CertiOS.framework.proof.Map <> M2 var
R21823:21824 CertiOS.framework.proof.Map <> M1 var
R21910:21918 CertiOS.framework.proof.Map MapFun disjUnion def
prf 22068:22093 MapFun disjUnion_assoc_right_left
R22131:22134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22163:22166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22167:22175 CertiOS.framework.proof.Map MapFun disjUnion def
R22194:22194 CertiOS.framework.proof.Map <> M var
R22191:22192 CertiOS.framework.proof.Map <> M3 var
R22178:22182 CertiOS.framework.proof.Map MapFun merge def
R22187:22188 CertiOS.framework.proof.Map <> M2 var
R22184:22185 CertiOS.framework.proof.Map <> M1 var
R22135:22143 CertiOS.framework.proof.Map MapFun disjUnion def
R22162:22162 CertiOS.framework.proof.Map <> M var
R22149:22153 CertiOS.framework.proof.Map MapFun merge def
R22158:22159 CertiOS.framework.proof.Map <> M3 var
R22155:22156 CertiOS.framework.proof.Map <> M2 var
R22145:22146 CertiOS.framework.proof.Map <> M1 var
R22117:22124 CertiOS.framework.proof.Map MapFun disjoint def
R22129:22130 CertiOS.framework.proof.Map <> M3 var
R22126:22127 CertiOS.framework.proof.Map <> M2 var
R22213:22221 CertiOS.framework.proof.Map MapFun disjUnion def
prf 22371:22387 MapFun disj_merge_unique
R22428:22431 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22446:22449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22475:22478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22486:22489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22492:22494 Coq.Init.Logic <> :type_scope:x_'='_x not
R22490:22491 CertiOS.framework.proof.Map <> M2 var
R22495:22496 CertiOS.framework.proof.Map <> M4 var
R22481:22483 Coq.Init.Logic <> :type_scope:x_'='_x not
R22479:22480 CertiOS.framework.proof.Map <> M1 var
R22484:22485 CertiOS.framework.proof.Map <> M3 var
R22461:22463 Coq.Init.Logic <> :type_scope:x_'='_x not
R22450:22454 CertiOS.framework.proof.Map MapFun merge def
R22459:22460 CertiOS.framework.proof.Map <> M2 var
R22456:22457 CertiOS.framework.proof.Map <> M1 var
R22464:22468 CertiOS.framework.proof.Map MapFun merge def
R22473:22474 CertiOS.framework.proof.Map <> M4 var
R22470:22471 CertiOS.framework.proof.Map <> M3 var
R22432:22439 CertiOS.framework.proof.Map MapFun disjoint def
R22444:22445 CertiOS.framework.proof.Map <> M4 var
R22441:22442 CertiOS.framework.proof.Map <> M3 var
R22414:22421 CertiOS.framework.proof.Map MapFun disjoint def
R22426:22427 CertiOS.framework.proof.Map <> M2 var
R22423:22424 CertiOS.framework.proof.Map <> M1 var
R22604:22617 CertiOS.framework.proof.Map MapFun extensionality prfax
R22604:22617 CertiOS.framework.proof.Map MapFun extensionality prfax
R22652:22654 Coq.Init.Logic <> :type_scope:x_'='_x not
R22639:22643 CertiOS.framework.proof.Map MapFun merge def
R22655:22659 CertiOS.framework.proof.Map MapFun merge def
R22652:22654 Coq.Init.Logic <> :type_scope:x_'='_x not
R22639:22643 CertiOS.framework.proof.Map MapFun merge def
R22655:22659 CertiOS.framework.proof.Map MapFun merge def
R22708:22712 CertiOS.framework.proof.Map MapFun merge def
R22741:22744 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22730:22735 CertiOS.framework.proof.Map MapFun in_dom def
R22745:22754 CertiOS.framework.proof.Map MapFun not_in_dom def
R22741:22744 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22730:22735 CertiOS.framework.proof.Map MapFun in_dom def
R22745:22754 CertiOS.framework.proof.Map MapFun not_in_dom def
R22771:22781 CertiOS.framework.proof.Map MapFun in_or_notin thm
R22771:22781 CertiOS.framework.proof.Map MapFun in_or_notin thm
R22840:22847 CertiOS.framework.proof.Map MapFun disjoint def
R22868:22875 CertiOS.framework.proof.Map MapFun disjoint def
R22912:22915 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22897:22906 CertiOS.framework.proof.Map MapFun not_in_dom def
R22916:22925 CertiOS.framework.proof.Map MapFun not_in_dom def
R22912:22915 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22897:22906 CertiOS.framework.proof.Map MapFun not_in_dom def
R22916:22925 CertiOS.framework.proof.Map MapFun not_in_dom def
R22965:22968 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22950:22959 CertiOS.framework.proof.Map MapFun not_in_dom def
R22969:22978 CertiOS.framework.proof.Map MapFun not_in_dom def
R22965:22968 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22950:22959 CertiOS.framework.proof.Map MapFun not_in_dom def
R22969:22978 CertiOS.framework.proof.Map MapFun not_in_dom def
R23024:23033 CertiOS.framework.proof.Map MapFun not_in_dom def
R23051:23056 CertiOS.framework.proof.Map MapFun in_dom def
R23158:23167 CertiOS.framework.proof.Map MapFun not_in_dom def
R23185:23190 CertiOS.framework.proof.Map MapFun in_dom def
R23272:23281 CertiOS.framework.proof.Map MapFun not_in_dom def
R23299:23308 CertiOS.framework.proof.Map MapFun not_in_dom def
R23355:23364 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 23451:23473 MapFun disj_merge_unique_right
R23514:23517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23532:23535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23561:23564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23572:23575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23578:23580 Coq.Init.Logic <> :type_scope:x_'='_x not
R23576:23577 CertiOS.framework.proof.Map <> M1 var
R23581:23582 CertiOS.framework.proof.Map <> M3 var
R23567:23569 Coq.Init.Logic <> :type_scope:x_'='_x not
R23565:23566 CertiOS.framework.proof.Map <> M2 var
R23570:23571 CertiOS.framework.proof.Map <> M4 var
R23547:23549 Coq.Init.Logic <> :type_scope:x_'='_x not
R23536:23540 CertiOS.framework.proof.Map MapFun merge def
R23545:23546 CertiOS.framework.proof.Map <> M2 var
R23542:23543 CertiOS.framework.proof.Map <> M1 var
R23550:23554 CertiOS.framework.proof.Map MapFun merge def
R23559:23560 CertiOS.framework.proof.Map <> M4 var
R23556:23557 CertiOS.framework.proof.Map <> M3 var
R23518:23525 CertiOS.framework.proof.Map MapFun disjoint def
R23530:23531 CertiOS.framework.proof.Map <> M4 var
R23527:23528 CertiOS.framework.proof.Map <> M3 var
R23500:23507 CertiOS.framework.proof.Map MapFun disjoint def
R23512:23513 CertiOS.framework.proof.Map <> M2 var
R23509:23510 CertiOS.framework.proof.Map <> M1 var
R23612:23619 CertiOS.framework.proof.Map MapFun disjoint def
R23612:23619 CertiOS.framework.proof.Map MapFun disjoint def
R23657:23664 CertiOS.framework.proof.Map MapFun disjoint def
R23657:23664 CertiOS.framework.proof.Map MapFun disjoint def
R23713:23715 Coq.Init.Logic <> :type_scope:x_'='_x not
R23702:23706 CertiOS.framework.proof.Map MapFun merge def
R23716:23720 CertiOS.framework.proof.Map MapFun merge def
R23713:23715 Coq.Init.Logic <> :type_scope:x_'='_x not
R23702:23706 CertiOS.framework.proof.Map MapFun merge def
R23716:23720 CertiOS.framework.proof.Map MapFun merge def
R23767:23769 Coq.Init.Logic <> :type_scope:x_'='_x not
R23756:23760 CertiOS.framework.proof.Map MapFun merge def
R23770:23774 CertiOS.framework.proof.Map MapFun merge def
R23767:23769 Coq.Init.Logic <> :type_scope:x_'='_x not
R23756:23760 CertiOS.framework.proof.Map MapFun merge def
R23770:23774 CertiOS.framework.proof.Map MapFun merge def
R23846:23862 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
R23846:23862 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
prf 23894:23909 MapFun disjUnion_unique
R23959:23962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23981:23984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23992:23995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23998:24000 Coq.Init.Logic <> :type_scope:x_'='_x not
R23996:23997 CertiOS.framework.proof.Map <> M2 var
R24001:24002 CertiOS.framework.proof.Map <> M4 var
R23987:23989 Coq.Init.Logic <> :type_scope:x_'='_x not
R23985:23986 CertiOS.framework.proof.Map <> M1 var
R23990:23991 CertiOS.framework.proof.Map <> M3 var
R23963:23971 CertiOS.framework.proof.Map MapFun disjUnion def
R23979:23980 CertiOS.framework.proof.Map <> M5 var
R23976:23977 CertiOS.framework.proof.Map <> M4 var
R23973:23974 CertiOS.framework.proof.Map <> M3 var
R23941:23949 CertiOS.framework.proof.Map MapFun disjUnion def
R23957:23958 CertiOS.framework.proof.Map <> M5 var
R23954:23955 CertiOS.framework.proof.Map <> M2 var
R23951:23952 CertiOS.framework.proof.Map <> M1 var
R24031:24039 CertiOS.framework.proof.Map MapFun disjUnion def
R24056:24064 CertiOS.framework.proof.Map MapFun disjUnion def
R24144:24160 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
R24144:24160 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
prf 24192:24204 MapFun disjUnion_equ
R24256:24259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24278:24281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24289:24292 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24295:24297 Coq.Init.Logic <> :type_scope:x_'='_x not
R24293:24294 CertiOS.framework.proof.Map <> M4 var
R24298:24299 CertiOS.framework.proof.Map <> M5 var
R24284:24286 Coq.Init.Logic <> :type_scope:x_'='_x not
R24282:24283 CertiOS.framework.proof.Map <> M1 var
R24287:24288 CertiOS.framework.proof.Map <> M2 var
R24260:24268 CertiOS.framework.proof.Map MapFun disjUnion def
R24276:24277 CertiOS.framework.proof.Map <> M5 var
R24273:24274 CertiOS.framework.proof.Map <> M3 var
R24270:24271 CertiOS.framework.proof.Map <> M2 var
R24238:24246 CertiOS.framework.proof.Map MapFun disjUnion def
R24254:24255 CertiOS.framework.proof.Map <> M4 var
R24251:24252 CertiOS.framework.proof.Map <> M3 var
R24248:24249 CertiOS.framework.proof.Map <> M1 var
R24330:24338 CertiOS.framework.proof.Map MapFun disjUnion def
R24356:24364 CertiOS.framework.proof.Map MapFun disjUnion def
prf 24566:24584 MapFun disjUnion_reshuffle
R24640:24643 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24663:24666 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24687:24696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24697:24705 CertiOS.framework.proof.Map MapFun disjUnion def
R24714:24716 CertiOS.framework.proof.Map <> M1' var
R24711:24712 CertiOS.framework.proof.Map <> M2 var
R24707:24709 CertiOS.framework.proof.Map <> M11 var
R24667:24675 CertiOS.framework.proof.Map MapFun disjUnion def
R24685:24686 CertiOS.framework.proof.Map <> M1 var
R24681:24683 CertiOS.framework.proof.Map <> M2' var
R24677:24679 CertiOS.framework.proof.Map <> M11 var
R24644:24652 CertiOS.framework.proof.Map MapFun disjUnion def
R24662:24662 CertiOS.framework.proof.Map <> M var
R24658:24660 CertiOS.framework.proof.Map <> M2' var
R24654:24656 CertiOS.framework.proof.Map <> M1' var
R24623:24631 CertiOS.framework.proof.Map MapFun disjUnion def
R24639:24639 CertiOS.framework.proof.Map <> M var
R24636:24637 CertiOS.framework.proof.Map <> M2 var
R24633:24634 CertiOS.framework.proof.Map <> M1 var
R24745:24753 CertiOS.framework.proof.Map MapFun disjUnion def
R24768:24776 CertiOS.framework.proof.Map MapFun disjUnion def
R24792:24800 CertiOS.framework.proof.Map MapFun disjUnion def
R24832:24839 CertiOS.framework.proof.Map MapFun disjoint def
R24832:24839 CertiOS.framework.proof.Map MapFun disjoint def
R24878:24897 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
R24878:24897 CertiOS.framework.proof.Map MapFun disj_merge_disj_left thm
R24925:24932 CertiOS.framework.proof.Map MapFun disjoint def
R24925:24932 CertiOS.framework.proof.Map MapFun disjoint def
R24971:24991 CertiOS.framework.proof.Map MapFun disj_merge_disj_right thm
R24971:24991 CertiOS.framework.proof.Map MapFun disj_merge_disj_right thm
R25018:25026 CertiOS.framework.proof.Map MapFun disjUnion def
R25096:25098 Coq.Init.Logic <> :type_scope:x_'='_x not
R25072:25076 CertiOS.framework.proof.Map MapFun merge def
R25079:25083 CertiOS.framework.proof.Map MapFun merge def
R25099:25103 CertiOS.framework.proof.Map MapFun merge def
R25106:25110 CertiOS.framework.proof.Map MapFun merge def
R25096:25098 Coq.Init.Logic <> :type_scope:x_'='_x not
R25072:25076 CertiOS.framework.proof.Map MapFun merge def
R25079:25083 CertiOS.framework.proof.Map MapFun merge def
R25099:25103 CertiOS.framework.proof.Map MapFun merge def
R25106:25110 CertiOS.framework.proof.Map MapFun merge def
R25206:25208 Coq.Init.Logic <> :type_scope:x_'='_x not
R25194:25198 CertiOS.framework.proof.Map MapFun merge def
R25209:25213 CertiOS.framework.proof.Map MapFun merge def
R25206:25208 Coq.Init.Logic <> :type_scope:x_'='_x not
R25194:25198 CertiOS.framework.proof.Map MapFun merge def
R25209:25213 CertiOS.framework.proof.Map MapFun merge def
R25273:25275 Coq.Init.Logic <> :type_scope:x_'='_x not
R25261:25265 CertiOS.framework.proof.Map MapFun merge def
R25273:25275 Coq.Init.Logic <> :type_scope:x_'='_x not
R25261:25265 CertiOS.framework.proof.Map MapFun merge def
R25296:25318 CertiOS.framework.proof.Map MapFun disj_merge_unique_right thm
R25296:25318 CertiOS.framework.proof.Map MapFun disj_merge_unique_right thm
R25350:25357 CertiOS.framework.proof.Map MapFun disjoint def
R25350:25357 CertiOS.framework.proof.Map MapFun disjoint def
prf 25454:25463 MapFun eqDom_refl
R25476:25480 CertiOS.framework.proof.Map MapFun eqDom def
R25484:25484 CertiOS.framework.proof.Map <> M var
R25482:25482 CertiOS.framework.proof.Map <> M var
R25512:25516 CertiOS.framework.proof.Map MapFun eqDom def
R25528:25534 CertiOS.framework.proof.Map MapFun sub_dom def
prf 25555:25563 MapFun eqDom_sym
R25591:25594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25595:25599 CertiOS.framework.proof.Map MapFun eqDom def
R25604:25605 CertiOS.framework.proof.Map <> M1 var
R25601:25602 CertiOS.framework.proof.Map <> M2 var
R25580:25584 CertiOS.framework.proof.Map MapFun eqDom def
R25589:25590 CertiOS.framework.proof.Map <> M2 var
R25586:25587 CertiOS.framework.proof.Map <> M1 var
R25640:25644 CertiOS.framework.proof.Map MapFun eqDom def
prf 25668:25679 MapFun subDom_trans
R25712:25715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25729:25732 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25733:25739 CertiOS.framework.proof.Map MapFun sub_dom def
R25744:25745 CertiOS.framework.proof.Map <> M3 var
R25741:25742 CertiOS.framework.proof.Map <> M1 var
R25716:25722 CertiOS.framework.proof.Map MapFun sub_dom def
R25727:25728 CertiOS.framework.proof.Map <> M3 var
R25724:25725 CertiOS.framework.proof.Map <> M2 var
R25699:25705 CertiOS.framework.proof.Map MapFun sub_dom def
R25710:25711 CertiOS.framework.proof.Map <> M2 var
R25707:25708 CertiOS.framework.proof.Map <> M1 var
R25783:25789 CertiOS.framework.proof.Map MapFun sub_dom def
prf 25820:25830 MapFun eqDom_trans
R25862:25865 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25877:25880 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25881:25885 CertiOS.framework.proof.Map MapFun eqDom def
R25890:25891 CertiOS.framework.proof.Map <> M3 var
R25887:25888 CertiOS.framework.proof.Map <> M1 var
R25866:25870 CertiOS.framework.proof.Map MapFun eqDom def
R25875:25876 CertiOS.framework.proof.Map <> M3 var
R25872:25873 CertiOS.framework.proof.Map <> M2 var
R25851:25855 CertiOS.framework.proof.Map MapFun eqDom def
R25860:25861 CertiOS.framework.proof.Map <> M2 var
R25857:25858 CertiOS.framework.proof.Map <> M1 var
R25929:25933 CertiOS.framework.proof.Map MapFun eqDom def
R26000:26011 CertiOS.framework.proof.Map MapFun subDom_trans thm
R26000:26011 CertiOS.framework.proof.Map MapFun subDom_trans thm
R26034:26045 CertiOS.framework.proof.Map MapFun subDom_trans thm
R26034:26045 CertiOS.framework.proof.Map MapFun subDom_trans thm
prf 26141:26153 MapFun subDom_update
R26168:26170 CertiOS.framework.proof.Map MapFun Map def
R26178:26178 CertiOS.framework.proof.Map MapFun A def
R26186:26186 CertiOS.framework.proof.Map MapFun B def
R26190:26196 CertiOS.framework.proof.Map MapFun sub_dom def
R26201:26203 CertiOS.framework.proof.Map MapFun put def
R26209:26209 CertiOS.framework.proof.Map <> y var
R26207:26207 CertiOS.framework.proof.Map <> x var
R26205:26205 CertiOS.framework.proof.Map <> M var
R26198:26198 CertiOS.framework.proof.Map <> M var
R26245:26251 CertiOS.framework.proof.Map MapFun sub_dom def
R26282:26287 CertiOS.framework.proof.Map MapFun in_dom def
R26299:26304 CertiOS.framework.proof.Map MapFun in_dom def
R26350:26352 CertiOS.framework.proof.Map MapFun put def
R26368:26372 CertiOS.framework.proof.Map MapFun beq_A def
R26368:26372 CertiOS.framework.proof.Map MapFun beq_A def
prf 26439:26457 MapFun subDom_inDom_update
R26475:26477 CertiOS.framework.proof.Map MapFun Map def
R26485:26485 CertiOS.framework.proof.Map MapFun A def
R26493:26493 CertiOS.framework.proof.Map MapFun B def
R26507:26510 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26511:26517 CertiOS.framework.proof.Map MapFun sub_dom def
R26531:26531 CertiOS.framework.proof.Map <> M var
R26520:26522 CertiOS.framework.proof.Map MapFun put def
R26528:26528 CertiOS.framework.proof.Map <> y var
R26526:26526 CertiOS.framework.proof.Map <> x var
R26524:26524 CertiOS.framework.proof.Map <> M var
R26497:26502 CertiOS.framework.proof.Map MapFun in_dom def
R26506:26506 CertiOS.framework.proof.Map <> M var
R26504:26504 CertiOS.framework.proof.Map <> x var
R26560:26566 CertiOS.framework.proof.Map MapFun sub_dom def
R26578:26583 CertiOS.framework.proof.Map MapFun in_dom def
R26627:26629 CertiOS.framework.proof.Map MapFun put def
R26651:26655 CertiOS.framework.proof.Map MapFun beq_A def
R26651:26655 CertiOS.framework.proof.Map MapFun beq_A def
R26671:26676 CertiOS.framework.proof.Map MapFun in_dom def
prf 26766:26786 MapFun eqDom_indom_update_eq
R26805:26807 CertiOS.framework.proof.Map MapFun Map def
R26815:26815 CertiOS.framework.proof.Map MapFun A def
R26823:26823 CertiOS.framework.proof.Map MapFun B def
R26837:26840 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26841:26845 CertiOS.framework.proof.Map MapFun eqDom def
R26850:26852 CertiOS.framework.proof.Map MapFun put def
R26858:26858 CertiOS.framework.proof.Map <> y var
R26856:26856 CertiOS.framework.proof.Map <> x var
R26854:26854 CertiOS.framework.proof.Map <> M var
R26847:26847 CertiOS.framework.proof.Map <> M var
R26827:26832 CertiOS.framework.proof.Map MapFun in_dom def
R26836:26836 CertiOS.framework.proof.Map <> M var
R26834:26834 CertiOS.framework.proof.Map <> x var
R26900:26904 CertiOS.framework.proof.Map MapFun eqDom def
R26924:26936 CertiOS.framework.proof.Map MapFun subDom_update thm
R26924:26936 CertiOS.framework.proof.Map MapFun subDom_update thm
R26947:26965 CertiOS.framework.proof.Map MapFun subDom_inDom_update thm
R26947:26965 CertiOS.framework.proof.Map MapFun subDom_inDom_update thm
prf 27098:27108 MapFun eqDom_merge
R27159:27162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27174:27177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27180:27182 Coq.Init.Logic <> :type_scope:x_'='_x not
R27178:27179 CertiOS.framework.proof.Map <> M1 var
R27183:27184 CertiOS.framework.proof.Map <> M3 var
R27163:27167 CertiOS.framework.proof.Map MapFun eqDom def
R27172:27173 CertiOS.framework.proof.Map <> M3 var
R27169:27170 CertiOS.framework.proof.Map <> M1 var
R27145:27147 Coq.Init.Logic <> :type_scope:x_'='_x not
R27134:27138 CertiOS.framework.proof.Map MapFun merge def
R27143:27144 CertiOS.framework.proof.Map <> M2 var
R27140:27141 CertiOS.framework.proof.Map <> M1 var
R27148:27152 CertiOS.framework.proof.Map MapFun merge def
R27157:27158 CertiOS.framework.proof.Map <> M4 var
R27154:27155 CertiOS.framework.proof.Map <> M3 var
R27230:27243 CertiOS.framework.proof.Map MapFun extensionality prfax
R27230:27243 CertiOS.framework.proof.Map MapFun extensionality prfax
R27264:27268 CertiOS.framework.proof.Map MapFun eqDom def
R27286:27292 CertiOS.framework.proof.Map MapFun sub_dom def
R27344:27347 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27333:27338 CertiOS.framework.proof.Map MapFun in_dom def
R27348:27357 CertiOS.framework.proof.Map MapFun not_in_dom def
R27344:27347 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27333:27338 CertiOS.framework.proof.Map MapFun in_dom def
R27348:27357 CertiOS.framework.proof.Map MapFun not_in_dom def
R27374:27384 CertiOS.framework.proof.Map MapFun in_or_notin thm
R27374:27384 CertiOS.framework.proof.Map MapFun in_or_notin thm
R27419:27424 CertiOS.framework.proof.Map MapFun in_dom def
R27419:27424 CertiOS.framework.proof.Map MapFun in_dom def
R27457:27462 CertiOS.framework.proof.Map MapFun in_dom def
R27500:27505 CertiOS.framework.proof.Map MapFun in_dom def
R27557:27559 Coq.Init.Logic <> :type_scope:x_'='_x not
R27544:27548 CertiOS.framework.proof.Map MapFun merge def
R27560:27564 CertiOS.framework.proof.Map MapFun merge def
R27557:27559 Coq.Init.Logic <> :type_scope:x_'='_x not
R27544:27548 CertiOS.framework.proof.Map MapFun merge def
R27560:27564 CertiOS.framework.proof.Map MapFun merge def
R27603:27607 CertiOS.framework.proof.Map MapFun merge def
R27707:27710 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27696:27701 CertiOS.framework.proof.Map MapFun in_dom def
R27711:27720 CertiOS.framework.proof.Map MapFun not_in_dom def
R27707:27710 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27696:27701 CertiOS.framework.proof.Map MapFun in_dom def
R27711:27720 CertiOS.framework.proof.Map MapFun not_in_dom def
R27737:27747 CertiOS.framework.proof.Map MapFun in_or_notin thm
R27737:27747 CertiOS.framework.proof.Map MapFun in_or_notin thm
R27782:27787 CertiOS.framework.proof.Map MapFun in_dom def
R27782:27787 CertiOS.framework.proof.Map MapFun in_dom def
R27821:27826 CertiOS.framework.proof.Map MapFun in_dom def
R27842:27851 CertiOS.framework.proof.Map MapFun not_in_dom def
R27929:27938 CertiOS.framework.proof.Map MapFun not_in_dom def
R27954:27963 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 28013:28032 MapFun eqDom_disjUnion_left
R28063:28065 CertiOS.framework.proof.Map MapFun Map def
R28091:28094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28112:28115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28127:28130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28133:28135 Coq.Init.Logic <> :type_scope:x_'='_x not
R28131:28132 CertiOS.framework.proof.Map <> M1 var
R28136:28137 CertiOS.framework.proof.Map <> M3 var
R28116:28120 CertiOS.framework.proof.Map MapFun eqDom def
R28125:28126 CertiOS.framework.proof.Map <> M3 var
R28122:28123 CertiOS.framework.proof.Map <> M1 var
R28095:28103 CertiOS.framework.proof.Map MapFun disjUnion def
R28111:28111 CertiOS.framework.proof.Map <> M var
R28108:28109 CertiOS.framework.proof.Map <> M4 var
R28105:28106 CertiOS.framework.proof.Map <> M3 var
R28074:28082 CertiOS.framework.proof.Map MapFun disjUnion def
R28090:28090 CertiOS.framework.proof.Map <> M var
R28087:28088 CertiOS.framework.proof.Map <> M2 var
R28084:28085 CertiOS.framework.proof.Map <> M1 var
R28178:28186 CertiOS.framework.proof.Map MapFun disjUnion def
R28282:28292 CertiOS.framework.proof.Map MapFun eqDom_merge thm
R28282:28292 CertiOS.framework.proof.Map MapFun eqDom_merge thm
prf 28325:28345 MapFun eqDom_disjUnion_right
R28396:28399 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28417:28420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28432:28435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28438:28440 Coq.Init.Logic <> :type_scope:x_'='_x not
R28436:28437 CertiOS.framework.proof.Map <> M2 var
R28441:28442 CertiOS.framework.proof.Map <> M4 var
R28421:28425 CertiOS.framework.proof.Map MapFun eqDom def
R28430:28431 CertiOS.framework.proof.Map <> M3 var
R28427:28428 CertiOS.framework.proof.Map <> M1 var
R28400:28408 CertiOS.framework.proof.Map MapFun disjUnion def
R28416:28416 CertiOS.framework.proof.Map <> M var
R28413:28414 CertiOS.framework.proof.Map <> M4 var
R28410:28411 CertiOS.framework.proof.Map <> M3 var
R28379:28387 CertiOS.framework.proof.Map MapFun disjUnion def
R28395:28395 CertiOS.framework.proof.Map <> M var
R28392:28393 CertiOS.framework.proof.Map <> M2 var
R28389:28390 CertiOS.framework.proof.Map <> M1 var
R28499:28501 Coq.Init.Logic <> :type_scope:x_'='_x not
R28499:28501 Coq.Init.Logic <> :type_scope:x_'='_x not
R28513:28532 CertiOS.framework.proof.Map MapFun eqDom_disjUnion_left thm
R28513:28532 CertiOS.framework.proof.Map MapFun eqDom_disjUnion_left thm
R28563:28571 CertiOS.framework.proof.Map MapFun disjUnion def
R28588:28596 CertiOS.framework.proof.Map MapFun disjUnion def
R28678:28694 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
R28678:28694 CertiOS.framework.proof.Map MapFun disj_merge_unique thm
prf 28804:28820 MapFun eqDom_notin_presv
R28841:28843 CertiOS.framework.proof.Map MapFun Map def
R28851:28851 CertiOS.framework.proof.Map MapFun A def
R28866:28869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28885:28888 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28889:28898 CertiOS.framework.proof.Map MapFun not_in_dom def
R28902:28903 CertiOS.framework.proof.Map <> M2 var
R28900:28900 CertiOS.framework.proof.Map <> x var
R28870:28879 CertiOS.framework.proof.Map MapFun not_in_dom def
R28883:28884 CertiOS.framework.proof.Map <> M1 var
R28881:28881 CertiOS.framework.proof.Map <> x var
R28855:28859 CertiOS.framework.proof.Map MapFun eqDom def
R28864:28865 CertiOS.framework.proof.Map <> M2 var
R28861:28862 CertiOS.framework.proof.Map <> M1 var
R28943:28952 CertiOS.framework.proof.Map MapFun not_in_dom def
R28964:28968 CertiOS.framework.proof.Map MapFun eqDom def
R28986:28992 CertiOS.framework.proof.Map MapFun sub_dom def
R29011:29016 CertiOS.framework.proof.Map MapFun in_dom def
R29066:29066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29094:29098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29099:29105 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29111:29112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29110:29110 CertiOS.framework.proof.Map MapFun B def
R29117:29119 Coq.Init.Logic <> :type_scope:x_'='_x not
R29120:29123 Coq.Init.Datatypes <> Some constr
R29125:29125 CertiOS.framework.proof.Map <> b var
R29067:29073 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29079:29080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29078:29078 CertiOS.framework.proof.Map MapFun B def
R29085:29087 Coq.Init.Logic <> :type_scope:x_'='_x not
R29088:29091 Coq.Init.Datatypes <> Some constr
R29093:29093 CertiOS.framework.proof.Map <> b var
R29066:29066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29094:29098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29099:29105 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29111:29112 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29110:29110 CertiOS.framework.proof.Map MapFun B def
R29117:29119 Coq.Init.Logic <> :type_scope:x_'='_x not
R29120:29123 Coq.Init.Datatypes <> Some constr
R29125:29125 CertiOS.framework.proof.Map <> b var
R29067:29073 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29079:29080 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29078:29078 CertiOS.framework.proof.Map MapFun B def
R29085:29087 Coq.Init.Logic <> :type_scope:x_'='_x not
R29088:29091 Coq.Init.Datatypes <> Some constr
R29093:29093 CertiOS.framework.proof.Map <> b var
R29145:29145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29173:29177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29178:29184 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29190:29191 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29189:29189 CertiOS.framework.proof.Map MapFun B def
R29196:29198 Coq.Init.Logic <> :type_scope:x_'='_x not
R29199:29202 Coq.Init.Datatypes <> Some constr
R29204:29204 CertiOS.framework.proof.Map <> b var
R29146:29152 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29158:29159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29157:29157 CertiOS.framework.proof.Map MapFun B def
R29164:29166 Coq.Init.Logic <> :type_scope:x_'='_x not
R29167:29170 Coq.Init.Datatypes <> Some constr
R29172:29172 CertiOS.framework.proof.Map <> b var
R29145:29145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29173:29177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29178:29184 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29190:29191 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29189:29189 CertiOS.framework.proof.Map MapFun B def
R29196:29198 Coq.Init.Logic <> :type_scope:x_'='_x not
R29199:29202 Coq.Init.Datatypes <> Some constr
R29204:29204 CertiOS.framework.proof.Map <> b var
R29146:29152 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29158:29159 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29157:29157 CertiOS.framework.proof.Map MapFun B def
R29164:29166 Coq.Init.Logic <> :type_scope:x_'='_x not
R29167:29170 Coq.Init.Datatypes <> Some constr
R29172:29172 CertiOS.framework.proof.Map <> b var
R29244:29250 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29256:29257 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29255:29255 CertiOS.framework.proof.Map MapFun B def
R29262:29264 Coq.Init.Logic <> :type_scope:x_'='_x not
R29265:29268 Coq.Init.Datatypes <> Some constr
R29270:29270 CertiOS.framework.proof.Map <> b var
R29244:29250 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29256:29257 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29255:29255 CertiOS.framework.proof.Map MapFun B def
R29262:29264 Coq.Init.Logic <> :type_scope:x_'='_x not
R29265:29268 Coq.Init.Datatypes <> Some constr
R29270:29270 CertiOS.framework.proof.Map <> b var
prf 29381:29396 MapFun eqDom_disj_presv
R29419:29421 CertiOS.framework.proof.Map MapFun Map def
R29436:29439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29453:29456 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29457:29464 CertiOS.framework.proof.Map MapFun disjoint def
R29469:29469 CertiOS.framework.proof.Map <> M var
R29466:29467 CertiOS.framework.proof.Map <> M2 var
R29440:29447 CertiOS.framework.proof.Map MapFun disjoint def
R29452:29452 CertiOS.framework.proof.Map <> M var
R29449:29450 CertiOS.framework.proof.Map <> M1 var
R29425:29429 CertiOS.framework.proof.Map MapFun eqDom def
R29434:29435 CertiOS.framework.proof.Map <> M2 var
R29431:29432 CertiOS.framework.proof.Map <> M1 var
R29509:29516 CertiOS.framework.proof.Map MapFun disjoint def
R29554:29557 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29539:29548 CertiOS.framework.proof.Map MapFun not_in_dom def
R29558:29567 CertiOS.framework.proof.Map MapFun not_in_dom def
R29554:29557 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29539:29548 CertiOS.framework.proof.Map MapFun not_in_dom def
R29558:29567 CertiOS.framework.proof.Map MapFun not_in_dom def
R29618:29622 CertiOS.framework.proof.Map MapFun eqDom def
R29639:29655 CertiOS.framework.proof.Map MapFun eqDom_notin_presv thm
R29639:29655 CertiOS.framework.proof.Map MapFun eqDom_notin_presv thm
prf 29756:29777 MapFun disjUnion_presv_in_dom
R29800:29802 CertiOS.framework.proof.Map MapFun Map def
R29810:29810 CertiOS.framework.proof.Map MapFun A def
R29825:29828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29846:29849 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29850:29855 CertiOS.framework.proof.Map MapFun in_dom def
R29859:29859 CertiOS.framework.proof.Map <> M var
R29857:29857 CertiOS.framework.proof.Map <> x var
R29829:29837 CertiOS.framework.proof.Map MapFun disjUnion def
R29845:29845 CertiOS.framework.proof.Map <> M var
R29842:29843 CertiOS.framework.proof.Map <> M2 var
R29839:29840 CertiOS.framework.proof.Map <> M1 var
R29814:29819 CertiOS.framework.proof.Map MapFun in_dom def
R29823:29824 CertiOS.framework.proof.Map <> M1 var
R29821:29821 CertiOS.framework.proof.Map <> x var
R29888:29896 CertiOS.framework.proof.Map MapFun disjUnion def
prf 29971:29991 MapFun disjUnion_presv_eqDom
R30023:30025 CertiOS.framework.proof.Map MapFun Map def
R30051:30054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30073:30076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30088:30091 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30103:30106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30107:30111 CertiOS.framework.proof.Map MapFun eqDom def
R30115:30116 CertiOS.framework.proof.Map <> M' var
R30113:30113 CertiOS.framework.proof.Map <> M var
R30092:30096 CertiOS.framework.proof.Map MapFun eqDom def
R30101:30102 CertiOS.framework.proof.Map <> M4 var
R30098:30099 CertiOS.framework.proof.Map <> M2 var
R30077:30081 CertiOS.framework.proof.Map MapFun eqDom def
R30086:30087 CertiOS.framework.proof.Map <> M3 var
R30083:30084 CertiOS.framework.proof.Map <> M1 var
R30055:30063 CertiOS.framework.proof.Map MapFun disjUnion def
R30071:30072 CertiOS.framework.proof.Map <> M' var
R30068:30069 CertiOS.framework.proof.Map <> M4 var
R30065:30066 CertiOS.framework.proof.Map <> M3 var
R30034:30042 CertiOS.framework.proof.Map MapFun disjUnion def
R30050:30050 CertiOS.framework.proof.Map <> M var
R30047:30048 CertiOS.framework.proof.Map <> M2 var
R30044:30045 CertiOS.framework.proof.Map <> M1 var
R30135:30139 CertiOS.framework.proof.Map MapFun eqDom def
R30151:30157 CertiOS.framework.proof.Map MapFun sub_dom def
R30169:30177 CertiOS.framework.proof.Map MapFun disjUnion def
R30286:30291 CertiOS.framework.proof.Map MapFun in_dom def
R30364:30368 CertiOS.framework.proof.Map MapFun merge def
R30387:30387 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30415:30420 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30432:30432 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30388:30394 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30400:30401 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30399:30399 CertiOS.framework.proof.Map MapFun B def
R30406:30408 Coq.Init.Logic <> :type_scope:x_'='_x not
R30409:30412 Coq.Init.Datatypes <> Some constr
R30414:30414 CertiOS.framework.proof.Map <> b var
R30425:30427 Coq.Init.Logic <> :type_scope:x_'='_x not
R30428:30431 Coq.Init.Datatypes <> None constr
R30387:30387 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30415:30420 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30432:30432 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R30388:30394 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30400:30401 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R30399:30399 CertiOS.framework.proof.Map MapFun B def
R30406:30408 Coq.Init.Logic <> :type_scope:x_'='_x not
R30409:30412 Coq.Init.Datatypes <> Some constr
R30414:30414 CertiOS.framework.proof.Map <> b var
R30425:30427 Coq.Init.Logic <> :type_scope:x_'='_x not
R30428:30431 Coq.Init.Datatypes <> None constr
R30525:30530 CertiOS.framework.proof.Map MapFun in_dom def
R30525:30530 CertiOS.framework.proof.Map MapFun in_dom def
R30556:30561 CertiOS.framework.proof.Map MapFun in_dom def
R30579:30584 CertiOS.framework.proof.Map MapFun in_dom def
R30632:30636 CertiOS.framework.proof.Map MapFun merge def
R30681:30690 CertiOS.framework.proof.Map MapFun not_in_dom def
R30681:30690 CertiOS.framework.proof.Map MapFun not_in_dom def
R30707:30718 CertiOS.framework.proof.Map MapFun not_in_notin thm
R30707:30718 CertiOS.framework.proof.Map MapFun not_in_notin thm
R30736:30741 CertiOS.framework.proof.Map MapFun in_dom def
R30736:30741 CertiOS.framework.proof.Map MapFun in_dom def
R30775:30780 CertiOS.framework.proof.Map MapFun in_dom def
R30879:30884 CertiOS.framework.proof.Map MapFun in_dom def
R30879:30884 CertiOS.framework.proof.Map MapFun in_dom def
R30910:30915 CertiOS.framework.proof.Map MapFun in_dom def
R30944:30949 CertiOS.framework.proof.Map MapFun in_dom def
R31012:31016 CertiOS.framework.proof.Map MapFun merge def
R31026:31035 CertiOS.framework.proof.Map MapFun not_in_dom def
R31126:31130 CertiOS.framework.proof.Map MapFun merge def
R31149:31149 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31177:31182 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31194:31194 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31150:31156 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31162:31163 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31161:31161 CertiOS.framework.proof.Map MapFun B def
R31168:31170 Coq.Init.Logic <> :type_scope:x_'='_x not
R31171:31174 Coq.Init.Datatypes <> Some constr
R31176:31176 CertiOS.framework.proof.Map <> b var
R31187:31189 Coq.Init.Logic <> :type_scope:x_'='_x not
R31190:31193 Coq.Init.Datatypes <> None constr
R31149:31149 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31177:31182 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31194:31194 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R31150:31156 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31162:31163 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R31161:31161 CertiOS.framework.proof.Map MapFun B def
R31168:31170 Coq.Init.Logic <> :type_scope:x_'='_x not
R31171:31174 Coq.Init.Datatypes <> Some constr
R31176:31176 CertiOS.framework.proof.Map <> b var
R31187:31189 Coq.Init.Logic <> :type_scope:x_'='_x not
R31190:31193 Coq.Init.Datatypes <> None constr
R31287:31292 CertiOS.framework.proof.Map MapFun in_dom def
R31287:31292 CertiOS.framework.proof.Map MapFun in_dom def
R31318:31323 CertiOS.framework.proof.Map MapFun in_dom def
R31341:31346 CertiOS.framework.proof.Map MapFun in_dom def
R31394:31398 CertiOS.framework.proof.Map MapFun merge def
R31443:31452 CertiOS.framework.proof.Map MapFun not_in_dom def
R31443:31452 CertiOS.framework.proof.Map MapFun not_in_dom def
R31469:31480 CertiOS.framework.proof.Map MapFun not_in_notin thm
R31469:31480 CertiOS.framework.proof.Map MapFun not_in_notin thm
R31498:31503 CertiOS.framework.proof.Map MapFun in_dom def
R31498:31503 CertiOS.framework.proof.Map MapFun in_dom def
R31537:31542 CertiOS.framework.proof.Map MapFun in_dom def
R31641:31646 CertiOS.framework.proof.Map MapFun in_dom def
R31641:31646 CertiOS.framework.proof.Map MapFun in_dom def
R31672:31677 CertiOS.framework.proof.Map MapFun in_dom def
R31706:31711 CertiOS.framework.proof.Map MapFun in_dom def
R31774:31778 CertiOS.framework.proof.Map MapFun merge def
R31788:31797 CertiOS.framework.proof.Map MapFun not_in_dom def
prf 31902:31933 MapFun remove_left_presv_disjUnion_left
R31956:31958 CertiOS.framework.proof.Map MapFun Map def
R31966:31966 CertiOS.framework.proof.Map MapFun A def
R31991:31994 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32006:32009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32010:32018 CertiOS.framework.proof.Map MapFun disjUnion def
R32038:32043 CertiOS.framework.proof.Map MapFun remove def
R32047:32047 CertiOS.framework.proof.Map <> x var
R32045:32045 CertiOS.framework.proof.Map <> M var
R32034:32035 CertiOS.framework.proof.Map <> M2 var
R32021:32026 CertiOS.framework.proof.Map MapFun remove def
R32031:32031 CertiOS.framework.proof.Map <> x var
R32028:32029 CertiOS.framework.proof.Map <> M1 var
R31995:32000 CertiOS.framework.proof.Map MapFun in_dom def
R32004:32005 CertiOS.framework.proof.Map <> M1 var
R32002:32002 CertiOS.framework.proof.Map <> x var
R31974:31982 CertiOS.framework.proof.Map MapFun disjUnion def
R31990:31990 CertiOS.framework.proof.Map <> M var
R31987:31988 CertiOS.framework.proof.Map <> M2 var
R31984:31985 CertiOS.framework.proof.Map <> M1 var
R32087:32095 CertiOS.framework.proof.Map MapFun disjUnion def
R32176:32205 CertiOS.framework.proof.Map MapFun disj_remove_merge_merge_remove thm
R32176:32205 CertiOS.framework.proof.Map MapFun disj_remove_merge_merge_remove thm
prf 32281:32313 MapFun remove_left_presv_disjUnion_right
R32336:32338 CertiOS.framework.proof.Map MapFun Map def
R32346:32346 CertiOS.framework.proof.Map MapFun A def
R32371:32374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32386:32389 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32390:32398 CertiOS.framework.proof.Map MapFun disjUnion def
R32418:32423 CertiOS.framework.proof.Map MapFun remove def
R32427:32427 CertiOS.framework.proof.Map <> x var
R32425:32425 CertiOS.framework.proof.Map <> M var
R32404:32409 CertiOS.framework.proof.Map MapFun remove def
R32414:32414 CertiOS.framework.proof.Map <> x var
R32411:32412 CertiOS.framework.proof.Map <> M2 var
R32400:32401 CertiOS.framework.proof.Map <> M1 var
R32375:32380 CertiOS.framework.proof.Map MapFun in_dom def
R32384:32385 CertiOS.framework.proof.Map <> M2 var
R32382:32382 CertiOS.framework.proof.Map <> x var
R32354:32362 CertiOS.framework.proof.Map MapFun disjUnion def
R32370:32370 CertiOS.framework.proof.Map <> M var
R32367:32368 CertiOS.framework.proof.Map <> M2 var
R32364:32365 CertiOS.framework.proof.Map <> M1 var
R32455:32463 CertiOS.framework.proof.Map MapFun disjUnion def
R32483:32488 CertiOS.framework.proof.Map MapFun remove def
R32466:32471 CertiOS.framework.proof.Map MapFun remove def
R32455:32463 CertiOS.framework.proof.Map MapFun disjUnion def
R32483:32488 CertiOS.framework.proof.Map MapFun remove def
R32466:32471 CertiOS.framework.proof.Map MapFun remove def
prf 32581:32607 MapFun extend_presv_disjUnion_left
R32630:32632 CertiOS.framework.proof.Map MapFun Map def
R32640:32640 CertiOS.framework.proof.Map MapFun A def
R32648:32648 CertiOS.framework.proof.Map MapFun B def
R32673:32676 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32692:32695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32696:32704 CertiOS.framework.proof.Map MapFun disjUnion def
R32723:32725 CertiOS.framework.proof.Map MapFun put def
R32731:32731 CertiOS.framework.proof.Map <> y var
R32729:32729 CertiOS.framework.proof.Map <> x var
R32727:32727 CertiOS.framework.proof.Map <> M var
R32719:32720 CertiOS.framework.proof.Map <> M2 var
R32707:32709 CertiOS.framework.proof.Map MapFun put def
R32716:32716 CertiOS.framework.proof.Map <> y var
R32714:32714 CertiOS.framework.proof.Map <> x var
R32711:32712 CertiOS.framework.proof.Map <> M1 var
R32677:32686 CertiOS.framework.proof.Map MapFun not_in_dom def
R32690:32691 CertiOS.framework.proof.Map <> M2 var
R32688:32688 CertiOS.framework.proof.Map <> x var
R32656:32664 CertiOS.framework.proof.Map MapFun disjUnion def
R32672:32672 CertiOS.framework.proof.Map <> M var
R32669:32670 CertiOS.framework.proof.Map <> M2 var
R32666:32667 CertiOS.framework.proof.Map <> M1 var
R32773:32781 CertiOS.framework.proof.Map MapFun disjUnion def
R32864:32882 CertiOS.framework.proof.Map MapFun put_merge_merge_put thm
R32864:32882 CertiOS.framework.proof.Map MapFun put_merge_merge_put thm
prf 32947:32974 MapFun extend_presv_disjUnion_right
R32997:32999 CertiOS.framework.proof.Map MapFun Map def
R33007:33007 CertiOS.framework.proof.Map MapFun A def
R33015:33015 CertiOS.framework.proof.Map MapFun B def
R33040:33043 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33059:33062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33063:33071 CertiOS.framework.proof.Map MapFun disjUnion def
R33090:33092 CertiOS.framework.proof.Map MapFun put def
R33098:33098 CertiOS.framework.proof.Map <> y var
R33096:33096 CertiOS.framework.proof.Map <> x var
R33094:33094 CertiOS.framework.proof.Map <> M var
R33077:33079 CertiOS.framework.proof.Map MapFun put def
R33086:33086 CertiOS.framework.proof.Map <> y var
R33084:33084 CertiOS.framework.proof.Map <> x var
R33081:33082 CertiOS.framework.proof.Map <> M2 var
R33073:33074 CertiOS.framework.proof.Map <> M1 var
R33044:33053 CertiOS.framework.proof.Map MapFun not_in_dom def
R33057:33058 CertiOS.framework.proof.Map <> M1 var
R33055:33055 CertiOS.framework.proof.Map <> x var
R33023:33031 CertiOS.framework.proof.Map MapFun disjUnion def
R33039:33039 CertiOS.framework.proof.Map <> M var
R33036:33037 CertiOS.framework.proof.Map <> M2 var
R33033:33034 CertiOS.framework.proof.Map <> M1 var
R33126:33134 CertiOS.framework.proof.Map MapFun disjUnion def
R33153:33155 CertiOS.framework.proof.Map MapFun put def
R33137:33139 CertiOS.framework.proof.Map MapFun put def
R33126:33134 CertiOS.framework.proof.Map MapFun disjUnion def
R33153:33155 CertiOS.framework.proof.Map MapFun put def
R33137:33139 CertiOS.framework.proof.Map MapFun put def
prf 33245:33271 MapFun update_presv_disjUnion_left
R33294:33296 CertiOS.framework.proof.Map MapFun Map def
R33304:33304 CertiOS.framework.proof.Map MapFun A def
R33312:33312 CertiOS.framework.proof.Map MapFun B def
R33337:33340 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33352:33355 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33356:33364 CertiOS.framework.proof.Map MapFun disjUnion def
R33383:33385 CertiOS.framework.proof.Map MapFun put def
R33391:33391 CertiOS.framework.proof.Map <> y var
R33389:33389 CertiOS.framework.proof.Map <> x var
R33387:33387 CertiOS.framework.proof.Map <> M var
R33379:33380 CertiOS.framework.proof.Map <> M2 var
R33367:33369 CertiOS.framework.proof.Map MapFun put def
R33376:33376 CertiOS.framework.proof.Map <> y var
R33374:33374 CertiOS.framework.proof.Map <> x var
R33371:33372 CertiOS.framework.proof.Map <> M1 var
R33341:33346 CertiOS.framework.proof.Map MapFun in_dom def
R33350:33351 CertiOS.framework.proof.Map <> M1 var
R33348:33348 CertiOS.framework.proof.Map <> x var
R33320:33328 CertiOS.framework.proof.Map MapFun disjUnion def
R33336:33336 CertiOS.framework.proof.Map <> M var
R33333:33334 CertiOS.framework.proof.Map <> M2 var
R33330:33331 CertiOS.framework.proof.Map <> M1 var
R33422:33431 CertiOS.framework.proof.Map MapFun not_in_dom def
R33422:33431 CertiOS.framework.proof.Map MapFun not_in_dom def
R33448:33466 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R33448:33466 CertiOS.framework.proof.Map MapFun disj_exclusive_left thm
R33492:33500 CertiOS.framework.proof.Map MapFun disjUnion def
prf 33613:33640 MapFun update_presv_disjUnion_right
R33663:33665 CertiOS.framework.proof.Map MapFun Map def
R33673:33673 CertiOS.framework.proof.Map MapFun A def
R33681:33681 CertiOS.framework.proof.Map MapFun B def
R33706:33709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33721:33724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33725:33733 CertiOS.framework.proof.Map MapFun disjUnion def
R33752:33754 CertiOS.framework.proof.Map MapFun put def
R33760:33760 CertiOS.framework.proof.Map <> y var
R33758:33758 CertiOS.framework.proof.Map <> x var
R33756:33756 CertiOS.framework.proof.Map <> M var
R33739:33741 CertiOS.framework.proof.Map MapFun put def
R33748:33748 CertiOS.framework.proof.Map <> y var
R33746:33746 CertiOS.framework.proof.Map <> x var
R33743:33744 CertiOS.framework.proof.Map <> M2 var
R33735:33736 CertiOS.framework.proof.Map <> M1 var
R33710:33715 CertiOS.framework.proof.Map MapFun in_dom def
R33719:33720 CertiOS.framework.proof.Map <> M2 var
R33717:33717 CertiOS.framework.proof.Map <> x var
R33689:33697 CertiOS.framework.proof.Map MapFun disjUnion def
R33705:33705 CertiOS.framework.proof.Map <> M var
R33702:33703 CertiOS.framework.proof.Map <> M2 var
R33699:33700 CertiOS.framework.proof.Map <> M1 var
R33788:33796 CertiOS.framework.proof.Map MapFun disjUnion def
R33815:33817 CertiOS.framework.proof.Map MapFun put def
R33799:33801 CertiOS.framework.proof.Map MapFun put def
R33788:33796 CertiOS.framework.proof.Map MapFun disjUnion def
R33815:33817 CertiOS.framework.proof.Map MapFun put def
R33799:33801 CertiOS.framework.proof.Map MapFun put def
prf 33936:33958 MapFun disjoint_merge_subseteq
R33997:34000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34015:34018 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34033:34036 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34037:34044 CertiOS.framework.proof.Map MapFun subseteq def
R34062:34062 CertiOS.framework.proof.Map <> M var
R34047:34051 CertiOS.framework.proof.Map MapFun merge def
R34057:34059 CertiOS.framework.proof.Map <> M_2 var
R34053:34055 CertiOS.framework.proof.Map <> M_1 var
R34019:34026 CertiOS.framework.proof.Map MapFun subseteq def
R34032:34032 CertiOS.framework.proof.Map <> M var
R34028:34030 CertiOS.framework.proof.Map <> M_2 var
R34001:34008 CertiOS.framework.proof.Map MapFun subseteq def
R34014:34014 CertiOS.framework.proof.Map <> M var
R34010:34012 CertiOS.framework.proof.Map <> M_1 var
R33981:33988 CertiOS.framework.proof.Map MapFun disjoint def
R33994:33996 CertiOS.framework.proof.Map <> M_2 var
R33990:33992 CertiOS.framework.proof.Map <> M_1 var
R34091:34098 CertiOS.framework.proof.Map MapFun subseteq def
R34120:34124 CertiOS.framework.proof.Map MapFun merge def
R34142:34147 CertiOS.framework.proof.Map MapFun in_dom def
R34165:34169 CertiOS.framework.proof.Map MapFun merge def
R34181:34188 CertiOS.framework.proof.Map MapFun subseteq def
R34206:34211 CertiOS.framework.proof.Map MapFun in_dom def
R34242:34245 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R34235:34237 Coq.Init.Logic <> :type_scope:x_'='_x not
R34238:34241 Coq.Init.Datatypes <> None constr
R34246:34252 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34254:34255 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34261:34263 Coq.Init.Logic <> :type_scope:x_'='_x not
R34264:34267 Coq.Init.Datatypes <> Some constr
R34269:34269 CertiOS.framework.proof.Map <> y var
R34242:34245 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R34235:34237 Coq.Init.Logic <> :type_scope:x_'='_x not
R34238:34241 Coq.Init.Datatypes <> None constr
R34246:34252 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34254:34255 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R34261:34263 Coq.Init.Logic <> :type_scope:x_'='_x not
R34264:34267 Coq.Init.Datatypes <> Some constr
R34269:34269 CertiOS.framework.proof.Map <> y var
R34398:34405 CertiOS.framework.proof.Map MapFun subseteq def
R34433:34438 CertiOS.framework.proof.Map MapFun in_dom def
prf 34586:34608 MapFun disjUnion_subseteq_left
R34650:34653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34654:34661 CertiOS.framework.proof.Map MapFun subseteq def
R34667:34667 CertiOS.framework.proof.Map <> M var
R34663:34665 CertiOS.framework.proof.Map <> M_1 var
R34631:34639 CertiOS.framework.proof.Map MapFun disjUnion def
R34649:34649 CertiOS.framework.proof.Map <> M var
R34645:34647 CertiOS.framework.proof.Map <> M_2 var
R34641:34643 CertiOS.framework.proof.Map <> M_1 var
R34696:34704 CertiOS.framework.proof.Map MapFun disjUnion def
R34755:34771 CertiOS.framework.proof.Map MapFun merge_extends_map thm
R34755:34771 CertiOS.framework.proof.Map MapFun merge_extends_map thm
prf 34787:34810 MapFun disjUnion_subseteq_right
R34852:34855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34856:34863 CertiOS.framework.proof.Map MapFun subseteq def
R34869:34869 CertiOS.framework.proof.Map <> M var
R34865:34867 CertiOS.framework.proof.Map <> M_2 var
R34833:34841 CertiOS.framework.proof.Map MapFun disjUnion def
R34851:34851 CertiOS.framework.proof.Map <> M var
R34847:34849 CertiOS.framework.proof.Map <> M_2 var
R34843:34845 CertiOS.framework.proof.Map <> M_1 var
R34897:34919 CertiOS.framework.proof.Map MapFun disjUnion_subseteq_left thm
R34897:34919 CertiOS.framework.proof.Map MapFun disjUnion_subseteq_left thm
R34939:34954 CertiOS.framework.proof.Map MapFun disjUnion_commut thm
R34939:34954 CertiOS.framework.proof.Map MapFun disjUnion_commut thm
prf 34975:34991 MapFun split_sglton_free
R35023:35026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35027:35035 CertiOS.framework.proof.Map MapFun disjUnion def
R35064:35064 CertiOS.framework.proof.Map <> M var
R35052:35057 CertiOS.framework.proof.Map MapFun remove def
R35061:35061 CertiOS.framework.proof.Map <> x var
R35059:35059 CertiOS.framework.proof.Map <> M var
R35038:35040 CertiOS.framework.proof.Map MapFun put def
R35048:35048 CertiOS.framework.proof.Map <> y var
R35046:35046 CertiOS.framework.proof.Map <> x var
R35042:35044 CertiOS.framework.proof.Map MapFun emp def
R35010:35016 CertiOS.framework.proof.Map MapFun maps_to def
R35022:35022 CertiOS.framework.proof.Map <> y var
R35020:35020 CertiOS.framework.proof.Map <> x var
R35018:35018 CertiOS.framework.proof.Map <> M var
R35093:35101 CertiOS.framework.proof.Map MapFun disjUnion def
R35113:35115 CertiOS.framework.proof.Map MapFun put def
R35127:35132 CertiOS.framework.proof.Map MapFun remove def
R35153:35160 CertiOS.framework.proof.Map MapFun disjoint def
R35181:35190 CertiOS.framework.proof.Map MapFun not_in_dom def
R35206:35210 CertiOS.framework.proof.Map MapFun beq_A def
R35206:35210 CertiOS.framework.proof.Map MapFun beq_A def
R35249:35251 CertiOS.framework.proof.Map MapFun emp def
R35269:35273 CertiOS.framework.proof.Map MapFun merge def
R35284:35297 CertiOS.framework.proof.Map MapFun extensionality prfax
R35284:35297 CertiOS.framework.proof.Map MapFun extensionality prfax
R35322:35326 CertiOS.framework.proof.Map MapFun beq_A def
R35322:35326 CertiOS.framework.proof.Map MapFun beq_A def
R35344:35350 CertiOS.framework.proof.Map MapFun maps_to def
R35394:35396 CertiOS.framework.proof.Map MapFun emp def
prf 35506:35519 MapFun ext_emp_sglton
R35536:35542 CertiOS.framework.proof.Map MapFun sgltonM def
R35560:35560 CertiOS.framework.proof.Map <> y var
R35558:35558 CertiOS.framework.proof.Map <> x var
R35545:35547 CertiOS.framework.proof.Map MapFun put def
R35555:35555 CertiOS.framework.proof.Map <> y var
R35553:35553 CertiOS.framework.proof.Map <> x var
R35549:35551 CertiOS.framework.proof.Map MapFun emp def
R35579:35585 CertiOS.framework.proof.Map MapFun sgltonM def
R35597:35599 CertiOS.framework.proof.Map MapFun emp def
R35611:35613 CertiOS.framework.proof.Map MapFun put def
R35625:35631 CertiOS.framework.proof.Map MapFun maps_to def
R35643:35652 CertiOS.framework.proof.Map MapFun not_in_dom def
R35687:35691 CertiOS.framework.proof.Map MapFun beq_A def
R35687:35691 CertiOS.framework.proof.Map MapFun beq_A def
R35716:35718 Coq.Init.Logic <> :type_scope:x_'='_x not
R35716:35718 Coq.Init.Logic <> :type_scope:x_'='_x not
R35769:35773 CertiOS.framework.proof.Map MapFun beq_A def
R35769:35773 CertiOS.framework.proof.Map MapFun beq_A def
prf 35880:35900 MapFun subseteq_transitivity
R35935:35938 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35954:35957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35958:35965 CertiOS.framework.proof.Map MapFun subseteq def
R35969:35971 CertiOS.framework.proof.Map <> M'' var
R35967:35967 CertiOS.framework.proof.Map <> M var
R35939:35946 CertiOS.framework.proof.Map MapFun subseteq def
R35951:35953 CertiOS.framework.proof.Map <> M'' var
R35948:35949 CertiOS.framework.proof.Map <> M' var
R35922:35929 CertiOS.framework.proof.Map MapFun subseteq def
R35933:35934 CertiOS.framework.proof.Map <> M' var
R35931:35931 CertiOS.framework.proof.Map <> M var
R36000:36007 CertiOS.framework.proof.Map MapFun subseteq def
R36033:36035 Coq.Init.Logic <> :type_scope:x_'='_x not
R36033:36035 Coq.Init.Logic <> :type_scope:x_'='_x not
R36052:36059 CertiOS.framework.proof.Map MapFun subseteq def
R36108:36115 CertiOS.framework.proof.Map MapFun subseteq def
R36145:36150 CertiOS.framework.proof.Map MapFun in_dom def
R36162:36167 CertiOS.framework.proof.Map MapFun in_dom def
prf 36303:36319 MapFun subset_unique_map
R36354:36357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36371:36374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36375:36381 CertiOS.framework.proof.Map MapFun maps_to def
R36388:36388 CertiOS.framework.proof.Map <> y var
R36386:36386 CertiOS.framework.proof.Map <> x var
R36383:36384 CertiOS.framework.proof.Map <> M' var
R36358:36364 CertiOS.framework.proof.Map MapFun maps_to def
R36370:36370 CertiOS.framework.proof.Map <> y var
R36368:36368 CertiOS.framework.proof.Map <> x var
R36366:36366 CertiOS.framework.proof.Map <> M var
R36341:36348 CertiOS.framework.proof.Map MapFun subseteq def
R36352:36353 CertiOS.framework.proof.Map <> M' var
R36350:36350 CertiOS.framework.proof.Map <> M var
R36407:36414 CertiOS.framework.proof.Map MapFun subseteq def
R36426:36432 CertiOS.framework.proof.Map MapFun maps_to def
R36444:36449 CertiOS.framework.proof.Map MapFun in_dom def
R36475:36477 Coq.Init.Logic <> :type_scope:x_'='_x not
R36475:36477 Coq.Init.Logic <> :type_scope:x_'='_x not
def 36590:36594 MapFun minus
R36604:36606 CertiOS.framework.proof.Map MapFun Map def
R36611:36613 CertiOS.framework.proof.Map MapFun Map def
R36639:36640 CertiOS.framework.proof.Map <> M' var
R36642:36642 CertiOS.framework.proof.Map <> x var
R36655:36658 Coq.Init.Datatypes <> None constr
R36663:36663 CertiOS.framework.proof.Map <> M var
R36665:36665 CertiOS.framework.proof.Map <> x var
R36673:36676 Coq.Init.Datatypes <> Some constr
R36683:36686 Coq.Init.Datatypes <> None constr
prf 36704:36717 MapFun minus_disjoint
R36735:36742 CertiOS.framework.proof.Map MapFun disjoint def
R36748:36752 CertiOS.framework.proof.Map MapFun minus def
R36756:36757 CertiOS.framework.proof.Map <> M' var
R36754:36754 CertiOS.framework.proof.Map <> M var
R36744:36745 CertiOS.framework.proof.Map <> M' var
R36787:36794 CertiOS.framework.proof.Map MapFun disjoint def
R36806:36815 CertiOS.framework.proof.Map MapFun not_in_dom def
R36850:36853 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36843:36845 Coq.Init.Logic <> :type_scope:x_'='_x not
R36846:36849 Coq.Init.Datatypes <> None constr
R36854:36860 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36862:36863 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36868:36870 Coq.Init.Logic <> :type_scope:x_'='_x not
R36871:36874 Coq.Init.Datatypes <> Some constr
R36876:36876 CertiOS.framework.proof.Map <> y var
R36850:36853 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R36843:36845 Coq.Init.Logic <> :type_scope:x_'='_x not
R36846:36849 Coq.Init.Datatypes <> None constr
R36854:36860 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36862:36863 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R36868:36870 Coq.Init.Logic <> :type_scope:x_'='_x not
R36871:36874 Coq.Init.Datatypes <> Some constr
R36876:36876 CertiOS.framework.proof.Map <> y var
R36992:36996 CertiOS.framework.proof.Map MapFun minus def
prf 37088:37102 MapFun minus_disjUnion
R37133:37136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37137:37145 CertiOS.framework.proof.Map MapFun disjUnion def
R37163:37163 CertiOS.framework.proof.Map <> M var
R37151:37155 CertiOS.framework.proof.Map MapFun minus def
R37159:37160 CertiOS.framework.proof.Map <> M' var
R37157:37157 CertiOS.framework.proof.Map <> M var
R37147:37148 CertiOS.framework.proof.Map <> M' var
R37120:37127 CertiOS.framework.proof.Map MapFun subseteq def
R37132:37132 CertiOS.framework.proof.Map <> M var
R37129:37130 CertiOS.framework.proof.Map <> M' var
R37192:37200 CertiOS.framework.proof.Map MapFun disjUnion def
R37234:37247 CertiOS.framework.proof.Map MapFun extensionality prfax
R37234:37247 CertiOS.framework.proof.Map MapFun extensionality prfax
R37268:37272 CertiOS.framework.proof.Map MapFun merge def
R37282:37286 CertiOS.framework.proof.Map MapFun minus def
R37310:37313 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37303:37305 Coq.Init.Logic <> :type_scope:x_'='_x not
R37306:37309 Coq.Init.Datatypes <> None constr
R37314:37320 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37322:37323 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37328:37330 Coq.Init.Logic <> :type_scope:x_'='_x not
R37331:37334 Coq.Init.Datatypes <> Some constr
R37336:37336 CertiOS.framework.proof.Map <> y var
R37310:37313 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37303:37305 Coq.Init.Logic <> :type_scope:x_'='_x not
R37306:37309 Coq.Init.Datatypes <> None constr
R37314:37320 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37322:37323 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37328:37330 Coq.Init.Logic <> :type_scope:x_'='_x not
R37331:37334 Coq.Init.Datatypes <> Some constr
R37336:37336 CertiOS.framework.proof.Map <> y var
R37473:37480 CertiOS.framework.proof.Map MapFun subseteq def
R37519:37521 Coq.Init.Logic <> :type_scope:x_'='_x not
R37519:37521 Coq.Init.Logic <> :type_scope:x_'='_x not
R37546:37551 CertiOS.framework.proof.Map MapFun in_dom def
prf 37626:37639 MapFun subseteq_split
R37670:37673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37674:37680 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37684:37685 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R37686:37694 CertiOS.framework.proof.Map MapFun disjUnion def
R37703:37703 CertiOS.framework.proof.Map <> M var
R37699:37701 CertiOS.framework.proof.Map <> M'' var
R37696:37697 CertiOS.framework.proof.Map <> M' var
R37657:37664 CertiOS.framework.proof.Map MapFun subseteq def
R37669:37669 CertiOS.framework.proof.Map <> M var
R37666:37667 CertiOS.framework.proof.Map <> M' var
R37733:37737 CertiOS.framework.proof.Map MapFun minus def
R37733:37737 CertiOS.framework.proof.Map MapFun minus def
prf 37813:37822 MapFun ext_in_dom
R37841:37846 CertiOS.framework.proof.Map MapFun in_dom def
R37851:37853 CertiOS.framework.proof.Map MapFun put def
R37859:37859 CertiOS.framework.proof.Map <> y var
R37857:37857 CertiOS.framework.proof.Map <> x var
R37855:37855 CertiOS.framework.proof.Map <> M var
R37848:37848 CertiOS.framework.proof.Map <> x var
R37889:37891 CertiOS.framework.proof.Map MapFun put def
R37903:37908 CertiOS.framework.proof.Map MapFun in_dom def
R37924:37928 CertiOS.framework.proof.Map MapFun beq_A def
R37924:37928 CertiOS.framework.proof.Map MapFun beq_A def
R37965:37967 Coq.Init.Logic <> :type_scope:x_'='_x not
R37965:37967 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 38040:38049 MapFun ext_mapsto
R38068:38074 CertiOS.framework.proof.Map MapFun maps_to def
R38090:38090 CertiOS.framework.proof.Map <> y var
R38088:38088 CertiOS.framework.proof.Map <> x var
R38077:38079 CertiOS.framework.proof.Map MapFun put def
R38085:38085 CertiOS.framework.proof.Map <> y var
R38083:38083 CertiOS.framework.proof.Map <> x var
R38081:38081 CertiOS.framework.proof.Map <> M var
R38109:38115 CertiOS.framework.proof.Map MapFun maps_to def
prf 38184:38195 MapFun mapsto_indom
R38227:38230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38231:38236 CertiOS.framework.proof.Map MapFun in_dom def
R38240:38240 CertiOS.framework.proof.Map <> M var
R38238:38238 CertiOS.framework.proof.Map <> x var
R38214:38220 CertiOS.framework.proof.Map MapFun maps_to def
R38226:38226 CertiOS.framework.proof.Map <> y var
R38224:38224 CertiOS.framework.proof.Map <> x var
R38222:38222 CertiOS.framework.proof.Map <> M var
R38259:38264 CertiOS.framework.proof.Map MapFun in_dom def
R38276:38282 CertiOS.framework.proof.Map MapFun maps_to def
prf 38325:38340 MapFun ext_presv_mapsto
R38376:38379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38405:38408 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38409:38415 CertiOS.framework.proof.Map MapFun maps_to def
R38422:38423 CertiOS.framework.proof.Map <> y' var
R38419:38420 CertiOS.framework.proof.Map <> x' var
R38417:38417 CertiOS.framework.proof.Map <> M var
R38380:38386 CertiOS.framework.proof.Map MapFun maps_to def
R38403:38404 CertiOS.framework.proof.Map <> y' var
R38400:38401 CertiOS.framework.proof.Map <> x' var
R38389:38391 CertiOS.framework.proof.Map MapFun put def
R38397:38397 CertiOS.framework.proof.Map <> y var
R38395:38395 CertiOS.framework.proof.Map <> x var
R38393:38393 CertiOS.framework.proof.Map <> M var
R38370:38373 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38369:38369 CertiOS.framework.proof.Map <> x var
R38374:38375 CertiOS.framework.proof.Map <> x' var
R38452:38458 CertiOS.framework.proof.Map MapFun maps_to def
R38470:38476 CertiOS.framework.proof.Map MapFun maps_to def
R38494:38496 CertiOS.framework.proof.Map MapFun put def
R38518:38522 CertiOS.framework.proof.Map MapFun beq_A def
R38518:38522 CertiOS.framework.proof.Map MapFun beq_A def
R38542:38544 Coq.Init.Logic <> :type_scope:x_'='_x not
R38542:38544 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 38642:38654 MapFun put_xy_commut
R38690:38693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38715:38717 Coq.Init.Logic <> :type_scope:x_'='_x not
R38694:38696 CertiOS.framework.proof.Map MapFun put def
R38713:38714 CertiOS.framework.proof.Map <> y' var
R38710:38711 CertiOS.framework.proof.Map <> x' var
R38699:38701 CertiOS.framework.proof.Map MapFun put def
R38707:38707 CertiOS.framework.proof.Map <> y var
R38705:38705 CertiOS.framework.proof.Map <> x var
R38703:38703 CertiOS.framework.proof.Map <> M var
R38718:38720 CertiOS.framework.proof.Map MapFun put def
R38738:38738 CertiOS.framework.proof.Map <> y var
R38736:38736 CertiOS.framework.proof.Map <> x var
R38723:38725 CertiOS.framework.proof.Map MapFun put def
R38732:38733 CertiOS.framework.proof.Map <> y' var
R38729:38730 CertiOS.framework.proof.Map <> x' var
R38727:38727 CertiOS.framework.proof.Map <> M var
R38684:38687 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38683:38683 CertiOS.framework.proof.Map <> x var
R38688:38689 CertiOS.framework.proof.Map <> x' var
R38766:38779 CertiOS.framework.proof.Map MapFun extensionality prfax
R38766:38779 CertiOS.framework.proof.Map MapFun extensionality prfax
R38791:38793 CertiOS.framework.proof.Map MapFun put def
R38818:38822 CertiOS.framework.proof.Map MapFun beq_A def
R38818:38822 CertiOS.framework.proof.Map MapFun beq_A def
R38845:38849 CertiOS.framework.proof.Map MapFun beq_A def
R38845:38849 CertiOS.framework.proof.Map MapFun beq_A def
R38911:38915 CertiOS.framework.proof.Map MapFun beq_A def
R38911:38915 CertiOS.framework.proof.Map MapFun beq_A def
prf 38950:38962 MapFun put_xx_update
R39008:39010 Coq.Init.Logic <> :type_scope:x_'='_x not
R38988:38990 CertiOS.framework.proof.Map MapFun put def
R39006:39007 CertiOS.framework.proof.Map <> y' var
R39004:39004 CertiOS.framework.proof.Map <> x var
R38993:38995 CertiOS.framework.proof.Map MapFun put def
R39001:39001 CertiOS.framework.proof.Map <> y var
R38999:38999 CertiOS.framework.proof.Map <> x var
R38997:38997 CertiOS.framework.proof.Map <> M var
R39011:39013 CertiOS.framework.proof.Map MapFun put def
R39019:39020 CertiOS.framework.proof.Map <> y' var
R39017:39017 CertiOS.framework.proof.Map <> x var
R39015:39015 CertiOS.framework.proof.Map <> M var
R39048:39061 CertiOS.framework.proof.Map MapFun extensionality prfax
R39048:39061 CertiOS.framework.proof.Map MapFun extensionality prfax
R39073:39075 CertiOS.framework.proof.Map MapFun put def
R39100:39104 CertiOS.framework.proof.Map MapFun beq_A def
R39100:39104 CertiOS.framework.proof.Map MapFun beq_A def
prf 39180:39194 MapFun removeX_presv_Y
R39227:39230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39245:39248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39249:39255 CertiOS.framework.proof.Map MapFun maps_to def
R39273:39273 CertiOS.framework.proof.Map <> y var
R39270:39271 CertiOS.framework.proof.Map <> x' var
R39258:39263 CertiOS.framework.proof.Map MapFun remove def
R39267:39267 CertiOS.framework.proof.Map <> x var
R39265:39265 CertiOS.framework.proof.Map <> M var
R39231:39237 CertiOS.framework.proof.Map MapFun maps_to def
R39244:39244 CertiOS.framework.proof.Map <> y var
R39241:39242 CertiOS.framework.proof.Map <> x' var
R39239:39239 CertiOS.framework.proof.Map <> M var
R39221:39224 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39220:39220 CertiOS.framework.proof.Map <> x var
R39225:39226 CertiOS.framework.proof.Map <> x' var
R39302:39308 CertiOS.framework.proof.Map MapFun maps_to def
R39320:39325 CertiOS.framework.proof.Map MapFun remove def
R39341:39345 CertiOS.framework.proof.Map MapFun beq_A def
R39341:39345 CertiOS.framework.proof.Map MapFun beq_A def
R39365:39367 Coq.Init.Logic <> :type_scope:x_'='_x not
R39365:39367 Coq.Init.Logic <> :type_scope:x_'='_x not
R39403:39409 CertiOS.framework.proof.Map MapFun maps_to def
prf 39493:39502 MapFun mapsto_put
R39522:39528 CertiOS.framework.proof.Map MapFun maps_to def
R39544:39544 CertiOS.framework.proof.Map <> b var
R39542:39542 CertiOS.framework.proof.Map <> a var
R39531:39533 CertiOS.framework.proof.Map MapFun put def
R39539:39539 CertiOS.framework.proof.Map <> b var
R39537:39537 CertiOS.framework.proof.Map <> a var
R39535:39535 CertiOS.framework.proof.Map <> m var
R39579:39585 CertiOS.framework.proof.Map MapFun maps_to def
R39588:39590 CertiOS.framework.proof.Map MapFun put def
R39606:39610 CertiOS.framework.proof.Map MapFun beq_A def
R39606:39610 CertiOS.framework.proof.Map MapFun beq_A def
R39643:39652 Coq.Init.Logic <> refl_equal syndef
R39643:39652 Coq.Init.Logic <> refl_equal syndef
R39683:39692 CertiOS.framework.proof.Map MapFun mapsto_put thm
prf 39705:39717 MapFun mapsto_put_eq
R39764:39769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39771:39773 Coq.Init.Logic <> :type_scope:x_'='_x not
R39770:39770 CertiOS.framework.proof.Map <> b var
R39774:39775 CertiOS.framework.proof.Map <> b' var
R39740:39746 CertiOS.framework.proof.Map MapFun maps_to def
R39762:39763 CertiOS.framework.proof.Map <> b' var
R39760:39760 CertiOS.framework.proof.Map <> a var
R39749:39751 CertiOS.framework.proof.Map MapFun put def
R39757:39757 CertiOS.framework.proof.Map <> b var
R39755:39755 CertiOS.framework.proof.Map <> a var
R39753:39753 CertiOS.framework.proof.Map <> m var
R39804:39810 CertiOS.framework.proof.Map MapFun maps_to def
R39813:39815 CertiOS.framework.proof.Map MapFun put def
R39836:39840 CertiOS.framework.proof.Map MapFun beq_A def
R39836:39840 CertiOS.framework.proof.Map MapFun beq_A def
R39886:39895 Coq.Init.Logic <> refl_equal syndef
R39886:39895 Coq.Init.Logic <> refl_equal syndef
R39926:39938 CertiOS.framework.proof.Map MapFun mapsto_put_eq thm
prf 39959:39972 MapFun mapsto_put_neq
R40023:40028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40036:40041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40042:40048 CertiOS.framework.proof.Map MapFun maps_to def
R40055:40056 CertiOS.framework.proof.Map <> b' var
R40052:40053 CertiOS.framework.proof.Map <> a' var
R40050:40050 CertiOS.framework.proof.Map <> m var
R40030:40033 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40029:40029 CertiOS.framework.proof.Map <> a var
R40034:40035 CertiOS.framework.proof.Map <> a' var
R39998:40004 CertiOS.framework.proof.Map MapFun maps_to def
R40021:40022 CertiOS.framework.proof.Map <> b' var
R40018:40019 CertiOS.framework.proof.Map <> a' var
R40007:40009 CertiOS.framework.proof.Map MapFun put def
R40015:40015 CertiOS.framework.proof.Map <> b var
R40013:40013 CertiOS.framework.proof.Map <> a var
R40011:40011 CertiOS.framework.proof.Map <> m var
R40081:40087 CertiOS.framework.proof.Map MapFun maps_to def
R40090:40092 CertiOS.framework.proof.Map MapFun put def
R40110:40114 CertiOS.framework.proof.Map MapFun beq_A def
R40110:40114 CertiOS.framework.proof.Map MapFun beq_A def
R40153:40162 Coq.Init.Logic <> refl_equal syndef
R40153:40162 Coq.Init.Logic <> refl_equal syndef
R40193:40206 CertiOS.framework.proof.Map MapFun mapsto_put_neq thm
prf 40230:40246 MapFun mapsto_mapsto_put
R40285:40290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40298:40303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40304:40310 CertiOS.framework.proof.Map MapFun maps_to def
R40328:40328 CertiOS.framework.proof.Map <> b var
R40326:40326 CertiOS.framework.proof.Map <> a var
R40313:40315 CertiOS.framework.proof.Map MapFun put def
R40322:40323 CertiOS.framework.proof.Map <> b' var
R40319:40320 CertiOS.framework.proof.Map <> a' var
R40317:40317 CertiOS.framework.proof.Map <> m var
R40292:40295 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40291:40291 CertiOS.framework.proof.Map <> a var
R40296:40297 CertiOS.framework.proof.Map <> a' var
R40272:40278 CertiOS.framework.proof.Map MapFun maps_to def
R40284:40284 CertiOS.framework.proof.Map <> b var
R40282:40282 CertiOS.framework.proof.Map <> a var
R40280:40280 CertiOS.framework.proof.Map <> m var
R40353:40359 CertiOS.framework.proof.Map MapFun maps_to def
R40362:40364 CertiOS.framework.proof.Map MapFun put def
R40382:40386 CertiOS.framework.proof.Map MapFun beq_A def
R40382:40386 CertiOS.framework.proof.Map MapFun beq_A def
R40425:40434 Coq.Init.Logic <> refl_equal syndef
R40425:40434 Coq.Init.Logic <> refl_equal syndef
R40465:40481 CertiOS.framework.proof.Map MapFun mapsto_mapsto_put thm
prf 40502:40523 MapFun mapsto_subseteq_mapsto
R40559:40564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40578:40583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40584:40590 CertiOS.framework.proof.Map MapFun maps_to def
R40597:40597 CertiOS.framework.proof.Map <> b var
R40595:40595 CertiOS.framework.proof.Map <> a var
R40592:40593 CertiOS.framework.proof.Map <> m' var
R40565:40572 CertiOS.framework.proof.Map MapFun subseteq def
R40576:40577 CertiOS.framework.proof.Map <> m' var
R40574:40574 CertiOS.framework.proof.Map <> m var
R40546:40552 CertiOS.framework.proof.Map MapFun maps_to def
R40558:40558 CertiOS.framework.proof.Map <> b var
R40556:40556 CertiOS.framework.proof.Map <> a var
R40554:40554 CertiOS.framework.proof.Map <> m var
R40626:40632 CertiOS.framework.proof.Map MapFun maps_to def
R40649:40656 CertiOS.framework.proof.Map MapFun subseteq def
R40675:40680 CertiOS.framework.proof.Map MapFun in_dom def
R40675:40680 CertiOS.framework.proof.Map MapFun in_dom def
R40760:40781 CertiOS.framework.proof.Map MapFun mapsto_subseteq_mapsto thm
R40843:40849 CertiOS.framework.proof.Map MapFun maps_to def
R40843:40849 CertiOS.framework.proof.Map MapFun maps_to def
R40874:40877 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40874:40877 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40891:40897 CertiOS.framework.proof.Map MapFun maps_to def
R40900:40902 CertiOS.framework.proof.Map MapFun put def
R40891:40897 CertiOS.framework.proof.Map MapFun maps_to def
R40900:40902 CertiOS.framework.proof.Map MapFun put def
R40978:40984 CertiOS.framework.proof.Map MapFun maps_to def
R40978:40984 CertiOS.framework.proof.Map MapFun maps_to def
R41010:41013 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41010:41013 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41026:41032 CertiOS.framework.proof.Map MapFun maps_to def
R41035:41037 CertiOS.framework.proof.Map MapFun put def
R41026:41032 CertiOS.framework.proof.Map MapFun maps_to def
R41035:41037 CertiOS.framework.proof.Map MapFun put def
R41191:41197 CertiOS.framework.proof.Map MapFun maps_to def
R41191:41197 CertiOS.framework.proof.Map MapFun maps_to def
R41223:41226 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41223:41226 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41239:41245 CertiOS.framework.proof.Map MapFun maps_to def
R41248:41250 CertiOS.framework.proof.Map MapFun put def
R41253:41258 CertiOS.framework.proof.Map MapFun remove def
R41239:41245 CertiOS.framework.proof.Map MapFun maps_to def
R41248:41250 CertiOS.framework.proof.Map MapFun put def
R41253:41258 CertiOS.framework.proof.Map MapFun remove def
R41468:41474 CertiOS.framework.proof.Map MapFun maps_to def
R41468:41474 CertiOS.framework.proof.Map MapFun maps_to def
R41499:41502 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41499:41502 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41516:41522 CertiOS.framework.proof.Map MapFun maps_to def
R41525:41527 CertiOS.framework.proof.Map MapFun put def
R41530:41535 CertiOS.framework.proof.Map MapFun remove def
R41516:41522 CertiOS.framework.proof.Map MapFun maps_to def
R41525:41527 CertiOS.framework.proof.Map MapFun put def
R41530:41535 CertiOS.framework.proof.Map MapFun remove def
R41656:41662 CertiOS.framework.proof.Map MapFun maps_to def
R41656:41662 CertiOS.framework.proof.Map MapFun maps_to def
R41685:41692 CertiOS.framework.proof.Map MapFun subseteq def
R41685:41692 CertiOS.framework.proof.Map MapFun subseteq def
R41710:41716 CertiOS.framework.proof.Map MapFun maps_to def
R41710:41716 CertiOS.framework.proof.Map MapFun maps_to def
R41786:41792 CertiOS.framework.proof.Map MapFun maps_to def
R41795:41797 CertiOS.framework.proof.Map MapFun put def
R41786:41792 CertiOS.framework.proof.Map MapFun maps_to def
R41795:41797 CertiOS.framework.proof.Map MapFun put def
R41832:41835 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41832:41835 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41849:41855 CertiOS.framework.proof.Map MapFun maps_to def
R41849:41855 CertiOS.framework.proof.Map MapFun maps_to def
R41919:41925 CertiOS.framework.proof.Map MapFun maps_to def
R41928:41930 CertiOS.framework.proof.Map MapFun put def
R41919:41925 CertiOS.framework.proof.Map MapFun maps_to def
R41928:41930 CertiOS.framework.proof.Map MapFun put def
R41966:41969 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41966:41969 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41983:41989 CertiOS.framework.proof.Map MapFun maps_to def
R41983:41989 CertiOS.framework.proof.Map MapFun maps_to def
R42130:42136 CertiOS.framework.proof.Map MapFun maps_to def
R42139:42141 CertiOS.framework.proof.Map MapFun put def
R42130:42136 CertiOS.framework.proof.Map MapFun maps_to def
R42139:42141 CertiOS.framework.proof.Map MapFun put def
R42173:42175 Coq.Init.Logic <> :type_scope:x_'='_x not
R42173:42175 Coq.Init.Logic <> :type_scope:x_'='_x not
R42226:42232 CertiOS.framework.proof.Map MapFun maps_to def
R42235:42237 CertiOS.framework.proof.Map MapFun put def
R42226:42232 CertiOS.framework.proof.Map MapFun maps_to def
R42235:42237 CertiOS.framework.proof.Map MapFun put def
R42270:42272 Coq.Init.Logic <> :type_scope:x_'='_x not
R42270:42272 Coq.Init.Logic <> :type_scope:x_'='_x not
R42350:42356 CertiOS.framework.proof.Map MapFun maps_to def
R42359:42361 CertiOS.framework.proof.Map MapFun put def
R42350:42356 CertiOS.framework.proof.Map MapFun maps_to def
R42359:42361 CertiOS.framework.proof.Map MapFun put def
R42396:42405 CertiOS.framework.proof.Map MapFun mapsto_put thm
R42294:42306 CertiOS.framework.proof.Map MapFun mapsto_put_eq thm
R42190:42202 CertiOS.framework.proof.Map MapFun mapsto_put_eq thm
R42061:42064 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R42096:42109 CertiOS.framework.proof.Map MapFun mapsto_put_neq thm
R41887:41900 CertiOS.framework.proof.Map MapFun mapsto_put_neq thm
R41746:41767 CertiOS.framework.proof.Map MapFun mapsto_subseteq_mapsto thm
R41580:41596 CertiOS.framework.proof.Map MapFun put_cancel_remove thm
R41618:41634 CertiOS.framework.proof.Map MapFun mapsto_mapsto_put thm
R41341:41344 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41390:41406 CertiOS.framework.proof.Map MapFun put_cancel_remove thm
R41428:41444 CertiOS.framework.proof.Map MapFun mapsto_mapsto_put thm
R41116:41119 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41151:41167 CertiOS.framework.proof.Map MapFun mapsto_mapsto_put thm
R40940:40956 CertiOS.framework.proof.Map MapFun mapsto_mapsto_put thm
R42427:42432 CertiOS.framework.proof.Map MapFun <> mod
